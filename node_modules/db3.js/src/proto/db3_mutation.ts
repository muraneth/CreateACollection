// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string
// @generated from protobuf file "db3_mutation.proto" (package "db3_mutation_proto", syntax proto3)
// tslint:disable
//
//
//
// db3_mutation.proto
// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
import { MessageType } from "@protobuf-ts/runtime";
import { Index } from "./db3_database";
import { BroadcastMeta } from "./db3_base";
/**
 * @generated from protobuf message db3_mutation_proto.DatabaseMutation
 */
export interface DatabaseMutation {
    /**
     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 1;
     */
    meta?: BroadcastMeta;
    /**
     * @generated from protobuf field: db3_mutation_proto.DatabaseAction action = 2;
     */
    action: DatabaseAction;
    /**
     * @generated from protobuf field: bytes db_address = 3;
     */
    dbAddress: Uint8Array;
    /**
     * @generated from protobuf field: repeated db3_mutation_proto.CollectionMutation collection_mutations = 4;
     */
    collectionMutations: CollectionMutation[];
    /**
     * @generated from protobuf field: repeated db3_mutation_proto.DocumentMutation document_mutations = 5;
     */
    documentMutations: DocumentMutation[];
}
/**
 * @generated from protobuf message db3_mutation_proto.CollectionMutation
 */
export interface CollectionMutation {
    /**
     * @generated from protobuf field: repeated db3_database_proto.Index index = 1;
     */
    index: Index[];
    /**
     * @generated from protobuf field: string collection_name = 2;
     */
    collectionName: string;
}
/**
 * @generated from protobuf message db3_mutation_proto.DocumentMutation
 */
export interface DocumentMutation {
    /**
     * @generated from protobuf field: string collection_name = 1;
     */
    collectionName: string;
    /**
     * @generated from protobuf field: repeated bytes documents = 2;
     */
    documents: Uint8Array[];
    /**
     * @generated from protobuf field: repeated string ids = 3;
     */
    ids: string[];
    /**
     * The fields to update.
     * None of the field paths in the mask may contain a reserved name.
     *
     * If the document exists on the server and has fields not referenced in the
     * mask, they are left unchanged.
     * Fields referenced in the mask, but not present in the input document, are
     * deleted from the document on the server.
     *
     * @generated from protobuf field: repeated db3_mutation_proto.DocumentMask masks = 4;
     */
    masks: DocumentMask[];
}
/**
 * @generated from protobuf message db3_mutation_proto.DocumentMask
 */
export interface DocumentMask {
    /**
     * @generated from protobuf field: repeated string fields = 1;
     */
    fields: string[];
}
/**
 * @generated from protobuf message db3_mutation_proto.MintCreditsMutation
 */
export interface MintCreditsMutation {
    /**
     * @generated from protobuf field: uint32 chain_id = 1;
     */
    chainId: number;
    /**
     * @generated from protobuf field: uint64 block_id = 2;
     */
    blockId: string;
    /**
     * @generated from protobuf field: bytes tx_id = 3;
     */
    txId: Uint8Array;
    /**
     * @generated from protobuf field: bytes to = 5;
     */
    to: Uint8Array;
    /**
     * @generated from protobuf field: uint64 amount = 6;
     */
    amount: string;
    /**
     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 7;
     */
    meta?: BroadcastMeta;
}
/**
 * @generated from protobuf message db3_mutation_proto.WriteRequest
 */
export interface WriteRequest {
    /**
     * @generated from protobuf field: bytes signature = 1;
     */
    signature: Uint8Array;
    /**
     * the protobuf binary format
     *
     * @generated from protobuf field: bytes payload = 2;
     */
    payload: Uint8Array;
    /**
     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;
     */
    payloadType: PayloadType;
}
/**
 * @generated from protobuf enum db3_mutation_proto.DatabaseAction
 */
export enum DatabaseAction {
    /**
     * @generated from protobuf enum value: CreateDB = 0;
     */
    CreateDB = 0,
    /**
     * @generated from protobuf enum value: AddCollection = 1;
     */
    AddCollection = 1,
    /**
     * @generated from protobuf enum value: AddDocument = 2;
     */
    AddDocument = 2,
    /**
     * @generated from protobuf enum value: DeleteDocument = 3;
     */
    DeleteDocument = 3,
    /**
     * @generated from protobuf enum value: UpdateDocument = 4;
     */
    UpdateDocument = 4
}
/**
 * @generated from protobuf enum db3_mutation_proto.PayloadType
 */
export enum PayloadType {
    /**
     * @generated from protobuf enum value: QuerySessionPayload = 0;
     */
    QuerySessionPayload = 0,
    /**
     * @generated from protobuf enum value: DatabasePayload = 1;
     */
    DatabasePayload = 1,
    /**
     * @generated from protobuf enum value: MintCreditsPayload = 2;
     */
    MintCreditsPayload = 2,
    /**
     * a evm chain request
     *
     * @generated from protobuf enum value: TypedDataPayload = 3;
     */
    TypedDataPayload = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class DatabaseMutation$Type extends MessageType<DatabaseMutation> {
    constructor() {
        super("db3_mutation_proto.DatabaseMutation", [
            { no: 1, name: "meta", kind: "message", T: () => BroadcastMeta },
            { no: 2, name: "action", kind: "enum", T: () => ["db3_mutation_proto.DatabaseAction", DatabaseAction] },
            { no: 3, name: "db_address", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "collection_mutations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CollectionMutation },
            { no: 5, name: "document_mutations", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentMutation }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.DatabaseMutation
 */
export const DatabaseMutation = new DatabaseMutation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CollectionMutation$Type extends MessageType<CollectionMutation> {
    constructor() {
        super("db3_mutation_proto.CollectionMutation", [
            { no: 1, name: "index", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Index },
            { no: 2, name: "collection_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.CollectionMutation
 */
export const CollectionMutation = new CollectionMutation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentMutation$Type extends MessageType<DocumentMutation> {
    constructor() {
        super("db3_mutation_proto.DocumentMutation", [
            { no: 1, name: "collection_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "documents", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "ids", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "masks", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentMask }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.DocumentMutation
 */
export const DocumentMutation = new DocumentMutation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentMask$Type extends MessageType<DocumentMask> {
    constructor() {
        super("db3_mutation_proto.DocumentMask", [
            { no: 1, name: "fields", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.DocumentMask
 */
export const DocumentMask = new DocumentMask$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MintCreditsMutation$Type extends MessageType<MintCreditsMutation> {
    constructor() {
        super("db3_mutation_proto.MintCreditsMutation", [
            { no: 1, name: "chain_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "block_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "tx_id", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 5, name: "to", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 6, name: "amount", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 7, name: "meta", kind: "message", T: () => BroadcastMeta }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.MintCreditsMutation
 */
export const MintCreditsMutation = new MintCreditsMutation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WriteRequest$Type extends MessageType<WriteRequest> {
    constructor() {
        super("db3_mutation_proto.WriteRequest", [
            { no: 1, name: "signature", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "payload", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "payload_type", kind: "enum", T: () => ["db3_mutation_proto.PayloadType", PayloadType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_mutation_proto.WriteRequest
 */
export const WriteRequest = new WriteRequest$Type();
