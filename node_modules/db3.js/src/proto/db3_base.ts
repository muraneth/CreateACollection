// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string
// @generated from protobuf file "db3_base.proto" (package "db3_base_proto", syntax proto3)
// tslint:disable
//
//
//
// db3_base.proto
// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message db3_base_proto.BroadcastMeta
 */
export interface BroadcastMeta {
    /**
     * @generated from protobuf field: uint64 nonce = 1;
     */
    nonce: string;
    /**
     * the chain id of db3
     *
     * @generated from protobuf field: db3_base_proto.ChainId chain_id = 2;
     */
    chainId: ChainId;
    /**
     * the chain role of db3
     *
     * @generated from protobuf field: db3_base_proto.ChainRole chain_role = 3;
     */
    chainRole: ChainRole;
}
/**
 * @generated from protobuf enum db3_base_proto.ChainRole
 */
export enum ChainRole {
    /**
     * @generated from protobuf enum value: SettlementChain = 0;
     */
    SettlementChain = 0,
    /**
     * @generated from protobuf enum value: StorageShardChain = 10;
     */
    StorageShardChain = 10,
    /**
     * @generated from protobuf enum value: DvmComputingChain = 20;
     */
    DvmComputingChain = 20
}
/**
 * @generated from protobuf enum db3_base_proto.ChainId
 */
export enum ChainId {
    /**
     * @generated from protobuf enum value: MainNet = 0;
     */
    MainNet = 0,
    /**
     * @generated from protobuf enum value: TestNet = 10;
     */
    TestNet = 10,
    /**
     * @generated from protobuf enum value: DevNet = 20;
     */
    DevNet = 20
}
// @generated message type with reflection information, may provide speed optimized methods
class BroadcastMeta$Type extends MessageType<BroadcastMeta> {
    constructor() {
        super("db3_base_proto.BroadcastMeta", [
            { no: 1, name: "nonce", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "chain_id", kind: "enum", T: () => ["db3_base_proto.ChainId", ChainId] },
            { no: 3, name: "chain_role", kind: "enum", T: () => ["db3_base_proto.ChainRole", ChainRole] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_base_proto.BroadcastMeta
 */
export const BroadcastMeta = new BroadcastMeta$Type();
