// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string
// @generated from protobuf file "db3_node.proto" (package "db3_node_proto", syntax proto3)
// tslint:disable
import { EventMessage } from "./db3_event";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
import { Subscribution } from "./db3_event";
import { Document } from "./db3_database";
import { StructuredQuery } from "./db3_database";
import { Database } from "./db3_database";
import { QuerySessionInfo } from "./db3_session";
import { PayloadType } from "./db3_mutation";
import { Account } from "./db3_account";
import { Bill } from "./db3_bill";
/**
 * @generated from protobuf message db3_node_proto.NetworkStatus
 */
export interface NetworkStatus {
    /**
     * @generated from protobuf field: uint64 total_database_count = 1;
     */
    totalDatabaseCount: string;
    /**
     * @generated from protobuf field: uint64 total_collection_count = 2;
     */
    totalCollectionCount: string;
    /**
     * @generated from protobuf field: uint64 total_document_count = 3;
     */
    totalDocumentCount: string;
    /**
     * @generated from protobuf field: uint64 total_account_count = 4;
     */
    totalAccountCount: string;
    /**
     * @generated from protobuf field: uint64 total_mutation_count = 5;
     */
    totalMutationCount: string;
    /**
     * @generated from protobuf field: uint64 total_session_count = 6;
     */
    totalSessionCount: string;
    /**
     * @generated from protobuf field: uint64 total_storage_in_bytes = 7;
     */
    totalStorageInBytes: string;
}
/**
 * @generated from protobuf message db3_node_proto.QueryBillKey
 */
export interface QueryBillKey {
    /**
     * @generated from protobuf field: uint64 height = 1;
     */
    height: string;
    /**
     * @generated from protobuf field: string session_token = 2;
     */
    sessionToken: string;
}
/**
 * @generated from protobuf message db3_node_proto.QueryBillRequest
 */
export interface QueryBillRequest {
    /**
     * @generated from protobuf field: db3_node_proto.QueryBillKey query_bill_key = 1;
     */
    queryBillKey?: QueryBillKey;
}
/**
 * @generated from protobuf message db3_node_proto.QueryBillResponse
 */
export interface QueryBillResponse {
    /**
     * @generated from protobuf field: repeated db3_bill_proto.Bill bills = 1;
     */
    bills: Bill[];
}
/**
 * @generated from protobuf message db3_node_proto.SessionIdentifier
 */
export interface SessionIdentifier {
    /**
     * @generated from protobuf field: string session_token = 1;
     */
    sessionToken: string;
}
/**
 * @generated from protobuf message db3_node_proto.GetAccountRequest
 */
export interface GetAccountRequest {
    /**
     * @generated from protobuf field: bytes addr = 1;
     */
    addr: Uint8Array;
}
/**
 * @generated from protobuf message db3_node_proto.GetAccountResponse
 */
export interface GetAccountResponse {
    /**
     * @generated from protobuf field: db3_account_proto.Account account = 1;
     */
    account?: Account;
}
/**
 * @generated from protobuf message db3_node_proto.GetSessionInfoRequest
 */
export interface GetSessionInfoRequest {
    /**
     * the hex encoded string
     *
     * @generated from protobuf field: db3_node_proto.SessionIdentifier session_identifier = 1;
     */
    sessionIdentifier?: SessionIdentifier;
}
/**
 * @generated from protobuf message db3_node_proto.OpenSessionRequest
 */
export interface OpenSessionRequest {
    /**
     * @generated from protobuf field: bytes payload = 1;
     */
    payload: Uint8Array;
    /**
     * @generated from protobuf field: bytes signature = 2;
     */
    signature: Uint8Array;
    /**
     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 3;
     */
    payloadType: PayloadType;
}
/**
 * @generated from protobuf message db3_node_proto.OpenSessionResponse
 */
export interface OpenSessionResponse {
    /**
     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;
     */
    querySessionInfo?: QuerySessionInfo;
    /**
     * @generated from protobuf field: int64 session_timeout_second = 2;
     */
    sessionTimeoutSecond: string;
    /**
     * @generated from protobuf field: int32 max_query_limit = 3;
     */
    maxQueryLimit: number;
    /**
     * @generated from protobuf field: string session_token = 4;
     */
    sessionToken: string;
}
/**
 * @generated from protobuf message db3_node_proto.CloseSessionRequest
 */
export interface CloseSessionRequest {
    /**
     * the query session info
     *
     * @generated from protobuf field: bytes payload = 1;
     */
    payload: Uint8Array;
    /**
     * the signature of query session info
     *
     * @generated from protobuf field: bytes signature = 2;
     */
    signature: Uint8Array;
    /**
     * @generated from protobuf field: string session_token = 3;
     */
    sessionToken: string;
    /**
     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;
     */
    payloadType: PayloadType;
}
/**
 * @generated from protobuf message db3_node_proto.CloseSessionResponse
 */
export interface CloseSessionResponse {
    /**
     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;
     */
    querySessionInfo?: QuerySessionInfo;
    /**
     * @generated from protobuf field: bytes hash = 2;
     */
    hash: Uint8Array;
}
/**
 * @generated from protobuf message db3_node_proto.GetSessionInfoResponse
 */
export interface GetSessionInfoResponse {
    /**
     * @generated from protobuf field: int32 session_status = 1;
     */
    sessionStatus: number;
    /**
     * @generated from protobuf field: db3_session_proto.QuerySessionInfo session_info = 2;
     */
    sessionInfo?: QuerySessionInfo;
}
/**
 * @generated from protobuf message db3_node_proto.BroadcastRequest
 */
export interface BroadcastRequest {
    /**
     * @generated from protobuf field: bytes body = 1;
     */
    body: Uint8Array;
}
/**
 * @generated from protobuf message db3_node_proto.BroadcastResponse
 */
export interface BroadcastResponse {
    /**
     * @generated from protobuf field: bytes hash = 2;
     */
    hash: Uint8Array;
}
/**
 * @generated from protobuf message db3_node_proto.ShowDatabaseRequest
 */
export interface ShowDatabaseRequest {
    /**
     * @generated from protobuf field: string session_token = 1;
     */
    sessionToken: string;
    /**
     * a hex string
     *
     * @generated from protobuf field: string address = 2;
     */
    address: string;
}
/**
 * @generated from protobuf message db3_node_proto.ShowDatabaseResponse
 */
export interface ShowDatabaseResponse {
    /**
     * @generated from protobuf field: db3_database_proto.Database db = 1;
     */
    db?: Database;
}
/**
 * @generated from protobuf message db3_node_proto.RunQueryRequest
 */
export interface RunQueryRequest {
    /**
     * @generated from protobuf field: string session_token = 1;
     */
    sessionToken: string;
    /**
     * a hex string
     *
     * @generated from protobuf field: string address = 2;
     */
    address: string;
    /**
     * @generated from protobuf field: db3_database_proto.StructuredQuery query = 3;
     */
    query?: StructuredQuery; // TODO: support paging setting (e.g page_size, page_token)
    // TODO: support document mask
}
/**
 * @generated from protobuf message db3_node_proto.GetDocumentRequest
 */
export interface GetDocumentRequest {
    /**
     * @generated from protobuf field: string session_token = 1;
     */
    sessionToken: string;
    /**
     * a hex string
     *
     * @generated from protobuf field: string id = 2;
     */
    id: string;
}
/**
 * @generated from protobuf message db3_node_proto.GetDocumentResponse
 */
export interface GetDocumentResponse {
    /**
     * @generated from protobuf field: db3_database_proto.Document document = 1;
     */
    document?: Document;
}
/**
 * @generated from protobuf message db3_node_proto.RunQueryResponse
 */
export interface RunQueryResponse {
    /**
     * @generated from protobuf field: repeated db3_database_proto.Document documents = 2;
     */
    documents: Document[]; // TODO: support next_page_token for page loading
}
/**
 * @generated from protobuf message db3_node_proto.ShowNetworkStatusRequest
 */
export interface ShowNetworkStatusRequest {
}
/**
 * @generated from protobuf message db3_node_proto.SubscribeRequest
 */
export interface SubscribeRequest {
    /**
     * @generated from protobuf field: string session_token = 1;
     */
    sessionToken: string;
    /**
     * @generated from protobuf field: db3_event_proto.Subscribution sub = 2;
     */
    sub?: Subscribution;
}
// @generated message type with reflection information, may provide speed optimized methods
class NetworkStatus$Type extends MessageType<NetworkStatus> {
    constructor() {
        super("db3_node_proto.NetworkStatus", [
            { no: 1, name: "total_database_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "total_collection_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "total_document_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "total_account_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 5, name: "total_mutation_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 6, name: "total_session_count", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 7, name: "total_storage_in_bytes", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.NetworkStatus
 */
export const NetworkStatus = new NetworkStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryBillKey$Type extends MessageType<QueryBillKey> {
    constructor() {
        super("db3_node_proto.QueryBillKey", [
            { no: 1, name: "height", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 2, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.QueryBillKey
 */
export const QueryBillKey = new QueryBillKey$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryBillRequest$Type extends MessageType<QueryBillRequest> {
    constructor() {
        super("db3_node_proto.QueryBillRequest", [
            { no: 1, name: "query_bill_key", kind: "message", T: () => QueryBillKey }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.QueryBillRequest
 */
export const QueryBillRequest = new QueryBillRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryBillResponse$Type extends MessageType<QueryBillResponse> {
    constructor() {
        super("db3_node_proto.QueryBillResponse", [
            { no: 1, name: "bills", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Bill }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.QueryBillResponse
 */
export const QueryBillResponse = new QueryBillResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SessionIdentifier$Type extends MessageType<SessionIdentifier> {
    constructor() {
        super("db3_node_proto.SessionIdentifier", [
            { no: 1, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.SessionIdentifier
 */
export const SessionIdentifier = new SessionIdentifier$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAccountRequest$Type extends MessageType<GetAccountRequest> {
    constructor() {
        super("db3_node_proto.GetAccountRequest", [
            { no: 1, name: "addr", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetAccountRequest
 */
export const GetAccountRequest = new GetAccountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAccountResponse$Type extends MessageType<GetAccountResponse> {
    constructor() {
        super("db3_node_proto.GetAccountResponse", [
            { no: 1, name: "account", kind: "message", T: () => Account }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetAccountResponse
 */
export const GetAccountResponse = new GetAccountResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSessionInfoRequest$Type extends MessageType<GetSessionInfoRequest> {
    constructor() {
        super("db3_node_proto.GetSessionInfoRequest", [
            { no: 1, name: "session_identifier", kind: "message", T: () => SessionIdentifier }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoRequest
 */
export const GetSessionInfoRequest = new GetSessionInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpenSessionRequest$Type extends MessageType<OpenSessionRequest> {
    constructor() {
        super("db3_node_proto.OpenSessionRequest", [
            { no: 1, name: "payload", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "signature", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "payload_type", kind: "enum", T: () => ["db3_mutation_proto.PayloadType", PayloadType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.OpenSessionRequest
 */
export const OpenSessionRequest = new OpenSessionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpenSessionResponse$Type extends MessageType<OpenSessionResponse> {
    constructor() {
        super("db3_node_proto.OpenSessionResponse", [
            { no: 1, name: "query_session_info", kind: "message", T: () => QuerySessionInfo },
            { no: 2, name: "session_timeout_second", kind: "scalar", T: 3 /*ScalarType.INT64*/ },
            { no: 3, name: "max_query_limit", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.OpenSessionResponse
 */
export const OpenSessionResponse = new OpenSessionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CloseSessionRequest$Type extends MessageType<CloseSessionRequest> {
    constructor() {
        super("db3_node_proto.CloseSessionRequest", [
            { no: 1, name: "payload", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "signature", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "payload_type", kind: "enum", T: () => ["db3_mutation_proto.PayloadType", PayloadType] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.CloseSessionRequest
 */
export const CloseSessionRequest = new CloseSessionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CloseSessionResponse$Type extends MessageType<CloseSessionResponse> {
    constructor() {
        super("db3_node_proto.CloseSessionResponse", [
            { no: 1, name: "query_session_info", kind: "message", T: () => QuerySessionInfo },
            { no: 2, name: "hash", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.CloseSessionResponse
 */
export const CloseSessionResponse = new CloseSessionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSessionInfoResponse$Type extends MessageType<GetSessionInfoResponse> {
    constructor() {
        super("db3_node_proto.GetSessionInfoResponse", [
            { no: 1, name: "session_status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "session_info", kind: "message", T: () => QuerySessionInfo }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoResponse
 */
export const GetSessionInfoResponse = new GetSessionInfoResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BroadcastRequest$Type extends MessageType<BroadcastRequest> {
    constructor() {
        super("db3_node_proto.BroadcastRequest", [
            { no: 1, name: "body", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.BroadcastRequest
 */
export const BroadcastRequest = new BroadcastRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BroadcastResponse$Type extends MessageType<BroadcastResponse> {
    constructor() {
        super("db3_node_proto.BroadcastResponse", [
            { no: 2, name: "hash", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.BroadcastResponse
 */
export const BroadcastResponse = new BroadcastResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShowDatabaseRequest$Type extends MessageType<ShowDatabaseRequest> {
    constructor() {
        super("db3_node_proto.ShowDatabaseRequest", [
            { no: 1, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseRequest
 */
export const ShowDatabaseRequest = new ShowDatabaseRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShowDatabaseResponse$Type extends MessageType<ShowDatabaseResponse> {
    constructor() {
        super("db3_node_proto.ShowDatabaseResponse", [
            { no: 1, name: "db", kind: "message", T: () => Database }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseResponse
 */
export const ShowDatabaseResponse = new ShowDatabaseResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RunQueryRequest$Type extends MessageType<RunQueryRequest> {
    constructor() {
        super("db3_node_proto.RunQueryRequest", [
            { no: 1, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "query", kind: "message", T: () => StructuredQuery }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.RunQueryRequest
 */
export const RunQueryRequest = new RunQueryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentRequest$Type extends MessageType<GetDocumentRequest> {
    constructor() {
        super("db3_node_proto.GetDocumentRequest", [
            { no: 1, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetDocumentRequest
 */
export const GetDocumentRequest = new GetDocumentRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDocumentResponse$Type extends MessageType<GetDocumentResponse> {
    constructor() {
        super("db3_node_proto.GetDocumentResponse", [
            { no: 1, name: "document", kind: "message", T: () => Document }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.GetDocumentResponse
 */
export const GetDocumentResponse = new GetDocumentResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RunQueryResponse$Type extends MessageType<RunQueryResponse> {
    constructor() {
        super("db3_node_proto.RunQueryResponse", [
            { no: 2, name: "documents", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Document }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.RunQueryResponse
 */
export const RunQueryResponse = new RunQueryResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShowNetworkStatusRequest$Type extends MessageType<ShowNetworkStatusRequest> {
    constructor() {
        super("db3_node_proto.ShowNetworkStatusRequest", []);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.ShowNetworkStatusRequest
 */
export const ShowNetworkStatusRequest = new ShowNetworkStatusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubscribeRequest$Type extends MessageType<SubscribeRequest> {
    constructor() {
        super("db3_node_proto.SubscribeRequest", [
            { no: 1, name: "session_token", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "sub", kind: "message", T: () => Subscribution }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message db3_node_proto.SubscribeRequest
 */
export const SubscribeRequest = new SubscribeRequest$Type();
/**
 * @generated ServiceType for protobuf service db3_node_proto.StorageNode
 */
export const StorageNode = new ServiceType("db3_node_proto.StorageNode", [
    { name: "QueryBill", options: {}, I: QueryBillRequest, O: QueryBillResponse },
    { name: "OpenQuerySession", options: {}, I: OpenSessionRequest, O: OpenSessionResponse },
    { name: "CloseQuerySession", options: {}, I: CloseSessionRequest, O: CloseSessionResponse },
    { name: "GetAccount", options: {}, I: GetAccountRequest, O: GetAccountResponse },
    { name: "GetSessionInfo", options: {}, I: GetSessionInfoRequest, O: GetSessionInfoResponse },
    { name: "Broadcast", options: {}, I: BroadcastRequest, O: BroadcastResponse },
    { name: "ShowDatabase", options: {}, I: ShowDatabaseRequest, O: ShowDatabaseResponse },
    { name: "RunQuery", options: {}, I: RunQueryRequest, O: RunQueryResponse },
    { name: "GetDocument", options: {}, I: GetDocumentRequest, O: GetDocumentResponse },
    { name: "ShowNetworkStatus", options: {}, I: ShowNetworkStatusRequest, O: NetworkStatus },
    { name: "Subscribe", serverStreaming: true, options: {}, I: SubscribeRequest, O: EventMessage }
]);
