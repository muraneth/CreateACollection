import { MessageType } from "@protobuf-ts/runtime";
import { PayloadType } from "./db3_mutation";
import { BroadcastMeta } from "./db3_base";
/**
 * @generated from protobuf message db3_session_proto.QuerySessionInfo
 */
export interface QuerySessionInfo {
    /**
     * the hex encoded string
     *
     * @generated from protobuf field: int32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: int64 start_time = 2;
     */
    startTime: string;
    /**
     * @generated from protobuf field: int32 query_count = 3;
     */
    queryCount: number;
    /**
     * the meta for client
     *
     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 4;
     */
    meta?: BroadcastMeta;
}
/**
 * @generated from protobuf message db3_session_proto.OpenSessionPayload
 */
export interface OpenSessionPayload {
    /**
     * @generated from protobuf field: string header = 1;
     */
    header: string;
    /**
     * @generated from protobuf field: int64 start_time = 2;
     */
    startTime: string;
}
/**
 * the session for mutation
 *
 * @generated from protobuf message db3_session_proto.QuerySession
 */
export interface QuerySession {
    /**
     * the meta for node client
     *
     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 1;
     */
    meta?: BroadcastMeta;
    /**
     * the agreed session info
     *
     * @generated from protobuf field: bytes payload = 2;
     */
    payload: Uint8Array;
    /**
     * client signature
     *
     * @generated from protobuf field: bytes client_signature = 3;
     */
    clientSignature: Uint8Array;
    /**
     * the type of payload
     *
     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;
     */
    payloadType: PayloadType;
}
declare class QuerySessionInfo$Type extends MessageType<QuerySessionInfo> {
    constructor();
}
/**
 * @generated MessageType for protobuf message db3_session_proto.QuerySessionInfo
 */
export declare const QuerySessionInfo: QuerySessionInfo$Type;
declare class OpenSessionPayload$Type extends MessageType<OpenSessionPayload> {
    constructor();
}
/**
 * @generated MessageType for protobuf message db3_session_proto.OpenSessionPayload
 */
export declare const OpenSessionPayload: OpenSessionPayload$Type;
declare class QuerySession$Type extends MessageType<QuerySession> {
    constructor();
}
/**
 * @generated MessageType for protobuf message db3_session_proto.QuerySession
 */
export declare const QuerySession: QuerySession$Type;
export {};
