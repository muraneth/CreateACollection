import type { Wallet, WalletType } from './wallet';
interface Window {
    ethereum: any;
}
export interface TypedData {
    [field: string]: any;
}
export declare class MetamaskWallet implements Wallet<TypedData, Promise<Uint8Array>> {
    readonly window: Window;
    private addr;
    private publicKey;
    constructor(window: Window);
    connect(): Promise<void>;
    getAddress(): string;
    getEvmAddress(): string;
    getType(): WalletType;
    private generateAddr;
    sign(message: TypedData): Promise<Uint8Array>;
    calculateSigRecovery(v: bigint, chainId?: bigint): bigint;
}
export {};
