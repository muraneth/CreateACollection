{"version":3,"file":"index.cjs","sources":["../node_modules/@protobuf-ts/runtime/build/es2015/json-typings.js","../node_modules/@protobuf-ts/runtime/build/es2015/base64.js","../node_modules/@protobuf-ts/runtime/build/es2015/binary-format-contract.js","../node_modules/@protobuf-ts/runtime/build/es2015/goog-varint.js","../node_modules/@protobuf-ts/runtime/build/es2015/pb-long.js","../node_modules/@protobuf-ts/runtime/build/es2015/binary-reader.js","../node_modules/@protobuf-ts/runtime/build/es2015/assert.js","../node_modules/@protobuf-ts/runtime/build/es2015/binary-writer.js","../node_modules/@protobuf-ts/runtime/build/es2015/json-format-contract.js","../node_modules/@protobuf-ts/runtime/build/es2015/message-type-contract.js","../node_modules/@protobuf-ts/runtime/build/es2015/lower-camel-case.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-info.js","../node_modules/@protobuf-ts/runtime/build/es2015/oneof.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-type-check.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-long-convert.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-reader.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-json-writer.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-scalar-default.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-reader.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-binary-writer.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-merge-partial.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-equals.js","../node_modules/@protobuf-ts/runtime/build/es2015/message-type.js","../node_modules/@protobuf-ts/runtime/build/es2015/reflection-create.js","../src/proto/db3_account.ts","../src/proto/db3_database.ts","../node_modules/tweetnacl/nacl-fast.js","../src/crypto/publickey.ts","../node_modules/js-sha3/src/sha3.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/hashes/esm/hmac.js","../src/crypto/crypto_utils.ts","../src/crypto/ed25519_publickey.ts","../node_modules/@noble/hashes/_assert.js","../node_modules/@noble/hashes/cryptoBrowser.js","../node_modules/@noble/hashes/utils.js","../node_modules/@noble/hashes/hmac.js","../node_modules/@noble/hashes/pbkdf2.js","../node_modules/@noble/hashes/_sha2.js","../node_modules/@noble/hashes/sha256.js","../node_modules/@noble/hashes/_u64.js","../node_modules/@noble/hashes/sha512.js","../node_modules/@scure/base/lib/index.js","../node_modules/@scure/bip39/index.js","../src/crypto/mnemonics.ts","../src/crypto/ed25519_keypair.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../src/crypto/secp256k1_publickey.ts","../node_modules/@noble/hashes/esm/ripemd160.js","../node_modules/@scure/bip32/node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/@scure/bip32/lib/esm/index.js","../src/crypto/secp256k1_keypair.ts","../src/wallet/db3_browser_wallet.ts","../node_modules/base64-js/index.js","../node_modules/events/events.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/ethereum-cryptography/node_modules/@noble/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/secp256k1.js","../node_modules/@ethereumjs/util/dist/constants.js","../node_modules/@ethereumjs/util/dist/units.js","../node_modules/@ethereumjs/rlp/dist/index.js","../node_modules/@noble/hashes/sha3.js","../node_modules/ethereum-cryptography/utils.js","../node_modules/ethereum-cryptography/keccak.js","../node_modules/@ethereumjs/util/dist/internal.js","../node_modules/@ethereumjs/util/dist/helpers.js","../node_modules/@ethereumjs/util/dist/bytes.js","../node_modules/@ethereumjs/util/dist/account.js","../node_modules/@ethereumjs/util/dist/address.js","../node_modules/@ethereumjs/util/dist/types.js","../node_modules/@ethereumjs/util/dist/withdrawal.js","../node_modules/@ethereumjs/util/dist/signature.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/gindex.js","../node_modules/@chainsafe/as-sha256/lib/wasmCode.js","../node_modules/@chainsafe/as-sha256/lib/wasm.js","../node_modules/@chainsafe/as-sha256/lib/hashObject.js","../node_modules/@chainsafe/as-sha256/lib/sha256.js","../node_modules/@chainsafe/as-sha256/lib/index.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/hash.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/node.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/zeroNode.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/subtree.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/packedNode.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/proof/single.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/tree.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/proof/util.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/proof/multi.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/proof/treeOffset.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/proof/index.js","../node_modules/@chainsafe/persistent-merkle-tree/lib/index.js","../node_modules/@chainsafe/ssz/lib/util/zeros.js","../node_modules/@chainsafe/ssz/lib/util/merkleize.js","../node_modules/@chainsafe/ssz/lib/util/named.js","../node_modules/@chainsafe/ssz/lib/type/arrayBasic.js","../node_modules/@chainsafe/ssz/lib/value/bitArray.js","../node_modules/@chainsafe/ssz/lib/util/byteArray.js","../node_modules/@chainsafe/ssz/lib/util/proof/treePostProcessFromProofNode.js","../node_modules/@chainsafe/ssz/lib/type/abstract.js","../node_modules/@chainsafe/ssz/lib/type/composite.js","../node_modules/@chainsafe/ssz/lib/view/abstract.js","../node_modules/@chainsafe/ssz/lib/view/bitArray.js","../node_modules/@chainsafe/ssz/lib/viewDU/abstract.js","../node_modules/@chainsafe/ssz/lib/viewDU/bitArray.js","../node_modules/@chainsafe/ssz/lib/type/bitArray.js","../node_modules/@chainsafe/ssz/lib/type/bitList.js","../node_modules/@chainsafe/ssz/lib/type/bitVector.js","../node_modules/@chainsafe/ssz/lib/type/basic.js","../node_modules/@chainsafe/ssz/lib/type/boolean.js","../node_modules/@chainsafe/ssz/lib/type/byteArray.js","../node_modules/@chainsafe/ssz/lib/type/byteList.js","../node_modules/@chainsafe/ssz/lib/type/byteVector.js","../node_modules/case/dist/Case.js","../node_modules/@chainsafe/ssz/lib/view/container.js","../node_modules/@chainsafe/ssz/lib/viewDU/container.js","../node_modules/@chainsafe/ssz/lib/type/container.js","../node_modules/@chainsafe/ssz/lib/branchNodeStruct.js","../node_modules/@chainsafe/ssz/lib/view/containerNodeStruct.js","../node_modules/@chainsafe/ssz/lib/viewDU/containerNodeStruct.js","../node_modules/@chainsafe/ssz/lib/type/containerNodeStruct.js","../node_modules/@chainsafe/ssz/lib/view/arrayBasic.js","../node_modules/@chainsafe/ssz/lib/view/listBasic.js","../node_modules/@chainsafe/ssz/lib/viewDU/arrayBasic.js","../node_modules/@chainsafe/ssz/lib/viewDU/listBasic.js","../node_modules/@chainsafe/ssz/lib/type/array.js","../node_modules/@chainsafe/ssz/lib/type/listBasic.js","../node_modules/@chainsafe/ssz/lib/type/arrayComposite.js","../node_modules/@chainsafe/ssz/lib/view/arrayComposite.js","../node_modules/@chainsafe/ssz/lib/view/listComposite.js","../node_modules/@chainsafe/ssz/lib/viewDU/arrayComposite.js","../node_modules/@chainsafe/ssz/lib/viewDU/listComposite.js","../node_modules/@chainsafe/ssz/lib/type/listComposite.js","../node_modules/@chainsafe/ssz/lib/type/none.js","../node_modules/@chainsafe/ssz/lib/type/uint.js","../node_modules/@chainsafe/ssz/lib/type/union.js","../node_modules/@chainsafe/ssz/lib/type/vectorBasic.js","../node_modules/@chainsafe/ssz/lib/type/vectorComposite.js","../node_modules/@chainsafe/ssz/lib/index.js","../node_modules/@ethereumjs/util/dist/ssz.js","../src/proto/db3_base.ts","../node_modules/@ethereumjs/util/dist/asyncEventEmitter.js","../node_modules/@ethereumjs/util/dist/lock.js","../node_modules/@ethereumjs/util/dist/index.js","../node_modules/ethjs-util/lib/index.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/@metamask/eth-sig-util/dist/utils.js","../node_modules/@metamask/eth-sig-util/dist/personal-sign.js","../node_modules/bn.js/lib/bn.js","../node_modules/@metamask/eth-sig-util/dist/ethereumjs-abi-utils.js","../node_modules/@metamask/eth-sig-util/dist/sign-typed-data.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/@metamask/eth-sig-util/dist/encryption.js","../node_modules/@metamask/eth-sig-util/dist/index.js","../src/proto/db3_mutation.ts","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-error.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-options.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/deferred.js","../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/goog-grpc-status-code.js","../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-format.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-output-stream.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/unary-call.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/server-streaming-call.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/rpc-interceptor.js","../node_modules/@protobuf-ts/grpcweb-transport/build/es2015/grpc-web-transport.js","../src/proto/db3_event.ts","../src/proto/db3_session.ts","../src/proto/db3_bill.ts","../src/proto/db3_node.ts","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/service-type.js","../node_modules/@protobuf-ts/runtime-rpc/build/es2015/reflection-info.js","../src/proto/db3_node.client.ts","../node_modules/int64-buffer/int64-buffer.js","../src/crypto/id.ts","../src/provider/storage_provider.ts","../node_modules/loglevel/lib/loglevel.js","../node_modules/bson/lib/bson.mjs","../src/core/filter.ts","../src/client/client.ts","../src/store/database.ts","../src/store/account.ts","../src/store/network.ts","../src/store/query.ts","../src/core/query.ts","../src/store/collection.ts","../src/store/document.ts","../src/wallet/metamask.ts","../src/store/app.ts"],"sourcesContent":["/**\n * Get the type of a JSON value.\n * Distinguishes between array, null and object.\n */\nexport function typeofJsonValue(value) {\n    let t = typeof value;\n    if (t == \"object\") {\n        if (Array.isArray(value))\n            return \"array\";\n        if (value === null)\n            return \"null\";\n    }\n    return t;\n}\n/**\n * Is this a JSON object (instead of an array or null)?\n */\nexport function isJsonObject(value) {\n    return value !== null && typeof value == \"object\" && !Array.isArray(value);\n}\n","// lookup table from base64 character to byte\nlet encTable = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nexport function base64decode(base64Str) {\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = base64Str.length * 3 / 4;\n    // if (es % 3 !== 0)\n    // throw new Error('invalid base64 string');\n    if (base64Str[base64Str.length - 2] == '=')\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == '=')\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0 // previous byte\n    ;\n    for (let i = 0; i < base64Str.length; i++) {\n        b = decTable[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            // noinspection FallThroughInSwitchStatementJS\n            switch (base64Str[i]) {\n                case '=':\n                    groupPos = 0; // reset state when padding found\n                case '\\n':\n                case '\\r':\n                case '\\t':\n                case ' ':\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(`invalid base64 string.`);\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = (p & 3) << 6 | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(`invalid base64 string.`);\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encodes a byte array to a base64 string.\n * Adds padding at the end.\n * Does not insert newlines.\n */\nexport function base64encode(bytes) {\n    let base64 = '', groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += encTable[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += encTable[p | b >> 4];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += encTable[p | b >> 6];\n                base64 += encTable[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // padding required?\n    if (groupPos) {\n        base64 += encTable[p];\n        base64 += '=';\n        if (groupPos == 1)\n            base64 += '=';\n    }\n    return base64;\n}\n","/**\n * This handler implements the default behaviour for unknown fields.\n * When reading data, unknown fields are stored on the message, in a\n * symbol property.\n * When writing data, the symbol property is queried and unknown fields\n * are serialized into the output again.\n */\nexport var UnknownFieldHandler;\n(function (UnknownFieldHandler) {\n    /**\n     * The symbol used to store unknown fields for a message.\n     * The property must conform to `UnknownFieldContainer`.\n     */\n    UnknownFieldHandler.symbol = Symbol.for(\"protobuf-ts/unknown\");\n    /**\n     * Store an unknown field during binary read directly on the message.\n     * This method is compatible with `BinaryReadOptions.readUnknownField`.\n     */\n    UnknownFieldHandler.onRead = (typeName, message, fieldNo, wireType, data) => {\n        let container = is(message) ? message[UnknownFieldHandler.symbol] : message[UnknownFieldHandler.symbol] = [];\n        container.push({ no: fieldNo, wireType, data });\n    };\n    /**\n     * Write unknown fields stored for the message to the writer.\n     * This method is compatible with `BinaryWriteOptions.writeUnknownFields`.\n     */\n    UnknownFieldHandler.onWrite = (typeName, message, writer) => {\n        for (let { no, wireType, data } of UnknownFieldHandler.list(message))\n            writer.tag(no, wireType).raw(data);\n    };\n    /**\n     * List unknown fields stored for the message.\n     * Note that there may be multiples fields with the same number.\n     */\n    UnknownFieldHandler.list = (message, fieldNo) => {\n        if (is(message)) {\n            let all = message[UnknownFieldHandler.symbol];\n            return fieldNo ? all.filter(uf => uf.no == fieldNo) : all;\n        }\n        return [];\n    };\n    /**\n     * Returns the last unknown field by field number.\n     */\n    UnknownFieldHandler.last = (message, fieldNo) => UnknownFieldHandler.list(message, fieldNo).slice(-1)[0];\n    const is = (message) => message && Array.isArray(message[UnknownFieldHandler.symbol]);\n})(UnknownFieldHandler || (UnknownFieldHandler = {}));\n/**\n * Merges binary write or read options. Later values override earlier values.\n */\nexport function mergeBinaryOptions(a, b) {\n    return Object.assign(Object.assign({}, a), b);\n}\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [0]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0F) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7F) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error('invalid varint');\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !((shift >>> 7) == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0F) | ((hi & 0x07) << 4);\n    const hasMoreBits = !((hi >> 3) == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xFF);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !((shift >>> 7) == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xFF;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Returns tuple:\n * [0]: minus sign?\n * [1]: low bits\n * [2]: high bits\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64fromString(dec) {\n    // Check for minus sign.\n    let minus = dec[0] == '-';\n    if (minus)\n        dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return [minus, lowBits, highBits];\n}\n/**\n * Format 64 bit integer value (as two JS numbers) to decimal string.\n *\n * Copyright 2008 Google Inc.\n */\nexport function int64toString(bitsLow, bitsHigh) {\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    if (bitsHigh <= 0x1FFFFF) {\n        return '' + (TWO_PWR_32_DBL * bitsHigh + (bitsLow >>> 0));\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    let low = bitsLow & 0xFFFFFF;\n    let mid = (((bitsLow >>> 24) | (bitsHigh << 8)) >>> 0) & 0xFFFFFF;\n    let high = (bitsHigh >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    let base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // Convert base-1e7 digits to base-10, with optional leading zeroes.\n    function decimalFrom1e7(digit1e7, needLeadingZeros) {\n        let partial = digit1e7 ? String(digit1e7) : '';\n        if (needLeadingZeros) {\n            return '0000000'.slice(partial.length) + partial;\n        }\n        return partial;\n    }\n    return decimalFrom1e7(digitC, /*needLeadingZeros=*/ 0) +\n        decimalFrom1e7(digitB, /*needLeadingZeros=*/ digitC) +\n        // If the final 1e7 digit didn't need leading zeros, we would have\n        // returned via the trivial code path at the top.\n        decimalFrom1e7(digitA, /*needLeadingZeros=*/ 1);\n}\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7F;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0F) << 28;\n    for (let readBytes = 5; ((b & 0x80) !== 0) && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error('invalid varint');\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","import { int64fromString, int64toString } from \"./goog-varint\";\nfunction detectBi() {\n    const dv = new DataView(new ArrayBuffer(8));\n    const ok = globalThis.BigInt !== undefined\n        && typeof dv.getBigInt64 === \"function\"\n        && typeof dv.getBigUint64 === \"function\"\n        && typeof dv.setBigInt64 === \"function\"\n        && typeof dv.setBigUint64 === \"function\";\n    return ok ? {\n        MIN: BigInt(\"-9223372036854775808\"),\n        MAX: BigInt(\"9223372036854775807\"),\n        UMIN: BigInt(\"0\"),\n        UMAX: BigInt(\"18446744073709551615\"),\n        C: BigInt,\n        V: dv,\n    } : undefined;\n}\nconst BI = detectBi();\nfunction assertBi(bi) {\n    if (!bi)\n        throw new Error(\"BigInt unavailable, see https://github.com/timostamm/protobuf-ts/blob/v1.0.8/MANUAL.md#bigint-support\");\n}\n// used to validate from(string) input (when bigint is unavailable)\nconst RE_DECIMAL_STR = /^-?[0-9]+$/;\n// constants for binary math\nconst TWO_PWR_32_DBL = (1 << 16) * (1 << 16);\n// base class for PbLong and PbULong provides shared code\nclass SharedPbLong {\n    /**\n     * Create a new instance with the given bits.\n     */\n    constructor(lo, hi) {\n        this.lo = lo | 0;\n        this.hi = hi | 0;\n    }\n    /**\n     * Is this instance equal to 0?\n     */\n    isZero() {\n        return this.lo == 0 && this.hi == 0;\n    }\n    /**\n     * Convert to a native number.\n     */\n    toNumber() {\n        let result = this.hi * TWO_PWR_32_DBL + (this.lo >>> 0);\n        if (!Number.isSafeInteger(result))\n            throw new Error(\"cannot convert to safe number\");\n        return result;\n    }\n}\n/**\n * 64-bit unsigned integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbULong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.UMIN)\n                        throw new Error('signed value for ulong');\n                    if (value > BI.UMAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigUint64(0, value, true);\n                    return new PbULong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    if (minus)\n                        throw new Error('signed value');\n                    return new PbULong(lo, hi);\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    if (value < 0)\n                        throw new Error('signed value for ulong');\n                    return new PbULong(value, value / TWO_PWR_32_DBL);\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        return BI ? this.toBigInt().toString() : int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigUint64(0, true);\n    }\n}\n/**\n * ulong 0 singleton.\n */\nPbULong.ZERO = new PbULong(0, 0);\n/**\n * 64-bit signed integer as two 32-bit values.\n * Converts between `string`, `number` and `bigint` representations.\n */\nexport class PbLong extends SharedPbLong {\n    /**\n     * Create instance from a `string`, `number` or `bigint`.\n     */\n    static from(value) {\n        if (BI)\n            // noinspection FallThroughInSwitchStatementJS\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    if (value == \"\")\n                        throw new Error('string is no integer');\n                    value = BI.C(value);\n                case \"number\":\n                    if (value === 0)\n                        return this.ZERO;\n                    value = BI.C(value);\n                case \"bigint\":\n                    if (!value)\n                        return this.ZERO;\n                    if (value < BI.MIN)\n                        throw new Error('ulong too small');\n                    if (value > BI.MAX)\n                        throw new Error('ulong too large');\n                    BI.V.setBigInt64(0, value, true);\n                    return new PbLong(BI.V.getInt32(0, true), BI.V.getInt32(4, true));\n            }\n        else\n            switch (typeof value) {\n                case \"string\":\n                    if (value == \"0\")\n                        return this.ZERO;\n                    value = value.trim();\n                    if (!RE_DECIMAL_STR.test(value))\n                        throw new Error('string is no integer');\n                    let [minus, lo, hi] = int64fromString(value);\n                    let pbl = new PbLong(lo, hi);\n                    return minus ? pbl.negate() : pbl;\n                case \"number\":\n                    if (value == 0)\n                        return this.ZERO;\n                    if (!Number.isSafeInteger(value))\n                        throw new Error('number is no integer');\n                    return value > 0\n                        ? new PbLong(value, value / TWO_PWR_32_DBL)\n                        : new PbLong(-value, -value / TWO_PWR_32_DBL).negate();\n            }\n        throw new Error('unknown value ' + typeof value);\n    }\n    /**\n     * Do we have a minus sign?\n     */\n    isNegative() {\n        return (this.hi & 0x80000000) !== 0;\n    }\n    /**\n     * Negate two's complement.\n     * Invert all the bits and add one to the result.\n     */\n    negate() {\n        let hi = ~this.hi, lo = this.lo;\n        if (lo)\n            lo = ~lo + 1;\n        else\n            hi += 1;\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Convert to decimal string.\n     */\n    toString() {\n        if (BI)\n            return this.toBigInt().toString();\n        if (this.isNegative()) {\n            let n = this.negate();\n            return '-' + int64toString(n.lo, n.hi);\n        }\n        return int64toString(this.lo, this.hi);\n    }\n    /**\n     * Convert to native bigint.\n     */\n    toBigInt() {\n        assertBi(BI);\n        BI.V.setInt32(0, this.lo, true);\n        BI.V.setInt32(4, this.hi, true);\n        return BI.V.getBigInt64(0, true);\n    }\n}\n/**\n * long 0 singleton.\n */\nPbLong.ZERO = new PbLong(0, 0);\n","import { WireType } from \"./binary-format-contract\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { varint32read, varint64read } from \"./goog-varint\";\nconst defaultsRead = {\n    readUnknownField: true,\n    readerFactory: bytes => new BinaryReader(bytes),\n};\n/**\n * Make options for reading binary data form partial options.\n */\nexport function binaryReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder(\"utf-8\", {\n            fatal: true,\n            ignoreBOM: true,\n        });\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            case WireType.Bit64:\n                this.pos += 4;\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return new PbLong(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return new PbULong(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1 | (hi & 1) << 31) ^ s);\n        hi = (hi >>> 1 ^ s);\n        return new PbLong(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return new PbULong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return new PbLong(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32();\n        let start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","/**\n * assert that condition is true or throw error (with message)\n */\nexport function assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\n/**\n * assert that value cannot exist = type `never`. throw runtime error if it does.\n */\nexport function assertNever(value, msg) {\n    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected object: ' + value);\n}\nconst FLOAT32_MAX = 3.4028234663852886e+38, FLOAT32_MIN = -3.4028234663852886e+38, UINT32_MAX = 0xFFFFFFFF, INT32_MAX = 0X7FFFFFFF, INT32_MIN = -0X80000000;\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid int 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error('invalid int 32: ' + arg);\n}\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid uint 32: ' + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error('invalid uint 32: ' + arg);\n}\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error('invalid float 32: ' + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error('invalid float 32: ' + arg);\n}\n","import { PbLong, PbULong } from \"./pb-long\";\nimport { varint32write, varint64write } from \"./goog-varint\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nconst defaultsWrite = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\n/**\n * Make options for writing binary data form partial options.\n */\nexport function binaryWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error('invalid state, fork stack empty');\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbLong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8);\n        let view = new DataView(chunk.buffer);\n        let long = PbULong.from(value);\n        view.setInt32(0, long.lo, true);\n        view.setInt32(4, long.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let long = PbLong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let long = PbLong.from(value), \n        // zigzag encode\n        sign = long.hi >> 31, lo = (long.lo << 1) ^ sign, hi = ((long.hi << 1) | (long.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let long = PbULong.from(value);\n        varint64write(long.lo, long.hi, this.buf);\n        return this;\n    }\n}\n","const defaultsWrite = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n}, defaultsRead = {\n    ignoreUnknownFields: false,\n};\n/**\n * Make options for reading JSON data from partial options.\n */\nexport function jsonReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsRead), options) : defaultsRead;\n}\n/**\n * Make options for writing JSON data from partial options.\n */\nexport function jsonWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, defaultsWrite), options) : defaultsWrite;\n}\n/**\n * Merges JSON write or read options. Later values override earlier values. Type registries are merged.\n */\nexport function mergeJsonOptions(a, b) {\n    var _a, _b;\n    let c = Object.assign(Object.assign({}, a), b);\n    c.typeRegistry = [...((_a = a === null || a === void 0 ? void 0 : a.typeRegistry) !== null && _a !== void 0 ? _a : []), ...((_b = b === null || b === void 0 ? void 0 : b.typeRegistry) !== null && _b !== void 0 ? _b : [])];\n    return c;\n}\n","/**\n * The symbol used as a key on message objects to store the message type.\n *\n * Note that this is an experimental feature - it is here to stay, but\n * implementation details may change without notice.\n */\nexport const MESSAGE_TYPE = Symbol.for(\"protobuf-ts/message-type\");\n","/**\n * Converts snake_case to lowerCamelCase.\n *\n * Should behave like protoc:\n * https://github.com/protocolbuffers/protobuf/blob/e8ae137c96444ea313485ed1118c5e43b2099cf1/src/google/protobuf/compiler/java/java_helpers.cc#L118\n */\nexport function lowerCamelCase(snakeCase) {\n    let capNext = false;\n    const sb = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let next = snakeCase.charAt(i);\n        if (next == '_') {\n            capNext = true;\n        }\n        else if (/\\d/.test(next)) {\n            sb.push(next);\n            capNext = true;\n        }\n        else if (capNext) {\n            sb.push(next.toUpperCase());\n            capNext = false;\n        }\n        else if (i == 0) {\n            sb.push(next.toLowerCase());\n        }\n        else {\n            sb.push(next);\n        }\n    }\n    return sb.join('');\n}\n","import { lowerCamelCase } from \"./lower-camel-case\";\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of 64 bit integral types. Equivalent to the\n * field option \"jstype\".\n *\n * By default, protobuf-ts represents 64 bit types as `bigint`.\n *\n * You can change the default behaviour by enabling the plugin parameter\n * `long_type_string`, which will represent 64 bit types as `string`.\n *\n * Alternatively, you can change the behaviour for individual fields\n * with the field option \"jstype\":\n *\n * ```protobuf\n * uint64 my_field = 1 [jstype = JS_STRING];\n * uint64 other_field = 2 [jstype = JS_NUMBER];\n * ```\n */\nexport var LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript `bigint`.\n     *\n     * Field option `[jstype = JS_NORMAL]`.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript `string`.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n    /**\n     * Use JavaScript `number`.\n     *\n     * Large values will loose precision.\n     *\n     * Field option `[jstype = JS_NUMBER]`.\n     */\n    LongType[LongType[\"NUMBER\"] = 2] = \"NUMBER\";\n})(LongType || (LongType = {}));\n/**\n * Protobuf 2.1.0 introduced packed repeated fields.\n * Setting the field option `[packed = true]` enables packing.\n *\n * In proto3, all repeated fields are packed by default.\n * Setting the field option `[packed = false]` disables packing.\n *\n * Packed repeated fields are encoded with a single tag,\n * then a length-delimiter, then the element values.\n *\n * Unpacked repeated fields are encoded with a tag and\n * value for each element.\n *\n * `bytes` and `string` cannot be packed.\n */\nexport var RepeatType;\n(function (RepeatType) {\n    /**\n     * The field is not repeated.\n     */\n    RepeatType[RepeatType[\"NO\"] = 0] = \"NO\";\n    /**\n     * The field is repeated and should be packed.\n     * Invalid for `bytes` and `string`, they cannot be packed.\n     */\n    RepeatType[RepeatType[\"PACKED\"] = 1] = \"PACKED\";\n    /**\n     * The field is repeated but should not be packed.\n     * The only valid repeat type for repeated `bytes` and `string`.\n     */\n    RepeatType[RepeatType[\"UNPACKED\"] = 2] = \"UNPACKED\";\n})(RepeatType || (RepeatType = {}));\n/**\n * Turns PartialFieldInfo into FieldInfo.\n */\nexport function normalizeFieldInfo(field) {\n    var _a, _b, _c, _d;\n    field.localName = (_a = field.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(field.name);\n    field.jsonName = (_b = field.jsonName) !== null && _b !== void 0 ? _b : lowerCamelCase(field.name);\n    field.repeat = (_c = field.repeat) !== null && _c !== void 0 ? _c : RepeatType.NO;\n    field.opt = (_d = field.opt) !== null && _d !== void 0 ? _d : (field.repeat ? false : field.oneof ? false : field.kind == \"message\");\n    return field;\n}\n/**\n * Read custom field options from a generated message type.\n *\n * @deprecated use readFieldOption()\n */\nexport function readFieldOptions(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readFieldOption(messageType, fieldName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = messageType.fields.find((m, i) => m.localName == fieldName || i == fieldName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readMessageOption(messageType, extensionName, extensionType) {\n    const options = messageType.options;\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","/**\n * Is the given value a valid oneof group?\n *\n * We represent protobuf `oneof` as algebraic data types (ADT) in generated\n * code. But when working with messages of unknown type, the ADT does not\n * help us.\n *\n * This type guard checks if the given object adheres to the ADT rules, which\n * are as follows:\n *\n * 1) Must be an object.\n *\n * 2) Must have a \"oneofKind\" discriminator property.\n *\n * 3) If \"oneofKind\" is `undefined`, no member field is selected. The object\n * must not have any other properties.\n *\n * 4) If \"oneofKind\" is a `string`, the member field with this name is\n * selected.\n *\n * 5) If a member field is selected, the object must have a second property\n * with this name. The property must not be `undefined`.\n *\n * 6) No extra properties are allowed. The object has either one property\n * (no selection) or two properties (selection).\n *\n */\nexport function isOneofGroup(any) {\n    if (typeof any != 'object' || any === null || !any.hasOwnProperty('oneofKind')) {\n        return false;\n    }\n    switch (typeof any.oneofKind) {\n        case \"string\":\n            if (any[any.oneofKind] === undefined)\n                return false;\n            return Object.keys(any).length == 2;\n        case \"undefined\":\n            return Object.keys(any).length == 1;\n        default:\n            return false;\n    }\n}\n/**\n * Returns the value of the given field in a oneof group.\n */\nexport function getOneofValue(oneof, kind) {\n    return oneof[kind];\n}\nexport function setOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined) {\n        oneof[kind] = value;\n    }\n}\nexport function setUnknownOneofValue(oneof, kind, value) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = kind;\n    if (value !== undefined && kind !== undefined) {\n        oneof[kind] = value;\n    }\n}\n/**\n * Removes the selected field in a oneof group.\n *\n * Note that the recommended way to modify a oneof group is to set\n * a new object:\n *\n * ```ts\n * message.result = { oneofKind: undefined };\n * ```\n */\nexport function clearOneofValue(oneof) {\n    if (oneof.oneofKind !== undefined) {\n        delete oneof[oneof.oneofKind];\n    }\n    oneof.oneofKind = undefined;\n}\n/**\n * Returns the selected value of the given oneof group.\n *\n * Not that the recommended way to access a oneof group is to check\n * the \"oneofKind\" property and let TypeScript narrow down the union\n * type for you:\n *\n * ```ts\n * if (message.result.oneofKind === \"error\") {\n *   message.result.error; // string\n * }\n * ```\n *\n * In the rare case you just need the value, and do not care about\n * which protobuf field is selected, you can use this function\n * for convenience.\n */\nexport function getSelectedOneofValue(oneof) {\n    if (oneof.oneofKind === undefined) {\n        return undefined;\n    }\n    return oneof[oneof.oneofKind];\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { isOneofGroup } from \"./oneof\";\n// noinspection JSMethodCanBeStatic\nexport class ReflectionTypeCheck {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    prepare() {\n        if (this.data)\n            return;\n        const req = [], known = [], oneofs = [];\n        for (let field of this.fields) {\n            if (field.oneof) {\n                if (!oneofs.includes(field.oneof)) {\n                    oneofs.push(field.oneof);\n                    req.push(field.oneof);\n                    known.push(field.oneof);\n                }\n            }\n            else {\n                known.push(field.localName);\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        if (!field.opt || field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"message\":\n                        if (field.repeat)\n                            req.push(field.localName);\n                        break;\n                    case \"map\":\n                        req.push(field.localName);\n                        break;\n                }\n            }\n        }\n        this.data = { req, known, oneofs: Object.values(oneofs) };\n    }\n    /**\n     * Is the argument a valid message as specified by the\n     * reflection information?\n     *\n     * Checks all field types recursively. The `depth`\n     * specifies how deep into the structure the check will be.\n     *\n     * With a depth of 0, only the presence of fields\n     * is checked.\n     *\n     * With a depth of 1 or more, the field types are checked.\n     *\n     * With a depth of 2 or more, the members of map, repeated\n     * and message fields are checked.\n     *\n     * Message fields will be checked recursively with depth - 1.\n     *\n     * The number of map entries / repeated values being checked\n     * is < depth.\n     */\n    is(message, depth, allowExcessProperties = false) {\n        if (depth < 0)\n            return true;\n        if (message === null || message === undefined || typeof message != 'object')\n            return false;\n        this.prepare();\n        let keys = Object.keys(message), data = this.data;\n        // if a required field is missing in arg, this cannot be a T\n        if (keys.length < data.req.length || data.req.some(n => !keys.includes(n)))\n            return false;\n        if (!allowExcessProperties) {\n            // if the arg contains a key we dont know, this is not a literal T\n            if (keys.some(k => !data.known.includes(k)))\n                return false;\n        }\n        // \"With a depth of 0, only the presence and absence of fields is checked.\"\n        // \"With a depth of 1 or more, the field types are checked.\"\n        if (depth < 1) {\n            return true;\n        }\n        // check oneof group\n        for (const name of data.oneofs) {\n            const group = message[name];\n            if (!isOneofGroup(group))\n                return false;\n            if (group.oneofKind === undefined)\n                continue;\n            const field = this.fields.find(f => f.localName === group.oneofKind);\n            if (!field)\n                return false; // we found no field, but have a kind, something is wrong\n            if (!this.field(group[group.oneofKind], field, allowExcessProperties, depth))\n                return false;\n        }\n        // check types\n        for (const field of this.fields) {\n            if (field.oneof !== undefined)\n                continue;\n            if (!this.field(message[field.localName], field, allowExcessProperties, depth))\n                return false;\n        }\n        return true;\n    }\n    field(arg, field, allowExcessProperties, depth) {\n        let repeated = field.repeat;\n        switch (field.kind) {\n            case \"scalar\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, field.T, depth, field.L);\n                return this.scalar(arg, field.T, field.L);\n            case \"enum\":\n                if (arg === undefined)\n                    return field.opt;\n                if (repeated)\n                    return this.scalars(arg, ScalarType.INT32, depth);\n                return this.scalar(arg, ScalarType.INT32);\n            case \"message\":\n                if (arg === undefined)\n                    return true;\n                if (repeated)\n                    return this.messages(arg, field.T(), allowExcessProperties, depth);\n                return this.message(arg, field.T(), allowExcessProperties, depth);\n            case \"map\":\n                if (typeof arg != 'object' || arg === null)\n                    return false;\n                if (depth < 2)\n                    return true;\n                if (!this.mapKeys(arg, field.K, depth))\n                    return false;\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        return this.scalars(Object.values(arg), field.V.T, depth, field.V.L);\n                    case \"enum\":\n                        return this.scalars(Object.values(arg), ScalarType.INT32, depth);\n                    case \"message\":\n                        return this.messages(Object.values(arg), field.V.T(), allowExcessProperties, depth);\n                }\n                break;\n        }\n        return true;\n    }\n    message(arg, type, allowExcessProperties, depth) {\n        if (allowExcessProperties) {\n            return type.isAssignable(arg, depth);\n        }\n        return type.is(arg, depth);\n    }\n    messages(arg, type, allowExcessProperties, depth) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (allowExcessProperties) {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.isAssignable(arg[i], depth - 1))\n                    return false;\n        }\n        else {\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!type.is(arg[i], depth - 1))\n                    return false;\n        }\n        return true;\n    }\n    scalar(arg, type, longType) {\n        let argType = typeof arg;\n        switch (type) {\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                switch (longType) {\n                    case LongType.BIGINT:\n                        return argType == \"bigint\";\n                    case LongType.NUMBER:\n                        return argType == \"number\" && !isNaN(arg);\n                    default:\n                        return argType == \"string\";\n                }\n            case ScalarType.BOOL:\n                return argType == 'boolean';\n            case ScalarType.STRING:\n                return argType == 'string';\n            case ScalarType.BYTES:\n                return arg instanceof Uint8Array;\n            case ScalarType.DOUBLE:\n            case ScalarType.FLOAT:\n                return argType == 'number' && !isNaN(arg);\n            default:\n                // case ScalarType.UINT32:\n                // case ScalarType.FIXED32:\n                // case ScalarType.INT32:\n                // case ScalarType.SINT32:\n                // case ScalarType.SFIXED32:\n                return argType == 'number' && Number.isInteger(arg);\n        }\n    }\n    scalars(arg, type, depth, longType) {\n        if (!Array.isArray(arg))\n            return false;\n        if (depth < 2)\n            return true;\n        if (Array.isArray(arg))\n            for (let i = 0; i < arg.length && i < depth; i++)\n                if (!this.scalar(arg[i], type, longType))\n                    return false;\n        return true;\n    }\n    mapKeys(map, type, depth) {\n        let keys = Object.keys(map);\n        switch (type) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n            case ScalarType.UINT32:\n                return this.scalars(keys.slice(0, depth).map(k => parseInt(k)), type, depth);\n            case ScalarType.BOOL:\n                return this.scalars(keys.slice(0, depth).map(k => k == 'true' ? true : k == 'false' ? false : k), type, depth);\n            default:\n                return this.scalars(keys, type, depth, LongType.STRING);\n        }\n    }\n}\n","import { LongType } from \"./reflection-info\";\n/**\n * Utility method to convert a PbLong or PbUlong to a JavaScript\n * representation during runtime.\n *\n * Works with generated field information, `undefined` is equivalent\n * to `STRING`.\n */\nexport function reflectionLongConvert(long, type) {\n    switch (type) {\n        case LongType.BIGINT:\n            return long.toBigInt();\n        case LongType.NUMBER:\n            return long.toNumber();\n        default:\n            // case undefined:\n            // case LongType.STRING:\n            return long.toString();\n    }\n}\n","import { isJsonObject, typeofJsonValue } from \"./json-typings\";\nimport { base64decode } from \"./base64\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\n/**\n * Reads proto3 messages in canonical JSON format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (this.fMap === undefined) {\n            this.fMap = {};\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            for (const field of fieldsInput) {\n                this.fMap[field.name] = field;\n                this.fMap[field.jsonName] = field;\n                this.fMap[field.localName] = field;\n            }\n        }\n    }\n    // Cannot parse JSON <type of jsonValue> for <type name>#<fieldName>.\n    assert(condition, fieldName, jsonValue) {\n        if (!condition) {\n            let what = typeofJsonValue(jsonValue);\n            if (what == \"number\" || what == \"boolean\")\n                what = jsonValue.toString();\n            throw new Error(`Cannot parse JSON ${what} for ${this.info.typeName}#${fieldName}`);\n        }\n    }\n    /**\n     * Reads a message from canonical JSON format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(input, message, options) {\n        this.prepare();\n        const oneofsHandled = [];\n        for (const [jsonKey, jsonValue] of Object.entries(input)) {\n            const field = this.fMap[jsonKey];\n            if (!field) {\n                if (!options.ignoreUnknownFields)\n                    throw new Error(`Found unknown field while reading ${this.info.typeName} from JSON format. JSON key: ${jsonKey}`);\n                continue;\n            }\n            const localName = field.localName;\n            // handle oneof ADT\n            let target; // this will be the target for the field value, whether it is member of a oneof or not\n            if (field.oneof) {\n                // since json objects are unordered by specification, it is not possible to take the last of multiple oneofs\n                if (oneofsHandled.includes(field.oneof))\n                    throw new Error(`Multiple members of the oneof group \"${field.oneof}\" of ${this.info.typeName} are present in JSON.`);\n                oneofsHandled.push(field.oneof);\n                target = message[field.oneof] = {\n                    oneofKind: localName\n                };\n            }\n            else {\n                target = message;\n            }\n            // we have handled oneof above. we just have read the value into `target`.\n            if (field.kind == 'map') {\n                if (jsonValue === null) {\n                    continue;\n                }\n                // check input\n                this.assert(isJsonObject(jsonValue), field.name, jsonValue);\n                // our target to put map entries into\n                const fieldObj = target[localName];\n                // read entries\n                for (const [jsonObjKey, jsonObjValue] of Object.entries(jsonValue)) {\n                    this.assert(jsonObjValue !== null, field.name + \" map value\", null);\n                    // read value\n                    let val;\n                    switch (field.V.kind) {\n                        case \"message\":\n                            val = field.V.T().internalJsonRead(jsonObjValue, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.V.T(), jsonObjValue, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonObjValue, field.V.T, field.V.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name + \" map value\", jsonObjValue);\n                    // read key\n                    let key = jsonObjKey;\n                    if (field.K == ScalarType.BOOL)\n                        key = key == \"true\" ? true : key == \"false\" ? false : key;\n                    key = this.scalar(key, field.K, LongType.STRING, field.name).toString();\n                    fieldObj[key] = val;\n                }\n            }\n            else if (field.repeat) {\n                if (jsonValue === null)\n                    continue;\n                // check input\n                this.assert(Array.isArray(jsonValue), field.name, jsonValue);\n                // our target to put array entries into\n                const fieldArr = target[localName];\n                // read array entries\n                for (const jsonItem of jsonValue) {\n                    this.assert(jsonItem !== null, field.name, null);\n                    let val;\n                    switch (field.kind) {\n                        case \"message\":\n                            val = field.T().internalJsonRead(jsonItem, options);\n                            break;\n                        case \"enum\":\n                            val = this.enum(field.T(), jsonItem, field.name, options.ignoreUnknownFields);\n                            if (val === false)\n                                continue;\n                            break;\n                        case \"scalar\":\n                            val = this.scalar(jsonItem, field.T, field.L, field.name);\n                            break;\n                    }\n                    this.assert(val !== undefined, field.name, jsonValue);\n                    fieldArr.push(val);\n                }\n            }\n            else {\n                switch (field.kind) {\n                    case \"message\":\n                        if (jsonValue === null && field.T().typeName != 'google.protobuf.Value') {\n                            this.assert(field.oneof === undefined, field.name + \" (oneof member)\", null);\n                            continue;\n                        }\n                        target[localName] = field.T().internalJsonRead(jsonValue, options, target[localName]);\n                        break;\n                    case \"enum\":\n                        let val = this.enum(field.T(), jsonValue, field.name, options.ignoreUnknownFields);\n                        if (val === false)\n                            continue;\n                        target[localName] = val;\n                        break;\n                    case \"scalar\":\n                        target[localName] = this.scalar(jsonValue, field.T, field.L, field.name);\n                        break;\n                }\n            }\n        }\n    }\n    /**\n     * Returns `false` for unrecognized string representations.\n     *\n     * google.protobuf.NullValue accepts only JSON `null`.\n     */\n    enum(type, json, fieldName, ignoreUnknownFields) {\n        if (type[0] == 'google.protobuf.NullValue')\n            assert(json === null, `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} only accepts null.`);\n        if (json === null)\n            // we require 0 to be default value for all enums\n            return 0;\n        switch (typeof json) {\n            case \"number\":\n                assert(Number.isInteger(json), `Unable to parse field ${this.info.typeName}#${fieldName}, enum can only be integral number, got ${json}.`);\n                return json;\n            case \"string\":\n                let localEnumName = json;\n                if (type[2] && json.substring(0, type[2].length) === type[2])\n                    // lookup without the shared prefix\n                    localEnumName = json.substring(type[2].length);\n                let enumNumber = type[1][localEnumName];\n                if (typeof enumNumber === 'undefined' && ignoreUnknownFields) {\n                    return false;\n                }\n                assert(typeof enumNumber == \"number\", `Unable to parse field ${this.info.typeName}#${fieldName}, enum ${type[0]} has no value for \"${json}\".`);\n                return enumNumber;\n        }\n        assert(false, `Unable to parse field ${this.info.typeName}#${fieldName}, cannot parse enum value from ${typeof json}\".`);\n    }\n    scalar(json, type, longType, fieldName) {\n        let e;\n        try {\n            switch (type) {\n                // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n                // Either numbers or strings are accepted. Exponent notation is also accepted.\n                case ScalarType.DOUBLE:\n                case ScalarType.FLOAT:\n                    if (json === null)\n                        return .0;\n                    if (json === \"NaN\")\n                        return Number.NaN;\n                    if (json === \"Infinity\")\n                        return Number.POSITIVE_INFINITY;\n                    if (json === \"-Infinity\")\n                        return Number.NEGATIVE_INFINITY;\n                    if (json === \"\") {\n                        e = \"empty string\";\n                        break;\n                    }\n                    if (typeof json == \"string\" && json.trim().length !== json.length) {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    if (typeof json != \"string\" && typeof json != \"number\") {\n                        break;\n                    }\n                    let float = Number(json);\n                    if (Number.isNaN(float)) {\n                        e = \"not a number\";\n                        break;\n                    }\n                    if (!Number.isFinite(float)) {\n                        // infinity and -infinity are handled by string representation above, so this is an error\n                        e = \"too large or small\";\n                        break;\n                    }\n                    if (type == ScalarType.FLOAT)\n                        assertFloat32(float);\n                    return float;\n                // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n                case ScalarType.INT32:\n                case ScalarType.FIXED32:\n                case ScalarType.SFIXED32:\n                case ScalarType.SINT32:\n                case ScalarType.UINT32:\n                    if (json === null)\n                        return 0;\n                    let int32;\n                    if (typeof json == \"number\")\n                        int32 = json;\n                    else if (json === \"\")\n                        e = \"empty string\";\n                    else if (typeof json == \"string\") {\n                        if (json.trim().length !== json.length)\n                            e = \"extra whitespace\";\n                        else\n                            int32 = Number(json);\n                    }\n                    if (int32 === undefined)\n                        break;\n                    if (type == ScalarType.UINT32)\n                        assertUInt32(int32);\n                    else\n                        assertInt32(int32);\n                    return int32;\n                // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n                case ScalarType.INT64:\n                case ScalarType.SFIXED64:\n                case ScalarType.SINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbLong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbLong.from(json), longType);\n                case ScalarType.FIXED64:\n                case ScalarType.UINT64:\n                    if (json === null)\n                        return reflectionLongConvert(PbULong.ZERO, longType);\n                    if (typeof json != \"number\" && typeof json != \"string\")\n                        break;\n                    return reflectionLongConvert(PbULong.from(json), longType);\n                // bool:\n                case ScalarType.BOOL:\n                    if (json === null)\n                        return false;\n                    if (typeof json !== \"boolean\")\n                        break;\n                    return json;\n                // string:\n                case ScalarType.STRING:\n                    if (json === null)\n                        return \"\";\n                    if (typeof json !== \"string\") {\n                        e = \"extra whitespace\";\n                        break;\n                    }\n                    try {\n                        encodeURIComponent(json);\n                    }\n                    catch (e) {\n                        e = \"invalid UTF8\";\n                        break;\n                    }\n                    return json;\n                // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n                // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n                case ScalarType.BYTES:\n                    if (json === null || json === \"\")\n                        return new Uint8Array(0);\n                    if (typeof json !== 'string')\n                        break;\n                    return base64decode(json);\n            }\n        }\n        catch (error) {\n            e = error.message;\n        }\n        this.assert(false, fieldName + (e ? \" - \" + e : \"\"), json);\n    }\n}\n","import { base64encode } from \"./base64\";\nimport { PbLong, PbULong } from \"./pb-long\";\nimport { ScalarType } from \"./reflection-info\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert\";\n/**\n * Writes proto3 messages in canonical JSON format using reflection\n * information.\n *\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n */\nexport class ReflectionJsonWriter {\n    constructor(info) {\n        var _a;\n        this.fields = (_a = info.fields) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Converts the message to a JSON object, based on the field descriptors.\n     */\n    write(message, options) {\n        const json = {}, source = message;\n        for (const field of this.fields) {\n            // field is not part of a oneof, simply write as is\n            if (!field.oneof) {\n                let jsonValue = this.field(field, source[field.localName], options);\n                if (jsonValue !== undefined)\n                    json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                continue;\n            }\n            // field is part of a oneof\n            const group = source[field.oneof];\n            if (group.oneofKind !== field.localName)\n                continue; // not selected, skip\n            const opt = field.kind == 'scalar' || field.kind == 'enum'\n                ? Object.assign(Object.assign({}, options), { emitDefaultValues: true }) : options;\n            let jsonValue = this.field(field, group[field.localName], opt);\n            assert(jsonValue !== undefined);\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n        }\n        return json;\n    }\n    field(field, value, options) {\n        let jsonValue = undefined;\n        if (field.kind == 'map') {\n            assert(typeof value == \"object\" && value !== null);\n            const jsonObj = {};\n            switch (field.V.kind) {\n                case \"scalar\":\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.scalar(field.V.T, entryValue, field.name, false, true);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        const val = this.message(messageType, entryValue, field.name, options);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.V.T();\n                    for (const [entryKey, entryValue] of Object.entries(value)) {\n                        assert(entryValue === undefined || typeof entryValue == 'number');\n                        const val = this.enum(enumInfo, entryValue, field.name, false, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                    }\n                    break;\n            }\n            if (options.emitDefaultValues || Object.keys(jsonObj).length > 0)\n                jsonValue = jsonObj;\n        }\n        else if (field.repeat) {\n            assert(Array.isArray(value));\n            const jsonArr = [];\n            switch (field.kind) {\n                case \"scalar\":\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.scalar(field.T, value[i], field.name, field.opt, true);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"enum\":\n                    const enumInfo = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        assert(value[i] === undefined || typeof value[i] == 'number');\n                        const val = this.enum(enumInfo, value[i], field.name, field.opt, true, options.enumAsInteger);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n                case \"message\":\n                    const messageType = field.T();\n                    for (let i = 0; i < value.length; i++) {\n                        const val = this.message(messageType, value[i], field.name, options);\n                        assert(val !== undefined);\n                        jsonArr.push(val);\n                    }\n                    break;\n            }\n            // add converted array to json output\n            if (options.emitDefaultValues || jsonArr.length > 0 || options.emitDefaultValues)\n                jsonValue = jsonArr;\n        }\n        else {\n            switch (field.kind) {\n                case \"scalar\":\n                    jsonValue = this.scalar(field.T, value, field.name, field.opt, options.emitDefaultValues);\n                    break;\n                case \"enum\":\n                    jsonValue = this.enum(field.T(), value, field.name, field.opt, options.emitDefaultValues, options.enumAsInteger);\n                    break;\n                case \"message\":\n                    jsonValue = this.message(field.T(), value, field.name, options);\n                    break;\n            }\n        }\n        return jsonValue;\n    }\n    /**\n     * Returns `null` for google.protobuf.NullValue.\n     */\n    enum(type, value, fieldName, optional, emitDefaultValues, enumAsInteger) {\n        if (type[0] == 'google.protobuf.NullValue')\n            return null;\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        if (value === 0 && !emitDefaultValues && !optional)\n            // we require 0 to be default value for all enums\n            return undefined;\n        assert(typeof value == 'number');\n        assert(Number.isInteger(value));\n        if (enumAsInteger || !type[1].hasOwnProperty(value))\n            // if we don't now the enum value, just return the number\n            return value;\n        if (type[2])\n            // restore the dropped prefix\n            return type[2] + type[1][value];\n        return type[1][value];\n    }\n    message(type, value, fieldName, options) {\n        if (value === undefined)\n            return options.emitDefaultValues ? null : undefined;\n        return type.internalJsonWrite(value, options);\n    }\n    scalar(type, value, fieldName, optional, emitDefaultValues) {\n        if (value === undefined) {\n            assert(optional);\n            return undefined;\n        }\n        const ed = emitDefaultValues || optional;\n        // noinspection FallThroughInSwitchStatementJS\n        switch (type) {\n            // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n            case ScalarType.INT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertInt32(value);\n                return value;\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assertUInt32(value);\n                return value;\n            // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n            // Either numbers or strings are accepted. Exponent notation is also accepted.\n            case ScalarType.FLOAT:\n                assertFloat32(value);\n            case ScalarType.DOUBLE:\n                if (value === 0)\n                    return ed ? 0 : undefined;\n                assert(typeof value == 'number');\n                if (Number.isNaN(value))\n                    return 'NaN';\n                if (value === Number.POSITIVE_INFINITY)\n                    return 'Infinity';\n                if (value === Number.NEGATIVE_INFINITY)\n                    return '-Infinity';\n                return value;\n            // string:\n            case ScalarType.STRING:\n                if (value === \"\")\n                    return ed ? '' : undefined;\n                assert(typeof value == 'string');\n                return value;\n            // bool:\n            case ScalarType.BOOL:\n                if (value === false)\n                    return ed ? false : undefined;\n                assert(typeof value == 'boolean');\n                return value;\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.UINT64:\n            case ScalarType.FIXED64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let ulong = PbULong.from(value);\n                if (ulong.isZero() && !ed)\n                    return undefined;\n                return ulong.toString();\n            // JSON value will be a decimal string. Either numbers or strings are accepted.\n            case ScalarType.INT64:\n            case ScalarType.SFIXED64:\n            case ScalarType.SINT64:\n                assert(typeof value == 'number' || typeof value == 'string' || typeof value == 'bigint');\n                let long = PbLong.from(value);\n                if (long.isZero() && !ed)\n                    return undefined;\n                return long.toString();\n            // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n            // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n            case ScalarType.BYTES:\n                assert(value instanceof Uint8Array);\n                if (!value.byteLength)\n                    return ed ? \"\" : undefined;\n                return base64encode(value);\n        }\n    }\n}\n","import { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Creates the default value for a scalar type.\n */\nexport function reflectionScalarDefault(type, longType = LongType.STRING) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n            return reflectionLongConvert(PbULong.ZERO, longType);\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return reflectionLongConvert(PbLong.ZERO, longType);\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // case ScalarType.INT32:\n            // case ScalarType.UINT32:\n            // case ScalarType.SINT32:\n            // case ScalarType.FIXED32:\n            // case ScalarType.SFIXED32:\n            return 0;\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { LongType, ScalarType } from \"./reflection-info\";\nimport { reflectionLongConvert } from \"./reflection-long-convert\";\nimport { reflectionScalarDefault } from \"./reflection-scalar-default\";\n/**\n * Reads proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryReader {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        var _a;\n        if (!this.fieldNoToField) {\n            const fieldsInput = (_a = this.info.fields) !== null && _a !== void 0 ? _a : [];\n            this.fieldNoToField = new Map(fieldsInput.map(field => [field.no, field]));\n        }\n    }\n    /**\n     * Reads a message from binary format into the target message.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    read(reader, message, options, length) {\n        this.prepare();\n        const end = length === undefined ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n            // read the tag and find the field\n            const [fieldNo, wireType] = reader.tag(), field = this.fieldNoToField.get(fieldNo);\n            if (!field) {\n                let u = options.readUnknownField;\n                if (u == \"throw\")\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.info.typeName}`);\n                let d = reader.skip(wireType);\n                if (u !== false)\n                    (u === true ? UnknownFieldHandler.onRead : u)(this.info.typeName, message, fieldNo, wireType, d);\n                continue;\n            }\n            // target object for the field we are reading\n            let target = message, repeated = field.repeat, localName = field.localName;\n            // if field is member of oneof ADT, use ADT as target\n            if (field.oneof) {\n                target = target[field.oneof];\n                // if other oneof member selected, set new ADT\n                if (target.oneofKind !== localName)\n                    target = message[field.oneof] = {\n                        oneofKind: localName\n                    };\n            }\n            // we have handled oneof above, we just have read the value into `target[localName]`\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    let L = field.kind == \"scalar\" ? field.L : undefined;\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        if (wireType == WireType.LengthDelimited && T != ScalarType.STRING && T != ScalarType.BYTES) {\n                            let e = reader.uint32() + reader.pos;\n                            while (reader.pos < e)\n                                arr.push(this.scalar(reader, T, L));\n                        }\n                        else\n                            arr.push(this.scalar(reader, T, L));\n                    }\n                    else\n                        target[localName] = this.scalar(reader, T, L);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                        let msg = field.T().internalBinaryRead(reader, reader.uint32(), options);\n                        arr.push(msg);\n                    }\n                    else\n                        target[localName] = field.T().internalBinaryRead(reader, reader.uint32(), options, target[localName]);\n                    break;\n                case \"map\":\n                    let [mapKey, mapVal] = this.mapEntry(field, reader, options);\n                    // safe to assume presence of map object, oneof cannot contain repeated values\n                    target[localName][mapKey] = mapVal;\n                    break;\n            }\n        }\n    }\n    /**\n     * Read a map field, expecting key field = 1, value field = 2\n     */\n    mapEntry(field, reader, options) {\n        let length = reader.uint32();\n        let end = reader.pos + length;\n        let key = undefined; // javascript only allows number or string for object properties\n        let val = undefined;\n        while (reader.pos < end) {\n            let [fieldNo, wireType] = reader.tag();\n            switch (fieldNo) {\n                case 1:\n                    if (field.K == ScalarType.BOOL)\n                        key = reader.bool().toString();\n                    else\n                        // long types are read as string, number types are okay as number\n                        key = this.scalar(reader, field.K, LongType.STRING);\n                    break;\n                case 2:\n                    switch (field.V.kind) {\n                        case \"scalar\":\n                            val = this.scalar(reader, field.V.T, field.V.L);\n                            break;\n                        case \"enum\":\n                            val = reader.int32();\n                            break;\n                        case \"message\":\n                            val = field.V.T().internalBinaryRead(reader, reader.uint32(), options);\n                            break;\n                    }\n                    break;\n                default:\n                    throw new Error(`Unknown field ${fieldNo} (wire type ${wireType}) in map entry for ${this.info.typeName}#${field.name}`);\n            }\n        }\n        if (key === undefined) {\n            let keyRaw = reflectionScalarDefault(field.K);\n            key = field.K == ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n        }\n        if (val === undefined)\n            switch (field.V.kind) {\n                case \"scalar\":\n                    val = reflectionScalarDefault(field.V.T, field.V.L);\n                    break;\n                case \"enum\":\n                    val = 0;\n                    break;\n                case \"message\":\n                    val = field.V.T().create();\n                    break;\n            }\n        return [key, val];\n    }\n    scalar(reader, type, longType) {\n        switch (type) {\n            case ScalarType.INT32:\n                return reader.int32();\n            case ScalarType.STRING:\n                return reader.string();\n            case ScalarType.BOOL:\n                return reader.bool();\n            case ScalarType.DOUBLE:\n                return reader.double();\n            case ScalarType.FLOAT:\n                return reader.float();\n            case ScalarType.INT64:\n                return reflectionLongConvert(reader.int64(), longType);\n            case ScalarType.UINT64:\n                return reflectionLongConvert(reader.uint64(), longType);\n            case ScalarType.FIXED64:\n                return reflectionLongConvert(reader.fixed64(), longType);\n            case ScalarType.FIXED32:\n                return reader.fixed32();\n            case ScalarType.BYTES:\n                return reader.bytes();\n            case ScalarType.UINT32:\n                return reader.uint32();\n            case ScalarType.SFIXED32:\n                return reader.sfixed32();\n            case ScalarType.SFIXED64:\n                return reflectionLongConvert(reader.sfixed64(), longType);\n            case ScalarType.SINT32:\n                return reader.sint32();\n            case ScalarType.SINT64:\n                return reflectionLongConvert(reader.sint64(), longType);\n        }\n    }\n}\n","import { UnknownFieldHandler, WireType } from \"./binary-format-contract\";\nimport { RepeatType, ScalarType } from \"./reflection-info\";\nimport { assert } from \"./assert\";\nimport { PbLong, PbULong } from \"./pb-long\";\n/**\n * Writes proto3 messages in binary format using reflection information.\n *\n * https://developers.google.com/protocol-buffers/docs/encoding\n */\nexport class ReflectionBinaryWriter {\n    constructor(info) {\n        this.info = info;\n    }\n    prepare() {\n        if (!this.fields) {\n            const fieldsInput = this.info.fields ? this.info.fields.concat() : [];\n            this.fields = fieldsInput.sort((a, b) => a.no - b.no);\n        }\n    }\n    /**\n     * Writes the message to binary format.\n     */\n    write(message, writer, options) {\n        this.prepare();\n        for (const field of this.fields) {\n            let value, // this will be our field value, whether it is member of a oneof or not\n            emitDefault, // whether we emit the default value (only true for oneof members)\n            repeated = field.repeat, localName = field.localName;\n            // handle oneof ADT\n            if (field.oneof) {\n                const group = message[field.oneof];\n                if (group.oneofKind !== localName)\n                    continue; // if field is not selected, skip\n                value = group[localName];\n                emitDefault = true;\n            }\n            else {\n                value = message[localName];\n                emitDefault = false;\n            }\n            // we have handled oneof above. we just have to honor `emitDefault`.\n            switch (field.kind) {\n                case \"scalar\":\n                case \"enum\":\n                    let T = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        if (repeated == RepeatType.PACKED)\n                            this.packed(writer, T, field.no, value);\n                        else\n                            for (const item of value)\n                                this.scalar(writer, T, field.no, item, true);\n                    }\n                    else if (value === undefined)\n                        assert(field.opt);\n                    else\n                        this.scalar(writer, T, field.no, value, emitDefault || field.opt);\n                    break;\n                case \"message\":\n                    if (repeated) {\n                        assert(Array.isArray(value));\n                        for (const item of value)\n                            this.message(writer, options, field.T(), field.no, item);\n                    }\n                    else {\n                        this.message(writer, options, field.T(), field.no, value);\n                    }\n                    break;\n                case \"map\":\n                    assert(typeof value == 'object' && value !== null);\n                    for (const [key, val] of Object.entries(value))\n                        this.mapEntry(writer, options, field, key, val);\n                    break;\n            }\n        }\n        let u = options.writeUnknownFields;\n        if (u !== false)\n            (u === true ? UnknownFieldHandler.onWrite : u)(this.info.typeName, message, writer);\n    }\n    mapEntry(writer, options, field, key, value) {\n        writer.tag(field.no, WireType.LengthDelimited);\n        writer.fork();\n        // javascript only allows number or string for object properties\n        // we convert from our representation to the protobuf type\n        let keyValue = key;\n        switch (field.K) {\n            case ScalarType.INT32:\n            case ScalarType.FIXED32:\n            case ScalarType.UINT32:\n            case ScalarType.SFIXED32:\n            case ScalarType.SINT32:\n                keyValue = Number.parseInt(key);\n                break;\n            case ScalarType.BOOL:\n                assert(key == 'true' || key == 'false');\n                keyValue = key == 'true';\n                break;\n        }\n        // write key, expecting key field number = 1\n        this.scalar(writer, field.K, 1, keyValue, true);\n        // write value, expecting value field number = 2\n        switch (field.V.kind) {\n            case 'scalar':\n                this.scalar(writer, field.V.T, 2, value, true);\n                break;\n            case 'enum':\n                this.scalar(writer, ScalarType.INT32, 2, value, true);\n                break;\n            case 'message':\n                this.message(writer, options, field.V.T(), 2, value);\n                break;\n        }\n        writer.join();\n    }\n    message(writer, options, handler, fieldNo, value) {\n        if (value === undefined)\n            return;\n        handler.internalBinaryWrite(value, writer.tag(fieldNo, WireType.LengthDelimited).fork(), options);\n        writer.join();\n    }\n    /**\n     * Write a single scalar value.\n     */\n    scalar(writer, type, fieldNo, value, emitDefault) {\n        let [wireType, method, isDefault] = this.scalarInfo(type, value);\n        if (!isDefault || emitDefault) {\n            writer.tag(fieldNo, wireType);\n            writer[method](value);\n        }\n    }\n    /**\n     * Write an array of scalar values in packed format.\n     */\n    packed(writer, type, fieldNo, value) {\n        if (!value.length)\n            return;\n        assert(type !== ScalarType.BYTES && type !== ScalarType.STRING);\n        // write tag\n        writer.tag(fieldNo, WireType.LengthDelimited);\n        // begin length-delimited\n        writer.fork();\n        // write values without tags\n        let [, method,] = this.scalarInfo(type);\n        for (let i = 0; i < value.length; i++)\n            writer[method](value[i]);\n        // end length delimited\n        writer.join();\n    }\n    /**\n     * Get information for writing a scalar value.\n     *\n     * Returns tuple:\n     * [0]: appropriate WireType\n     * [1]: name of the appropriate method of IBinaryWriter\n     * [2]: whether the given value is a default value\n     *\n     * If argument `value` is omitted, [2] is always false.\n     */\n    scalarInfo(type, value) {\n        let t = WireType.Varint;\n        let m;\n        let i = value === undefined;\n        let d = value === 0;\n        switch (type) {\n            case ScalarType.INT32:\n                m = \"int32\";\n                break;\n            case ScalarType.STRING:\n                d = i || !value.length;\n                t = WireType.LengthDelimited;\n                m = \"string\";\n                break;\n            case ScalarType.BOOL:\n                d = value === false;\n                m = \"bool\";\n                break;\n            case ScalarType.UINT32:\n                m = \"uint32\";\n                break;\n            case ScalarType.DOUBLE:\n                t = WireType.Bit64;\n                m = \"double\";\n                break;\n            case ScalarType.FLOAT:\n                t = WireType.Bit32;\n                m = \"float\";\n                break;\n            case ScalarType.INT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"int64\";\n                break;\n            case ScalarType.UINT64:\n                d = i || PbULong.from(value).isZero();\n                m = \"uint64\";\n                break;\n            case ScalarType.FIXED64:\n                d = i || PbULong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"fixed64\";\n                break;\n            case ScalarType.BYTES:\n                d = i || !value.byteLength;\n                t = WireType.LengthDelimited;\n                m = \"bytes\";\n                break;\n            case ScalarType.FIXED32:\n                t = WireType.Bit32;\n                m = \"fixed32\";\n                break;\n            case ScalarType.SFIXED32:\n                t = WireType.Bit32;\n                m = \"sfixed32\";\n                break;\n            case ScalarType.SFIXED64:\n                d = i || PbLong.from(value).isZero();\n                t = WireType.Bit64;\n                m = \"sfixed64\";\n                break;\n            case ScalarType.SINT32:\n                m = \"sint32\";\n                break;\n            case ScalarType.SINT64:\n                d = i || PbLong.from(value).isZero();\n                m = \"sint64\";\n                break;\n        }\n        return [t, m, i || d];\n    }\n}\n","/**\n * Copy partial data into the target message.\n *\n * If a singular scalar or enum field is present in the source, it\n * replaces the field in the target.\n *\n * If a singular message field is present in the source, it is merged\n * with the target field by calling mergePartial() of the responsible\n * message type.\n *\n * If a repeated field is present in the source, its values replace\n * all values in the target array, removing extraneous values.\n * Repeated message fields are copied, not merged.\n *\n * If a map field is present in the source, entries are added to the\n * target map, replacing entries with the same key. Entries that only\n * exist in the target remain. Entries with message values are copied,\n * not merged.\n *\n * Note that this function differs from protobuf merge semantics,\n * which appends repeated fields.\n */\nexport function reflectionMergePartial(info, target, source) {\n    let fieldValue, // the field value we are working with\n    input = source, output; // where we want our field value to go\n    for (let field of info.fields) {\n        let name = field.localName;\n        if (field.oneof) {\n            const group = input[field.oneof]; // this is the oneof`s group in the source\n            if ((group === null || group === void 0 ? void 0 : group.oneofKind) == undefined) { // the user is free to omit\n                continue; // we skip this field, and all other members too\n            }\n            fieldValue = group[name]; // our value comes from the the oneof group of the source\n            output = target[field.oneof]; // and our output is the oneof group of the target\n            output.oneofKind = group.oneofKind; // always update discriminator\n            if (fieldValue == undefined) {\n                delete output[name]; // remove any existing value\n                continue; // skip further work on field\n            }\n        }\n        else {\n            fieldValue = input[name]; // we are using the source directly\n            output = target; // we want our field value to go directly into the target\n            if (fieldValue == undefined) {\n                continue; // skip further work on field, existing value is used as is\n            }\n        }\n        if (field.repeat)\n            output[name].length = fieldValue.length; // resize target array to match source array\n        // now we just work with `fieldValue` and `output` to merge the value\n        switch (field.kind) {\n            case \"scalar\":\n            case \"enum\":\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = fieldValue[i]; // not a reference type\n                else\n                    output[name] = fieldValue; // not a reference type\n                break;\n            case \"message\":\n                let T = field.T();\n                if (field.repeat)\n                    for (let i = 0; i < fieldValue.length; i++)\n                        output[name][i] = T.create(fieldValue[i]);\n                else if (output[name] === undefined)\n                    output[name] = T.create(fieldValue); // nothing to merge with\n                else\n                    T.mergePartial(output[name], fieldValue);\n                break;\n            case \"map\":\n                // Map and repeated fields are simply overwritten, not appended or merged\n                switch (field.V.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        Object.assign(output[name], fieldValue); // elements are not reference types\n                        break;\n                    case \"message\":\n                        let T = field.V.T();\n                        for (let k of Object.keys(fieldValue))\n                            output[name][k] = T.create(fieldValue[k]);\n                        break;\n                }\n                break;\n        }\n    }\n}\n","import { ScalarType } from \"./reflection-info\";\n/**\n * Determines whether two message of the same type have the same field values.\n * Checks for deep equality, traversing repeated fields, oneof groups, maps\n * and messages recursively.\n * Will also return true if both messages are `undefined`.\n */\nexport function reflectionEquals(info, a, b) {\n    if (a === b)\n        return true;\n    if (!a || !b)\n        return false;\n    for (let field of info.fields) {\n        let localName = field.localName;\n        let val_a = field.oneof ? a[field.oneof][localName] : a[localName];\n        let val_b = field.oneof ? b[field.oneof][localName] : b[localName];\n        switch (field.kind) {\n            case \"enum\":\n            case \"scalar\":\n                let t = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                if (!(field.repeat\n                    ? repeatedPrimitiveEq(t, val_a, val_b)\n                    : primitiveEq(t, val_a, val_b)))\n                    return false;\n                break;\n            case \"map\":\n                if (!(field.V.kind == \"message\"\n                    ? repeatedMsgEq(field.V.T(), objectValues(val_a), objectValues(val_b))\n                    : repeatedPrimitiveEq(field.V.kind == \"enum\" ? ScalarType.INT32 : field.V.T, objectValues(val_a), objectValues(val_b))))\n                    return false;\n                break;\n            case \"message\":\n                let T = field.T();\n                if (!(field.repeat\n                    ? repeatedMsgEq(T, val_a, val_b)\n                    : T.equals(val_a, val_b)))\n                    return false;\n                break;\n        }\n    }\n    return true;\n}\nconst objectValues = Object.values;\nfunction primitiveEq(type, a, b) {\n    if (a === b)\n        return true;\n    if (type !== ScalarType.BYTES)\n        return false;\n    let ba = a;\n    let bb = b;\n    if (ba.length !== bb.length)\n        return false;\n    for (let i = 0; i < ba.length; i++)\n        if (ba[i] != bb[i])\n            return false;\n    return true;\n}\nfunction repeatedPrimitiveEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!primitiveEq(type, a[i], b[i]))\n            return false;\n    return true;\n}\nfunction repeatedMsgEq(type, a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!type.equals(a[i], b[i]))\n            return false;\n    return true;\n}\n","import { normalizeFieldInfo } from \"./reflection-info\";\nimport { ReflectionTypeCheck } from \"./reflection-type-check\";\nimport { ReflectionJsonReader } from \"./reflection-json-reader\";\nimport { ReflectionJsonWriter } from \"./reflection-json-writer\";\nimport { ReflectionBinaryReader } from \"./reflection-binary-reader\";\nimport { ReflectionBinaryWriter } from \"./reflection-binary-writer\";\nimport { reflectionCreate } from \"./reflection-create\";\nimport { reflectionMergePartial } from \"./reflection-merge-partial\";\nimport { typeofJsonValue } from \"./json-typings\";\nimport { jsonReadOptions, jsonWriteOptions, } from \"./json-format-contract\";\nimport { reflectionEquals } from \"./reflection-equals\";\nimport { binaryWriteOptions } from \"./binary-writer\";\nimport { binaryReadOptions } from \"./binary-reader\";\n/**\n * This standard message type provides reflection-based\n * operations to work with a message.\n */\nexport class MessageType {\n    constructor(name, fields, options) {\n        this.defaultCheckDepth = 16;\n        this.typeName = name;\n        this.fields = fields.map(normalizeFieldInfo);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.refTypeCheck = new ReflectionTypeCheck(this);\n        this.refJsonReader = new ReflectionJsonReader(this);\n        this.refJsonWriter = new ReflectionJsonWriter(this);\n        this.refBinReader = new ReflectionBinaryReader(this);\n        this.refBinWriter = new ReflectionBinaryWriter(this);\n    }\n    create(value) {\n        let message = reflectionCreate(this);\n        if (value !== undefined) {\n            reflectionMergePartial(this, message, value);\n        }\n        return message;\n    }\n    /**\n     * Clone the message.\n     *\n     * Unknown fields are discarded.\n     */\n    clone(message) {\n        let copy = this.create();\n        reflectionMergePartial(this, copy, message);\n        return copy;\n    }\n    /**\n     * Determines whether two message of the same type have the same field values.\n     * Checks for deep equality, traversing repeated fields, oneof groups, maps\n     * and messages recursively.\n     * Will also return true if both messages are `undefined`.\n     */\n    equals(a, b) {\n        return reflectionEquals(this, a, b);\n    }\n    /**\n     * Is the given value assignable to our message type\n     * and contains no [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    is(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, false);\n    }\n    /**\n     * Is the given value assignable to our message type,\n     * regardless of [excess properties](https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks)?\n     */\n    isAssignable(arg, depth = this.defaultCheckDepth) {\n        return this.refTypeCheck.is(arg, depth, true);\n    }\n    /**\n     * Copy partial data into the target message.\n     */\n    mergePartial(target, source) {\n        reflectionMergePartial(this, target, source);\n    }\n    /**\n     * Create a new message from binary format.\n     */\n    fromBinary(data, options) {\n        let opt = binaryReadOptions(options);\n        return this.internalBinaryRead(opt.readerFactory(data), data.byteLength, opt);\n    }\n    /**\n     * Read a new message from a JSON value.\n     */\n    fromJson(json, options) {\n        return this.internalJsonRead(json, jsonReadOptions(options));\n    }\n    /**\n     * Read a new message from a JSON string.\n     * This is equivalent to `T.fromJson(JSON.parse(json))`.\n     */\n    fromJsonString(json, options) {\n        let value = JSON.parse(json);\n        return this.fromJson(value, options);\n    }\n    /**\n     * Write the message to canonical JSON value.\n     */\n    toJson(message, options) {\n        return this.internalJsonWrite(message, jsonWriteOptions(options));\n    }\n    /**\n     * Convert the message to canonical JSON string.\n     * This is equivalent to `JSON.stringify(T.toJson(t))`\n     */\n    toJsonString(message, options) {\n        var _a;\n        let value = this.toJson(message, options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Write the message to binary format.\n     */\n    toBinary(message, options) {\n        let opt = binaryWriteOptions(options);\n        return this.internalBinaryWrite(message, opt.writerFactory(), opt).finish();\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * JSON, use `fromJson()` or `fromJsonString()`.\n     *\n     * Reads JSON value and merges the fields into the target\n     * according to protobuf rules. If the target is omitted,\n     * a new instance is created first.\n     */\n    internalJsonRead(json, options, target) {\n        if (json !== null && typeof json == \"object\" && !Array.isArray(json)) {\n            let message = target !== null && target !== void 0 ? target : this.create();\n            this.refJsonReader.read(json, message, options);\n            return message;\n        }\n        throw new Error(`Unable to parse message ${this.typeName} from JSON ${typeofJsonValue(json)}.`);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * to JSON, use `toJson()` or `toJsonString().\n     *\n     * Writes JSON value and returns it.\n     */\n    internalJsonWrite(message, options) {\n        return this.refJsonWriter.write(message, options);\n    }\n    /**\n     * This is an internal method. If you just want to write a message\n     * in binary format, use `toBinary()`.\n     *\n     * Serializes the message in binary format and appends it to the given\n     * writer. Returns passed writer.\n     */\n    internalBinaryWrite(message, writer, options) {\n        this.refBinWriter.write(message, writer, options);\n        return writer;\n    }\n    /**\n     * This is an internal method. If you just want to read a message from\n     * binary data, use `fromBinary()`.\n     *\n     * Reads data from binary format and merges the fields into\n     * the target according to protobuf rules. If the target is\n     * omitted, a new instance is created first.\n     */\n    internalBinaryRead(reader, length, options, target) {\n        let message = target !== null && target !== void 0 ? target : this.create();\n        this.refBinReader.read(reader, message, options, length);\n        return message;\n    }\n}\n","import { reflectionScalarDefault } from \"./reflection-scalar-default\";\nimport { MESSAGE_TYPE } from './message-type-contract';\n/**\n * Creates an instance of the generic message, using the field\n * information.\n */\nexport function reflectionCreate(type) {\n    const msg = {};\n    Object.defineProperty(msg, MESSAGE_TYPE, { enumerable: false, value: type });\n    for (let field of type.fields) {\n        let name = field.localName;\n        if (field.opt)\n            continue;\n        if (field.oneof)\n            msg[field.oneof] = { oneofKind: undefined };\n        else if (field.repeat)\n            msg[name] = [];\n        else\n            switch (field.kind) {\n                case \"scalar\":\n                    msg[name] = reflectionScalarDefault(field.T, field.L);\n                    break;\n                case \"enum\":\n                    // we require 0 to be default value for all enums\n                    msg[name] = 0;\n                    break;\n                case \"map\":\n                    msg[name] = {};\n                    break;\n            }\n    }\n    return msg;\n}\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_account.proto\" (package \"db3_account_proto\", syntax proto3)\n// tslint:disable\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n *\n *\n *\n * @generated from protobuf message db3_account_proto.Account\n */\nexport interface Account {\n    /**\n     * @generated from protobuf field: uint64 bills = 1;\n     */\n    bills: string;\n    /**\n     * @generated from protobuf field: uint64 credits = 2;\n     */\n    credits: string;\n    /**\n     * @generated from protobuf field: uint64 total_storage_in_bytes = 3;\n     */\n    totalStorageInBytes: string;\n    /**\n     * @generated from protobuf field: uint64 total_mutation_count = 4;\n     */\n    totalMutationCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_session_count = 5;\n     */\n    totalSessionCount: string;\n    /**\n     * @generated from protobuf field: uint64 nonce = 6;\n     */\n    nonce: string;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Account$Type extends MessageType<Account> {\n    constructor() {\n        super(\"db3_account_proto.Account\", [\n            { no: 1, name: \"bills\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"credits\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"total_storage_in_bytes\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"total_mutation_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 5, name: \"total_session_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 6, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_account_proto.Account\n */\nexport const Account = new Account$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_database.proto\" (package \"db3_database_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_database.proto\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n *\n * the definition of database\n *\n *\n * @generated from protobuf message db3_database_proto.Database\n */\nexport interface Database {\n    /**\n     * @generated from protobuf field: bytes address = 1;\n     */\n    address: Uint8Array;\n    /**\n     * the owner of the Database\n     *\n     * @generated from protobuf field: bytes sender = 2;\n     */\n    sender: Uint8Array;\n    /**\n     * the history of database modification\n     *\n     * @generated from protobuf field: repeated bytes tx = 3;\n     */\n    tx: Uint8Array[];\n    /**\n     * @generated from protobuf field: map<string, db3_database_proto.Collection> collections = 4;\n     */\n    collections: {\n        [key: string]: Collection;\n    };\n}\n/**\n * @generated from protobuf message db3_database_proto.Collection\n */\nexport interface Collection {\n    /**\n     * @generated from protobuf field: bytes id = 1;\n     */\n    id: Uint8Array;\n    /**\n     * @generated from protobuf field: string name = 2;\n     */\n    name: string;\n    /**\n     * @generated from protobuf field: repeated db3_database_proto.Index index_list = 3;\n     */\n    indexList: Index[];\n}\n/**\n * @generated from protobuf message db3_database_proto.Document\n */\nexport interface Document {\n    /**\n     * @generated from protobuf field: bytes id = 1;\n     */\n    id: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes doc = 2;\n     */\n    doc: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes owner = 3;\n     */\n    owner: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes tx_id = 4;\n     */\n    txId: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_database_proto.Index\n */\nexport interface Index {\n    /**\n     * Output only. A server defined name for this index.\n     * The form of this name for composite indexes will be:\n     * `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`\n     * For single field indexes, this field will be empty.\n     *\n     * @generated from protobuf field: string name = 1;\n     */\n    name: string;\n    /**\n     * Id of the index filed in the collection\n     *\n     * @generated from protobuf field: uint32 id = 2;\n     */\n    id: number;\n    /**\n     * The fields supported by this index.\n     *\n     * For composite indexes, this is always 2 or more fields.\n     * The last field entry is always for the field path `__name__`. If, on\n     * creation, `__name__` was not specified as the last field, it will be added\n     * automatically with the same direction as that of the last field defined. If\n     * the final field in a composite index is not directional, the `__name__`\n     * will be ordered ASCENDING (unless explicitly specified).\n     *\n     * For single field indexes, this will always be exactly one entry with a\n     * field path equal to the field path of the associated field.\n     *\n     * @generated from protobuf field: repeated db3_database_proto.Index.IndexField fields = 3;\n     */\n    fields: Index_IndexField[];\n}\n/**\n * A field in an index.\n * The field_path describes which field is indexed, the value_mode describes\n * how the field value is indexed.\n *\n * @generated from protobuf message db3_database_proto.Index.IndexField\n */\nexport interface Index_IndexField {\n    /**\n     * Can be __name__.\n     * For single field indexes, this must match the name of the field or may\n     * be omitted.\n     *\n     * @generated from protobuf field: string field_path = 1;\n     */\n    fieldPath: string;\n    /**\n     * @generated from protobuf oneof: value_mode\n     */\n    valueMode: {\n        oneofKind: \"order\";\n        /**\n         * Indicates that this field supports ordering by the specified order or\n         * comparing using =, !=, <, <=, >, >=.\n         *\n         * @generated from protobuf field: db3_database_proto.Index.IndexField.Order order = 2;\n         */\n        order: Index_IndexField_Order;\n    } | {\n        oneofKind: \"arrayConfig\";\n        /**\n         * Indicates that this field supports operations on `array_value`s.\n         *\n         * @generated from protobuf field: db3_database_proto.Index.IndexField.ArrayConfig array_config = 3;\n         */\n        arrayConfig: Index_IndexField_ArrayConfig;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * The supported orderings.\n *\n * @generated from protobuf enum db3_database_proto.Index.IndexField.Order\n */\nexport enum Index_IndexField_Order {\n    /**\n     * The ordering is unspecified. Not a valid option.\n     *\n     * @generated from protobuf enum value: ORDER_UNSPECIFIED = 0;\n     */\n    ORDER_UNSPECIFIED = 0,\n    /**\n     * The field is ordered by ascending field value.\n     *\n     * @generated from protobuf enum value: ASCENDING = 1;\n     */\n    ASCENDING = 1,\n    /**\n     * The field is ordered by descending field value.\n     *\n     * @generated from protobuf enum value: DESCENDING = 2;\n     */\n    DESCENDING = 2\n}\n/**\n * The supported array value configurations.\n *\n * @generated from protobuf enum db3_database_proto.Index.IndexField.ArrayConfig\n */\nexport enum Index_IndexField_ArrayConfig {\n    /**\n     * The index does not support additional array queries.\n     *\n     * @generated from protobuf enum value: ARRAY_CONFIG_UNSPECIFIED = 0;\n     */\n    ARRAY_CONFIG_UNSPECIFIED = 0,\n    /**\n     * The index supports array containment queries.\n     *\n     * @generated from protobuf enum value: CONTAINS = 1;\n     */\n    CONTAINS = 1\n}\n/**\n * The state of an index. During index creation, an index will be in the\n * `CREATING` state. If the index is created successfully, it will transition\n * to the `READY` state. If the index creation encounters a problem, the index\n * will transition to the `NEEDS_REPAIR` state.\n *\n * @generated from protobuf enum db3_database_proto.Index.State\n */\nexport enum Index_State {\n    /**\n     * The state is unspecified.\n     *\n     * @generated from protobuf enum value: STATE_UNSPECIFIED = 0;\n     */\n    STATE_UNSPECIFIED = 0,\n    /**\n     * The index is being created.\n     * There is an active long-running operation for the index.\n     * The index is updated when writing a document.\n     * Some index data may exist.\n     *\n     * @generated from protobuf enum value: CREATING = 1;\n     */\n    CREATING = 1,\n    /**\n     * The index is ready to be used.\n     * The index is updated when writing a document.\n     * The index is fully populated from all stored documents it applies to.\n     *\n     * @generated from protobuf enum value: READY = 2;\n     */\n    READY = 2,\n    /**\n     * The index was being created, but something went wrong.\n     * There is no active long-running operation for the index,\n     * and the most recently finished long-running operation failed.\n     * The index is not updated when writing a document.\n     * Some index data may exist.\n     * Use the google.longrunning.Operations API to determine why the operation\n     * that last attempted to create this index failed, then re-create the\n     * index.\n     *\n     * @generated from protobuf enum value: NEEDS_REPAIR = 3;\n     */\n    NEEDS_REPAIR = 3\n}\n/**\n * A Firestore query.\n *\n * @generated from protobuf message db3_database_proto.StructuredQuery\n */\nexport interface StructuredQuery {\n    /**\n     * The projection to return.\n     *\n     * @generated from protobuf field: db3_database_proto.StructuredQuery.Projection select = 1;\n     */\n    select?: StructuredQuery_Projection;\n    /**\n     * The collections to query.\n     * TODO: Will support repeated collection in the future\n     *\n     * @generated from protobuf field: string collection_name = 2;\n     */\n    collectionName: string;\n    /**\n     * The filter to apply.\n     *\n     * @generated from protobuf field: db3_database_proto.StructuredQuery.Filter where = 3;\n     */\n    where?: StructuredQuery_Filter;\n    /**\n     * The maximum number of results to return.\n     *\n     * Applies after all other constraints.\n     *\n     * Requires:\n     *\n     * * The value must be greater than or equal to zero if specified.\n     *\n     * @generated from protobuf field: db3_database_proto.StructuredQuery.Limit limit = 5;\n     */\n    limit?: StructuredQuery_Limit;\n}\n/**\n * A filter.\n *\n * @generated from protobuf message db3_database_proto.StructuredQuery.Filter\n */\nexport interface StructuredQuery_Filter {\n    /**\n     * @generated from protobuf oneof: filter_type\n     */\n    filterType: {\n        oneofKind: \"fieldFilter\";\n        /**\n         * A filter on a document field.\n         *\n         * @generated from protobuf field: db3_database_proto.StructuredQuery.FieldFilter field_filter = 1;\n         */\n        fieldFilter: StructuredQuery_FieldFilter; // A composite filter.\n        // TODO: Support in the future P2\n        // CompositeFilter composite_filter = 2;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * A message that can hold any of the supported value types.\n *\n * @generated from protobuf message db3_database_proto.StructuredQuery.Value\n */\nexport interface StructuredQuery_Value {\n    /**\n     * @generated from protobuf oneof: value_type\n     */\n    valueType: {\n        oneofKind: \"booleanValue\";\n        /**\n         * A boolean value.\n         *\n         * @generated from protobuf field: bool boolean_value = 1;\n         */\n        booleanValue: boolean;\n    } | {\n        oneofKind: \"integerValue\";\n        /**\n         * An integer value.\n         *\n         * @generated from protobuf field: int64 integer_value = 2;\n         */\n        integerValue: string;\n    } | {\n        oneofKind: \"doubleValue\";\n        /**\n         * A double value.\n         *\n         * @generated from protobuf field: double double_value = 3;\n         */\n        doubleValue: number;\n    } | {\n        oneofKind: \"stringValue\";\n        // A timestamp value.\n        // \n        // Precise only to microseconds. When stored, any additional precision is\n        // rounded down.\n        // TODO: support P2\n        // google.protobuf.Timestamp timestamp_value = 10;\n\n        /**\n         * A string value.\n         *\n         * The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes.\n         * Only the first 1,500 bytes of the UTF-8 representation are considered by\n         * queries.\n         *\n         * @generated from protobuf field: string string_value = 17;\n         */\n        stringValue: string;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * A filter on a specific field.\n *\n * @generated from protobuf message db3_database_proto.StructuredQuery.FieldFilter\n */\nexport interface StructuredQuery_FieldFilter {\n    /**\n     * The field to filter by.\n     *\n     * @generated from protobuf field: string field = 1;\n     */\n    field: string;\n    /**\n     * The operator to filter by.\n     *\n     * @generated from protobuf field: db3_database_proto.StructuredQuery.FieldFilter.Operator op = 2;\n     */\n    op: StructuredQuery_FieldFilter_Operator;\n    /**\n     * The bytes of Bson value to compare to.\n     *\n     * @generated from protobuf field: db3_database_proto.StructuredQuery.Value value = 3;\n     */\n    value?: StructuredQuery_Value;\n}\n/**\n * A field filter operator.\n *\n * @generated from protobuf enum db3_database_proto.StructuredQuery.FieldFilter.Operator\n */\nexport enum StructuredQuery_FieldFilter_Operator {\n    /**\n     * Unspecified. This value must not be used.\n     *\n     * @generated from protobuf enum value: OPERATOR_UNSPECIFIED = 0;\n     */\n    OPERATOR_UNSPECIFIED = 0,\n    /**\n     * The given `field` is less than the given `value`.\n     *\n     * Requires:\n     *\n     * * That `field` come first in `order_by`.\n     *\n     * @generated from protobuf enum value: LESS_THAN = 1;\n     */\n    LESS_THAN = 1,\n    /**\n     * The given `field` is less than or equal to the given `value`.\n     *\n     * Requires:\n     *\n     * * That `field` come first in `order_by`.\n     *\n     * @generated from protobuf enum value: LESS_THAN_OR_EQUAL = 2;\n     */\n    LESS_THAN_OR_EQUAL = 2,\n    /**\n     * The given `field` is greater than the given `value`.\n     *\n     * Requires:\n     *\n     * * That `field` come first in `order_by`.\n     *\n     * @generated from protobuf enum value: GREATER_THAN = 3;\n     */\n    GREATER_THAN = 3,\n    /**\n     * The given `field` is greater than or equal to the given `value`.\n     *\n     * Requires:\n     *\n     * * That `field` come first in `order_by`.\n     *\n     * @generated from protobuf enum value: GREATER_THAN_OR_EQUAL = 4;\n     */\n    GREATER_THAN_OR_EQUAL = 4,\n    /**\n     * The given `field` is equal to the given `value`.\n     *\n     * @generated from protobuf enum value: EQUAL = 5;\n     */\n    EQUAL = 5,\n    /**\n     * The given `field` is not equal to the given `value`.\n     *\n     * Requires:\n     *\n     * * No other `NOT_EQUAL`, `NOT_IN`, `IS_NOT_NULL`, or `IS_NOT_NAN`.\n     * * That `field` comes first in the `order_by`.\n     *\n     * @generated from protobuf enum value: NOT_EQUAL = 6;\n     */\n    NOT_EQUAL = 6,\n    /**\n     * The given `field` is an array that contains the given `value`.\n     *\n     * @generated from protobuf enum value: ARRAY_CONTAINS = 7;\n     */\n    ARRAY_CONTAINS = 7\n}\n/**\n * The projection of document's fields to return.\n *\n * @generated from protobuf message db3_database_proto.StructuredQuery.Projection\n */\nexport interface StructuredQuery_Projection {\n    /**\n     * The fields to return.\n     *\n     * If empty, all fields are returned.\n     *\n     * @generated from protobuf field: repeated string fields = 1;\n     */\n    fields: string[];\n}\n/**\n * @generated from protobuf message db3_database_proto.StructuredQuery.Limit\n */\nexport interface StructuredQuery_Limit {\n    /**\n     * @generated from protobuf field: int32 limit = 1;\n     */\n    limit: number;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Database$Type extends MessageType<Database> {\n    constructor() {\n        super(\"db3_database_proto.Database\", [\n            { no: 1, name: \"address\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"sender\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"tx\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"collections\", kind: \"map\", K: 9 /*ScalarType.STRING*/, V: { kind: \"message\", T: () => Collection } }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Database\n */\nexport const Database = new Database$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Collection$Type extends MessageType<Collection> {\n    constructor() {\n        super(\"db3_database_proto.Collection\", [\n            { no: 1, name: \"id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"index_list\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Index }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Collection\n */\nexport const Collection = new Collection$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Document$Type extends MessageType<Document> {\n    constructor() {\n        super(\"db3_database_proto.Document\", [\n            { no: 1, name: \"id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"doc\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"owner\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"tx_id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Document\n */\nexport const Document = new Document$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Index$Type extends MessageType<Index> {\n    constructor() {\n        super(\"db3_database_proto.Index\", [\n            { no: 1, name: \"name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"id\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 3, name: \"fields\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Index_IndexField }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Index\n */\nexport const Index = new Index$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Index_IndexField$Type extends MessageType<Index_IndexField> {\n    constructor() {\n        super(\"db3_database_proto.Index.IndexField\", [\n            { no: 1, name: \"field_path\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"order\", kind: \"enum\", oneof: \"valueMode\", T: () => [\"db3_database_proto.Index.IndexField.Order\", Index_IndexField_Order] },\n            { no: 3, name: \"array_config\", kind: \"enum\", oneof: \"valueMode\", T: () => [\"db3_database_proto.Index.IndexField.ArrayConfig\", Index_IndexField_ArrayConfig] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.Index.IndexField\n */\nexport const Index_IndexField = new Index_IndexField$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery$Type extends MessageType<StructuredQuery> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery\", [\n            { no: 1, name: \"select\", kind: \"message\", T: () => StructuredQuery_Projection },\n            { no: 2, name: \"collection_name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"where\", kind: \"message\", T: () => StructuredQuery_Filter },\n            { no: 5, name: \"limit\", kind: \"message\", T: () => StructuredQuery_Limit }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery\n */\nexport const StructuredQuery = new StructuredQuery$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery_Filter$Type extends MessageType<StructuredQuery_Filter> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery.Filter\", [\n            { no: 1, name: \"field_filter\", kind: \"message\", oneof: \"filterType\", T: () => StructuredQuery_FieldFilter }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery.Filter\n */\nexport const StructuredQuery_Filter = new StructuredQuery_Filter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery_Value$Type extends MessageType<StructuredQuery_Value> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery.Value\", [\n            { no: 1, name: \"boolean_value\", kind: \"scalar\", oneof: \"valueType\", T: 8 /*ScalarType.BOOL*/ },\n            { no: 2, name: \"integer_value\", kind: \"scalar\", oneof: \"valueType\", T: 3 /*ScalarType.INT64*/ },\n            { no: 3, name: \"double_value\", kind: \"scalar\", oneof: \"valueType\", T: 1 /*ScalarType.DOUBLE*/ },\n            { no: 17, name: \"string_value\", kind: \"scalar\", oneof: \"valueType\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery.Value\n */\nexport const StructuredQuery_Value = new StructuredQuery_Value$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery_FieldFilter$Type extends MessageType<StructuredQuery_FieldFilter> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery.FieldFilter\", [\n            { no: 1, name: \"field\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"op\", kind: \"enum\", T: () => [\"db3_database_proto.StructuredQuery.FieldFilter.Operator\", StructuredQuery_FieldFilter_Operator] },\n            { no: 3, name: \"value\", kind: \"message\", T: () => StructuredQuery_Value }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery.FieldFilter\n */\nexport const StructuredQuery_FieldFilter = new StructuredQuery_FieldFilter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery_Projection$Type extends MessageType<StructuredQuery_Projection> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery.Projection\", [\n            { no: 1, name: \"fields\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery.Projection\n */\nexport const StructuredQuery_Projection = new StructuredQuery_Projection$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass StructuredQuery_Limit$Type extends MessageType<StructuredQuery_Limit> {\n    constructor() {\n        super(\"db3_database_proto.StructuredQuery.Limit\", [\n            { no: 1, name: \"limit\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_database_proto.StructuredQuery.Limit\n */\nexport const StructuredQuery_Limit = new StructuredQuery_Limit$Type();\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","//\n// publickey.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nexport type SignatureScheme = 'ED25519' | 'Secp256k1'\n\nexport type PublicKeyInitData = string | Uint8Array | Iterable<number>\n\nexport const SIGNATURE_SCHEME_TO_FLAG = {\n    ED25519: 0x00,\n    Secp256k1: 0x01,\n}\n\n/**\n * A public key\n */\nexport interface PublicKey {\n    /**\n     * Checks if two public keys are equal\n     */\n    equals(publicKey: PublicKey): boolean\n\n    /**\n     * Return the base-64 representation of the public key\n     */\n    toBase64(): string\n\n    /**\n     * Return the byte array representation of the public key\n     */\n    toBytes(): Uint8Array\n\n    /**\n     * Return the db3 address associated with this public key\n     */\n    toAddress(): string\n}\n\nexport function bytesEqual(a: Uint8Array, b: Uint8Array) {\n    if (a === b) return true\n\n    if (a.length !== b.length) {\n        return false\n    }\n\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false\n        }\n    }\n    return true\n}\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n//# sourceMappingURL=utils.js.map","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","//\n// util.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { sha512 } from '@noble/hashes/sha512'\nimport { hmac } from '@noble/hashes/hmac'\nimport nacl from 'tweetnacl'\nconst ED25519_CURVE = 'ed25519 seed'\nconst HARDENED_OFFSET = 0x80000000\n\nexport const pathRegex = new RegExp(\"^m(\\\\/[0-9]+')+$\")\n\nexport const replaceDerive = (val: string): string => val.replace(\"'\", '')\n\ninterface Keys {\n    key: Uint8Array\n    chainCode: Uint8Array\n}\n\nexport const getMasterKeyFromSeed = (seed: string): Keys => {\n    const h = hmac.create(sha512, ED25519_CURVE)\n    const I = h.update(fromHEX(seed)).digest()\n    const IL = I.slice(0, 32)\n    const IR = I.slice(32)\n    return {\n        key: IL,\n        chainCode: IR,\n    }\n}\n\nexport function fromHEX(hexStr: string): Uint8Array {\n    // @ts-ignore\n    let intArr = hexStr\n        .replace('0x', '')\n        .match(/.{1,2}/g)\n        .map((byte) => parseInt(byte, 16))\n\n    if (intArr === null) {\n        throw new Error(`Unable to parse HEX: ${hexStr}`)\n    }\n\n    return Uint8Array.from(intArr)\n}\n\nexport function toHEX(bytes: Uint8Array): string {\n    return bytes.reduce(\n        (str, byte) => str + byte.toString(16).padStart(2, '0'),\n        ''\n    )\n}\n\n//\n// Base64 / binary data / UTF-8 strings utilities\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\n//\n//  Array of bytes to Base64 string decoding\n//\n\nfunction b64ToUint6(nChr: number) {\n    return nChr > 64 && nChr < 91\n        ? nChr - 65\n        : nChr > 96 && nChr < 123\n        ? nChr - 71\n        : nChr > 47 && nChr < 58\n        ? nChr + 4\n        : nChr === 43\n        ? 62\n        : nChr === 47\n        ? 63\n        : 0\n}\n\nexport function fromB64(sBase64: string, nBlocksSize?: number): Uint8Array {\n    var sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, ''),\n        nInLen = sB64Enc.length,\n        nOutLen = nBlocksSize\n            ? Math.ceil(((nInLen * 3 + 1) >> 2) / nBlocksSize) * nBlocksSize\n            : (nInLen * 3 + 1) >> 2,\n        taBytes = new Uint8Array(nOutLen)\n\n    for (\n        var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0;\n        nInIdx < nInLen;\n        nInIdx++\n    ) {\n        nMod4 = nInIdx & 3\n        nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << (6 * (3 - nMod4))\n        if (nMod4 === 3 || nInLen - nInIdx === 1) {\n            for (\n                nMod3 = 0;\n                nMod3 < 3 && nOutIdx < nOutLen;\n                nMod3++, nOutIdx++\n            ) {\n                taBytes[nOutIdx] = (nUint24 >>> ((16 >>> nMod3) & 24)) & 255\n            }\n            nUint24 = 0\n        }\n    }\n\n    return taBytes\n}\n\n/* Base64 string to array encoding */\n\nfunction uint6ToB64(nUint6: number) {\n    return nUint6 < 26\n        ? nUint6 + 65\n        : nUint6 < 52\n        ? nUint6 + 71\n        : nUint6 < 62\n        ? nUint6 - 4\n        : nUint6 === 62\n        ? 43\n        : nUint6 === 63\n        ? 47\n        : 65\n}\n\nexport function toB64(aBytes: Uint8Array): string {\n    var nMod3 = 2,\n        sB64Enc = ''\n\n    for (var nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n        nMod3 = nIdx % 3\n        if (nIdx > 0 && ((nIdx * 4) / 3) % 76 === 0) {\n            sB64Enc += ''\n        }\n        nUint24 |= aBytes[nIdx] << ((16 >>> nMod3) & 24)\n        if (nMod3 === 2 || aBytes.length - nIdx === 1) {\n            sB64Enc += String.fromCodePoint(\n                uint6ToB64((nUint24 >>> 18) & 63),\n                uint6ToB64((nUint24 >>> 12) & 63),\n                uint6ToB64((nUint24 >>> 6) & 63),\n                uint6ToB64(nUint24 & 63)\n            )\n            nUint24 = 0\n        }\n    }\n\n    return (\n        sB64Enc.slice(0, sB64Enc.length - 2 + nMod3) +\n        (nMod3 === 2 ? '' : nMod3 === 1 ? '=' : '==')\n    )\n}\n\nexport const derivePath = (\n    path: string,\n    seed: string,\n    offset = HARDENED_OFFSET\n) => {\n    if (!isValidPath(path)) {\n        throw new Error('Invalid derivation path')\n    }\n\n    const { key, chainCode } = getMasterKeyFromSeed(seed)\n    const segments = path\n        .split('/')\n        .slice(1)\n        .map(replaceDerive)\n        .map((el) => parseInt(el, 10))\n\n    return segments.reduce(\n        (parentKeys, segment) => CKDPriv(parentKeys, segment + offset),\n        { key, chainCode }\n    )\n}\nconst CKDPriv = ({ key, chainCode }: Keys, index: number): Keys => {\n    const indexBuffer = new ArrayBuffer(4)\n    const cv = new DataView(indexBuffer)\n    cv.setUint32(0, index)\n\n    const data = new Uint8Array(1 + key.length + indexBuffer.byteLength)\n    data.set(new Uint8Array(1).fill(0))\n    data.set(key, 1)\n    data.set(\n        new Uint8Array(indexBuffer, 0, indexBuffer.byteLength),\n        key.length + 1\n    )\n\n    const I = hmac.create(sha512, chainCode).update(data).digest()\n    const IL = I.slice(0, 32)\n    const IR = I.slice(32)\n    return {\n        key: IL,\n        chainCode: IR,\n    }\n}\n\nexport const getPublicKey = (\n    privateKey: Uint8Array,\n    withZeroByte = true\n): Uint8Array => {\n    const keyPair = nacl.sign.keyPair.fromSeed(privateKey)\n    const signPk = keyPair.secretKey.subarray(32)\n    const newArr = new Uint8Array(signPk.length + 1)\n    newArr.set([0])\n    newArr.set(signPk, 1)\n    return withZeroByte ? newArr : signPk\n}\n\nexport const isValidPath = (path: string): boolean => {\n    if (!pathRegex.test(path)) {\n        return false\n    }\n    return !path\n        .split('/')\n        .slice(1)\n        .map(replaceDerive)\n        .some(isNaN as any /* ts T_T*/)\n}\nexport const isHexString = (value: string): boolean => {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    return true\n}\n","//\n// ed25519_publickey.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport sha3 from 'js-sha3'\nimport { fromB64, toB64 } from './crypto_utils'\nimport {\n    bytesEqual,\n    PublicKeyInitData,\n    SIGNATURE_SCHEME_TO_FLAG,\n} from './publickey'\n\nconst PUBLIC_KEY_SIZE = 32\n\n/**\n * An Ed25519 public key\n */\nexport class Ed25519PublicKey {\n    private data: Uint8Array\n\n    /**\n     * Create a new Ed25519PublicKey object\n     * @param value ed25519 public key as buffer or base-64 encoded string\n     */\n    constructor(value: PublicKeyInitData) {\n        if (typeof value === 'string') {\n            this.data = fromB64(value)\n        } else if (value instanceof Uint8Array) {\n            this.data = value\n        } else {\n            this.data = Uint8Array.from(value)\n        }\n\n        if (this.data.length !== PUBLIC_KEY_SIZE) {\n            throw new Error(\n                `Invalid public key input. Expected ${PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`\n            )\n        }\n    }\n\n    /**\n     * Checks if two Ed25519 public keys are equal\n     */\n    equals(publicKey: Ed25519PublicKey): boolean {\n        return bytesEqual(this.toBytes(), publicKey.toBytes())\n    }\n\n    /**\n     * Return the base-64 representation of the Ed25519 public key\n     */\n    toBase64(): string {\n        return toB64(this.toBytes())\n    }\n\n    /**\n     * Return the byte array representation of the Ed25519 public key\n     */\n    toBytes(): Uint8Array {\n        return this.data\n    }\n\n    /**\n     * Return the db3 address associated with this Ed25519 public key\n     */\n    toAddress(): string {\n        let tmp = new Uint8Array(PUBLIC_KEY_SIZE + 1)\n        tmp.set([SIGNATURE_SCHEME_TO_FLAG['ED25519']])\n        tmp.set(this.toBytes(), 1)\n        return '0x' + sha3.sha3_256(tmp).slice(0, 40)\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n//# sourceMappingURL=cryptoBrowser.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n//# sourceMappingURL=pbkdf2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","//\n// mnemonics.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { mnemonicToSeedSync as bip39MnemonicToSeedSync } from '@scure/bip39'\nimport { toHEX } from './crypto_utils'\n\n/**\n * Parse and validate a path that is compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.\n *\n * @param path path string (e.g. `m/44'/784'/0'/0'/0'`).\n */\nexport function isValidHardenedPath(path: string): boolean {\n    if (\n        !new RegExp(\"^m\\\\/44'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+'\\\\/[0-9]+'+$\").test(\n            path\n        )\n    ) {\n        return false\n    }\n    return true\n}\n\n/**\n * Parse and validate a path that is compliant to BIP-32 in form m/54'/784'/{account_index}'/{change_index}/{address_index}.\n * Note that the purpose for Secp256k1 is registered as 54, to differentiate from Ed25519 with purpose 44.\n *\n * @param path path string (e.g. `m/54'/784'/0'/0/0`).\n */\nexport function isValidBIP32Path(path: string): boolean {\n    if (\n        !new RegExp(\"^m\\\\/54'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+\\\\/[0-9]+$\").test(path)\n    ) {\n        return false\n    }\n    return true\n}\n\n/**\n * Uses KDF to derive 64 bytes of key data from mnemonic with empty password.\n *\n * @param mnemonics 12 words string split by spaces.\n */\nexport function mnemonicToSeed(mnemonics: string): Uint8Array {\n    return bip39MnemonicToSeedSync(mnemonics, '')\n}\n\n/**\n * Derive the seed in hex format from a 12-word mnemonic string.\n *\n * @param mnemonics 12 words string split by spaces.\n */\nexport function mnemonicToSeedHex(mnemonics: string): string {\n    return toHEX(mnemonicToSeed(mnemonics))\n}\n","//\n// ed25519_keypair.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport nacl from 'tweetnacl'\nimport type { ExportedKeypair, Keypair } from './keypair'\nimport { SignatureScheme, SIGNATURE_SCHEME_TO_FLAG } from './publickey'\nimport { Ed25519PublicKey } from './ed25519_publickey'\nimport { mnemonicToSeedHex, isValidHardenedPath } from './mnemonics'\nimport { derivePath, getPublicKey, toB64 } from './crypto_utils'\n\nexport const DEFAULT_ED25519_DERIVATION_PATH = \"m/44'/784'/0'/0'/0'\"\n\nconst ED25519_SIGNATURE_LEN = 64\nconst ED25519_PUBLIC_LEN = 32\nconst DB3_ED25519_SIGNATURE_LEN = ED25519_SIGNATURE_LEN + ED25519_PUBLIC_LEN + 1\n/**\n * Ed25519 Keypair data\n */\nexport interface Ed25519KeypairData {\n    publicKey: Uint8Array\n    secretKey: Uint8Array\n}\n\nexport class Ed25519Keypair implements Keypair {\n    keypair: Ed25519KeypairData | nacl.SignKeyPair\n    /**\n     * Create a new Ed25519 keypair instance.\n     * Generate random keypair if no {@link Ed25519Keypair} is provided.\n     *\n     * @param keypair Ed25519 keypair\n     */\n    constructor(keypair: Ed25519KeypairData) {\n        if (keypair) {\n            this.keypair = keypair\n        } else {\n            this.keypair = nacl.sign.keyPair()\n        }\n    }\n\n    /**\n     * Generate a new Ed25519 keypair instance.\n     *\n     */\n    static generate(): Ed25519Keypair {\n        return new Ed25519Keypair(nacl.sign.keyPair())\n    }\n    static fromSecretKey(secretKey: Uint8Array): Ed25519Keypair {\n        const secretKeyLength = secretKey.length\n        if (secretKeyLength !== 64) {\n            // Many users actually wanted to invoke fromSeed(seed: Uint8Array), especially when reading from keystore.\n            if (secretKeyLength === 32) {\n                throw new Error(\n                    'Wrong secretKey size. Expected 64 bytes, got 32. Similar function exists: fromSeed(seed: Uint8Array)'\n                )\n            }\n            throw new Error(\n                `Wrong secretKey size. Expected 64 bytes, got ${secretKeyLength}.`\n            )\n        }\n        const keypair = nacl.sign.keyPair.fromSecretKey(secretKey)\n        return new Ed25519Keypair(keypair)\n    }\n    /**\n     * Get the key scheme of the keypair ED25519\n     */\n    getKeyScheme(): SignatureScheme {\n        return 'ED25519'\n    }\n\n    /**\n     * Generate an Ed25519 keypair from a 32 byte seed.\n     *\n     * @param seed seed byte array\n     */\n    static fromSeed(seed: Uint8Array): Ed25519Keypair {\n        const seedLength = seed.length\n        if (seedLength != 32) {\n            throw new Error(\n                `Wrong seed size. Expected 32 bytes, got ${seedLength}.`\n            )\n        }\n        return new Ed25519Keypair(nacl.sign.keyPair.fromSeed(seed))\n    }\n\n    /**\n     * Return the signature for the provided data using Ed25519.\n     */\n    signData(data: Uint8Array): Uint8Array {\n        const signature = nacl.sign.detached(data, this.keypair.secretKey)\n        var buf = new Uint8Array(DB3_ED25519_SIGNATURE_LEN)\n        buf[0] = SIGNATURE_SCHEME_TO_FLAG['ED25519']\n        buf.set(signature, 1)\n        buf.set(this.keypair.publicKey, 1 + ED25519_SIGNATURE_LEN)\n        return buf\n    }\n\n    static deriveKeypair(mnemonics: string, path?: string): Ed25519Keypair {\n        if (path == null) {\n            path = DEFAULT_ED25519_DERIVATION_PATH\n        }\n        if (!isValidHardenedPath(path)) {\n            throw new Error('Invalid derivation path')\n        }\n        const { key } = derivePath(path, mnemonicToSeedHex(mnemonics))\n        const pubkey = getPublicKey(key, false)\n\n        // Ed25519 private key returned here has 32 bytes. NaCl expects 64 bytes where the last 32 bytes are the public key.\n        let fullPrivateKey = new Uint8Array(64)\n        fullPrivateKey.set(key)\n        fullPrivateKey.set(pubkey, 32)\n\n        return new Ed25519Keypair({\n            publicKey: pubkey,\n            secretKey: fullPrivateKey,\n        })\n    }\n\n    getPublicKey(): Ed25519PublicKey {\n        return new Ed25519PublicKey(this.keypair.publicKey)\n    }\n\n    export(): ExportedKeypair {\n        return {\n            schema: 'ED25519',\n            privateKey: toB64(this.keypair.secretKey),\n        }\n    }\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","//\n// secp256k1_publickey.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport sha3 from 'js-sha3'\nimport { fromB64, toB64 } from './crypto_utils'\nimport {\n    bytesEqual,\n    PublicKey,\n    PublicKeyInitData,\n    SIGNATURE_SCHEME_TO_FLAG,\n} from './publickey'\n\nconst SECP256K1_PUBLIC_KEY_SIZE = 33\n\n/**\n * A Secp256k1 public key\n */\nexport class Secp256k1PublicKey implements PublicKey {\n    private data: Uint8Array\n\n    /**\n     * Create a new Secp256k1PublicKey object\n     * @param value secp256k1 public key as buffer or base-64 encoded string\n     */\n    constructor(value: PublicKeyInitData) {\n        if (typeof value === 'string') {\n            this.data = fromB64(value)\n        } else if (value instanceof Uint8Array) {\n            this.data = value\n        } else {\n            this.data = Uint8Array.from(value)\n        }\n\n        if (this.data.length !== SECP256K1_PUBLIC_KEY_SIZE) {\n            throw new Error(\n                `Invalid public key input. Expected ${SECP256K1_PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`\n            )\n        }\n    }\n\n    /**\n     * Checks if two Secp256k1 public keys are equal\n     */\n    equals(publicKey: Secp256k1PublicKey): boolean {\n        return bytesEqual(this.toBytes(), publicKey.toBytes())\n    }\n\n    /**\n     * Return the base-64 representation of the Secp256k1 public key\n     */\n    toBase64(): string {\n        return toB64(this.toBytes())\n    }\n\n    /**\n     * Return the byte array representation of the Secp256k1 public key\n     */\n    toBytes(): Uint8Array {\n        return this.data\n    }\n\n    /**\n     * Return the base-64 representation of the Secp256k1 public key\n     */\n    toString(): string {\n        return this.toBase64()\n    }\n\n    /**\n     * Return the db3 address associated with this Secp256k1 public key\n     */\n    toAddress(): string {\n        let tmp = new Uint8Array(SECP256K1_PUBLIC_KEY_SIZE + 1)\n        tmp.set([SIGNATURE_SCHEME_TO_FLAG['Secp256k1']])\n        tmp.set(this.toBytes(), 1)\n        return '0x' + sha3.sha3_256(tmp).slice(0, 40)\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n//# sourceMappingURL=ripemd160.js.map","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport * as secp from '@noble/secp256k1';\nimport { base58check as base58checker } from '@scure/base';\nsecp.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha256, key, secp.utils.concatBytes(...msgs));\nconst base58check = base58checker(sha256);\nfunction bytesToNumber(bytes) {\n    return BigInt(`0x${bytesToHex(bytes)}`);\n}\nfunction numberToBytes(num) {\n    return hexToBytes(num.toString(16).padStart(64, '0'));\n}\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\nconst BITCOIN_VERSIONS = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET = 0x80000000;\nconst hash160 = (data) => ripemd160(sha256(data));\nconst fromU32 = (data) => createView(data).getUint32(0, false);\nconst toU32 = (n) => {\n    if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n        throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n    }\n    const buf = new Uint8Array(4);\n    createView(buf).setUint32(0, n, false);\n    return buf;\n};\nexport class HDKey {\n    constructor(opt) {\n        this.depth = 0;\n        this.index = 0;\n        this.chainCode = null;\n        this.parentFingerprint = 0;\n        if (!opt || typeof opt !== 'object') {\n            throw new Error('HDKey.constructor must not be called directly');\n        }\n        this.versions = opt.versions || BITCOIN_VERSIONS;\n        this.depth = opt.depth || 0;\n        this.chainCode = opt.chainCode;\n        this.index = opt.index || 0;\n        this.parentFingerprint = opt.parentFingerprint || 0;\n        if (!this.depth) {\n            if (this.parentFingerprint || this.index) {\n                throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n            }\n        }\n        if (opt.publicKey && opt.privateKey) {\n            throw new Error('HDKey: publicKey and privateKey at same time.');\n        }\n        if (opt.privateKey) {\n            if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n                throw new Error('Invalid private key');\n            }\n            this.privKey =\n                typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n            this.privKeyBytes = numberToBytes(this.privKey);\n            this.pubKey = secp.getPublicKey(opt.privateKey, true);\n        }\n        else if (opt.publicKey) {\n            this.pubKey = secp.Point.fromHex(opt.publicKey).toRawBytes(true);\n        }\n        else {\n            throw new Error('HDKey: no public or private key provided');\n        }\n        this.pubHash = hash160(this.pubKey);\n    }\n    get fingerprint() {\n        if (!this.pubHash) {\n            throw new Error('No publicKey set!');\n        }\n        return fromU32(this.pubHash);\n    }\n    get identifier() {\n        return this.pubHash;\n    }\n    get pubKeyHash() {\n        return this.pubHash;\n    }\n    get privateKey() {\n        return this.privKeyBytes || null;\n    }\n    get publicKey() {\n        return this.pubKey || null;\n    }\n    get privateExtendedKey() {\n        const priv = this.privateKey;\n        if (!priv) {\n            throw new Error('No private key');\n        }\n        return base58check.encode(this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv)));\n    }\n    get publicExtendedKey() {\n        if (!this.pubKey) {\n            throw new Error('No public key');\n        }\n        return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n    }\n    static fromMasterSeed(seed, versions = BITCOIN_VERSIONS) {\n        assertBytes(seed);\n        if (8 * seed.length < 128 || 8 * seed.length > 512) {\n            throw new Error(`HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`);\n        }\n        const I = hmac(sha512, MASTER_SECRET, seed);\n        return new HDKey({\n            versions,\n            chainCode: I.slice(32),\n            privateKey: I.slice(0, 32),\n        });\n    }\n    static fromExtendedKey(base58key, versions = BITCOIN_VERSIONS) {\n        const keyBuffer = base58check.decode(base58key);\n        const keyView = createView(keyBuffer);\n        const version = keyView.getUint32(0, false);\n        const opt = {\n            versions,\n            depth: keyBuffer[4],\n            parentFingerprint: keyView.getUint32(5, false),\n            index: keyView.getUint32(9, false),\n            chainCode: keyBuffer.slice(13, 45),\n        };\n        const key = keyBuffer.slice(45);\n        const isPriv = key[0] === 0;\n        if (version !== versions[isPriv ? 'private' : 'public']) {\n            throw new Error('Version mismatch');\n        }\n        if (isPriv) {\n            return new HDKey({ ...opt, privateKey: key.slice(1) });\n        }\n        else {\n            return new HDKey({ ...opt, publicKey: key });\n        }\n    }\n    static fromJSON(json) {\n        return HDKey.fromExtendedKey(json.xpriv);\n    }\n    derive(path) {\n        if (!/^[mM]'?/.test(path)) {\n            throw new Error('Path must start with \"m\" or \"M\"');\n        }\n        if (/^[mM]'?$/.test(path)) {\n            return this;\n        }\n        const parts = path.replace(/^[mM]'?\\//, '').split('/');\n        let child = this;\n        for (const c of parts) {\n            const m = /^(\\d+)('?)$/.exec(c);\n            if (!m || m.length !== 3) {\n                throw new Error(`Invalid child index: ${c}`);\n            }\n            let idx = +m[1];\n            if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n                throw new Error('Invalid index');\n            }\n            if (m[2] === \"'\") {\n                idx += HARDENED_OFFSET;\n            }\n            child = child.deriveChild(idx);\n        }\n        return child;\n    }\n    deriveChild(index) {\n        if (!this.pubKey || !this.chainCode) {\n            throw new Error('No publicKey or chainCode set');\n        }\n        let data = toU32(index);\n        if (index >= HARDENED_OFFSET) {\n            const priv = this.privateKey;\n            if (!priv) {\n                throw new Error('Could not derive hardened child key');\n            }\n            data = concatBytes(new Uint8Array([0]), priv, data);\n        }\n        else {\n            data = concatBytes(this.pubKey, data);\n        }\n        const I = hmac(sha512, this.chainCode, data);\n        const childTweak = bytesToNumber(I.slice(0, 32));\n        const chainCode = I.slice(32);\n        if (!secp.utils.isValidPrivateKey(childTweak)) {\n            throw new Error('Tweak bigger than curve order');\n        }\n        const opt = {\n            versions: this.versions,\n            chainCode,\n            depth: this.depth + 1,\n            parentFingerprint: this.fingerprint,\n            index,\n        };\n        try {\n            if (this.privateKey) {\n                const added = secp.utils.mod(this.privKey + childTweak, secp.CURVE.n);\n                if (!secp.utils.isValidPrivateKey(added)) {\n                    throw new Error('The tweak was out of range or the resulted private key is invalid');\n                }\n                opt.privateKey = added;\n            }\n            else {\n                const added = secp.Point.fromHex(this.pubKey).add(secp.Point.fromPrivateKey(childTweak));\n                if (added.equals(secp.Point.ZERO)) {\n                    throw new Error('The tweak was equal to negative P, which made the result key invalid');\n                }\n                opt.publicKey = added.toRawBytes(true);\n            }\n            return new HDKey(opt);\n        }\n        catch (err) {\n            return this.deriveChild(index + 1);\n        }\n    }\n    sign(hash) {\n        if (!this.privateKey) {\n            throw new Error('No privateKey set!');\n        }\n        assertBytes(hash, 32);\n        return secp.signSync(hash, this.privKey, {\n            canonical: true,\n            der: false,\n        });\n    }\n    verify(hash, signature) {\n        assertBytes(hash, 32);\n        assertBytes(signature, 64);\n        if (!this.publicKey) {\n            throw new Error('No publicKey set!');\n        }\n        let sig;\n        try {\n            sig = secp.Signature.fromCompact(signature);\n        }\n        catch (error) {\n            return false;\n        }\n        return secp.verify(sig, hash, this.publicKey);\n    }\n    wipePrivateData() {\n        this.privKey = undefined;\n        if (this.privKeyBytes) {\n            this.privKeyBytes.fill(0);\n            this.privKeyBytes = undefined;\n        }\n        return this;\n    }\n    toJSON() {\n        return {\n            xpriv: this.privateExtendedKey,\n            xpub: this.publicExtendedKey,\n        };\n    }\n    serialize(version, key) {\n        if (!this.chainCode) {\n            throw new Error('No chainCode set');\n        }\n        assertBytes(key, 33);\n        return concatBytes(toU32(version), new Uint8Array([this.depth]), toU32(this.parentFingerprint), toU32(this.index), this.chainCode, key);\n    }\n}\n//# sourceMappingURL=index.js.map","//\n// secp256k1_keypair.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport * as secp from '@noble/secp256k1'\nimport type { ExportedKeypair, Keypair } from './keypair'\nimport {\n    SIGNATURE_SCHEME_TO_FLAG,\n    PublicKey,\n    SignatureScheme,\n} from './publickey'\nimport { hmac } from '@noble/hashes/hmac'\nimport { sha256 } from '@noble/hashes/sha256'\nimport { Secp256k1PublicKey } from './secp256k1_publickey'\nimport { Signature } from '@noble/secp256k1'\nimport { isValidBIP32Path, mnemonicToSeed } from './mnemonics'\nimport { toB64 } from './crypto_utils'\nimport { HDKey } from '@scure/bip32'\n\nexport const DEFAULT_SECP256K1_DERIVATION_PATH = \"m/54'/784'/0'/0/0\"\nconst SECP256K1_SIGNATURE_LEN = 65\nconst SECP256K1_PUBLIC_LEN = 33\nconst DB3_SECP256K1_SIGNATURE_LEN =\n    SECP256K1_SIGNATURE_LEN + SECP256K1_PUBLIC_LEN + 1\n\nsecp.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n    const h = hmac.create(sha256, key)\n    msgs.forEach((msg) => h.update(msg))\n    return h.digest()\n}\n\n/**\n * Secp256k1 Keypair data\n */\nexport interface Secp256k1KeypairData {\n    publicKey: Uint8Array\n    secretKey: Uint8Array\n}\n\n/**\n * An Secp256k1 Keypair used for signing transactions.\n */\nexport class Secp256k1Keypair implements Keypair {\n    private keypair: Secp256k1KeypairData\n\n    /**\n     * Create a new keypair instance.\n     * Generate random keypair if no {@link Secp256k1Keypair} is provided.\n     *\n     * @param keypair secp256k1 keypair\n     */\n    constructor(keypair?: Secp256k1KeypairData) {\n        if (keypair) {\n            this.keypair = keypair\n        } else {\n            const secretKey: Uint8Array = secp.utils.randomPrivateKey()\n            const publicKey: Uint8Array = secp.getPublicKey(secretKey, true)\n            this.keypair = { publicKey, secretKey }\n        }\n    }\n\n    /**\n     * Get the key scheme of the keypair Secp256k1\n     */\n    getKeyScheme(): SignatureScheme {\n        return 'Secp256k1'\n    }\n\n    /**\n     * Generate a new random keypair\n     */\n    static generate(): Secp256k1Keypair {\n        const secretKey = secp.utils.randomPrivateKey()\n        const publicKey = secp.getPublicKey(secretKey, true)\n\n        return new Secp256k1Keypair({ publicKey, secretKey })\n    }\n\n    /**\n     * Create a keypair from a raw secret key byte array.\n     *\n     * This method should only be used to recreate a keypair from a previously\n     * generated secret key. Generating keypairs from a random seed should be done\n     * with the {@link Keypair.fromSeed} method.\n     *\n     * @throws error if the provided secret key is invalid and validation is not skipped.\n     *\n     * @param secretKey secret key byte array\n     * @param options: skip secret key validation\n     */\n\n    static fromSecretKey(secretKey: Uint8Array): Secp256k1Keypair {\n        const publicKey: Uint8Array = secp.getPublicKey(secretKey, true)\n        return new Secp256k1Keypair({ publicKey, secretKey })\n    }\n\n    /**\n     * Generate a keypair from a 32 byte seed.\n     *\n     * @param seed seed byte array\n     */\n    static fromSeed(seed: Uint8Array): Secp256k1Keypair {\n        let publicKey = secp.getPublicKey(seed, true)\n        return new Secp256k1Keypair({ publicKey, secretKey: seed })\n    }\n\n    /**\n     * The public key for this keypair\n     */\n    getPublicKey(): PublicKey {\n        return new Secp256k1PublicKey(this.keypair.publicKey)\n    }\n\n    /**\n     * Return the signature for the provided data.\n     */\n    signData(data: Uint8Array): Uint8Array {\n        const msgHash = sha256(data)\n        const [sig, rec_id] = secp.signSync(msgHash, this.keypair.secretKey, {\n            canonical: true,\n            recovered: true,\n        })\n        var buf = new Uint8Array(DB3_SECP256K1_SIGNATURE_LEN)\n        buf[0] = SIGNATURE_SCHEME_TO_FLAG['Secp256k1']\n        buf.set(Signature.fromDER(sig).toCompactRawBytes(), 1)\n        buf.set([rec_id], 65)\n        buf.set(this.keypair.publicKey, 66)\n        return buf\n    }\n\n    /**\n     * Derive Secp256k1 keypair from mnemonics and path. The mnemonics must be normalized\n     * and validated against the english wordlist.\n     *\n     * If path is none, it will default to m/54'/784'/0'/0/0, otherwise the path must\n     * be compliant to BIP-32 in form m/54'/784'/{account_index}'/{change_index}/{address_index}.\n     */\n    static deriveKeypair(mnemonics: string, path?: string): Secp256k1Keypair {\n        if (path == null) {\n            path = DEFAULT_SECP256K1_DERIVATION_PATH\n        }\n\n        if (!isValidBIP32Path(path)) {\n            throw new Error('Invalid derivation path')\n        }\n        const key = HDKey.fromMasterSeed(mnemonicToSeed(mnemonics)).derive(path)\n        if (key.publicKey == null || key.privateKey == null) {\n            throw new Error('Invalid key')\n        }\n        return new Secp256k1Keypair({\n            publicKey: key.publicKey,\n            secretKey: key.privateKey,\n        })\n    }\n\n    export(): ExportedKeypair {\n        return {\n            schema: 'Secp256k1',\n            privateKey: toB64(this.keypair.secretKey),\n        }\n    }\n}\n","//\n// db3_browser_wallet.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport type { Wallet, WalletType } from './wallet'\nimport { Ed25519Keypair } from '../crypto/ed25519_keypair'\nimport { Secp256k1Keypair } from '../crypto/secp256k1_keypair'\nimport { fromB64 } from '../crypto/crypto_utils'\n\nconst WALLET_KEY = '_db3_wallet_key_'\nconst WALLET_ADDRESS = '_db3_wallet_ADDR_'\nexport class DB3BrowserWallet implements Wallet<Uint8Array, Uint8Array> {\n    keypair: Ed25519Keypair | Secp256k1Keypair\n    readonly walletType: WalletType\n    constructor(\n        keypair: Ed25519Keypair | Secp256k1Keypair,\n        walletType: WalletType\n    ) {\n        this.keypair = keypair\n        this.walletType = walletType\n    }\n\n    sign(message: Uint8Array): Uint8Array {\n        return this.keypair.signData(message)\n    }\n\n    getAddress(): string {\n        return this.keypair.getPublicKey().toAddress()\n    }\n\n    static hasKey(): boolean {\n        const key = JSON.parse(localStorage.getItem(WALLET_KEY) ?? '{}')\n        if (!key.hasOwnProperty('schema')) {\n            return false\n        }\n        return true\n    }\n    getType(): WalletType {\n        return this.walletType\n    }\n\n    static recover(): DB3BrowserWallet {\n        const key = JSON.parse(localStorage.getItem(WALLET_KEY) ?? '{}')\n        if (!key.hasOwnProperty('schema')) {\n            throw new Error('no key in browser')\n        }\n        if (key['schema'] == 'Secp256k1') {\n            const data = fromB64(key['privateKey'])\n            return new DB3BrowserWallet(\n                Secp256k1Keypair.fromSecretKey(data),\n                'DB3_SECP256K1'\n            )\n        }\n        if (key['schema'] == 'ED25519') {\n            const data = fromB64(key['privateKey'])\n            return new DB3BrowserWallet(\n                Ed25519Keypair.fromSecretKey(data),\n                'DB3_ED25519'\n            )\n        }\n        throw new Error('no key in browser')\n    }\n\n    static generate(walletType: WalletType): DB3BrowserWallet {\n        if (walletType === 'DB3_ED25519') {\n            const keypair = Ed25519Keypair.generate()\n            const wallet = new DB3BrowserWallet(keypair, walletType)\n            localStorage.setItem(WALLET_KEY, JSON.stringify(keypair.export()))\n            localStorage.setItem(WALLET_ADDRESS, wallet.getAddress())\n            return wallet\n        }\n        if (walletType === 'DB3_SECP256K1') {\n            const keypair = Secp256k1Keypair.generate()\n            const wallet = new DB3BrowserWallet(keypair, walletType)\n            localStorage.setItem(WALLET_KEY, JSON.stringify(keypair.export()))\n            localStorage.setItem(WALLET_ADDRESS, wallet.getAddress())\n            return wallet\n        }\n        throw new Error('wallet type is not supported')\n    }\n\n    static createNew(\n        mnemonic: string,\n        walletType: WalletType\n    ): DB3BrowserWallet {\n        if (walletType === 'DB3_ED25519') {\n            const keypair = Ed25519Keypair.deriveKeypair(mnemonic)\n            localStorage.setItem(WALLET_KEY, JSON.stringify(keypair.export()))\n            return new DB3BrowserWallet(keypair, walletType)\n        }\n        if (walletType === 'DB3_SECP256K1') {\n            const keypair = Secp256k1Keypair.deriveKeypair(mnemonic)\n            localStorage.setItem(WALLET_KEY, JSON.stringify(keypair.export()))\n            return new DB3BrowserWallet(keypair, walletType)\n        }\n        throw new Error('wallet type is not supported')\n    }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\"use strict\";\n/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst nodeCrypto = require(\"crypto\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexports.CURVE = CURVE;\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nexports.Signature = Signature;\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return exports.utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = exports.utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexports.signSync = signSync;\nconst vopts = { strict: true };\nfunction verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = exports.utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = exports.utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await exports.utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(exports.utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexports.utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => exports.utils.hashToPrivateKey(exports.utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await exports.utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return exports.utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(exports.utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.schnorr = exports.Signature = exports.Point = exports.CURVE = exports.utils = exports.getSharedSecret = exports.recoverPublicKey = exports.verify = exports.signSync = exports.sign = exports.getPublicKey = void 0;\nconst hmac_1 = require(\"@noble/hashes/hmac\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst secp256k1_1 = require(\"@noble/secp256k1\");\nvar secp256k1_2 = require(\"@noble/secp256k1\");\nObject.defineProperty(exports, \"getPublicKey\", { enumerable: true, get: function () { return secp256k1_2.getPublicKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return secp256k1_2.sign; } });\nObject.defineProperty(exports, \"signSync\", { enumerable: true, get: function () { return secp256k1_2.signSync; } });\nObject.defineProperty(exports, \"verify\", { enumerable: true, get: function () { return secp256k1_2.verify; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return secp256k1_2.recoverPublicKey; } });\nObject.defineProperty(exports, \"getSharedSecret\", { enumerable: true, get: function () { return secp256k1_2.getSharedSecret; } });\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return secp256k1_2.utils; } });\nObject.defineProperty(exports, \"CURVE\", { enumerable: true, get: function () { return secp256k1_2.CURVE; } });\nObject.defineProperty(exports, \"Point\", { enumerable: true, get: function () { return secp256k1_2.Point; } });\nObject.defineProperty(exports, \"Signature\", { enumerable: true, get: function () { return secp256k1_2.Signature; } });\nObject.defineProperty(exports, \"schnorr\", { enumerable: true, get: function () { return secp256k1_2.schnorr; } });\n// Enable sync API for noble-secp256k1\nsecp256k1_1.utils.hmacSha256Sync = (key, ...messages) => {\n    const h = hmac_1.hmac.create(sha256_1.sha256, key);\n    messages.forEach(msg => h.update(msg));\n    return h.digest();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_WITHDRAWALS_PER_PAYLOAD = exports.RLP_EMPTY_STRING = exports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.SECP256K1_ORDER_DIV_2 = exports.SECP256K1_ORDER = exports.MAX_INTEGER_BIGINT = exports.MAX_INTEGER = exports.MAX_UINT64 = void 0;\nconst buffer_1 = require(\"buffer\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\n/**\n * 2^64-1\n */\nexports.MAX_UINT64 = BigInt('0xffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexports.MAX_INTEGER = BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexports.MAX_INTEGER_BIGINT = BigInt('115792089237316195423570985008687907853269984665640564039457584007913129639935');\nexports.SECP256K1_ORDER = secp256k1_1.CURVE.n;\nexports.SECP256K1_ORDER_DIV_2 = secp256k1_1.CURVE.n / BigInt(2);\n/**\n * 2^256\n */\nexports.TWO_POW256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = buffer_1.Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = buffer_1.Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = buffer_1.Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n/**\n *  RLP encoded empty string\n */\nexports.RLP_EMPTY_STRING = buffer_1.Buffer.from([0x80]);\nexports.MAX_WITHDRAWALS_PER_PAYLOAD = 16;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GWEI_TO_WEI = void 0;\n/** Easy conversion from Gwei to wei */\nexports.GWEI_TO_WEI = BigInt(1000000000);\n//# sourceMappingURL=units.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RLP = exports.utils = exports.decode = exports.encode = void 0;\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        const output = [];\n        let outputLength = 0;\n        for (let i = 0; i < input.length; i++) {\n            const encoded = encode(input[i]);\n            output.push(encoded);\n            outputLength += encoded.length;\n        }\n        return concatBytes(encodeLength(outputLength, 192), ...output);\n    }\n    const inputBuf = toBytes(input);\n    if (inputBuf.length === 1 && inputBuf[0] < 128) {\n        return inputBuf;\n    }\n    return concatBytes(encodeLength(inputBuf.length, 128), inputBuf);\n}\nexports.encode = encode;\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds');\n    }\n    return input.slice(start, end);\n}\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseHexByte(bytesToHex(v));\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Uint8Array.from([len + offset]);\n    }\n    const hexLength = numberToHex(len);\n    const lLength = hexLength.length / 2;\n    const firstByte = numberToHex(offset + 55 + lLength);\n    return Uint8Array.from(hexToBytes(firstByte + hexLength));\n}\nfunction decode(input, stream = false) {\n    if (typeof input === 'undefined' || input === null || input.length === 0) {\n        return Uint8Array.from([]);\n    }\n    const inputBytes = toBytes(input);\n    const decoded = _decode(inputBytes);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid RLP: remainder must be zero');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Uint8Array.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed');\n        }\n        return {\n            data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error('invalid RLP: encoded list too short');\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid RLP: total length is larger than the data');\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Caching slows it down 2-3x\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction utf8ToBytes(utf) {\n    return new TextEncoder().encode(utf);\n}\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    const hex = integer.toString(16);\n    return hex.length % 2 ? `0${hex}` : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? `0${a}` : a;\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.length >= 2 && str[0] === '0' && str[1] === 'x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform anything into a Uint8Array */\nfunction toBytes(v) {\n    if (v instanceof Uint8Array) {\n        return v;\n    }\n    if (typeof v === 'string') {\n        if (isHexPrefixed(v)) {\n            return hexToBytes(padToEven(stripHexPrefix(v)));\n        }\n        return utf8ToBytes(v);\n    }\n    if (typeof v === 'number' || typeof v === 'bigint') {\n        if (!v) {\n            return Uint8Array.from([]);\n        }\n        return hexToBytes(numberToHex(v));\n    }\n    if (v === null || v === undefined) {\n        return Uint8Array.from([]);\n    }\n    throw new Error('toBytes: received unsupported type ' + typeof v);\n}\nexports.utils = {\n    bytesToHex,\n    concatBytes,\n    hexToBytes,\n    utf8ToBytes,\n};\nexports.RLP = { encode, decode };\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js_1.default.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBH(h, l, s) : _u64_js_1.default.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? _u64_js_1.default.rotlBL(h, l, s) : _u64_js_1.default.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        _assert_js_1.default.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        _assert_js_1.default.exists(this, false);\n        _assert_js_1.default.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        _assert_js_1.default.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        _assert_js_1.default.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n","\"use strict\";\n/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHexString = exports.getKeys = exports.fromAscii = exports.fromUtf8 = exports.toAscii = exports.arrayContainsArray = exports.getBinarySize = exports.padToEven = exports.stripHexPrefix = exports.isHexPrefixed = void 0;\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nfunction isHexPrefixed(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`);\n    }\n    return str[0] === '0' && str[1] === 'x';\n}\nexports.isHexPrefixed = isHexPrefixed;\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nconst stripHexPrefix = (str) => {\n    if (typeof str !== 'string')\n        throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`);\n    return isHexPrefixed(str) ? str.slice(2) : str;\n};\nexports.stripHexPrefix = stripHexPrefix;\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nfunction padToEven(value) {\n    let a = value;\n    if (typeof a !== 'string') {\n        throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`);\n    }\n    if (a.length % 2)\n        a = `0${a}`;\n    return a;\n}\nexports.padToEven = padToEven;\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nfunction getBinarySize(str) {\n    if (typeof str !== 'string') {\n        throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`);\n    }\n    return Buffer.byteLength(str, 'utf8');\n}\nexports.getBinarySize = getBinarySize;\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nfunction arrayContainsArray(superset, subset, some) {\n    if (Array.isArray(superset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`);\n    }\n    if (Array.isArray(subset) !== true) {\n        throw new Error(`[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`);\n    }\n    return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0);\n}\nexports.arrayContainsArray = arrayContainsArray;\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nfunction toAscii(hex) {\n    let str = '';\n    let i = 0;\n    const l = hex.length;\n    if (hex.substring(0, 2) === '0x')\n        i = 2;\n    for (; i < l; i += 2) {\n        const code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n}\nexports.toAscii = toAscii;\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n    const str = Buffer.from(stringValue, 'utf8');\n    return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`;\n}\nexports.fromUtf8 = fromUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nfunction fromAscii(stringValue) {\n    let hex = '';\n    for (let i = 0; i < stringValue.length; i++) {\n        const code = stringValue.charCodeAt(i);\n        const n = code.toString(16);\n        hex += n.length < 2 ? `0${n}` : n;\n    }\n    return `0x${hex}`;\n}\nexports.fromAscii = fromAscii;\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n    if (!Array.isArray(params)) {\n        throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`);\n    }\n    if (typeof key !== 'string') {\n        throw new Error(`[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`);\n    }\n    const result = [];\n    for (let i = 0; i < params.length; i++) {\n        let value = params[i][key];\n        if (allowEmpty === true && !value) {\n            value = '';\n        }\n        else if (typeof value !== 'string') {\n            throw new Error(`invalid abi - expected type 'string', received ${typeof value}`);\n        }\n        result.push(value);\n    }\n    return result;\n}\nexports.getKeys = getKeys;\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/))\n        return false;\n    if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length)\n        return false;\n    return true;\n}\nexports.isHexString = isHexString;\n//# sourceMappingURL=internal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nconst internal_1 = require(\"./internal\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nconst assertIsHexString = function (input) {\n    if (!(0, internal_1.isHexString)(input)) {\n        const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nconst assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        const msg = `This method only supports Buffer but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nconst assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        const msg = `This method only supports number arrays but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nconst assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        const msg = `This method only supports strings but input was: ${input}`;\n        throw new Error(msg);\n    }\n};\nexports.assertIsString = assertIsString;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intToUnpaddedBuffer = exports.bigIntToUnpaddedBuffer = exports.bigIntToHex = exports.bufArrToArr = exports.arrToBufArr = exports.validateNoLeadingZeroes = exports.baToJSON = exports.toUtf8 = exports.short = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToInt = exports.bigIntToBuffer = exports.bufferToBigInt = exports.bufferToHex = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = exports.intToBuffer = exports.intToHex = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst internal_1 = require(\"./internal\");\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nconst intToHex = function (i) {\n    if (!Number.isSafeInteger(i) || i < 0) {\n        throw new Error(`Received an invalid integer type: ${i}`);\n    }\n    return `0x${i.toString(16)}`;\n};\nexports.intToHex = intToHex;\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nconst intToBuffer = function (i) {\n    const hex = (0, exports.intToHex)(i);\n    return Buffer.from((0, internal_1.padToEven)(hex.slice(2)), 'hex');\n};\nexports.intToBuffer = intToBuffer;\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nconst zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\nexports.zeros = zeros;\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg, length, right) {\n    const buf = (0, exports.zeros)(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nconst setLengthLeft = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, false);\n};\nexports.setLengthLeft = setLengthLeft;\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nconst setLengthRight = function (msg, length) {\n    (0, helpers_1.assertIsBuffer)(msg);\n    return setLength(msg, length, true);\n};\nexports.setLengthRight = setLengthRight;\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a) {\n    let first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nconst unpadBuffer = function (a) {\n    (0, helpers_1.assertIsBuffer)(a);\n    return stripZeros(a);\n};\nexports.unpadBuffer = unpadBuffer;\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nconst unpadArray = function (a) {\n    (0, helpers_1.assertIsArray)(a);\n    return stripZeros(a);\n};\nexports.unpadArray = unpadArray;\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nconst unpadHexString = function (a) {\n    (0, helpers_1.assertIsHexString)(a);\n    a = (0, internal_1.stripHexPrefix)(a);\n    return ('0x' + stripZeros(a));\n};\nexports.unpadHexString = unpadHexString;\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nconst toBuffer = function (v) {\n    if (v === null || v === undefined) {\n        return Buffer.allocUnsafe(0);\n    }\n    if (Buffer.isBuffer(v)) {\n        return Buffer.from(v);\n    }\n    if (Array.isArray(v) || v instanceof Uint8Array) {\n        return Buffer.from(v);\n    }\n    if (typeof v === 'string') {\n        if (!(0, internal_1.isHexString)(v)) {\n            throw new Error(`Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`);\n        }\n        return Buffer.from((0, internal_1.padToEven)((0, internal_1.stripHexPrefix)(v)), 'hex');\n    }\n    if (typeof v === 'number') {\n        return (0, exports.intToBuffer)(v);\n    }\n    if (typeof v === 'bigint') {\n        if (v < BigInt(0)) {\n            throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`);\n        }\n        let n = v.toString(16);\n        if (n.length % 2)\n            n = '0' + n;\n        return Buffer.from(n, 'hex');\n    }\n    if (v.toArray) {\n        // converts a BN to a Buffer\n        return Buffer.from(v.toArray());\n    }\n    if (v.toBuffer) {\n        return Buffer.from(v.toBuffer());\n    }\n    throw new Error('invalid type');\n};\nexports.toBuffer = toBuffer;\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nconst bufferToHex = function (buf) {\n    buf = (0, exports.toBuffer)(buf);\n    return '0x' + buf.toString('hex');\n};\nexports.bufferToHex = bufferToHex;\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nfunction bufferToBigInt(buf) {\n    const hex = (0, exports.bufferToHex)(buf);\n    if (hex === '0x') {\n        return BigInt(0);\n    }\n    return BigInt(hex);\n}\nexports.bufferToBigInt = bufferToBigInt;\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nfunction bigIntToBuffer(num) {\n    return (0, exports.toBuffer)('0x' + num.toString(16));\n}\nexports.bigIntToBuffer = bigIntToBuffer;\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nconst bufferToInt = function (buf) {\n    const res = Number(bufferToBigInt(buf));\n    if (!Number.isSafeInteger(res))\n        throw new Error('Number exceeds 53 bits');\n    return res;\n};\nexports.bufferToInt = bufferToInt;\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nconst fromSigned = function (num) {\n    return BigInt.asIntN(256, bufferToBigInt(num));\n};\nexports.fromSigned = fromSigned;\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nconst toUnsigned = function (num) {\n    return bigIntToBuffer(BigInt.asUintN(256, num));\n};\nexports.toUnsigned = toUnsigned;\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nconst addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return (0, internal_1.isHexPrefixed)(str) ? str : '0x' + str;\n};\nexports.addHexPrefix = addHexPrefix;\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nfunction short(buffer, maxLength = 50) {\n    const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer;\n    if (bufferStr.length <= maxLength) {\n        return bufferStr;\n    }\n    return bufferStr.slice(0, maxLength) + '…';\n}\nexports.short = short;\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nconst toUtf8 = function (hex) {\n    const zerosRegexp = /^(00)+|(00)+$/g;\n    hex = (0, internal_1.stripHexPrefix)(hex);\n    if (hex.length % 2 !== 0) {\n        throw new Error('Invalid non-even hex string input for toUtf8() provided');\n    }\n    const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex');\n    return bufferVal.toString('utf8');\n};\nexports.toUtf8 = toUtf8;\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nconst baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return `0x${ba.toString('hex')}`;\n    }\n    else if (ba instanceof Array) {\n        const array = [];\n        for (let i = 0; i < ba.length; i++) {\n            array.push((0, exports.baToJSON)(ba[i]));\n        }\n        return array;\n    }\n};\nexports.baToJSON = baToJSON;\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nconst validateNoLeadingZeroes = function (values) {\n    for (const [k, v] of Object.entries(values)) {\n        if (v !== undefined && v.length > 0 && v[0] === 0) {\n            throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`);\n        }\n    }\n};\nexports.validateNoLeadingZeroes = validateNoLeadingZeroes;\nfunction arrToBufArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Buffer.from(arr);\n    }\n    return arr.map((a) => arrToBufArr(a));\n}\nexports.arrToBufArr = arrToBufArr;\nfunction bufArrToArr(arr) {\n    if (!Array.isArray(arr)) {\n        return Uint8Array.from(arr ?? []);\n    }\n    return arr.map((a) => bufArrToArr(a));\n}\nexports.bufArrToArr = bufArrToArr;\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nconst bigIntToHex = (num) => {\n    return '0x' + num.toString(16);\n};\nexports.bigIntToHex = bigIntToHex;\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bigIntToUnpaddedBuffer(value) {\n    return (0, exports.unpadBuffer)(bigIntToBuffer(value));\n}\nexports.bigIntToUnpaddedBuffer = bigIntToUnpaddedBuffer;\nfunction intToUnpaddedBuffer(value) {\n    return (0, exports.unpadBuffer)((0, exports.intToBuffer)(value));\n}\nexports.intToUnpaddedBuffer = intToUnpaddedBuffer;\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.accountBodyToRLP = exports.accountBodyToSlim = exports.accountBodyFromSlim = exports.isZeroAddress = exports.zeroAddress = exports.importPublic = exports.privateToAddress = exports.privateToPublic = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isValidAddress = exports.Account = void 0;\nconst rlp_1 = require(\"@ethereumjs/rlp\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nconst utils_1 = require(\"ethereum-cryptography/utils\");\nconst bytes_1 = require(\"./bytes\");\nconst constants_1 = require(\"./constants\");\nconst helpers_1 = require(\"./helpers\");\nconst internal_1 = require(\"./internal\");\nconst _0n = BigInt(0);\nclass Account {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating an Account from varying data types.\n     */\n    constructor(nonce = _0n, balance = _0n, storageRoot = constants_1.KECCAK256_RLP, codeHash = constants_1.KECCAK256_NULL) {\n        this.nonce = nonce;\n        this.balance = balance;\n        this.storageRoot = storageRoot;\n        this.codeHash = codeHash;\n        this._validate();\n    }\n    static fromAccountData(accountData) {\n        const { nonce, balance, storageRoot, codeHash } = accountData;\n        return new Account(nonce !== undefined ? (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(nonce)) : undefined, balance !== undefined ? (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(balance)) : undefined, storageRoot !== undefined ? (0, bytes_1.toBuffer)(storageRoot) : undefined, codeHash !== undefined ? (0, bytes_1.toBuffer)(codeHash) : undefined);\n    }\n    static fromRlpSerializedAccount(serialized) {\n        const values = (0, bytes_1.arrToBufArr)(rlp_1.RLP.decode(Uint8Array.from(serialized)));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized account input. Must be array');\n        }\n        return this.fromValuesArray(values);\n    }\n    static fromValuesArray(values) {\n        const [nonce, balance, storageRoot, codeHash] = values;\n        return new Account((0, bytes_1.bufferToBigInt)(nonce), (0, bytes_1.bufferToBigInt)(balance), storageRoot, codeHash);\n    }\n    _validate() {\n        if (this.nonce < _0n) {\n            throw new Error('nonce must be greater than zero');\n        }\n        if (this.balance < _0n) {\n            throw new Error('balance must be greater than zero');\n        }\n        if (this.storageRoot.length !== 32) {\n            throw new Error('storageRoot must have a length of 32');\n        }\n        if (this.codeHash.length !== 32) {\n            throw new Error('codeHash must have a length of 32');\n        }\n    }\n    /**\n     * Returns a Buffer Array of the raw Buffers for the account, in order.\n     */\n    raw() {\n        return [\n            (0, bytes_1.bigIntToUnpaddedBuffer)(this.nonce),\n            (0, bytes_1.bigIntToUnpaddedBuffer)(this.balance),\n            this.storageRoot,\n            this.codeHash,\n        ];\n    }\n    /**\n     * Returns the RLP serialization of the account as a `Buffer`.\n     */\n    serialize() {\n        return Buffer.from(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)(this.raw())));\n    }\n    /**\n     * Returns a `Boolean` determining if the account is a contract.\n     */\n    isContract() {\n        return !this.codeHash.equals(constants_1.KECCAK256_NULL);\n    }\n    /**\n     * Returns a `Boolean` determining if the account is empty complying to the definition of\n     * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n     * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n     */\n    isEmpty() {\n        return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(constants_1.KECCAK256_NULL);\n    }\n}\nexports.Account = Account;\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nconst isValidAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\nexports.isValidAddress = isValidAddress;\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nconst toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    (0, helpers_1.assertIsHexString)(hexAddress);\n    const address = (0, internal_1.stripHexPrefix)(hexAddress).toLowerCase();\n    let prefix = '';\n    if (eip1191ChainId !== undefined) {\n        const chainId = (0, bytes_1.bufferToBigInt)((0, bytes_1.toBuffer)(eip1191ChainId));\n        prefix = chainId.toString() + '0x';\n    }\n    const buf = Buffer.from(prefix + address, 'utf8');\n    const hash = (0, utils_1.bytesToHex)((0, keccak_1.keccak256)(buf));\n    let ret = '0x';\n    for (let i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\nexports.toChecksumAddress = toChecksumAddress;\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nconst isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return (0, exports.isValidAddress)(hexAddress) && (0, exports.toChecksumAddress)(hexAddress, eip1191ChainId) === hexAddress;\n};\nexports.isValidChecksumAddress = isValidChecksumAddress;\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nconst generateAddress = function (from, nonce) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(nonce);\n    if ((0, bytes_1.bufferToBigInt)(nonce) === BigInt(0)) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return Buffer.from((0, keccak_1.keccak256)(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)([from, null])))).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return Buffer.from((0, keccak_1.keccak256)(rlp_1.RLP.encode((0, bytes_1.bufArrToArr)([from, nonce])))).slice(-20);\n};\nexports.generateAddress = generateAddress;\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nconst generateAddress2 = function (from, salt, initCode) {\n    (0, helpers_1.assertIsBuffer)(from);\n    (0, helpers_1.assertIsBuffer)(salt);\n    (0, helpers_1.assertIsBuffer)(initCode);\n    if (from.length !== 20) {\n        throw new Error('Expected from to be of length 20');\n    }\n    if (salt.length !== 32) {\n        throw new Error('Expected salt to be of length 32');\n    }\n    const address = (0, keccak_1.keccak256)(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, (0, keccak_1.keccak256)(initCode)]));\n    return (0, bytes_1.toBuffer)(address).slice(-20);\n};\nexports.generateAddress2 = generateAddress2;\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nconst isValidPrivate = function (privateKey) {\n    return secp256k1_1.utils.isValidPrivateKey(privateKey);\n};\nexports.isValidPrivate = isValidPrivate;\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nconst isValidPublic = function (publicKey, sanitize = false) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        // Automatically checks whether point is on curve\n        try {\n            secp256k1_1.Point.fromHex(Buffer.concat([Buffer.from([4]), publicKey]));\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    if (!sanitize) {\n        return false;\n    }\n    try {\n        secp256k1_1.Point.fromHex(publicKey);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n};\nexports.isValidPublic = isValidPublic;\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nconst pubToAddress = function (pubKey, sanitize = false) {\n    (0, helpers_1.assertIsBuffer)(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from(secp256k1_1.Point.fromHex(pubKey).toRawBytes(false).slice(1));\n    }\n    if (pubKey.length !== 64) {\n        throw new Error('Expected pubKey to be of length 64');\n    }\n    // Only take the lower 160bits of the hash\n    return Buffer.from((0, keccak_1.keccak256)(pubKey)).slice(-20);\n};\nexports.pubToAddress = pubToAddress;\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nconst privateToPublic = function (privateKey) {\n    (0, helpers_1.assertIsBuffer)(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from(secp256k1_1.Point.fromPrivateKey(privateKey).toRawBytes(false).slice(1));\n};\nexports.privateToPublic = privateToPublic;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nconst privateToAddress = function (privateKey) {\n    return (0, exports.publicToAddress)((0, exports.privateToPublic)(privateKey));\n};\nexports.privateToAddress = privateToAddress;\n/**\n * Converts a public key to the Ethereum format.\n */\nconst importPublic = function (publicKey) {\n    (0, helpers_1.assertIsBuffer)(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from(secp256k1_1.Point.fromHex(publicKey).toRawBytes(false).slice(1));\n    }\n    return publicKey;\n};\nexports.importPublic = importPublic;\n/**\n * Returns the zero address.\n */\nconst zeroAddress = function () {\n    const addressLength = 20;\n    const addr = (0, bytes_1.zeros)(addressLength);\n    return (0, bytes_1.bufferToHex)(addr);\n};\nexports.zeroAddress = zeroAddress;\n/**\n * Checks if a given address is the zero address.\n */\nconst isZeroAddress = function (hexAddress) {\n    try {\n        (0, helpers_1.assertIsString)(hexAddress);\n    }\n    catch (e) {\n        return false;\n    }\n    const zeroAddr = (0, exports.zeroAddress)();\n    return zeroAddr === hexAddress;\n};\nexports.isZeroAddress = isZeroAddress;\nfunction accountBodyFromSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        (0, bytes_1.arrToBufArr)(storageRoot).length === 0 ? constants_1.KECCAK256_RLP : storageRoot,\n        (0, bytes_1.arrToBufArr)(codeHash).length === 0 ? constants_1.KECCAK256_NULL : codeHash,\n    ];\n}\nexports.accountBodyFromSlim = accountBodyFromSlim;\nconst emptyUint8Arr = new Uint8Array(0);\nfunction accountBodyToSlim(body) {\n    const [nonce, balance, storageRoot, codeHash] = body;\n    return [\n        nonce,\n        balance,\n        (0, bytes_1.arrToBufArr)(storageRoot).equals(constants_1.KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n        (0, bytes_1.arrToBufArr)(codeHash).equals(constants_1.KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n    ];\n}\nexports.accountBodyToSlim = accountBodyToSlim;\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nfunction accountBodyToRLP(body, couldBeSlim = true) {\n    const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body;\n    return (0, bytes_1.arrToBufArr)(rlp_1.RLP.encode(accountBody));\n}\nexports.accountBodyToRLP = accountBodyToRLP;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst account_1 = require(\"./account\");\nconst bytes_1 = require(\"./bytes\");\n/**\n * Handling and generating Ethereum addresses\n */\nclass Address {\n    constructor(buf) {\n        if (buf.length !== 20) {\n            throw new Error('Invalid address length');\n        }\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    static zero() {\n        return new Address((0, bytes_1.zeros)(20));\n    }\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    static fromString(str) {\n        if (!(0, account_1.isValidAddress)(str)) {\n            throw new Error('Invalid address');\n        }\n        return new Address((0, bytes_1.toBuffer)(str));\n    }\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    static fromPublicKey(pubKey) {\n        if (!Buffer.isBuffer(pubKey)) {\n            throw new Error('Public key should be Buffer');\n        }\n        const buf = (0, account_1.pubToAddress)(pubKey);\n        return new Address(buf);\n    }\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    static fromPrivateKey(privateKey) {\n        if (!Buffer.isBuffer(privateKey)) {\n            throw new Error('Private key should be Buffer');\n        }\n        const buf = (0, account_1.privateToAddress)(privateKey);\n        return new Address(buf);\n    }\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    static generate(from, nonce) {\n        if (typeof nonce !== 'bigint') {\n            throw new Error('Expected nonce to be a bigint');\n        }\n        return new Address((0, account_1.generateAddress)(from.buf, (0, bytes_1.bigIntToBuffer)(nonce)));\n    }\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    static generate2(from, salt, initCode) {\n        if (!Buffer.isBuffer(salt)) {\n            throw new Error('Expected salt to be a Buffer');\n        }\n        if (!Buffer.isBuffer(initCode)) {\n            throw new Error('Expected initCode to be a Buffer');\n        }\n        return new Address((0, account_1.generateAddress2)(from.buf, salt, initCode));\n    }\n    /**\n     * Is address equal to another.\n     */\n    equals(address) {\n        return this.buf.equals(address.buf);\n    }\n    /**\n     * Is address zero.\n     */\n    isZero() {\n        return this.equals(Address.zero());\n    }\n    /**\n     * True if address is in the address range defined\n     * by EIP-1352\n     */\n    isPrecompileOrSystemAddress() {\n        const address = (0, bytes_1.bufferToBigInt)(this.buf);\n        const rangeMin = BigInt(0);\n        const rangeMax = BigInt('0xffff');\n        return address >= rangeMin && address <= rangeMax;\n    }\n    /**\n     * Returns hex encoding of address.\n     */\n    toString() {\n        return '0x' + this.buf.toString('hex');\n    }\n    /**\n     * Returns Buffer representation of address.\n     */\n    toBuffer() {\n        return Buffer.from(this.buf);\n    }\n}\nexports.Address = Address;\n//# sourceMappingURL=address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toType = exports.TypeOutput = void 0;\nconst bytes_1 = require(\"./bytes\");\nconst internal_1 = require(\"./internal\");\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BigInt\"] = 1] = \"BigInt\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`);\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    const output = (0, bytes_1.toBuffer)(input);\n    switch (outputType) {\n        case TypeOutput.Buffer:\n            return output;\n        case TypeOutput.BigInt:\n            return (0, bytes_1.bufferToBigInt)(output);\n        case TypeOutput.Number: {\n            const bigInt = (0, bytes_1.bufferToBigInt)(output);\n            if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n                throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n            }\n            return Number(bigInt);\n        }\n        case TypeOutput.PrefixedHexString:\n            return (0, bytes_1.bufferToHex)(output);\n        default:\n            throw new Error('unknown outputType');\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Withdrawal = void 0;\nconst address_1 = require(\"./address\");\nconst bytes_1 = require(\"./bytes\");\nconst types_1 = require(\"./types\");\n/**\n * Representation of EIP-4895 withdrawal data\n */\nclass Withdrawal {\n    /**\n     * This constructor assigns and validates the values.\n     * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n     * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n     */\n    constructor(index, validatorIndex, address, \n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    amount) {\n        this.index = index;\n        this.validatorIndex = validatorIndex;\n        this.address = address;\n        this.amount = amount;\n    }\n    static fromWithdrawalData(withdrawalData) {\n        const { index: indexData, validatorIndex: validatorIndexData, address: addressData, amount: amountData, } = withdrawalData;\n        const index = (0, types_1.toType)(indexData, types_1.TypeOutput.BigInt);\n        const validatorIndex = (0, types_1.toType)(validatorIndexData, types_1.TypeOutput.BigInt);\n        const address = new address_1.Address((0, types_1.toType)(addressData, types_1.TypeOutput.Buffer));\n        const amount = (0, types_1.toType)(amountData, types_1.TypeOutput.BigInt);\n        return new Withdrawal(index, validatorIndex, address, amount);\n    }\n    static fromValuesArray(withdrawalArray) {\n        if (withdrawalArray.length !== 4) {\n            throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`);\n        }\n        const [index, validatorIndex, address, amount] = withdrawalArray;\n        return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount });\n    }\n    /**\n     * Convert a withdrawal to a buffer array\n     * @param withdrawal the withdrawal to convert\n     * @returns buffer array of the withdrawal\n     */\n    static toBufferArray(withdrawal) {\n        const { index, validatorIndex, address, amount } = withdrawal;\n        const indexBuffer = (0, types_1.toType)(index, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(index, types_1.TypeOutput.Buffer);\n        const validatorIndexBuffer = (0, types_1.toType)(validatorIndex, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(validatorIndex, types_1.TypeOutput.Buffer);\n        let addressBuffer;\n        if (address instanceof address_1.Address) {\n            addressBuffer = address.buf;\n        }\n        else {\n            addressBuffer = (0, types_1.toType)(address, types_1.TypeOutput.Buffer);\n        }\n        const amountBuffer = (0, types_1.toType)(amount, types_1.TypeOutput.BigInt) === BigInt(0)\n            ? Buffer.alloc(0)\n            : (0, types_1.toType)(amount, types_1.TypeOutput.Buffer);\n        return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer];\n    }\n    raw() {\n        return Withdrawal.toBufferArray(this);\n    }\n    toValue() {\n        return {\n            index: this.index,\n            validatorIndex: this.validatorIndex,\n            address: this.address.buf,\n            amount: this.amount,\n        };\n    }\n    toJSON() {\n        return {\n            index: (0, bytes_1.bigIntToHex)(this.index),\n            validatorIndex: (0, bytes_1.bigIntToHex)(this.validatorIndex),\n            address: '0x' + this.address.buf.toString('hex'),\n            amount: (0, bytes_1.bigIntToHex)(this.amount),\n        };\n    }\n}\nexports.Withdrawal = Withdrawal;\n//# sourceMappingURL=withdrawal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nconst bytes_1 = require(\"./bytes\");\nconst constants_1 = require(\"./constants\");\nconst helpers_1 = require(\"./helpers\");\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nfunction ecsign(msgHash, privateKey, chainId) {\n    const [signature, recovery] = (0, secp256k1_1.signSync)(msgHash, privateKey, { recovered: true, der: false });\n    const r = Buffer.from(signature.slice(0, 32));\n    const s = Buffer.from(signature.slice(32, 64));\n    const v = chainId === undefined\n        ? BigInt(recovery + 27)\n        : BigInt(recovery + 35) + BigInt(chainId) * BigInt(2);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    if (v === BigInt(0) || v === BigInt(1))\n        return v;\n    if (chainId === undefined) {\n        return v - BigInt(27);\n    }\n    return v - (chainId * BigInt(2) + BigInt(35));\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === BigInt(0) || recovery === BigInt(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nconst ecrecover = function (msgHash, v, r, s, chainId) {\n    const signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    const senderPubKey = (0, secp256k1_1.recoverPublicKey)(msgHash, signature, Number(recovery));\n    return Buffer.from(senderPubKey.slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nconst toRpcSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nconst toCompactSig = function (v, r, s, chainId) {\n    const recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    let ss = s;\n    if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nconst fromRpcSig = function (sig) {\n    const buf = (0, bytes_1.toBuffer)(sig);\n    let r;\n    let s;\n    let v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToBigInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = BigInt((0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7);\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v = v + BigInt(27);\n    }\n    return {\n        v,\n        r,\n        s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nconst isValidSignature = function (v, r, s, homesteadOrLater = true, chainId) {\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    const rBigInt = (0, bytes_1.bufferToBigInt)(r);\n    const sBigInt = (0, bytes_1.bufferToBigInt)(s);\n    if (rBigInt === BigInt(0) ||\n        rBigInt >= constants_1.SECP256K1_ORDER ||\n        sBigInt === BigInt(0) ||\n        sBigInt >= constants_1.SECP256K1_ORDER) {\n        return false;\n    }\n    if (homesteadOrLater && sBigInt >= constants_1.SECP256K1_ORDER_DIV_2) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nconst hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8');\n    return Buffer.from((0, keccak_1.keccak256)(Buffer.concat([prefix, message])));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gindexChild = exports.gindexParent = exports.gindexSibling = exports.concatGindices = exports.getGindexBits = exports.gindexIterator = exports.getGindicesAtDepth = exports.iterateAtDepth = exports.countToDepth = exports.convertGindexToBitstring = exports.toGindexBitstring = exports.toGindex = exports.bitIndexBigInt = void 0;\nfunction bitIndexBigInt(v) {\n    return v.toString(2).length - 1;\n}\nexports.bitIndexBigInt = bitIndexBigInt;\nfunction toGindex(depth, index) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (index >= anchor) {\n        throw new Error(`index ${index} too large for depth ${depth}`);\n    }\n    return anchor | index;\n}\nexports.toGindex = toGindex;\nfunction toGindexBitstring(depth, index) {\n    const str = index ? Number(index).toString(2) : \"\";\n    if (str.length > depth) {\n        throw new Error(\"index too large for depth\");\n    }\n    else {\n        return \"1\" + str.padStart(depth, \"0\");\n    }\n}\nexports.toGindexBitstring = toGindexBitstring;\nfunction convertGindexToBitstring(gindex) {\n    if (typeof gindex === \"string\") {\n        if (gindex.length === 0) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex.toString(2);\n    }\n}\nexports.convertGindexToBitstring = convertGindexToBitstring;\n// Get the depth (root starting at 0) necessary to cover a subtree of `count` elements.\n// (in out): (0 0), (1 0), (2 1), (3 2), (4 2), (5 3), (6 3), (7 3), (8 3), (9 4)\nfunction countToDepth(count) {\n    if (count <= 1) {\n        return 0;\n    }\n    return (count - BigInt(1)).toString(2).length;\n}\nexports.countToDepth = countToDepth;\n/**\n * Iterate through Gindexes at a certain depth\n */\nfunction iterateAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let i = toGindex(depth, startIndex);\n    const last = i + count;\n    return {\n        [Symbol.iterator]() {\n            return {\n                next() {\n                    if (i < last) {\n                        const value = i;\n                        i++;\n                        return { done: false, value };\n                    }\n                    else {\n                        return { done: true, value: undefined };\n                    }\n                },\n            };\n        },\n    };\n}\nexports.iterateAtDepth = iterateAtDepth;\n/**\n * Return Gindexes at a certain depth\n */\nfunction getGindicesAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let gindex = toGindex(depth, BigInt(startIndex));\n    const gindices = [];\n    for (let i = 0; i < count; i++) {\n        gindices.push(gindex++);\n    }\n    return gindices;\n}\nexports.getGindicesAtDepth = getGindicesAtDepth;\nconst ERR_INVALID_GINDEX = \"Invalid gindex\";\nfunction gindexIterator(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    let i = 1;\n    const next = () => {\n        if (i === bitstring.length) {\n            return { done: true, value: undefined };\n        }\n        const bit = Number(bitstring[i]);\n        i++;\n        return { done: false, value: bit };\n    };\n    return {\n        [Symbol.iterator]() {\n            return { next };\n        },\n        remainingBitLength() {\n            return bitstring.length - i;\n        },\n    };\n}\nexports.gindexIterator = gindexIterator;\nfunction getGindexBits(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    const bits = [];\n    for (let i = 1; i < bitstring.length; i++) {\n        bits.push(Number(bitstring[i]));\n    }\n    return bits;\n}\nexports.getGindexBits = getGindexBits;\n/**\n * Concatenate Generalized Indices\n * Given generalized indices i1 for A -> B, i2 for B -> C .... i_n for Y -> Z, returns\n * the generalized index for A -> Z.\n */\nfunction concatGindices(gindices) {\n    return BigInt(gindices.reduce((acc, gindex) => acc + gindex.toString(2).slice(1), \"0b1\"));\n}\nexports.concatGindices = concatGindices;\nfunction gindexSibling(gindex) {\n    return gindex ^ BigInt(1);\n}\nexports.gindexSibling = gindexSibling;\nfunction gindexParent(gindex) {\n    return gindex / BigInt(2);\n}\nexports.gindexParent = gindexParent;\nfunction gindexChild(gindex, rightChild) {\n    return gindex * BigInt(2) + BigInt(rightChild);\n}\nexports.gindexChild = gindexChild;\n","\"use strict\";\n// This file was autogenerated by scripts/codegen.ts\n// DO NOT modify this file by hand!\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wasmCode = void 0;\n// eslint-disable-next-line prettier/prettier\nexports.wasmCode = Uint8Array.from([0, 97, 115, 109, 1, 0, 0, 0, 1, 31, 6, 96, 1, 127, 0, 96, 2, 127, 127, 0, 96, 0, 0, 96, 1, 127, 1, 127, 96, 3, 127, 127, 127, 0, 96, 4, 127, 127, 127, 127, 0, 2, 13, 1, 3, 101, 110, 118, 5, 97, 98, 111, 114, 116, 0, 5, 3, 16, 15, 0, 3, 1, 3, 2, 2, 4, 1, 1, 3, 0, 0, 0, 1, 2, 5, 3, 1, 0, 1, 6, 172, 1, 34, 127, 0, 65, 128, 4, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 127, 1, 65, 0, 11, 7, 86, 9, 6, 109, 101, 109, 111, 114, 121, 2, 0, 12, 73, 78, 80, 85, 84, 95, 76, 69, 78, 71, 84, 72, 3, 0, 5, 105, 110, 112, 117, 116, 3, 28, 6, 111, 117, 116, 112, 117, 116, 3, 30, 4, 105, 110, 105, 116, 0, 6, 6, 117, 112, 100, 97, 116, 101, 0, 9, 5, 102, 105, 110, 97, 108, 0, 11, 6, 100, 105, 103, 101, 115, 116, 0, 12, 8, 100, 105, 103, 101, 115, 116, 54, 52, 0, 14, 8, 1, 15, 10, 202, 14, 15, 70, 1, 2, 127, 32, 0, 63, 0, 34, 2, 65, 16, 116, 34, 1, 75, 4, 64, 32, 2, 32, 0, 32, 1, 107, 65, 255, 255, 3, 106, 65, 128, 128, 124, 113, 65, 16, 118, 34, 1, 32, 2, 32, 1, 74, 27, 64, 0, 65, 0, 72, 4, 64, 32, 1, 64, 0, 65, 0, 72, 4, 64, 0, 11, 11, 11, 32, 0, 36, 23, 11, 82, 1, 3, 127, 32, 0, 65, 240, 255, 255, 255, 3, 75, 4, 64, 0, 11, 35, 23, 65, 16, 106, 34, 2, 32, 0, 65, 15, 106, 65, 112, 113, 34, 1, 65, 16, 32, 1, 65, 16, 75, 27, 34, 3, 106, 16, 1, 32, 2, 65, 16, 107, 34, 1, 32, 3, 54, 2, 0, 32, 1, 65, 1, 54, 2, 4, 32, 1, 65, 0, 54, 2, 8, 32, 1, 32, 0, 54, 2, 12, 32, 2, 11, 37, 1, 1, 127, 3, 64, 32, 1, 4, 64, 32, 0, 34, 2, 65, 1, 106, 33, 0, 32, 2, 65, 0, 58, 0, 0, 32, 1, 65, 1, 107, 33, 1, 12, 1, 11, 11, 11, 41, 1, 1, 127, 32, 0, 65, 240, 255, 255, 255, 3, 75, 4, 64, 65, 128, 5, 65, 176, 5, 65, 54, 65, 42, 16, 0, 0, 11, 32, 0, 16, 2, 34, 1, 32, 0, 16, 3, 32, 1, 11, 71, 0, 65, 180, 2, 40, 2, 0, 36, 1, 65, 228, 4, 40, 2, 0, 36, 2, 65, 224, 5, 36, 22, 65, 224, 5, 36, 23, 65, 192, 0, 16, 4, 36, 24, 35, 24, 36, 25, 65, 128, 2, 16, 4, 36, 26, 35, 26, 36, 27, 65, 128, 4, 16, 4, 36, 28, 35, 28, 36, 29, 65, 32, 16, 4, 36, 30, 35, 30, 36, 31, 11, 74, 0, 65, 231, 204, 167, 208, 6, 36, 3, 65, 133, 221, 158, 219, 123, 36, 4, 65, 242, 230, 187, 227, 3, 36, 5, 65, 186, 234, 191, 170, 122, 36, 6, 65, 255, 164, 185, 136, 5, 36, 7, 65, 140, 209, 149, 216, 121, 36, 8, 65, 171, 179, 143, 252, 1, 36, 9, 65, 153, 154, 131, 223, 5, 36, 10, 65, 0, 36, 32, 65, 0, 36, 33, 11, 103, 1, 2, 127, 2, 64, 32, 2, 33, 3, 32, 0, 32, 1, 70, 13, 0, 32, 0, 32, 1, 73, 4, 64, 3, 64, 32, 3, 4, 64, 32, 0, 34, 2, 65, 1, 106, 33, 0, 32, 1, 34, 4, 65, 1, 106, 33, 1, 32, 2, 32, 4, 45, 0, 0, 58, 0, 0, 32, 3, 65, 1, 107, 33, 3, 12, 1, 11, 11, 5, 3, 64, 32, 3, 4, 64, 32, 3, 65, 1, 107, 34, 3, 32, 0, 106, 32, 1, 32, 3, 106, 45, 0, 0, 58, 0, 0, 12, 1, 11, 11, 11, 11, 11, 231, 3, 1, 1, 127, 35, 3, 36, 11, 35, 4, 36, 12, 35, 5, 36, 13, 35, 6, 36, 14, 35, 7, 36, 15, 35, 8, 36, 16, 35, 9, 36, 17, 35, 10, 36, 18, 65, 0, 36, 19, 3, 64, 35, 19, 65, 16, 73, 4, 64, 32, 0, 35, 19, 65, 2, 116, 106, 32, 1, 35, 19, 65, 2, 116, 34, 2, 106, 45, 0, 0, 65, 24, 116, 32, 1, 32, 2, 65, 1, 106, 106, 45, 0, 0, 65, 16, 116, 114, 32, 1, 32, 2, 65, 2, 106, 106, 45, 0, 0, 65, 8, 116, 114, 32, 1, 32, 2, 65, 3, 106, 106, 45, 0, 0, 114, 54, 2, 0, 35, 19, 65, 1, 106, 36, 19, 12, 1, 11, 11, 65, 16, 36, 19, 3, 64, 35, 19, 65, 192, 0, 73, 4, 64, 32, 0, 35, 19, 65, 2, 116, 106, 32, 0, 35, 19, 65, 16, 107, 65, 2, 116, 106, 40, 2, 0, 32, 0, 35, 19, 65, 7, 107, 65, 2, 116, 106, 40, 2, 0, 32, 0, 35, 19, 65, 2, 107, 65, 2, 116, 106, 40, 2, 0, 34, 1, 65, 17, 120, 32, 1, 65, 19, 120, 115, 32, 1, 65, 10, 118, 115, 106, 32, 0, 35, 19, 65, 15, 107, 65, 2, 116, 106, 40, 2, 0, 34, 1, 65, 7, 120, 32, 1, 65, 18, 120, 115, 32, 1, 65, 3, 118, 115, 106, 106, 54, 2, 0, 35, 19, 65, 1, 106, 36, 19, 12, 1, 11, 11, 65, 0, 36, 19, 3, 64, 35, 19, 65, 192, 0, 73, 4, 64, 32, 0, 35, 19, 65, 2, 116, 106, 40, 2, 0, 35, 1, 35, 19, 65, 2, 116, 106, 40, 2, 0, 35, 18, 35, 15, 34, 1, 65, 6, 120, 32, 1, 65, 11, 120, 115, 32, 1, 65, 25, 120, 115, 106, 35, 15, 34, 1, 35, 16, 113, 35, 17, 32, 1, 65, 127, 115, 113, 115, 106, 106, 106, 36, 20, 35, 11, 34, 1, 65, 2, 120, 32, 1, 65, 13, 120, 115, 32, 1, 65, 22, 120, 115, 35, 11, 34, 1, 35, 12, 34, 2, 113, 32, 1, 35, 13, 34, 1, 113, 115, 32, 1, 32, 2, 113, 115, 106, 36, 21, 35, 17, 36, 18, 35, 16, 36, 17, 35, 15, 36, 16, 35, 14, 35, 20, 106, 36, 15, 35, 13, 36, 14, 35, 12, 36, 13, 35, 11, 36, 12, 35, 20, 35, 21, 106, 36, 11, 35, 19, 65, 1, 106, 36, 19, 12, 1, 11, 11, 35, 3, 35, 11, 106, 36, 3, 35, 4, 35, 12, 106, 36, 4, 35, 5, 35, 13, 106, 36, 5, 35, 6, 35, 14, 106, 36, 6, 35, 7, 35, 15, 106, 36, 7, 35, 8, 35, 16, 106, 36, 8, 35, 9, 35, 17, 106, 36, 9, 35, 10, 35, 18, 106, 36, 10, 11, 177, 1, 1, 2, 127, 32, 1, 35, 33, 106, 36, 33, 35, 32, 4, 64, 65, 192, 0, 35, 32, 107, 32, 1, 76, 4, 64, 35, 25, 35, 32, 106, 32, 0, 65, 192, 0, 35, 32, 107, 16, 7, 35, 32, 65, 192, 0, 35, 32, 107, 106, 36, 32, 65, 192, 0, 35, 32, 107, 33, 2, 32, 1, 65, 192, 0, 35, 32, 107, 107, 33, 1, 35, 27, 35, 25, 16, 8, 65, 0, 36, 32, 5, 35, 25, 35, 32, 106, 32, 0, 32, 1, 16, 7, 32, 1, 35, 32, 106, 36, 32, 15, 11, 11, 3, 64, 32, 3, 32, 1, 65, 192, 0, 109, 72, 4, 64, 35, 27, 32, 0, 32, 2, 106, 16, 8, 32, 3, 65, 1, 106, 33, 3, 32, 2, 65, 64, 107, 33, 2, 12, 1, 11, 11, 32, 1, 65, 63, 113, 4, 64, 35, 25, 35, 32, 106, 32, 0, 32, 2, 106, 32, 1, 65, 63, 113, 34, 0, 16, 7, 32, 0, 35, 32, 106, 36, 32, 11, 11, 25, 0, 32, 0, 65, 128, 254, 131, 120, 113, 65, 8, 119, 32, 0, 65, 255, 129, 252, 7, 113, 65, 8, 120, 114, 11, 173, 2, 1, 2, 127, 35, 33, 65, 63, 113, 65, 63, 72, 4, 64, 35, 25, 35, 32, 106, 65, 128, 1, 58, 0, 0, 35, 32, 65, 1, 106, 36, 32, 11, 35, 33, 65, 63, 113, 65, 56, 78, 4, 64, 35, 25, 35, 32, 106, 34, 1, 65, 192, 0, 35, 32, 107, 106, 33, 2, 3, 64, 32, 1, 32, 2, 73, 4, 64, 32, 1, 65, 0, 58, 0, 0, 32, 1, 65, 1, 106, 33, 1, 12, 1, 11, 11, 35, 27, 35, 25, 16, 8, 65, 0, 36, 32, 11, 35, 33, 65, 63, 113, 65, 63, 78, 4, 64, 35, 25, 35, 32, 106, 65, 128, 1, 58, 0, 0, 35, 32, 65, 1, 106, 36, 32, 11, 35, 25, 35, 32, 106, 34, 1, 65, 56, 35, 32, 107, 106, 33, 2, 3, 64, 32, 1, 32, 2, 73, 4, 64, 32, 1, 65, 0, 58, 0, 0, 32, 1, 65, 1, 106, 33, 1, 12, 1, 11, 11, 35, 25, 65, 56, 106, 35, 33, 65, 128, 128, 128, 128, 2, 109, 16, 10, 54, 2, 0, 35, 25, 65, 60, 106, 35, 33, 65, 3, 116, 16, 10, 54, 2, 0, 35, 27, 35, 25, 16, 8, 32, 0, 35, 3, 16, 10, 54, 2, 0, 32, 0, 65, 4, 106, 35, 4, 16, 10, 54, 2, 0, 32, 0, 65, 8, 106, 35, 5, 16, 10, 54, 2, 0, 32, 0, 65, 12, 106, 35, 6, 16, 10, 54, 2, 0, 32, 0, 65, 16, 106, 35, 7, 16, 10, 54, 2, 0, 32, 0, 65, 20, 106, 35, 8, 16, 10, 54, 2, 0, 32, 0, 65, 24, 106, 35, 9, 16, 10, 54, 2, 0, 32, 0, 65, 28, 106, 35, 10, 16, 10, 54, 2, 0, 11, 14, 0, 16, 6, 35, 29, 32, 0, 16, 9, 35, 31, 16, 11, 11, 253, 1, 1, 2, 127, 35, 3, 36, 11, 35, 4, 36, 12, 35, 5, 36, 13, 35, 6, 36, 14, 35, 7, 36, 15, 35, 8, 36, 16, 35, 9, 36, 17, 35, 10, 36, 18, 65, 0, 36, 19, 3, 64, 35, 19, 65, 192, 0, 73, 4, 64, 32, 0, 35, 19, 65, 2, 116, 106, 40, 2, 0, 35, 18, 35, 15, 34, 1, 65, 6, 120, 32, 1, 65, 11, 120, 115, 32, 1, 65, 25, 120, 115, 106, 35, 15, 34, 1, 35, 16, 113, 35, 17, 32, 1, 65, 127, 115, 113, 115, 106, 106, 36, 20, 35, 11, 34, 1, 65, 2, 120, 32, 1, 65, 13, 120, 115, 32, 1, 65, 22, 120, 115, 35, 11, 34, 1, 35, 12, 34, 2, 113, 32, 1, 35, 13, 34, 1, 113, 115, 32, 1, 32, 2, 113, 115, 106, 36, 21, 35, 17, 36, 18, 35, 16, 36, 17, 35, 15, 36, 16, 35, 14, 35, 20, 106, 36, 15, 35, 13, 36, 14, 35, 12, 36, 13, 35, 11, 36, 12, 35, 20, 35, 21, 106, 36, 11, 35, 19, 65, 1, 106, 36, 19, 12, 1, 11, 11, 35, 3, 35, 11, 106, 36, 3, 35, 4, 35, 12, 106, 36, 4, 35, 5, 35, 13, 106, 36, 5, 35, 6, 35, 14, 106, 36, 6, 35, 7, 35, 15, 106, 36, 7, 35, 8, 35, 16, 106, 36, 8, 35, 9, 35, 17, 106, 36, 9, 35, 10, 35, 18, 106, 36, 10, 11, 107, 0, 16, 6, 35, 27, 32, 0, 16, 8, 35, 2, 16, 13, 32, 1, 35, 3, 16, 10, 54, 2, 0, 32, 1, 65, 4, 106, 35, 4, 16, 10, 54, 2, 0, 32, 1, 65, 8, 106, 35, 5, 16, 10, 54, 2, 0, 32, 1, 65, 12, 106, 35, 6, 16, 10, 54, 2, 0, 32, 1, 65, 16, 106, 35, 7, 16, 10, 54, 2, 0, 32, 1, 65, 20, 106, 35, 8, 16, 10, 54, 2, 0, 32, 1, 65, 24, 106, 35, 9, 16, 10, 54, 2, 0, 32, 1, 65, 28, 106, 35, 10, 16, 10, 54, 2, 0, 11, 4, 0, 16, 5, 11, 11, 222, 5, 6, 0, 65, 17, 11, 143, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 152, 47, 138, 66, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 241, 155, 193, 193, 105, 155, 228, 134, 71, 190, 239, 198, 157, 193, 15, 204, 161, 12, 36, 111, 44, 233, 45, 170, 132, 116, 74, 220, 169, 176, 92, 218, 136, 249, 118, 82, 81, 62, 152, 109, 198, 49, 168, 200, 39, 3, 176, 199, 127, 89, 191, 243, 11, 224, 198, 71, 145, 167, 213, 81, 99, 202, 6, 103, 41, 41, 20, 133, 10, 183, 39, 56, 33, 27, 46, 252, 109, 44, 77, 19, 13, 56, 83, 84, 115, 10, 101, 187, 10, 106, 118, 46, 201, 194, 129, 133, 44, 114, 146, 161, 232, 191, 162, 75, 102, 26, 168, 112, 139, 75, 194, 163, 81, 108, 199, 25, 232, 146, 209, 36, 6, 153, 214, 133, 53, 14, 244, 112, 160, 106, 16, 22, 193, 164, 25, 8, 108, 55, 30, 76, 119, 72, 39, 181, 188, 176, 52, 179, 12, 28, 57, 74, 170, 216, 78, 79, 202, 156, 91, 243, 111, 46, 104, 238, 130, 143, 116, 111, 99, 165, 120, 20, 120, 200, 132, 8, 2, 199, 140, 250, 255, 190, 144, 235, 108, 80, 164, 247, 163, 249, 190, 242, 120, 113, 198, 0, 65, 160, 2, 11, 29, 16, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 32, 0, 0, 0, 0, 1, 0, 0, 64, 0, 65, 193, 2, 11, 143, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 152, 47, 138, 194, 145, 68, 55, 113, 207, 251, 192, 181, 165, 219, 181, 233, 91, 194, 86, 57, 241, 17, 241, 89, 164, 130, 63, 146, 213, 94, 28, 171, 152, 170, 7, 216, 1, 91, 131, 18, 190, 133, 49, 36, 195, 125, 12, 85, 116, 93, 190, 114, 254, 177, 222, 128, 167, 6, 220, 155, 116, 243, 155, 193, 193, 105, 155, 100, 134, 71, 254, 240, 198, 237, 225, 15, 84, 242, 12, 36, 111, 52, 233, 79, 190, 132, 201, 108, 30, 65, 185, 97, 250, 136, 249, 22, 82, 81, 198, 242, 109, 90, 142, 168, 101, 252, 25, 176, 199, 158, 217, 185, 195, 49, 18, 154, 160, 234, 14, 231, 43, 35, 177, 253, 176, 62, 53, 199, 213, 186, 105, 48, 95, 109, 151, 203, 143, 17, 15, 90, 253, 238, 30, 220, 137, 182, 53, 10, 4, 122, 11, 222, 157, 202, 244, 88, 22, 91, 93, 225, 134, 62, 127, 0, 128, 137, 8, 55, 50, 234, 7, 165, 55, 149, 171, 111, 16, 97, 64, 23, 241, 214, 140, 13, 109, 59, 170, 205, 55, 190, 187, 192, 218, 59, 97, 131, 99, 163, 72, 219, 49, 233, 2, 11, 167, 92, 209, 111, 202, 250, 26, 82, 49, 132, 51, 49, 149, 26, 212, 110, 144, 120, 67, 109, 242, 145, 156, 195, 189, 171, 204, 158, 230, 160, 201, 181, 60, 182, 47, 83, 198, 65, 199, 210, 163, 126, 35, 7, 104, 75, 149, 164, 118, 29, 25, 76, 0, 65, 208, 4, 11, 29, 16, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 16, 0, 0, 0, 80, 1, 0, 0, 80, 1, 0, 0, 0, 1, 0, 0, 64, 0, 65, 240, 4, 11, 43, 28, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 28, 0, 0, 0, 73, 0, 110, 0, 118, 0, 97, 0, 108, 0, 105, 0, 100, 0, 32, 0, 108, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 65, 160, 5, 11, 53, 38, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 38, 0, 0, 0, 126, 0, 108, 0, 105, 0, 98, 0, 47, 0, 97, 0, 114, 0, 114, 0, 97, 0, 121, 0, 98, 0, 117, 0, 102, 0, 102, 0, 101, 0, 114, 0, 46, 0, 116, 0, 115]);\n//# sourceMappingURL=wasmCode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newInstance = void 0;\nconst wasmCode_1 = require(\"./wasmCode\");\nconst _module = new WebAssembly.Module(wasmCode_1.wasmCode);\nconst importObj = {\n    env: {\n        // modified from https://github.com/AssemblyScript/assemblyscript/blob/v0.9.2/lib/loader/index.js#L70\n        abort: function (msg, file, line, col) {\n            throw Error(`abort: ${msg}:${file}:${line}:${col}`);\n        },\n    },\n};\nfunction newInstance() {\n    return new WebAssembly.Instance(_module, importObj).exports;\n}\nexports.newInstance = newInstance;\n//# sourceMappingURL=wasm.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.byteArrayToHashObject = exports.hashObjectToByteArray = void 0;\n/**\n * Pass 8 numbers in an object and set that to inputArray.\n * This function contains multiple same procedures but we intentionally\n * do it step by step to improve performance a bit.\n **/\nfunction hashObjectToByteArray(obj, byteArr, offset) {\n    let tmp = obj.h0;\n    byteArr[0 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[1 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[2 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[3 + offset] = tmp & 0xff;\n    tmp = obj.h1;\n    byteArr[4 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[5 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[6 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[7 + offset] = tmp & 0xff;\n    tmp = obj.h2;\n    byteArr[8 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[9 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[10 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[11 + offset] = tmp & 0xff;\n    tmp = obj.h3;\n    byteArr[12 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[13 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[14 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[15 + offset] = tmp & 0xff;\n    tmp = obj.h4;\n    byteArr[16 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[17 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[18 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[19 + offset] = tmp & 0xff;\n    tmp = obj.h5;\n    byteArr[20 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[21 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[22 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[23 + offset] = tmp & 0xff;\n    tmp = obj.h6;\n    byteArr[24 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[25 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[26 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[27 + offset] = tmp & 0xff;\n    tmp = obj.h7;\n    byteArr[28 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[29 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[30 + offset] = tmp & 0xff;\n    tmp = tmp >> 8;\n    byteArr[31 + offset] = tmp & 0xff;\n}\nexports.hashObjectToByteArray = hashObjectToByteArray;\n/**\n * Parse outputArray into an object of 8 numbers.\n * This is the order that makes Uint32Array the same to Uint8Array\n * This function contains multiple same procedures but we intentionally\n * do it step by step to improve performance a bit.\n **/\nfunction byteArrayToHashObject(byteArr) {\n    let tmp = 0;\n    tmp |= byteArr[3] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[2] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[1] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[0] & 0xff;\n    const h0 = tmp;\n    tmp = 0;\n    tmp |= byteArr[7] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[6] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[5] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[4] & 0xff;\n    const h1 = tmp;\n    tmp = 0;\n    tmp |= byteArr[11] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[10] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[9] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[8] & 0xff;\n    const h2 = tmp;\n    tmp = 0;\n    tmp |= byteArr[15] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[14] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[13] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[12] & 0xff;\n    const h3 = tmp;\n    tmp = 0;\n    tmp |= byteArr[19] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[18] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[17] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[16] & 0xff;\n    const h4 = tmp;\n    tmp = 0;\n    tmp |= byteArr[23] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[22] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[21] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[20] & 0xff;\n    const h5 = tmp;\n    tmp = 0;\n    tmp |= byteArr[27] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[26] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[25] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[24] & 0xff;\n    const h6 = tmp;\n    tmp = 0;\n    tmp |= byteArr[31] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[30] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[29] & 0xff;\n    tmp = tmp << 8;\n    tmp |= byteArr[28] & 0xff;\n    const h7 = tmp;\n    return {\n        h0,\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6,\n        h7,\n    };\n}\nexports.byteArrayToHashObject = byteArrayToHashObject;\n//# sourceMappingURL=hashObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wasm_1 = require(\"./wasm\");\n/**\n * Class based SHA256\n */\nclass SHA256 {\n    constructor() {\n        this.ctx = wasm_1.newInstance();\n        this.wasmInputValue = this.ctx.input.value;\n        this.wasmOutputValue = this.ctx.output.value;\n        this.uint8InputArray = new Uint8Array(this.ctx.memory.buffer, this.wasmInputValue, this.ctx.INPUT_LENGTH);\n        this.uint8OutputArray = new Uint8Array(this.ctx.memory.buffer, this.wasmOutputValue, 32);\n    }\n    init() {\n        this.ctx.init();\n        return this;\n    }\n    update(data) {\n        const INPUT_LENGTH = this.ctx.INPUT_LENGTH;\n        if (data.length > INPUT_LENGTH) {\n            for (let i = 0; i < data.length; i += INPUT_LENGTH) {\n                const sliced = data.slice(i, i + INPUT_LENGTH);\n                this.uint8InputArray.set(sliced);\n                this.ctx.update(this.wasmInputValue, sliced.length);\n            }\n        }\n        else {\n            this.uint8InputArray.set(data);\n            this.ctx.update(this.wasmInputValue, data.length);\n        }\n        return this;\n    }\n    final() {\n        this.ctx.final(this.wasmOutputValue);\n        const output = new Uint8Array(32);\n        output.set(this.uint8OutputArray);\n        return output;\n    }\n}\nexports.default = SHA256;\n//# sourceMappingURL=sha256.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.digest64HashObjects = exports.digest2Bytes32 = exports.digest64 = exports.digest = exports.SHA256 = exports.hashObjectToByteArray = exports.byteArrayToHashObject = void 0;\nconst wasm_1 = require(\"./wasm\");\nconst hashObject_1 = require(\"./hashObject\");\nObject.defineProperty(exports, \"byteArrayToHashObject\", { enumerable: true, get: function () { return hashObject_1.byteArrayToHashObject; } });\nObject.defineProperty(exports, \"hashObjectToByteArray\", { enumerable: true, get: function () { return hashObject_1.hashObjectToByteArray; } });\nconst sha256_1 = __importDefault(require(\"./sha256\"));\nexports.SHA256 = sha256_1.default;\nconst ctx = wasm_1.newInstance();\nconst wasmInputValue = ctx.input.value;\nconst wasmOutputValue = ctx.output.value;\nconst inputUint8Array = new Uint8Array(ctx.memory.buffer, wasmInputValue, ctx.INPUT_LENGTH);\nconst outputUint8Array = new Uint8Array(ctx.memory.buffer, wasmOutputValue, 32);\nconst inputUint32Array = new Uint32Array(ctx.memory.buffer, wasmInputValue, ctx.INPUT_LENGTH);\nfunction digest(data) {\n    if (data.length === 64) {\n        return digest64(data);\n    }\n    if (data.length <= ctx.INPUT_LENGTH) {\n        inputUint8Array.set(data);\n        ctx.digest(data.length);\n        const output = new Uint8Array(32);\n        output.set(outputUint8Array);\n        return output;\n    }\n    ctx.init();\n    update(data);\n    return final();\n}\nexports.digest = digest;\nfunction digest64(data) {\n    if (data.length === 64) {\n        inputUint8Array.set(data);\n        ctx.digest64(wasmInputValue, wasmOutputValue);\n        const output = new Uint8Array(32);\n        output.set(outputUint8Array);\n        return output;\n    }\n    throw new Error(\"InvalidLengthForDigest64\");\n}\nexports.digest64 = digest64;\nfunction digest2Bytes32(bytes1, bytes2) {\n    if (bytes1.length === 32 && bytes2.length === 32) {\n        inputUint8Array.set(bytes1);\n        inputUint8Array.set(bytes2, 32);\n        ctx.digest64(wasmInputValue, wasmOutputValue);\n        const output = new Uint8Array(32);\n        output.set(outputUint8Array);\n        return output;\n    }\n    throw new Error(\"InvalidLengthForDigest64\");\n}\nexports.digest2Bytes32 = digest2Bytes32;\n/**\n * Digest 2 objects, each has 8 properties from h0 to h7.\n * The performance is a little bit better than digest64 due to the use of Uint32Array\n * and the memory is a little bit better than digest64 due to no temporary Uint8Array.\n * @returns\n */\nfunction digest64HashObjects(obj1, obj2) {\n    // TODO: expect obj1 and obj2 as HashObject\n    inputUint32Array[0] = obj1.h0;\n    inputUint32Array[1] = obj1.h1;\n    inputUint32Array[2] = obj1.h2;\n    inputUint32Array[3] = obj1.h3;\n    inputUint32Array[4] = obj1.h4;\n    inputUint32Array[5] = obj1.h5;\n    inputUint32Array[6] = obj1.h6;\n    inputUint32Array[7] = obj1.h7;\n    inputUint32Array[8] = obj2.h0;\n    inputUint32Array[9] = obj2.h1;\n    inputUint32Array[10] = obj2.h2;\n    inputUint32Array[11] = obj2.h3;\n    inputUint32Array[12] = obj2.h4;\n    inputUint32Array[13] = obj2.h5;\n    inputUint32Array[14] = obj2.h6;\n    inputUint32Array[15] = obj2.h7;\n    ctx.digest64(wasmInputValue, wasmOutputValue);\n    // extracting numbers from Uint32Array causes more memory\n    return hashObject_1.byteArrayToHashObject(outputUint8Array);\n}\nexports.digest64HashObjects = digest64HashObjects;\nfunction update(data) {\n    const INPUT_LENGTH = ctx.INPUT_LENGTH;\n    if (data.length > INPUT_LENGTH) {\n        for (let i = 0; i < data.length; i += INPUT_LENGTH) {\n            const sliced = data.slice(i, i + INPUT_LENGTH);\n            inputUint8Array.set(sliced);\n            ctx.update(wasmInputValue, sliced.length);\n        }\n    }\n    else {\n        inputUint8Array.set(data);\n        ctx.update(wasmInputValue, data.length);\n    }\n}\nfunction final() {\n    ctx.final(wasmOutputValue);\n    const output = new Uint8Array(32);\n    output.set(outputUint8Array);\n    return output;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isHashObject = exports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = exports.hashTwoObjects = exports.hash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst input = new Uint8Array(64);\n/**\n * Hash two 32 byte arrays\n */\nfunction hash(a, b) {\n    input.set(a, 0);\n    input.set(b, 32);\n    return as_sha256_1.digest64(input);\n}\nexports.hash = hash;\n/**\n * Hash 2 objects, each store 8 numbers (equivalent to Uint8Array(32))\n */\nfunction hashTwoObjects(a, b) {\n    return as_sha256_1.digest64HashObjects(a, b);\n}\nexports.hashTwoObjects = hashTwoObjects;\nfunction hashObjectToUint8Array(obj) {\n    const byteArr = new Uint8Array(32);\n    as_sha256_1.hashObjectToByteArray(obj, byteArr, 0);\n    return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n    return as_sha256_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\nfunction isHashObject(hash) {\n    // @ts-ignore\n    return hash.length === undefined;\n}\nexports.isHashObject = isHashObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitwiseOrNodeH = exports.setNodeH = exports.getNodeH = exports.compose = exports.identity = exports.LeafNode = exports.BranchNode = exports.Node = void 0;\nconst hash_1 = require(\"./hash\");\nconst TWO_POWER_32 = 2 ** 32;\n/**\n * An immutable binary merkle tree node\n */\nclass Node {\n    constructor(h0, h1, h2, h3, h4, h5, h6, h7) {\n        this.h0 = h0;\n        this.h1 = h1;\n        this.h2 = h2;\n        this.h3 = h3;\n        this.h4 = h4;\n        this.h5 = h5;\n        this.h6 = h6;\n        this.h7 = h7;\n    }\n    applyHash(root) {\n        this.h0 = root.h0;\n        this.h1 = root.h1;\n        this.h2 = root.h2;\n        this.h3 = root.h3;\n        this.h4 = root.h4;\n        this.h5 = root.h5;\n        this.h6 = root.h6;\n        this.h7 = root.h7;\n    }\n}\nexports.Node = Node;\n/**\n * An immutable binary merkle tree node that has a `left` and `right` child\n */\nclass BranchNode extends Node {\n    constructor(_left, _right) {\n        // First null value is to save an extra variable to check if a node has a root or not\n        super(null, 0, 0, 0, 0, 0, 0, 0);\n        this._left = _left;\n        this._right = _right;\n        if (!_left) {\n            throw new Error(\"Left node is undefined\");\n        }\n        if (!_right) {\n            throw new Error(\"Right node is undefined\");\n        }\n    }\n    get rootHashObject() {\n        if (this.h0 === null) {\n            super.applyHash(hash_1.hashTwoObjects(this.left.rootHashObject, this.right.rootHashObject));\n        }\n        return this;\n    }\n    get root() {\n        return hash_1.hashObjectToUint8Array(this.rootHashObject);\n    }\n    isLeaf() {\n        return false;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n}\nexports.BranchNode = BranchNode;\n/**\n * An immutable binary merkle tree node that has no children\n */\nclass LeafNode extends Node {\n    static fromRoot(root) {\n        return this.fromHashObject(hash_1.uint8ArrayToHashObject(root));\n    }\n    /**\n     * New LeafNode from existing HashObject.\n     */\n    static fromHashObject(ho) {\n        return new LeafNode(ho.h0, ho.h1, ho.h2, ho.h3, ho.h4, ho.h5, ho.h6, ho.h7);\n    }\n    /**\n     * New LeafNode with its internal value set to zero. Consider using `zeroNode(0)` if you don't need to mutate.\n     */\n    static fromZero() {\n        return new LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * LeafNode with HashObject `(uint32, 0, 0, 0, 0, 0, 0, 0)`.\n     */\n    static fromUint32(uint32) {\n        return new LeafNode(uint32, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * Create a new LeafNode with the same internal values. The returned instance is safe to mutate\n     */\n    clone() {\n        return LeafNode.fromHashObject(this);\n    }\n    get rootHashObject() {\n        return this;\n    }\n    get root() {\n        return hash_1.hashObjectToUint8Array(this);\n    }\n    isLeaf() {\n        return true;\n    }\n    get left() {\n        throw Error(\"LeafNode has no left node\");\n    }\n    get right() {\n        throw Error(\"LeafNode has no right node\");\n    }\n    writeToBytes(data, start, size) {\n        // TODO: Optimize\n        data.set(this.root.slice(0, size), start);\n    }\n    getUint(uintBytes, offsetBytes, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return 0xff & (h >> bitIndex);\n            }\n            else {\n                return 0xffff & (h >> bitIndex);\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return getNodeH(this, hIndex) >>> 0;\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            const low = getNodeH(this, hIndex);\n            const high = getNodeH(this, hIndex + 1);\n            if (high === 0) {\n                return low >>> 0;\n            }\n            else if (high === -1 && low === -1 && clipInfinity) {\n                // Limit uint returns\n                return Infinity;\n            }\n            else {\n                return (low >>> 0) + (high >>> 0) * TWO_POWER_32;\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    getUintBigint(uintBytes, offsetBytes) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return BigInt(0xff & (h >> bitIndex));\n            }\n            else {\n                return BigInt(0xffff & (h >> bitIndex));\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return BigInt(getNodeH(this, hIndex) >>> 0);\n        }\n        // number spans multiple h values\n        else {\n            const hRange = Math.ceil(uintBytes / 4);\n            let v = BigInt(0);\n            for (let i = 0; i < hRange; i++) {\n                v += BigInt(getNodeH(this, hIndex + i) >>> 0) << BigInt(32 * i);\n            }\n            return v;\n        }\n    }\n    setUint(uintBytes, offsetBytes, value, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, value);\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            if (value === Infinity && clipInfinity) {\n                setNodeH(this, hIndex, -1);\n                setNodeH(this, hIndex + 1, -1);\n            }\n            else {\n                setNodeH(this, hIndex, value & 0xffffffff);\n                setNodeH(this, hIndex + 1, (value / TWO_POWER_32) & 0xffffffff);\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    setUintBigint(uintBytes, offsetBytes, valueBN) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const value = Number(valueBN);\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, Number(valueBN));\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                setNodeH(this, i, Number(valueBN & BigInt(0xffffffff)));\n                valueBN = valueBN >> BigInt(32);\n            }\n        }\n    }\n    bitwiseOrUint(uintBytes, offsetBytes, value) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            bitwiseOrNodeH(this, hIndex, value << bitIndex);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            bitwiseOrNodeH(this, hIndex, value);\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                bitwiseOrNodeH(this, i, value & 0xffffffff);\n                value >>= 32;\n            }\n        }\n    }\n}\nexports.LeafNode = LeafNode;\nfunction identity(n) {\n    return n;\n}\nexports.identity = identity;\nfunction compose(inner, outer) {\n    return function (n) {\n        return outer(inner(n));\n    };\n}\nexports.compose = compose;\nfunction getNodeH(node, hIndex) {\n    if (hIndex === 0)\n        return node.h0;\n    else if (hIndex === 1)\n        return node.h1;\n    else if (hIndex === 2)\n        return node.h2;\n    else if (hIndex === 3)\n        return node.h3;\n    else if (hIndex === 4)\n        return node.h4;\n    else if (hIndex === 5)\n        return node.h5;\n    else if (hIndex === 6)\n        return node.h6;\n    else if (hIndex === 7)\n        return node.h7;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.getNodeH = getNodeH;\nfunction setNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 = value;\n    else if (hIndex === 1)\n        node.h1 = value;\n    else if (hIndex === 2)\n        node.h2 = value;\n    else if (hIndex === 3)\n        node.h3 = value;\n    else if (hIndex === 4)\n        node.h4 = value;\n    else if (hIndex === 5)\n        node.h5 = value;\n    else if (hIndex === 6)\n        node.h6 = value;\n    else if (hIndex === 7)\n        node.h7 = value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.setNodeH = setNodeH;\nfunction bitwiseOrNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 |= value;\n    else if (hIndex === 1)\n        node.h1 |= value;\n    else if (hIndex === 2)\n        node.h2 |= value;\n    else if (hIndex === 3)\n        node.h3 |= value;\n    else if (hIndex === 4)\n        node.h4 |= value;\n    else if (hIndex === 5)\n        node.h5 |= value;\n    else if (hIndex === 6)\n        node.h6 |= value;\n    else if (hIndex === 7)\n        node.h7 |= value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.bitwiseOrNodeH = bitwiseOrNodeH;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroNode = void 0;\nconst node_1 = require(\"./node\");\nconst zeroes = [node_1.LeafNode.fromZero()];\n/**\n * Return the `Node` at a specified height from the merkle tree made of \"zero data\"\n * ```\n *           ...\n *          /\n *         x           <- height 2\n *      /     \\\n *     x       x       <- height 1\n *   /  \\      /  \\\n * 0x0  0x0  0x0  0x0  <- height 0\n * ```\n */\nfunction zeroNode(height) {\n    if (height >= zeroes.length) {\n        for (let i = zeroes.length; i <= height; i++) {\n            zeroes[i] = new node_1.BranchNode(zeroes[i - 1], zeroes[i - 1]);\n        }\n    }\n    return zeroes[height];\n}\nexports.zeroNode = zeroNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subtreeFillToContents = exports.subtreeFillToLength = exports.subtreeFillToDepth = void 0;\nconst node_1 = require(\"./node\");\nconst zeroNode_1 = require(\"./zeroNode\");\nfunction subtreeFillToDepth(bottom, depth) {\n    let node = bottom;\n    while (depth > 0) {\n        node = new node_1.BranchNode(node, node);\n        depth--;\n    }\n    return node;\n}\nexports.subtreeFillToDepth = subtreeFillToDepth;\nfunction subtreeFillToLength(bottom, depth, length) {\n    const maxLength = 1 << depth;\n    if (length > maxLength)\n        throw new Error(\"ERR_TOO_MANY_NODES\");\n    if (length === maxLength)\n        return subtreeFillToDepth(bottom, depth);\n    if (depth === 0) {\n        if (length === 1)\n            return bottom;\n        else\n            throw new Error(\"ERR_NAVIGATION\");\n    }\n    if (depth === 1) {\n        return new node_1.BranchNode(bottom, length > 1 ? bottom : zeroNode_1.zeroNode(0));\n    }\n    const pivot = maxLength >> 1;\n    if (length <= pivot) {\n        return new node_1.BranchNode(subtreeFillToLength(bottom, depth - 1, length), zeroNode_1.zeroNode(depth - 1));\n    }\n    else {\n        return new node_1.BranchNode(subtreeFillToDepth(bottom, depth - 1), subtreeFillToLength(bottom, depth - 1, length - pivot));\n    }\n}\nexports.subtreeFillToLength = subtreeFillToLength;\n/**\n * WARNING: Mutates the provided nodes array.\n * TODO: Don't mutate the nodes array.\n */\nfunction subtreeFillToContents(nodes, depth) {\n    const maxLength = 2 ** depth;\n    if (nodes.length > maxLength) {\n        throw new Error(`nodes.length ${nodes.length} over maxIndex at depth ${depth}`);\n    }\n    if (nodes.length === 0) {\n        return zeroNode_1.zeroNode(depth);\n    }\n    if (depth === 0) {\n        return nodes[0];\n    }\n    if (depth === 1) {\n        return nodes.length > 1\n            ? // All nodes at depth 1 available\n                new node_1.BranchNode(nodes[0], nodes[1])\n            : // Pad with zero node\n                new node_1.BranchNode(nodes[0], zeroNode_1.zeroNode(0));\n    }\n    let count = nodes.length;\n    for (let d = depth; d > 0; d--) {\n        const countRemainder = count % 2;\n        const countEven = count - countRemainder;\n        // For each depth level compute the new BranchNodes and overwrite the nodes array\n        for (let i = 0; i < countEven; i += 2) {\n            nodes[i / 2] = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n        }\n        if (countRemainder > 0) {\n            nodes[countEven / 2] = new node_1.BranchNode(nodes[countEven], zeroNode_1.zeroNode(depth - d));\n        }\n        // If there was remainer, 2 nodes are added to the count\n        count = countEven / 2 + countRemainder;\n    }\n    return nodes[0];\n}\nexports.subtreeFillToContents = subtreeFillToContents;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packedNodeRootsToBytes = exports.packedRootsBytesToLeafNodes = exports.packedRootsBytesToNode = void 0;\nconst subtree_1 = require(\"./subtree\");\nconst node_1 = require(\"./node\");\nfunction packedRootsBytesToNode(depth, dataView, start, end) {\n    const leafNodes = packedRootsBytesToLeafNodes(dataView, start, end);\n    return subtree_1.subtreeFillToContents(leafNodes, depth);\n}\nexports.packedRootsBytesToNode = packedRootsBytesToNode;\n/**\n * Optimized deserialization of linear bytes to consecutive leaf nodes\n */\nfunction packedRootsBytesToLeafNodes(dataView, start, end) {\n    const size = end - start;\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    const fullNodeCount = Math.floor(size / 32);\n    const leafNodes = new Array(Math.ceil(size / 32));\n    // Efficiently construct the tree writing to hashObjects directly\n    // TODO: Optimize, with this approach each h property is written twice\n    for (let i = 0; i < fullNodeCount; i++) {\n        const offset = start + i * 32;\n        leafNodes[i] = new node_1.LeafNode(dataView.getInt32(offset + 0, true), dataView.getInt32(offset + 4, true), dataView.getInt32(offset + 8, true), dataView.getInt32(offset + 12, true), dataView.getInt32(offset + 16, true), dataView.getInt32(offset + 20, true), dataView.getInt32(offset + 24, true), dataView.getInt32(offset + 28, true));\n    }\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Last node\n    if (remainderBytes > 0) {\n        const node = new node_1.LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n        leafNodes[fullNodeCount] = node;\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            node_1.setNodeH(node, h, dataView.getInt32(start + fullNodeCount * 32 + h * 4, true));\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            let h = 0;\n            for (let i = 0; i < remainderUint32; i++) {\n                h |= dataView.getUint8(start + size - remainderUint32 + i) << (i * 8);\n            }\n            node_1.setNodeH(node, fullHCount, h);\n        }\n    }\n    return leafNodes;\n}\nexports.packedRootsBytesToLeafNodes = packedRootsBytesToLeafNodes;\n/**\n * Optimized serialization of consecutive leave nodes to linear bytes\n */\nfunction packedNodeRootsToBytes(dataView, start, size, nodes) {\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Full nodes\n    // Efficiently get hashObjects data into data\n    const fullNodeCount = Math.floor(size / 32);\n    for (let i = 0; i < fullNodeCount; i++) {\n        const node = nodes[i];\n        const offset = start + i * 32;\n        dataView.setInt32(offset + 0, node.h0, true);\n        dataView.setInt32(offset + 4, node.h1, true);\n        dataView.setInt32(offset + 8, node.h2, true);\n        dataView.setInt32(offset + 12, node.h3, true);\n        dataView.setInt32(offset + 16, node.h4, true);\n        dataView.setInt32(offset + 20, node.h5, true);\n        dataView.setInt32(offset + 24, node.h6, true);\n        dataView.setInt32(offset + 28, node.h7, true);\n    }\n    // Last node\n    if (remainderBytes > 0) {\n        const node = nodes[fullNodeCount];\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            dataView.setInt32(start + fullNodeCount * 32 + h * 4, node_1.getNodeH(node, h), true);\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            const h = node_1.getNodeH(node, fullHCount);\n            for (let i = 0; i < remainderUint32; i++) {\n                dataView.setUint8(start + size - remainderUint32 + i, (h >> (i * 8)) & 0xff);\n            }\n        }\n    }\n}\nexports.packedNodeRootsToBytes = packedNodeRootsToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromSingleProof = exports.createSingleProof = exports.ERR_INVALID_NAV = void 0;\nconst node_1 = require(\"../node\");\nconst gindex_1 = require(\"../gindex\");\nexports.ERR_INVALID_NAV = \"Invalid tree navigation\";\nfunction createSingleProof(rootNode, index) {\n    const witnesses = [];\n    let node = rootNode;\n    for (const i of gindex_1.gindexIterator(index)) {\n        if (i) {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.left.root);\n            node = node.right;\n        }\n        else {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.right.root);\n            node = node.left;\n        }\n    }\n    return [node.root, witnesses.reverse()];\n}\nexports.createSingleProof = createSingleProof;\nfunction createNodeFromSingleProof(gindex, leaf, witnesses) {\n    let node = node_1.LeafNode.fromRoot(leaf);\n    const w = witnesses.slice().reverse();\n    while (gindex > 1) {\n        const sibling = node_1.LeafNode.fromRoot(w.pop());\n        if (gindex % BigInt(2) === BigInt(0)) {\n            node = new node_1.BranchNode(node, sibling);\n        }\n        else {\n            node = new node_1.BranchNode(sibling, node);\n        }\n        gindex = gindex / BigInt(2);\n    }\n    return node;\n}\nexports.createNodeFromSingleProof = createNodeFromSingleProof;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treeZeroAfterIndex = exports.iterateNodesAtDepth = exports.getNodesAtDepth = exports.setNodesAtDepth = exports.setNodeAtDepth = exports.getNodeAtDepth = exports.setNodeWithFn = exports.setNode = exports.getNode = exports.Tree = void 0;\nconst zeroNode_1 = require(\"./zeroNode\");\nconst gindex_1 = require(\"./gindex\");\nconst node_1 = require(\"./node\");\nconst proof_1 = require(\"./proof\");\nconst single_1 = require(\"./proof/single\");\n/**\n * Binary merkle tree\n *\n * Wrapper around immutable `Node` to support mutability.\n *\n * Mutability between a parent tree and subtree is achieved by maintaining a `hook` callback, which updates the parent when the subtree is updated.\n */\nclass Tree {\n    constructor(node, hook) {\n        this._rootNode = node;\n        if (hook) {\n            if (typeof WeakRef === \"undefined\") {\n                this.hook = hook;\n            }\n            else {\n                this.hook = new WeakRef(hook);\n            }\n        }\n    }\n    /**\n     * Create a `Tree` from a `Proof` object\n     */\n    static createFromProof(proof) {\n        return new Tree(proof_1.createNodeFromProof(proof));\n    }\n    /**\n     * The root node of the tree\n     */\n    get rootNode() {\n        return this._rootNode;\n    }\n    /**\n     *\n     * Setting the root node will trigger a call to the tree's `hook` if it exists.\n     */\n    set rootNode(newRootNode) {\n        this._rootNode = newRootNode;\n        if (this.hook) {\n            // WeakRef should not change status during a program's execution\n            // So, use WeakRef feature detection to assume the type of this.hook\n            // to minimize the memory footprint of Tree\n            if (typeof WeakRef === \"undefined\") {\n                this.hook(newRootNode);\n            }\n            else {\n                const hookVar = this.hook.deref();\n                if (hookVar) {\n                    hookVar(newRootNode);\n                }\n                else {\n                    // Hook has been garbage collected, no need to keep the hookRef\n                    this.hook = undefined;\n                }\n            }\n        }\n    }\n    /**\n     * The root hash of the tree\n     */\n    get root() {\n        return this.rootNode.root;\n    }\n    /**\n     * Return a copy of the tree\n     */\n    clone() {\n        return new Tree(this.rootNode);\n    }\n    /**\n     * Return the subtree at the specified gindex.\n     *\n     * Note: The returned subtree will have a `hook` attached to the parent tree.\n     * Updates to the subtree will result in updates to the parent.\n     */\n    getSubtree(index) {\n        return new Tree(this.getNode(index), (node) => this.setNode(index, node));\n    }\n    /**\n     * Return the node at the specified gindex.\n     */\n    getNode(gindex) {\n        return getNode(this.rootNode, gindex);\n    }\n    /**\n     * Return the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodeAtDepth(depth, index) {\n        return getNodeAtDepth(this.rootNode, depth, index);\n    }\n    /**\n     * Return the hash at the specified gindex.\n     */\n    getRoot(index) {\n        return this.getNode(index).root;\n    }\n    /**\n     * Set the node at at the specified gindex.\n     */\n    setNode(gindex, n) {\n        this.rootNode = setNode(this.rootNode, gindex, n);\n    }\n    /**\n     * Traverse to the node at the specified gindex,\n     * then apply the function to get a new node and set the node at the specified gindex with the result.\n     *\n     * This is a convenient method to avoid traversing the tree 2 times to\n     * get and set.\n     */\n    setNodeWithFn(gindex, getNewNode) {\n        this.rootNode = setNodeWithFn(this.rootNode, gindex, getNewNode);\n    }\n    /**\n     * Set the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    setNodeAtDepth(depth, index, node) {\n        this.rootNode = setNodeAtDepth(this.rootNode, depth, index, node);\n    }\n    /**\n     * Set the hash at the specified gindex.\n     *\n     * Note: This will set a new `LeafNode` at the specified gindex.\n     */\n    setRoot(index, root) {\n        this.setNode(index, node_1.LeafNode.fromRoot(root));\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodesAtDepth(depth, startIndex, count) {\n        return getNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    iterateNodesAtDepth(depth, startIndex, count) {\n        return iterateNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Return a merkle proof for the node at the specified gindex.\n     */\n    getSingleProof(index) {\n        return single_1.createSingleProof(this.rootNode, index)[1];\n    }\n    /**\n     * Return a merkle proof for the proof input.\n     *\n     * This method can be used to create multiproofs.\n     */\n    getProof(input) {\n        return proof_1.createProof(this.rootNode, input);\n    }\n}\nexports.Tree = Tree;\n/**\n * Return the node at the specified gindex.\n */\nfunction getNode(rootNode, gindex) {\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    let node = rootNode;\n    for (let i = 1; i < gindexBitstring.length; i++) {\n        if (node.isLeaf()) {\n            throw new Error(`Invalid tree - found leaf at depth ${i}`);\n        }\n        // If bit is set, means navigate right\n        node = gindexBitstring[i] === \"1\" ? node.right : node.left;\n    }\n    return node;\n}\nexports.getNode = getNode;\n/**\n * Set the node at at the specified gindex.\n * Returns the new root node.\n */\nfunction setNode(rootNode, gindex, n) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, n);\n}\nexports.setNode = setNode;\n/**\n * Traverse to the node at the specified gindex,\n * then apply the function to get a new node and set the node at the specified gindex with the result.\n *\n * This is a convenient method to avoid traversing the tree 2 times to\n * get and set.\n *\n * Returns the new root node.\n */\nfunction setNodeWithFn(rootNode, gindex, getNewNode) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    const lastParentNode = parentNodes[parentNodes.length - 1];\n    const lastBit = gindexBitstring[gindexBitstring.length - 1];\n    const oldNode = lastBit === \"1\" ? lastParentNode.right : lastParentNode.left;\n    const newNode = getNewNode(oldNode);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, newNode);\n}\nexports.setNodeWithFn = setNodeWithFn;\n/**\n * Traverse the tree from root node, ignore the last bit to get all parent nodes\n * of the specified bitstring.\n */\nfunction getParentNodes(rootNode, bitstring) {\n    let node = rootNode;\n    // Keep a list of all parent nodes of node at gindex `index`. Then walk the list\n    // backwards to rebind them \"recursively\" with the new nodes without using functions\n    const parentNodes = [rootNode];\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Ignore the last bit, no need to push the target node to the parentNodes array\n    for (let i = 1; i < bitstring.length - 1; i++) {\n        // Compare to string directly to prevent unnecessary type conversions\n        if (bitstring[i] === \"1\") {\n            node = node.right;\n        }\n        else {\n            node = node.left;\n        }\n        parentNodes.push(node);\n    }\n    return parentNodes;\n}\n/**\n * Build a new tree structure from bitstring, parentNodes and a new node.\n * Returns the new root node.\n */\nfunction rebindNodeToRoot(bitstring, parentNodes, newNode) {\n    let node = newNode;\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Iterate the list backwards including the last bit, but offset the parentNodes array\n    // by one since the first bit in bitstring was ignored in the previous loop\n    for (let i = bitstring.length - 1; i >= 1; i--) {\n        if (bitstring[i] === \"1\") {\n            node = new node_1.BranchNode(parentNodes[i - 1].left, node);\n        }\n        else {\n            node = new node_1.BranchNode(node, parentNodes[i - 1].right);\n        }\n    }\n    return node;\n}\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction getNodeAtDepth(rootNode, depth, index) {\n    if (depth === 0) {\n        return rootNode;\n    }\n    if (depth === 1) {\n        return index === 0 ? rootNode.left : rootNode.right;\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let node = rootNode;\n    for (let d = depthiRoot; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n    }\n    return node;\n}\nexports.getNodeAtDepth = getNodeAtDepth;\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodeAtDepth(rootNode, nodesDepth, index, nodeChanged) {\n    // TODO: OPTIMIZE (if necessary)\n    return setNodesAtDepth(rootNode, nodesDepth, [index], [nodeChanged]);\n}\nexports.setNodeAtDepth = setNodeAtDepth;\n/**\n * Set multiple nodes in batch, editing and traversing nodes strictly once.\n *\n * - gindexes MUST be sorted in ascending order beforehand.\n * - All gindexes must be at the exact same depth.\n * - Depth must be > 0, if 0 just replace the root node.\n *\n * Strategy: for each gindex in `gindexes` navigate to the depth of its parent,\n * and create a new parent. Then calculate the closest common depth with the next\n * gindex and navigate upwards creating or caching nodes as necessary. Loop and repeat.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodesAtDepth(rootNode, nodesDepth, indexes, nodes) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // If depth is 0 there's only one node max and the optimization below will cause a navigation error.\n    // For this case, check if there's a new root node and return it, otherwise the current rootNode.\n    if (nodesDepth === 0) {\n        return nodes.length > 0 ? nodes[0] : rootNode;\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    /**\n     * Temp stack of left parent nodes, index by depthi.\n     * Node leftParentNodeStack[depthi] is a node at d = depthi - 1, such that:\n     * ```\n     * parentNodeStack[depthi].left = leftParentNodeStack[depthi]\n     * ```\n     */\n    const leftParentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // TODO: Iterate to depth 32 to allow using bit ops\n    // for (; depthi >= 32; depthi--) {\n    //   node = node.left;\n    // }\n    for (let i = 0; i < indexes.length; i++) {\n        const index = indexes[i];\n        // Navigate down until parent depth, and store the chain of nodes\n        //\n        // Starts from latest common depth, so node is the parent node at `depthi`\n        // When persisting the next node, store at the `d - 1` since its the child of node at `depthi`\n        //\n        // Stops at the level above depthiParent. For the re-binding routing below node must be at depthiParent\n        for (let d = depthi; d > depthiParent; d--) {\n            node = isLeftNode(d, index) ? node.left : node.right;\n            parentNodeStack[d - 1] = node;\n        }\n        depthi = depthiParent;\n        // If this is the left node, check first it the next node is on the right\n        //\n        //   -    If both nodes exist, create new\n        //  / \\\n        // x   x\n        //\n        //   -    If only the left node exists, rebind left\n        //  / \\\n        // x   -\n        //\n        //   -    If this is the right node, only the right node exists, rebind right\n        //  / \\\n        // -   x\n        // d = 0, mask = 1 << d = 1\n        const isLeftLeafNode = (index & 1) !== 1;\n        if (isLeftLeafNode) {\n            // Next node is the very next to the right of current node\n            if (index + 1 === indexes[i + 1]) {\n                node = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n                // Move pointer one extra forward since node has consumed two nodes\n                i++;\n            }\n            else {\n                node = new node_1.BranchNode(nodes[i], node.right);\n            }\n        }\n        else {\n            node = new node_1.BranchNode(node.left, nodes[i]);\n        }\n        // Here `node` is the new BranchNode at depthi `depthiParent`\n        // Now climb upwards until finding the common node with the next index\n        // For the last iteration, climb to the root at `depthiRoot`\n        const isLastIndex = i >= indexes.length - 1;\n        const diffDepthi = isLastIndex ? depthiRoot : findDiffDepthi(index, indexes[i + 1]);\n        // When climbing up from a left node there are two possible paths\n        // 1. Go to the right of the parent: Store left node to rebind latter\n        // 2. Go another level up: Will never visit the left node again, so must rebind now\n        // 🡼 \\     Rebind left only, will never visit this node again\n        // 🡽 /\\\n        //\n        //    / 🡽  Rebind left only (same as above)\n        // 🡽 /\\\n        //\n        // 🡽 /\\ 🡾  Store left node to rebind the entire node when returning\n        //\n        // 🡼 \\     Rebind right with left if exists, will never visit this node again\n        //   /\\ 🡼\n        //\n        //    / 🡽  Rebind right with left if exists (same as above)\n        //   /\\ 🡼\n        for (let d = depthiParent + 1; d <= diffDepthi; d++) {\n            // If node is on the left, store for latter\n            // If node is on the right merge with stored left node\n            if (isLeftNode(d, index)) {\n                if (isLastIndex || d !== diffDepthi) {\n                    // If it's last index, bind with parent since it won't navigate to the right anymore\n                    // Also, if still has to move upwards, rebind since the node won't be visited anymore\n                    node = new node_1.BranchNode(node, parentNodeStack[d].right);\n                }\n                else {\n                    // Only store the left node if it's at d = diffDepth\n                    leftParentNodeStack[d] = node;\n                    node = parentNodeStack[d];\n                }\n            }\n            else {\n                const leftNode = leftParentNodeStack[d];\n                if (leftNode !== undefined) {\n                    node = new node_1.BranchNode(leftNode, node);\n                    leftParentNodeStack[d] = undefined;\n                }\n                else {\n                    node = new node_1.BranchNode(parentNodeStack[d].left, node);\n                }\n            }\n        }\n        // Prepare next loop\n        // Go to the parent of the depth with diff, to switch branches to the right\n        depthi = diffDepthi;\n    }\n    // Done, return new root node\n    return node;\n}\nexports.setNodesAtDepth = setNodesAtDepth;\n/**\n * Fast read-only iteration\n * In-order traversal of nodes at `depth`\n * starting from the `startIndex`-indexed node\n * iterating through `count` nodes\n *\n * **Strategy**\n * 1. Navigate down to parentDepth storing a stack of parents\n * 2. At target level push current node\n * 3. Go up to the first level that navigated left\n * 4. Repeat (1) for next index\n */\nfunction getNodesAtDepth(rootNode, depth, startIndex, count) {\n    // Optimized paths for short trees (x20 times faster)\n    if (depth === 0) {\n        return startIndex === 0 && count > 0 ? [rootNode] : [];\n    }\n    else if (depth === 1) {\n        if (count === 0) {\n            return [];\n        }\n        else if (count === 1) {\n            return startIndex === 0 ? [rootNode.left] : [rootNode.right];\n        }\n        else {\n            return [rootNode.left, rootNode.right];\n        }\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    const nodes = new Array(count);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let i = 0; i < count; i++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, startIndex + i);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        nodes[i] = node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n    return nodes;\n}\nexports.getNodesAtDepth = getNodesAtDepth;\n/**\n * @see getNodesAtDepth but instead of pushing to an array, it yields\n */\nfunction* iterateNodesAtDepth(rootNode, depth, startIndex, count) {\n    const endIndex = startIndex + count;\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let index = startIndex; index < endIndex; index++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, index);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        yield node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n}\nexports.iterateNodesAtDepth = iterateNodesAtDepth;\n/**\n * Zero's all nodes right of index with constant depth of `nodesDepth`.\n *\n * For example, zero-ing this tree at depth 2 after index 0\n * ```\n *    X              X\n *  X   X    ->    X   0\n * X X X X        X 0 0 0\n * ```\n *\n * Or, zero-ing this tree at depth 3 after index 2\n * ```\n *        X                     X\n *    X       X             X       0\n *  X   X   X   X    ->   X   X   0   0\n * X X X X X X X X       X X X 0 0 0 0 0\n * ```\n *\n * The strategy is to first navigate down to `nodesDepth` and `index` and keep a stack of parents.\n * Then navigate up re-binding:\n * - If navigated to the left rebind with zeroNode()\n * - If navigated to the right rebind with parent.left from the stack\n */\nfunction treeZeroAfterIndex(rootNode, nodesDepth, index) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // Degenerate case where tree is zero after a negative index (-1).\n    // All positive indexes are zero, so the entire tree is zero. Return cached zero node as root.\n    if (index < 0) {\n        return zeroNode_1.zeroNode(nodesDepth);\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // Navigate down until parent depth, and store the chain of nodes\n    //\n    // Stops at the depthiParent level. To rebind below down to `nodesDepth`\n    for (let d = depthi; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n        parentNodeStack[d - 1] = node;\n    }\n    depthi = depthiParent;\n    // Now climb up re-binding with either zero of existing tree.\n    for (let d = depthiParent; d <= depthiRoot; d++) {\n        if (isLeftNode(d, index)) {\n            // If navigated to the left, then all the child nodes of the right node are NOT part of the new tree.\n            // So re-bind new `node` with a zeroNode at the current depth.\n            node = new node_1.BranchNode(node, zeroNode_1.zeroNode(d));\n        }\n        else {\n            // If navigated to the right, then all the child nodes of the left node are part of the new tree.\n            // So re-bind new `node` with the existing left node of the parent.\n            node = new node_1.BranchNode(parentNodeStack[d].left, node);\n        }\n    }\n    // Done, return new root node\n    return node;\n}\nexports.treeZeroAfterIndex = treeZeroAfterIndex;\n/**\n * Returns true if the `index` at `depth` is a left node, false if it is a right node.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n * In Eth2 case the biggest tree's index is 2**40 (VALIDATOR_REGISTRY_LIMIT)\n */\nfunction isLeftNode(depthi, index) {\n    if (depthi > 31) {\n        // Javascript can only do bitwise ops with 32 bit numbers.\n        // Shifting left 1 by 32 wraps around and becomes 1.\n        // Get the high part of `index` and adjust depthi\n        const indexHi = (index / 2 ** 32) >>> 0;\n        const mask = 1 << (depthi - 32);\n        return (indexHi & mask) !== mask;\n    }\n    const mask = 1 << depthi;\n    return (index & mask) !== mask;\n}\n/**\n * depth depthi   gindexes   indexes\n * 0     1           1          0\n * 1     0         2   3      0   1\n * 2     -        4 5 6 7    0 1 2 3\n *\n * **Conditions**:\n * - `from` and `to` must not be equal\n *\n * @param from Index\n * @param to Index\n */\nfunction findDiffDepthi(from, to) {\n    return (\n    // (0,0) -> 0 | (0,1) -> 1 | (0,2) -> 2\n    Math.ceil(Math.log2(-~(from ^ to))) -\n        // Must offset by one to match the depthi scale\n        1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeMultiProofBitstrings = exports.SortOrder = exports.filterParentBitstrings = exports.sortDecreasingBitstrings = exports.sortInOrderBitstrings = exports.computeProofBitstrings = exports.computeProofGindices = void 0;\nconst gindex_1 = require(\"../gindex\");\n// Not currently in use, but simpler implementation useful for testing\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofGindices(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g > 1) {\n        path.add(g);\n        branch.add(gindex_1.gindexSibling(g));\n        g = gindex_1.gindexParent(g);\n    }\n    return { path, branch };\n}\nexports.computeProofGindices = computeProofGindices;\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofBitstrings(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g.length > 1) {\n        path.add(g);\n        const lastBit = g[g.length - 1];\n        const parent = g.substring(0, g.length - 1);\n        branch.add(parent + (Number(lastBit) ^ 1));\n        g = parent;\n    }\n    return { path, branch };\n}\nexports.computeProofBitstrings = computeProofBitstrings;\n/**\n * Sort generalized indices in-order\n * @param bitLength maximum bit length of generalized indices to sort\n */\nfunction sortInOrderBitstrings(gindices, bitLength) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices\n        .map((g) => g.padEnd(bitLength))\n        .sort()\n        .map((g) => g.trim());\n}\nexports.sortInOrderBitstrings = sortInOrderBitstrings;\n/**\n * Sort generalized indices in decreasing order\n */\nfunction sortDecreasingBitstrings(gindices) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices.sort((a, b) => {\n        if (a.length < b.length) {\n            return 1;\n        }\n        else if (b.length < a.length) {\n            return -1;\n        }\n        let aPos0 = a.indexOf(\"0\");\n        let bPos0 = b.indexOf(\"0\");\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (aPos0 === -1) {\n                return -1;\n            }\n            else if (bPos0 === -1) {\n                return 1;\n            }\n            if (aPos0 < bPos0) {\n                return 1;\n            }\n            else if (bPos0 < aPos0) {\n                return -1;\n            }\n            aPos0 = a.indexOf(\"0\", aPos0 + 1);\n            bPos0 = b.indexOf(\"0\", bPos0 + 1);\n        }\n    });\n}\nexports.sortDecreasingBitstrings = sortDecreasingBitstrings;\n/**\n * Filter out parent generalized indices\n */\nfunction filterParentBitstrings(gindices) {\n    const sortedBitstrings = gindices.slice().sort((a, b) => a.length - b.length);\n    const filtered = [];\n    outer: for (let i = 0; i < sortedBitstrings.length; i++) {\n        const bsA = sortedBitstrings[i];\n        for (let j = i + 1; j < sortedBitstrings.length; j++) {\n            const bsB = sortedBitstrings[j];\n            if (bsB.startsWith(bsA)) {\n                continue outer;\n            }\n        }\n        filtered.push(bsA);\n    }\n    return filtered;\n}\nexports.filterParentBitstrings = filterParentBitstrings;\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[SortOrder[\"InOrder\"] = 0] = \"InOrder\";\n    SortOrder[SortOrder[\"Decreasing\"] = 1] = \"Decreasing\";\n    SortOrder[SortOrder[\"Unsorted\"] = 2] = \"Unsorted\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\n/**\n * Return the set of generalized indices required for a multiproof\n * This may include all leaves and any necessary witnesses\n * @param gindices leaves to include in proof\n * @returns all generalized indices required for a multiproof (leaves and witnesses), deduplicated and sorted\n */\nfunction computeMultiProofBitstrings(gindices, includeLeaves = true, sortOrder = SortOrder.InOrder) {\n    const leaves = filterParentBitstrings(gindices);\n    // Maybe initialize the proof indices with the leaves\n    const proof = new Set(includeLeaves ? leaves : []);\n    const paths = new Set();\n    const branches = new Set();\n    // Collect all path indices and all branch indices\n    let maxBitLength = 1;\n    for (const gindex of leaves) {\n        if (gindex.length > maxBitLength)\n            maxBitLength = gindex.length;\n        const { path, branch } = computeProofBitstrings(gindex);\n        path.forEach((g) => paths.add(g));\n        branch.forEach((g) => branches.add(g));\n    }\n    // Remove all branches that are included in the paths\n    paths.forEach((g) => branches.delete(g));\n    // Add all remaining branches to the leaves\n    branches.forEach((g) => proof.add(g));\n    switch (sortOrder) {\n        case SortOrder.InOrder:\n            return sortInOrderBitstrings(Array.from(proof), maxBitLength);\n        case SortOrder.Decreasing:\n            return sortDecreasingBitstrings(Array.from(proof));\n        case SortOrder.Unsorted:\n            return Array.from(proof);\n    }\n}\nexports.computeMultiProofBitstrings = computeMultiProofBitstrings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromMultiProof = exports.createMultiProof = void 0;\nconst node_1 = require(\"../node\");\nconst tree_1 = require(\"../tree\");\nconst util_1 = require(\"./util\");\n/**\n * Create an multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices of leaves to include in the proof\n */\nfunction createMultiProof(rootNode, gindices) {\n    const tree = new tree_1.Tree(rootNode);\n    const witnessGindices = util_1.computeMultiProofBitstrings(gindices.map((gindex) => gindex.toString(2)), false, util_1.SortOrder.Decreasing);\n    const leafGindices = gindices.slice().sort((a, b) => (a < b ? 1 : -1));\n    const leaves = leafGindices.map((gindex) => tree.getRoot(gindex));\n    const witnesses = witnessGindices.map((gindex) => tree.getRoot(gindex));\n    return [leaves, witnesses, leafGindices];\n}\nexports.createMultiProof = createMultiProof;\n/**\n * Recreate a `Node` given a multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param leaves leaves of a EF multiproof\n * @param witnesses witnesses of a EF multiproof\n * @param gindices generalized indices of the leaves\n */\nfunction createNodeFromMultiProof(leaves, witnesses, gindices) {\n    if (leaves.length !== gindices.length) {\n        throw new Error(\"Leaves length should equal gindices length\");\n    }\n    const leafBitstrings = gindices.map((gindex) => gindex.toString(2));\n    const witnessBitstrings = util_1.computeMultiProofBitstrings(leafBitstrings, false, util_1.SortOrder.Decreasing);\n    if (witnessBitstrings.length !== witnesses.length) {\n        throw new Error(\"Witnesses length should equal witnesses gindices length\");\n    }\n    // Algorithm:\n    // create an object which tracks key-values for each level\n    // pre-load leaves and witnesses into the level object\n    // level by level, starting from the bottom,\n    // find the sibling, create the parent, store it in the next level up\n    // the root is in level 1\n    const maxLevel = Math.max(leafBitstrings[0]?.length ?? 0, witnessBitstrings[0]?.length ?? 0);\n    const levels = Object.fromEntries(Array.from({ length: maxLevel }, (_, i) => [i + 1, {}]));\n    // preload leaves and witnesses\n    for (let i = 0; i < leafBitstrings.length; i++) {\n        const leafBitstring = leafBitstrings[i];\n        const leaf = leaves[i];\n        levels[leafBitstring.length][leafBitstring] = node_1.LeafNode.fromRoot(leaf);\n    }\n    for (let i = 0; i < witnessBitstrings.length; i++) {\n        const witnessBitstring = witnessBitstrings[i];\n        const witness = witnesses[i];\n        levels[witnessBitstring.length][witnessBitstring] = node_1.LeafNode.fromRoot(witness);\n    }\n    for (let i = maxLevel; i > 1; i--) {\n        const level = levels[i];\n        const parentLevel = levels[i - 1];\n        for (const bitstring of Object.keys(level)) {\n            const node = level[bitstring];\n            // if the node doesn't exist, we've already processed its sibling\n            if (!node) {\n                continue;\n            }\n            const isLeft = bitstring[bitstring.length - 1] === \"0\";\n            const parentBitstring = bitstring.substring(0, bitstring.length - 1);\n            const siblingBitstring = parentBitstring + (isLeft ? \"1\" : \"0\");\n            const siblingNode = level[siblingBitstring];\n            if (!siblingNode) {\n                throw new Error(`Sibling not found: ${siblingBitstring}`);\n            }\n            // store the parent node\n            const parentNode = isLeft ? new node_1.BranchNode(node, siblingNode) : new node_1.BranchNode(siblingNode, node);\n            parentLevel[parentBitstring] = parentNode;\n            // delete the used nodes\n            delete level[bitstring];\n            delete level[siblingBitstring];\n        }\n    }\n    const root = levels[1][\"1\"];\n    if (!root) {\n        throw new Error(\"Internal consistency error: no root found\");\n    }\n    return root;\n}\nexports.createNodeFromMultiProof = createNodeFromMultiProof;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeTreeOffsetProof = exports.serializeTreeOffsetProof = exports.computeTreeOffsetProofSerializedLength = exports.createNodeFromTreeOffsetProof = exports.createTreeOffsetProof = exports.treeOffsetProofToNode = exports.nodeToTreeOffsetProof = void 0;\nconst node_1 = require(\"../node\");\nconst util_1 = require(\"./util\");\n/**\n * Compute offsets and leaves of a tree-offset proof\n *\n * Recursive function\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n * @param node current node in the tree\n * @param gindex current generalized index in the tree\n * @param proofGindices generalized indices to left include in the proof - must be sorted in-order according to the tree\n */\nfunction nodeToTreeOffsetProof(node, gindex, proofGindices) {\n    if (!proofGindices.length || !proofGindices[0].startsWith(gindex)) {\n        // there are no proof indices left OR the current subtree contains no remaining proof indices\n        return [[], []];\n    }\n    else if (gindex === proofGindices[0]) {\n        // the current node is at the next proof index\n        proofGindices.shift();\n        return [[], [node.root]];\n    }\n    else {\n        // recursively compute offsets, leaves for the left and right subtree\n        const [leftOffsets, leftLeaves] = nodeToTreeOffsetProof(node.left, gindex + \"0\", proofGindices);\n        const [rightOffsets, rightLeaves] = nodeToTreeOffsetProof(node.right, gindex + \"1\", proofGindices);\n        // the offset prepended to the list is # of leaves in the left subtree\n        const pivot = leftLeaves.length;\n        return [[pivot].concat(leftOffsets, rightOffsets), leftLeaves.concat(rightLeaves)];\n    }\n}\nexports.nodeToTreeOffsetProof = nodeToTreeOffsetProof;\n/**\n * Recreate a `Node` given offsets and leaves of a tree-offset proof\n *\n * Recursive definition\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n */\nfunction treeOffsetProofToNode(offsets, leaves) {\n    if (!leaves.length) {\n        throw new Error(\"Proof must contain gt 0 leaves\");\n    }\n    else if (leaves.length === 1) {\n        return node_1.LeafNode.fromRoot(leaves[0]);\n    }\n    else {\n        // the offset popped from the list is the # of leaves in the left subtree\n        const pivot = offsets[0];\n        return new node_1.BranchNode(treeOffsetProofToNode(offsets.slice(1, pivot), leaves.slice(0, pivot)), treeOffsetProofToNode(offsets.slice(pivot), leaves.slice(pivot)));\n    }\n}\nexports.treeOffsetProofToNode = treeOffsetProofToNode;\n/**\n * Create a tree-offset proof\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices to include in the proof\n */\nfunction createTreeOffsetProof(rootNode, gindices) {\n    return nodeToTreeOffsetProof(rootNode, \"1\", util_1.computeMultiProofBitstrings(gindices.map((g) => g.toString(2))));\n}\nexports.createTreeOffsetProof = createTreeOffsetProof;\n/**\n * Recreate a `Node` given a tree-offset proof\n *\n * @param offsets offsets of a tree-offset proof\n * @param leaves leaves of a tree-offset proof\n */\nfunction createNodeFromTreeOffsetProof(offsets, leaves) {\n    // TODO validation\n    return treeOffsetProofToNode(offsets, leaves);\n}\nexports.createNodeFromTreeOffsetProof = createNodeFromTreeOffsetProof;\nfunction computeTreeOffsetProofSerializedLength(offsets, leaves) {\n    // add 1 for # of leaves\n    return (offsets.length + 1) * 2 + leaves.length * 32;\n}\nexports.computeTreeOffsetProofSerializedLength = computeTreeOffsetProofSerializedLength;\n// Serialized tree offset proof structure:\n// # of leaves - 2 bytes\n// offsets - 2 bytes each\n// leaves - 32 bytes each\nfunction serializeTreeOffsetProof(output, byteOffset, offsets, leaves) {\n    const writer = new DataView(output.buffer, output.byteOffset, output.byteLength);\n    // set # of leaves\n    writer.setUint16(byteOffset, leaves.length, true);\n    // set offsets\n    const offsetsStartIndex = byteOffset + 2;\n    for (let i = 0; i < offsets.length; i++) {\n        writer.setUint16(i * 2 + offsetsStartIndex, offsets[i], true);\n    }\n    // set leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    for (let i = 0; i < leaves.length; i++) {\n        output.set(leaves[i], i * 32 + leavesStartIndex);\n    }\n}\nexports.serializeTreeOffsetProof = serializeTreeOffsetProof;\nfunction deserializeTreeOffsetProof(data, byteOffset) {\n    const reader = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // get # of leaves\n    const leafCount = reader.getUint16(byteOffset, true);\n    if (data.length < (leafCount - 1) * 2 + leafCount * 32) {\n        throw new Error(\"Unable to deserialize tree offset proof: not enough bytes\");\n    }\n    // get offsets\n    const offsetsStartIndex = byteOffset + 2;\n    const offsets = Array.from({ length: leafCount - 1 }, (_, i) => reader.getUint16(i * 2 + offsetsStartIndex, true));\n    // get leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    const leaves = Array.from({ length: leafCount }, (_, i) => data.subarray(i * 32 + leavesStartIndex, (i + 1) * 32 + leavesStartIndex));\n    return [offsets, leaves];\n}\nexports.deserializeTreeOffsetProof = deserializeTreeOffsetProof;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeProof = exports.serializeProof = exports.createNodeFromProof = exports.createProof = exports.ProofTypeSerialized = exports.ProofType = void 0;\nconst multi_1 = require(\"./multi\");\nconst single_1 = require(\"./single\");\nconst treeOffset_1 = require(\"./treeOffset\");\nvar ProofType;\n(function (ProofType) {\n    ProofType[\"single\"] = \"single\";\n    ProofType[\"treeOffset\"] = \"treeOffset\";\n    ProofType[\"multi\"] = \"multi\";\n})(ProofType = exports.ProofType || (exports.ProofType = {}));\n/**\n * Serialized proofs are prepended with a single byte, denoting their type\n */\nexports.ProofTypeSerialized = [\n    ProofType.single,\n    ProofType.treeOffset,\n    ProofType.multi, // 2\n];\nfunction createProof(rootNode, input) {\n    switch (input.type) {\n        case ProofType.single: {\n            const [leaf, witnesses] = single_1.createSingleProof(rootNode, input.gindex);\n            return {\n                type: ProofType.single,\n                gindex: input.gindex,\n                leaf,\n                witnesses,\n            };\n        }\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.createTreeOffsetProof(rootNode, input.gindices);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        case ProofType.multi: {\n            const [leaves, witnesses, gindices] = multi_1.createMultiProof(rootNode, input.gindices);\n            return {\n                type: ProofType.multi,\n                leaves,\n                witnesses,\n                gindices,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createProof = createProof;\nfunction createNodeFromProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n            return single_1.createNodeFromSingleProof(proof.gindex, proof.leaf, proof.witnesses);\n        case ProofType.treeOffset:\n            return treeOffset_1.createNodeFromTreeOffsetProof(proof.offsets, proof.leaves);\n        case ProofType.multi:\n            return multi_1.createNodeFromMultiProof(proof.leaves, proof.witnesses, proof.gindices);\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createNodeFromProof = createNodeFromProof;\nfunction serializeProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const output = new Uint8Array(1 + treeOffset_1.computeTreeOffsetProofSerializedLength(proof.offsets, proof.leaves));\n            output[0] = exports.ProofTypeSerialized.indexOf(ProofType.treeOffset);\n            treeOffset_1.serializeTreeOffsetProof(output, 1, proof.offsets, proof.leaves);\n            return output;\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.serializeProof = serializeProof;\nfunction deserializeProof(data) {\n    const proofType = exports.ProofTypeSerialized[data[0]];\n    if (!proofType) {\n        throw new Error(\"Invalid proof type\");\n    }\n    switch (proofType) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.deserializeTreeOffsetProof(data, 1);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.deserializeProof = deserializeProof;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./gindex\"), exports);\n__exportStar(require(\"./hash\"), exports);\n__exportStar(require(\"./node\"), exports);\n__exportStar(require(\"./packedNode\"), exports);\n__exportStar(require(\"./proof\"), exports);\n__exportStar(require(\"./subtree\"), exports);\n__exportStar(require(\"./tree\"), exports);\n__exportStar(require(\"./zeroNode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroHash = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\n// create array of \"zero hashes\", successively hashed zero chunks\nconst zeroHashes = [new Uint8Array(32)];\nfunction zeroHash(depth) {\n    if (depth >= zeroHashes.length) {\n        for (let i = zeroHashes.length; i <= depth; i++) {\n            zeroHashes[i] = as_sha256_1.digest2Bytes32(zeroHashes[i - 1], zeroHashes[i - 1]);\n        }\n    }\n    return zeroHashes[depth];\n}\nexports.zeroHash = zeroHash;\n//# sourceMappingURL=zeros.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nextPowerOf2 = exports.maxChunksToDepth = exports.bitLength = exports.mixInLength = exports.splitIntoRootChunks = exports.merkleize = exports.hash64 = void 0;\nconst as_sha256_1 = require(\"@chainsafe/as-sha256\");\nconst zeros_1 = require(\"./zeros\");\nfunction hash64(bytes32A, bytes32B) {\n    return as_sha256_1.digest2Bytes32(bytes32A, bytes32B);\n}\nexports.hash64 = hash64;\nfunction merkleize(chunks, padFor) {\n    const layerCount = bitLength(nextPowerOf2(padFor) - 1);\n    if (chunks.length == 0) {\n        return zeros_1.zeroHash(layerCount);\n    }\n    let chunkCount = chunks.length;\n    // Instead of pushing on all padding zero chunks at the leaf level\n    // we push on zero hash chunks at the highest possible level to avoid over-hashing\n    for (let l = 0; l < layerCount; l++) {\n        const padCount = chunkCount % 2;\n        const paddedChunkCount = chunkCount + padCount;\n        // if the chunks.length is odd\n        // we need to push on the zero-hash of that level to merkleize that level\n        for (let i = 0; i < padCount; i++) {\n            chunks[chunkCount + i] = zeros_1.zeroHash(l);\n        }\n        for (let i = 0; i < paddedChunkCount; i += 2) {\n            chunks[i / 2] = hash64(chunks[i], chunks[i + 1]);\n        }\n        chunkCount = paddedChunkCount / 2;\n    }\n    return chunks[0];\n}\nexports.merkleize = merkleize;\n/**\n * Split a long Uint8Array into Uint8Array of exactly 32 bytes\n */\nfunction splitIntoRootChunks(longChunk) {\n    const chunkCount = Math.ceil(longChunk.length / 32);\n    const chunks = new Array(chunkCount);\n    for (let i = 0; i < chunkCount; i++) {\n        const chunk = new Uint8Array(32);\n        chunk.set(longChunk.slice(i * 32, (i + 1) * 32));\n        chunks[i] = chunk;\n    }\n    return chunks;\n}\nexports.splitIntoRootChunks = splitIntoRootChunks;\n/** @ignore */\nfunction mixInLength(root, length) {\n    const lengthBuf = Buffer.alloc(32);\n    lengthBuf.writeUIntLE(length, 0, 6);\n    return hash64(root, lengthBuf);\n}\nexports.mixInLength = mixInLength;\n// x2 faster than bitLengthStr() which uses Number.toString(2)\nfunction bitLength(i) {\n    if (i === 0) {\n        return 0;\n    }\n    return Math.floor(Math.log2(i)) + 1;\n}\nexports.bitLength = bitLength;\n/**\n * Given maxChunkCount return the chunkDepth\n * ```\n * n: [0,1,2,3,4,5,6,7,8,9]\n * d: [0,0,1,2,2,3,3,3,3,4]\n * ```\n */\nfunction maxChunksToDepth(n) {\n    if (n === 0)\n        return 0;\n    return Math.ceil(Math.log2(n));\n}\nexports.maxChunksToDepth = maxChunksToDepth;\n/** @ignore */\nfunction nextPowerOf2(n) {\n    return n <= 0 ? 1 : Math.pow(2, bitLength(n - 1));\n}\nexports.nextPowerOf2 = nextPowerOf2;\n//# sourceMappingURL=merkleize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.namedClass = void 0;\nfunction namedClass(superClass, className) {\n    return new Function(\"superClass\", `return class ${className} extends superClass {}`)(superClass);\n}\nexports.namedClass = namedClass;\n//# sourceMappingURL=named.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertValidArrayLength = exports.value_defaultValueArray = exports.value_equals = exports.value_cloneArray = exports.value_toJsonArray = exports.value_fromJsonArray = exports.tree_deserializeFromBytesArrayBasic = exports.tree_serializeToBytesArrayBasic = exports.value_deserializeFromBytesArrayBasic = exports.value_serializeToBytesArrayBasic = exports.setChunksNode = exports.addLengthNode = exports.getChunksNodeFromRootNode = exports.getLengthFromRootNode = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\n// There's a matrix of Array-ish types that require a combination of this functions.\n// Regular class extends syntax doesn't work because it can only extend a single class.\n//\n// Type of array: List, Vector. Changes length property\n// Type of element: Basic, Composite. Changes merkelization if packing or not.\n// If Composite: Fixed len, Variable len. Changes the serialization requiring offsets.\n/**\n * SSZ Lists (variable-length arrays) include the length of the list in the tree\n * This length is always in the same index in the tree\n * ```\n *   1\n *  / \\\n * 2   3 // <-here\n * ```\n */\nfunction getLengthFromRootNode(node) {\n    // Length is represented as a Uint32 at the start of the chunk:\n    // 4 = 4 bytes in Uint32\n    // 0 = 0 offset bytes in Node's data\n    return node.right.getUint(4, 0);\n}\nexports.getLengthFromRootNode = getLengthFromRootNode;\nfunction getChunksNodeFromRootNode(node) {\n    return node.left;\n}\nexports.getChunksNodeFromRootNode = getChunksNodeFromRootNode;\nfunction addLengthNode(chunksNode, length) {\n    return new persistent_merkle_tree_1.BranchNode(chunksNode, persistent_merkle_tree_1.LeafNode.fromUint32(length));\n}\nexports.addLengthNode = addLengthNode;\nfunction setChunksNode(rootNode, chunksNode, newLength) {\n    const lengthNode = newLength !== undefined\n        ? // If newLength is set, create a new node for length\n            persistent_merkle_tree_1.LeafNode.fromUint32(newLength)\n        : // else re-use existing node\n            rootNode.right;\n    return new persistent_merkle_tree_1.BranchNode(chunksNode, lengthNode);\n}\nexports.setChunksNode = setChunksNode;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction value_serializeToBytesArrayBasic(elementType, length, output, offset, value) {\n    const elSize = elementType.byteLength;\n    for (let i = 0; i < length; i++) {\n        elementType.value_serializeToBytes(output, offset + i * elSize, value[i]);\n    }\n    return offset + length * elSize;\n}\nexports.value_serializeToBytesArrayBasic = value_serializeToBytesArrayBasic;\nfunction value_deserializeFromBytesArrayBasic(elementType, data, start, end, arrayProps) {\n    const elSize = elementType.byteLength;\n    // Vector + List length validation\n    const length = (end - start) / elSize;\n    assertValidArrayLength(length, arrayProps, true);\n    const values = new Array(length);\n    for (let i = 0; i < length; i++) {\n        // TODO: If faster, consider skipping size check for uint types\n        values[i] = elementType.value_deserializeFromBytes(data, start + i * elSize, start + (i + 1) * elSize);\n    }\n    return values;\n}\nexports.value_deserializeFromBytesArrayBasic = value_deserializeFromBytesArrayBasic;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction tree_serializeToBytesArrayBasic(elementType, length, depth, output, offset, node) {\n    const size = elementType.byteLength * length;\n    const chunkCount = Math.ceil(size / 32);\n    const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, depth, 0, chunkCount);\n    persistent_merkle_tree_1.packedNodeRootsToBytes(output.dataView, offset, size, nodes);\n    return offset + size;\n}\nexports.tree_serializeToBytesArrayBasic = tree_serializeToBytesArrayBasic;\n// List of basic elements will pack them in merkelized form\nfunction tree_deserializeFromBytesArrayBasic(elementType, chunkDepth, data, start, end, arrayProps) {\n    // Vector + List length validation\n    const length = (end - start) / elementType.byteLength;\n    assertValidArrayLength(length, arrayProps, true);\n    // Abstract converting data to LeafNode to allow for custom data representation, such as the hashObject\n    const chunksNode = persistent_merkle_tree_1.packedRootsBytesToNode(chunkDepth, data.dataView, start, end);\n    if (arrayProps.isList) {\n        return addLengthNode(chunksNode, length);\n    }\n    else {\n        return chunksNode;\n    }\n}\nexports.tree_deserializeFromBytesArrayBasic = tree_deserializeFromBytesArrayBasic;\n/**\n * @param length In List length = undefined, Vector length = fixed value\n */\nfunction value_fromJsonArray(elementType, json, arrayProps) {\n    if (!Array.isArray(json)) {\n        throw Error(\"JSON is not an array\");\n    }\n    assertValidArrayLength(json.length, arrayProps);\n    const value = new Array(json.length);\n    for (let i = 0; i < json.length; i++) {\n        value[i] = elementType.fromJson(json[i]);\n    }\n    return value;\n}\nexports.value_fromJsonArray = value_fromJsonArray;\n/**\n * @param length In List length = undefined, Vector length = fixed value\n */\nfunction value_toJsonArray(elementType, value, arrayProps) {\n    const length = arrayProps.isList ? value.length : arrayProps.length;\n    const json = new Array(length);\n    for (let i = 0; i < length; i++) {\n        json[i] = elementType.toJson(value[i]);\n    }\n    return json;\n}\nexports.value_toJsonArray = value_toJsonArray;\n/**\n * Clone recursively an array of basic or composite types\n */\nfunction value_cloneArray(elementType, value) {\n    const newValue = new Array(value.length);\n    for (let i = 0; i < value.length; i++) {\n        newValue[i] = elementType.clone(value[i]);\n    }\n    return newValue;\n}\nexports.value_cloneArray = value_cloneArray;\n/**\n * Check recursively if a type is structuraly equal. Returns early\n */\nfunction value_equals(elementType, a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (!elementType.equals(a[i], b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.value_equals = value_equals;\nfunction value_defaultValueArray(elementType, length) {\n    const values = new Array(length);\n    for (let i = 0; i < length; i++) {\n        values[i] = elementType.defaultValue();\n    }\n    return values;\n}\nexports.value_defaultValueArray = value_defaultValueArray;\n/**\n * @param checkNonDecimalLength Check that length is a multiple of element size.\n * Optional since it's not necessary in getOffsetsArrayComposite() fn.\n */\nfunction assertValidArrayLength(length, arrayProps, checkNonDecimalLength) {\n    if (checkNonDecimalLength && length % 1 !== 0) {\n        throw Error(\"size not multiple of element fixedSize\");\n    }\n    // Vector + List length validation\n    if (arrayProps.isList) {\n        if (length > arrayProps.limit) {\n            throw new Error(`Invalid list length ${length} over limit ${arrayProps.limit}`);\n        }\n    }\n    else {\n        if (length !== arrayProps.length) {\n            throw new Error(`Incorrect vector length ${length} expected ${arrayProps.length}`);\n        }\n    }\n}\nexports.assertValidArrayLength = assertValidArrayLength;\n//# sourceMappingURL=arrayBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUint8ByteToBitBooleanArray = exports.BitArray = void 0;\n/** Globally cache this information. @see getUint8ByteToBitBooleanArray */\nconst uint8ByteToBitBooleanArrays = new Array(256);\n/**\n * BitArray may be represented as an array of bits or compressed into an array of bytes.\n *\n * **Array of bits**:\n * Require 8.87 bytes per bit, so for 512 bits = 4500 bytes.\n * Are 'faster' to iterate with native tooling but are as fast as array of bytes with precomputed caches.\n *\n * **Array of bytes**:\n * Require an average cost of Uint8Array in JS = 220 bytes for 32 bytes, so for 512 bits = 220 bytes.\n * With precomputed boolean arrays per bytes value are as fast to iterate as an array of bits above.\n *\n * This BitArray implementation will represent data as a Uint8Array since it's very cheap to deserialize and can be as\n * fast to iterate as a native array of booleans, precomputing boolean arrays (total memory cost of 16000 bytes).\n */\nclass BitArray {\n    constructor(\n    /** Underlying BitArray Uint8Array data */\n    uint8Array, \n    /** Immutable bitLen of this BitArray */\n    bitLen) {\n        this.uint8Array = uint8Array;\n        this.bitLen = bitLen;\n        if (uint8Array.length !== Math.ceil(bitLen / 8)) {\n            throw Error(\"BitArray uint8Array length does not match bitLen\");\n        }\n    }\n    /** Returns a zero'ed BitArray of `bitLen` */\n    static fromBitLen(bitLen) {\n        return new BitArray(new Uint8Array(Math.ceil(bitLen / 8)), bitLen);\n    }\n    /** Returns a BitArray of `bitLen` with a single bit set to true at position `bitIndex` */\n    static fromSingleBit(bitLen, bitIndex) {\n        const bitArray = BitArray.fromBitLen(bitLen);\n        bitArray.set(bitIndex, true);\n        return bitArray;\n    }\n    /** Returns a BitArray from an array of booleans representation */\n    static fromBoolArray(bitBoolArr) {\n        const bitArray = BitArray.fromBitLen(bitBoolArr.length);\n        for (let i = 0; i < bitBoolArr.length; i++) {\n            if (bitBoolArr[i] === true) {\n                bitArray.set(i, true);\n            }\n        }\n        return bitArray;\n    }\n    clone() {\n        // TODO: Benchmark if Uint8Array.slice(0) is the fastest way to copy data here\n        // Buffer.prototype.slice does not copy memory, Enforce Uint8Array usage https://github.com/nodejs/node/issues/28087\n        return new BitArray(Uint8Array.prototype.slice.call(this.uint8Array, 0), this.bitLen);\n    }\n    /**\n     * Get bit value at index `bitIndex`\n     */\n    get(bitIndex) {\n        const byteIdx = Math.floor(bitIndex / 8);\n        const bitInBit = bitIndex % 8;\n        const mask = 1 << bitInBit;\n        return (this.uint8Array[byteIdx] & mask) === mask;\n    }\n    /**\n     * Set bit value at index `bitIndex`\n     */\n    set(bitIndex, bit) {\n        if (bitIndex >= this.bitLen) {\n            throw Error(`BitArray set bitIndex ${bitIndex} beyond bitLen ${this.bitLen}`);\n        }\n        const byteIdx = Math.floor(bitIndex / 8);\n        const bitInBit = bitIndex % 8;\n        const mask = 1 << bitInBit;\n        let byte = this.uint8Array[byteIdx];\n        if (bit) {\n            // For bit in byte, 1,0 OR 1 = 1\n            // byte 100110\n            // mask 010000\n            // res  110110\n            byte |= mask;\n            this.uint8Array[byteIdx] = byte;\n        }\n        else {\n            // For bit in byte, 1,0 OR 1 = 0\n            if ((byte & mask) === mask) {\n                // byte 110110\n                // mask 010000\n                // res  100110\n                byte ^= mask;\n                this.uint8Array[byteIdx] = byte;\n            }\n            else {\n                // Ok, bit is already 0\n            }\n        }\n    }\n    /** Merge two BitArray bitfields with OR. Must have the same bitLen */\n    mergeOrWith(bitArray2) {\n        if (bitArray2.bitLen !== this.bitLen) {\n            throw Error(\"Must merge BitArrays of same bitLen\");\n        }\n        // Merge bitFields\n        for (let i = 0; i < this.uint8Array.length; i++) {\n            this.uint8Array[i] = this.uint8Array[i] | bitArray2.uint8Array[i];\n        }\n    }\n    /**\n     * Returns an array with the indexes which have a bit set to true\n     */\n    intersectValues(values) {\n        const yes = [];\n        if (values.length !== this.bitLen) {\n            throw Error(`Must not intersect values of length ${values.length} != bitLen ${this.bitLen}`);\n        }\n        const fullByteLen = Math.floor(this.bitLen / 8);\n        const remainderBits = this.bitLen % 8;\n        // Iterate over each byte of bits\n        const bytes = this.uint8Array;\n        for (let iByte = 0; iByte < fullByteLen; iByte++) {\n            // Get the precomputed boolean array for this byte\n            const booleansInByte = getUint8ByteToBitBooleanArray(bytes[iByte]);\n            // For each bit in the byte check participation and add to indexesSelected array\n            for (let iBit = 0; iBit < 8; iBit++) {\n                if (booleansInByte[iBit]) {\n                    yes.push(values[iByte * 8 + iBit]);\n                }\n            }\n        }\n        if (remainderBits > 0) {\n            // Get the precomputed boolean array for this byte\n            const booleansInByte = getUint8ByteToBitBooleanArray(bytes[fullByteLen]);\n            // For each bit in the byte check participation and add to indexesSelected array\n            for (let iBit = 0; iBit < remainderBits; iBit++) {\n                if (booleansInByte[iBit]) {\n                    yes.push(values[fullByteLen * 8 + iBit]);\n                }\n            }\n        }\n        return yes;\n    }\n    /**\n     * Returns the positions of all bits that are set to true\n     */\n    getTrueBitIndexes() {\n        const indexes = [];\n        // Iterate over each byte of bits\n        const bytes = this.uint8Array;\n        for (let iByte = 0, byteLen = bytes.length; iByte < byteLen; iByte++) {\n            // Get the precomputed boolean array for this byte\n            const booleansInByte = getUint8ByteToBitBooleanArray(bytes[iByte]);\n            // For each bit in the byte check participation and add to indexesSelected array\n            for (let iBit = 0; iBit < 8; iBit++) {\n                if (booleansInByte[iBit]) {\n                    indexes.push(iByte * 8 + iBit);\n                }\n            }\n        }\n        return indexes;\n    }\n    /**\n     * Return the position of a single bit set. If no bit set or more than 1 bit set, throws.\n     * @returns\n     *  - number: if there's a single bit set, the number it the single bit set position\n     *  - null: if ERROR_MORE_THAN_ONE_BIT_SET or ERROR_NO_BIT_SET\n     * @throws\n     *  - ERROR_MORE_THAN_ONE_BIT_SET\n     *  - ERROR_NO_BIT_SET\n     */\n    getSingleTrueBit() {\n        let index = null;\n        const bytes = this.uint8Array;\n        // Iterate over each byte of bits\n        for (let iByte = 0, byteLen = bytes.length; iByte < byteLen; iByte++) {\n            // If it's exactly zero, there won't be any indexes, continue early\n            if (bytes[iByte] === 0) {\n                continue;\n            }\n            // Get the precomputed boolean array for this byte\n            const booleansInByte = getUint8ByteToBitBooleanArray(bytes[iByte]);\n            // For each bit in the byte check participation and add to indexesSelected array\n            for (let iBit = 0; iBit < 8; iBit++) {\n                if (booleansInByte[iBit] === true) {\n                    if (index !== null) {\n                        // ERROR_MORE_THAN_ONE_BIT_SET\n                        return null;\n                    }\n                    index = iByte * 8 + iBit;\n                }\n            }\n        }\n        if (index === null) {\n            // ERROR_NO_BIT_SET\n            return null;\n        }\n        else {\n            return index;\n        }\n    }\n    toBoolArray() {\n        const bitBoolArr = new Array(this.bitLen);\n        for (let i = 0; i < this.bitLen; i++) {\n            bitBoolArr[i] = this.get(i);\n        }\n        return bitBoolArr;\n    }\n}\nexports.BitArray = BitArray;\n/**\n * Given a byte (0 -> 255), return a Array of boolean with length = 8, big endian.\n * Ex: 1 => [true false false false false false false false]\n *     5 => [true false true false false fase false false]\n */\nfunction getUint8ByteToBitBooleanArray(byte) {\n    if (!uint8ByteToBitBooleanArrays[byte]) {\n        uint8ByteToBitBooleanArrays[byte] = computeUint8ByteToBitBooleanArray(byte);\n    }\n    return uint8ByteToBitBooleanArrays[byte];\n}\nexports.getUint8ByteToBitBooleanArray = getUint8ByteToBitBooleanArray;\n/** @see getUint8ByteToBitBooleanArray */\nfunction computeUint8ByteToBitBooleanArray(byte) {\n    // this returns little endian\n    const binaryStr = byte.toString(2);\n    const binaryLength = binaryStr.length;\n    const bits = new Array(8);\n    for (let i = 0; i < 8; i++) {\n        bits[i] =\n            i < binaryLength\n                ? //\n                    binaryStr[binaryLength - i - 1] === \"1\"\n                : false;\n    }\n    return bits;\n}\n//# sourceMappingURL=bitArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.byteArrayEquals = exports.fromHexString = exports.toHexString = void 0;\n// Caching this info costs about ~1000 bytes and speeds up toHexString() by x6\nconst hexByByte = new Array(256);\nfunction toHexString(bytes) {\n    let hex = \"0x\";\n    for (const byte of bytes) {\n        if (!hexByByte[byte]) {\n            hexByByte[byte] = byte < 16 ? \"0\" + byte.toString(16) : byte.toString(16);\n        }\n        hex += hexByByte[byte];\n    }\n    return hex;\n}\nexports.toHexString = toHexString;\nfunction fromHexString(hex) {\n    if (typeof hex !== \"string\") {\n        throw new Error(`hex argument type ${typeof hex} must be of type string`);\n    }\n    if (hex.startsWith(\"0x\")) {\n        hex = hex.slice(2);\n    }\n    if (hex.length % 2 !== 0) {\n        throw new Error(`hex string length ${hex.length} must be multiple of 2`);\n    }\n    const byteLen = hex.length / 2;\n    const bytes = new Uint8Array(byteLen);\n    for (let i = 0; i < byteLen; i++) {\n        const byte = parseInt(hex.slice(i * 2, (i + 1) * 2), 16);\n        bytes[i] = byte;\n    }\n    return bytes;\n}\nexports.fromHexString = fromHexString;\nfunction byteArrayEquals(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.byteArrayEquals = byteArrayEquals;\n//# sourceMappingURL=byteArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treePostProcessFromProofNode = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\n/** Duplicated partial declaration to break circular dependency with CompositeType */\nfunction isCompositeType(type) {\n    return !type.isBasic;\n}\n/**\n * Navigates and mutates nodes to post process a tree created with `Tree.createFromProof`.\n * Tree returns regular a tree with only BranchNode and LeafNode instances. However, SSZ features\n * non-standard nodes that make proofs for those types to be un-usable. This include:\n * - BranchNodeStruct: Must contain complete data `tree_fromProofNode` transforms a BranchNode and\n *   all of its data into a single BranchNodeStruct instance.\n *\n * @param bitstring Bitstring without the leading \"1\", since it's only used to compute horizontal indexes.\n */\nfunction treePostProcessFromProofNode(node, type, bitstring = \"\", currentDepth = 0) {\n    // Must run tree_fromProofNode on the first received node (i.e. Validator object)\n    if (currentDepth === 0) {\n        const nodePost = type.tree_fromProofNode(node);\n        if (nodePost.done) {\n            return nodePost.node;\n        }\n        else {\n            node = nodePost.node;\n        }\n    }\n    const atTypeDepth = type.depth === currentDepth;\n    if (node.isLeaf()) {\n        if (atTypeDepth) {\n            const jsonPathProp = type.getIndexProperty(bitstringToIndex(bitstring));\n            if (jsonPathProp === null) {\n                // bitstring is out of bounds, witness node\n                return node;\n            }\n            const childType = type.getPropertyType(jsonPathProp);\n            // If this type merkleized fits in a single chunk then this LeafNode includes all data\n            if (childType.maxChunkCount === 1 && isCompositeType(childType)) {\n                return childType.tree_fromProofNode(node).node;\n            }\n            // Witness node\n            else {\n                return node;\n            }\n        }\n        // LeafNode not at type depth is a witness or a length / selector nodes\n        else {\n            return node;\n        }\n    }\n    else {\n        if (atTypeDepth) {\n            const jsonPathProp = type.getIndexProperty(bitstringToIndex(bitstring));\n            if (jsonPathProp === null) {\n                // bitstring is out of bounds, witness node\n                return node;\n            }\n            const childType = type.getPropertyType(jsonPathProp);\n            if (!isCompositeType(childType)) {\n                throw Error(\"BranchNode does not map to CompositeType\");\n            }\n            const nodePost = childType.tree_fromProofNode(node);\n            // If tree_fromProofNode is the identity function, keep going, otherwise stop navigating\n            if (nodePost.done) {\n                return nodePost.node;\n            }\n            else {\n                return treePostProcessFromProofNode(nodePost.node, childType);\n            }\n        }\n        // BranchNode at not type depth, keep navigating\n        else {\n            const leftNode = treePostProcessFromProofNode(node.left, type, bitstring + \"0\", currentDepth + 1);\n            const rightNode = treePostProcessFromProofNode(node.right, type, bitstring + \"1\", currentDepth + 1);\n            if (leftNode === node.left && rightNode === node.right) {\n                return node;\n            }\n            else {\n                return new persistent_merkle_tree_1.BranchNode(leftNode, rightNode);\n            }\n        }\n    }\n}\nexports.treePostProcessFromProofNode = treePostProcessFromProofNode;\n/** Return the node horizontal index given a bitstring without the leading \"1\" */\nfunction bitstringToIndex(bitstring) {\n    if (bitstring === \"\")\n        return 0;\n    return parseInt(bitstring, 2);\n}\n//# sourceMappingURL=treePostProcessFromProofNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Type = void 0;\n/**\n * An SSZ type provides the following operations:\n * - Serialization from/to bytes to either a value or a tree\n * - Merkelization to compute the hashTreeRoot of both a value and a tree\n * - Proof creation from trees\n * - Create a View and a ViewDU instance from a tree\n * - Manipulate views\n */\nclass Type {\n    /** INTERNAL METHOD: Merkleize value to tree */\n    value_toTree(value) {\n        // TODO: Un-performant path but useful for prototyping. Overwrite in Type if performance is important\n        const uint8Array = new Uint8Array(this.value_serializedSize(value));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.value_serializeToBytes({ uint8Array, dataView }, 0, value);\n        return this.tree_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n    /** INTERNAL METHOD: Un-merkleize tree to value */\n    tree_toValue(node) {\n        // TODO: Un-performant path but useful for prototyping. Overwrite in Type if performance is important\n        const uint8Array = new Uint8Array(this.tree_serializedSize(node));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.tree_serializeToBytes({ uint8Array, dataView }, 0, node);\n        return this.value_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n    /** Serialize a value to binary data */\n    serialize(value) {\n        const uint8Array = new Uint8Array(this.value_serializedSize(value));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.value_serializeToBytes({ uint8Array, dataView }, 0, value);\n        return uint8Array;\n    }\n    /** Deserialize binary data to value */\n    deserialize(uint8Array) {\n        // Buffer.prototype.slice does not copy memory, force use Uint8Array.prototype.slice https://github.com/nodejs/node/issues/28087\n        // - Uint8Array.prototype.slice: Copy memory, safe to mutate\n        // - Buffer.prototype.slice: Does NOT copy memory, mutation affects both views\n        // We could ensure that all Buffer instances are converted to Uint8Array before calling value_deserializeFromBytes\n        // However doing that in a browser friendly way is not easy. Downstream code uses `Uint8Array.prototype.slice.call`\n        // to ensure Buffer.prototype.slice is never used. Unit tests also test non-mutability.\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        return this.value_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n}\nexports.Type = Type;\n//# sourceMappingURL=abstract.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCompositeType = exports.CompositeType = exports.LENGTH_GINDEX = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst byteArray_1 = require(\"../util/byteArray\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst treePostProcessFromProofNode_1 = require(\"../util/proof/treePostProcessFromProofNode\");\nconst abstract_1 = require(\"./abstract\");\nexports.LENGTH_GINDEX = BigInt(3);\n/** Dedicated property to cache hashTreeRoot of immutable CompositeType values */\nconst symbolCachedPermanentRoot = Symbol(\"ssz_cached_permanent_root\");\n/* eslint-disable @typescript-eslint/member-ordering  */\n/**\n * Represents a composite type as defined in the spec:\n * https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md#composite-types\n */\nclass CompositeType extends abstract_1.Type {\n    constructor(\n    /**\n     * Caches `hashTreeRoot()` result for struct values.\n     *\n     * WARNING: Must only be used for immutable values. The cached root is never discarded\n     */\n    cachePermanentRootStruct) {\n        super();\n        this.cachePermanentRootStruct = cachePermanentRootStruct;\n        this.isBasic = false;\n    }\n    /** New instance of a recursive zero'ed value converted to Tree View */\n    defaultView() {\n        return this.toView(this.defaultValue());\n    }\n    /** New instance of a recursive zero'ed value converted to Deferred Update Tree View */\n    defaultViewDU() {\n        return this.toViewDU(this.defaultValue());\n    }\n    /**\n     * Deserialize binary data to a Tree View.\n     * @see {@link CompositeType.getView}\n     */\n    deserializeToView(data) {\n        const dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        const node = this.tree_deserializeFromBytes({ uint8Array: data, dataView }, 0, data.length);\n        return this.getView(new persistent_merkle_tree_1.Tree(node));\n    }\n    /**\n     * Deserialize binary data to a Deferred Update Tree View.\n     * @see {@link CompositeType.getViewDU}\n     */\n    deserializeToViewDU(data) {\n        const dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        const node = this.tree_deserializeFromBytes({ uint8Array: data, dataView }, 0, data.length);\n        return this.getViewDU(node);\n    }\n    /**\n     * Transform value to a View.\n     * @see {@link CompositeType.getView}\n     */\n    toView(value) {\n        const node = this.value_toTree(value);\n        return this.getView(new persistent_merkle_tree_1.Tree(node));\n    }\n    /**\n     * Transform value to a ViewDU.\n     * @see {@link CompositeType.getViewDU}\n     */\n    toViewDU(value) {\n        const node = this.value_toTree(value);\n        return this.getViewDU(node);\n    }\n    /**\n     * Transform value to a View.\n     * @see {@link CompositeType.getView}\n     */\n    toValueFromView(view) {\n        const node = this.commitView(view);\n        return this.tree_toValue(node);\n    }\n    /**\n     * Transform value to a ViewDU.\n     * @see {@link CompositeType.getViewDU}\n     */\n    toValueFromViewDU(view) {\n        const node = this.commitViewDU(view);\n        return this.tree_toValue(node);\n    }\n    /**\n     * Transform a ViewDU to a View.\n     * @see {@link CompositeType.getView} and {@link CompositeType.getViewDU}\n     */\n    toViewFromViewDU(view) {\n        const node = this.commitViewDU(view);\n        return this.getView(new persistent_merkle_tree_1.Tree(node));\n    }\n    /**\n     * Transform a View to a ViewDU.\n     * @see {@link CompositeType.getView} and {@link CompositeType.getViewDU}\n     */\n    toViewDUFromView(view) {\n        const node = this.commitView(view);\n        return this.getViewDU(node);\n    }\n    // Merkleize API\n    hashTreeRoot(value) {\n        // Return cached mutable root if any\n        if (this.cachePermanentRootStruct) {\n            const cachedRoot = value[symbolCachedPermanentRoot];\n            if (cachedRoot) {\n                return cachedRoot;\n            }\n        }\n        const root = merkleize_1.merkleize(this.getRoots(value), this.maxChunkCount);\n        if (this.cachePermanentRootStruct) {\n            value[symbolCachedPermanentRoot] = root;\n        }\n        return root;\n    }\n    // For debugging and testing this feature\n    getCachedPermanentRoot(value) {\n        return value[symbolCachedPermanentRoot];\n    }\n    // Proofs API\n    /**\n     * Create a Tree View from a Proof. Verifies that the Proof is correct against `root`.\n     * @see {@link CompositeType.getView}\n     */\n    createFromProof(proof, root) {\n        const rootNodeFromProof = persistent_merkle_tree_1.Tree.createFromProof(proof).rootNode;\n        const rootNode = treePostProcessFromProofNode_1.treePostProcessFromProofNode(rootNodeFromProof, this);\n        if (root !== undefined && !byteArray_1.byteArrayEquals(rootNode.root, root)) {\n            throw new Error(\"Proof does not match trusted root\");\n        }\n        return this.getView(new persistent_merkle_tree_1.Tree(rootNode));\n    }\n    /** INTERNAL METHOD: For view's API, create proof from a tree */\n    tree_createProof(node, jsonPaths) {\n        const gindexes = this.tree_createProofGindexes(node, jsonPaths);\n        return persistent_merkle_tree_1.createProof(node, {\n            type: persistent_merkle_tree_1.ProofType.treeOffset,\n            gindices: gindexes,\n        });\n    }\n    /** INTERNAL METHOD: For view's API, create proof from a tree */\n    tree_createProofGindexes(node, jsonPaths) {\n        const gindexes = [];\n        for (const jsonPath of jsonPaths) {\n            const { type, gindex } = this.getPathInfo(jsonPath);\n            if (!isCompositeType(type)) {\n                gindexes.push(gindex);\n            }\n            else {\n                // if the path subtype is composite, include the gindices of all the leaves\n                const leafGindexes = type.tree_getLeafGindices(gindex, type.fixedSize === null ? persistent_merkle_tree_1.getNode(node, gindex) : undefined);\n                for (const gindex of leafGindexes) {\n                    gindexes.push(gindex);\n                }\n            }\n        }\n        return gindexes;\n    }\n    /**\n     * Navigate to a subtype & gindex using a path\n     */\n    getPathInfo(path) {\n        const gindices = [];\n        let type = this;\n        for (const prop of path) {\n            if (type.isBasic) {\n                throw new Error(\"Invalid path: cannot navigate beyond a basic type\");\n            }\n            const gindex = type.getPropertyGindex(prop);\n            // else stop navigating\n            if (gindex !== null) {\n                gindices.push(gindex);\n                type = type.getPropertyType(prop);\n            }\n        }\n        return {\n            type,\n            gindex: persistent_merkle_tree_1.concatGindices(gindices),\n        };\n    }\n    /**\n     * INTERNAL METHOD: post process `Ǹode` instance created from a proof and return either the same node,\n     * and a new node representing the same data is a different `Node` instance. Currently used exclusively\n     * by ContainerNodeStruct to convert `BranchNode` into `BranchNodeStruct`.\n     */\n    tree_fromProofNode(node) {\n        return { node, done: false };\n    }\n}\nexports.CompositeType = CompositeType;\nfunction isCompositeType(type) {\n    return !type.isBasic;\n}\nexports.isCompositeType = isCompositeType;\n//# sourceMappingURL=composite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeView = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\n/**\n * A Tree View is a wrapper around a type and an SSZ Tree that contains:\n * - data merkleized\n * - a hook to its parent Tree to propagate changes upwards\n *\n * **View**\n * - Best for simple usage where performance is NOT important\n * - Applies changes immediately\n * - Has reference to parent tree\n * - Does NOT have caches for fast get / set ops\n */\nclass TreeView {\n    /** Serialize view to binary data */\n    serialize() {\n        const output = new Uint8Array(this.type.tree_serializedSize(this.node));\n        const dataView = new DataView(output.buffer, output.byteOffset, output.byteLength);\n        this.type.tree_serializeToBytes({ uint8Array: output, dataView }, 0, this.node);\n        return output;\n    }\n    /**\n     * Merkleize view and compute its hashTreeRoot.\n     *\n     * See spec for definition of hashTreeRoot:\n     * https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md#merkleization\n     */\n    hashTreeRoot() {\n        return this.node.root;\n    }\n    /**\n     * Create a Merkle multiproof on this view's data.\n     * A `path` is an array of 'JSON' paths into the data\n     * @example\n     * ```ts\n     * state.createProof([\n     *   [\"validators\", 1234, \"slashed\"],\n     *   [\"genesisTime\"]\n     * ])\n     * ```\n     *\n     * See spec for definition of merkle multiproofs:\n     * https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n     */\n    createProof(paths) {\n        return this.type.tree_createProof(this.node, paths);\n    }\n    /**\n     * Transform the view into a value, from the current node instance.\n     * For ViewDU returns the value of the committed data, so call .commit() before if there are pending changes.\n     */\n    toValue() {\n        return this.type.tree_toValue(this.node);\n    }\n    /** Return a new Tree View instance referencing the same internal `Node`. Drops its existing `Tree` hook if any */\n    clone() {\n        return this.type.getView(new persistent_merkle_tree_1.Tree(this.node));\n    }\n}\nexports.TreeView = TreeView;\n//# sourceMappingURL=abstract.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitArrayTreeView = void 0;\nconst abstract_1 = require(\"./abstract\");\n/**\n * Thin wrapper around BitArray to upstream changes to `tree` on every `this.set()`\n */\nclass BitArrayTreeView extends abstract_1.TreeView {\n    constructor(type, tree) {\n        super();\n        this.type = type;\n        this.tree = tree;\n        this.bitArray = type.tree_toValue(tree.rootNode);\n    }\n    get node() {\n        return this.tree.rootNode;\n    }\n    // Wrapped API from BitArray\n    /** @see BitArray.uint8Array */\n    get uint8Array() {\n        return this.bitArray.uint8Array;\n    }\n    /** @see BitArray.bitLen */\n    get bitLen() {\n        return this.bitArray.bitLen;\n    }\n    /** @see BitArray.get */\n    get(bitIndex) {\n        return this.bitArray.get(bitIndex);\n    }\n    /** @see BitArray.set */\n    set(bitIndex, bit) {\n        this.bitArray.set(bitIndex, bit);\n        // Upstream changes\n        this.tree.rootNode = this.type.value_toTree(this.bitArray);\n    }\n    /** @see BitArray.mergeOrWith */\n    mergeOrWith(bitArray2) {\n        this.bitArray.mergeOrWith(bitArray2);\n    }\n    /** @see BitArray.intersectValues */\n    intersectValues(values) {\n        return this.bitArray.intersectValues(values);\n    }\n    /** @see BitArray.getTrueBitIndexes */\n    getTrueBitIndexes() {\n        return this.bitArray.getTrueBitIndexes();\n    }\n    /** @see BitArray.getSingleTrueBit */\n    getSingleTrueBit() {\n        return this.bitArray.getSingleTrueBit();\n    }\n    /** @see BitArray.toBoolArray */\n    toBoolArray() {\n        return this.bitArray.toBoolArray();\n    }\n}\nexports.BitArrayTreeView = BitArrayTreeView;\n//# sourceMappingURL=bitArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeViewDU = void 0;\nconst abstract_1 = require(\"../view/abstract\");\n/* eslint-disable @typescript-eslint/member-ordering  */\n/**\n * A Deferred Update Tree View (`ViewDU`) is a wrapper around a type and\n * a SSZ Node that contains:\n * - data merkleized\n * - some arbitrary caches to speed up data manipulation required by the type\n *\n * **ViewDU**\n * - Best for complex usage where performance is important\n * - Defers changes to when commit is called\n * - Does NOT have a reference to the parent ViewDU\n * - Has caches for fast get / set ops\n */\nclass TreeViewDU extends abstract_1.TreeView {\n    /**\n     * Merkleize view and compute its hashTreeRoot.\n     * Commits any pending changes before computing the root.\n     *\n     * See spec for definition of hashTreeRoot:\n     * https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md#merkleization\n     */\n    hashTreeRoot() {\n        this.commit();\n        return super.hashTreeRoot();\n    }\n    /**\n     * Serialize view to binary data.\n     * Commits any pending changes before computing the root.\n     */\n    serialize() {\n        this.commit();\n        return super.serialize();\n    }\n    /**\n     * Return a new ViewDU instance referencing the same internal `Node`.\n     *\n     * By default it will transfer the cache of this ViewDU to the new cloned instance. Set `dontTransferCache` to true\n     * to NOT transfer the cache to the cloned instance.\n     */\n    clone(dontTransferCache) {\n        if (dontTransferCache) {\n            return this.type.getViewDU(this.node);\n        }\n        else {\n            const cache = this.cache;\n            this.clearCache();\n            return this.type.getViewDU(this.node, cache);\n        }\n    }\n}\nexports.TreeViewDU = TreeViewDU;\n//# sourceMappingURL=abstract.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitArrayTreeViewDU = void 0;\nconst abstract_1 = require(\"./abstract\");\n/**\n * Thin wrapper around BitArray to upstream changes after `this.commit()`\n */\nclass BitArrayTreeViewDU extends abstract_1.TreeViewDU {\n    constructor(type, _rootNode) {\n        super();\n        this.type = type;\n        this._rootNode = _rootNode;\n        /** Cached BitArray instance computed only on demand */\n        this._bitArray = null;\n    }\n    get node() {\n        return this._rootNode;\n    }\n    get cache() {\n        return;\n    }\n    commit() {\n        if (this._bitArray !== null) {\n            this._rootNode = this.type.value_toTree(this._bitArray);\n        }\n    }\n    // Wrapped API from BitArray\n    /** @see BitArray.uint8Array */\n    get uint8Array() {\n        return this.bitArray.uint8Array;\n    }\n    /** @see BitArray.bitLen */\n    get bitLen() {\n        return this.bitArray.bitLen;\n    }\n    /** @see BitArray.get */\n    get(bitIndex) {\n        return this.bitArray.get(bitIndex);\n    }\n    /** @see BitArray.set */\n    set(bitIndex, bit) {\n        this.bitArray.set(bitIndex, bit);\n    }\n    /** @see BitArray.mergeOrWith */\n    mergeOrWith(bitArray2) {\n        this.bitArray.mergeOrWith(bitArray2);\n    }\n    /** @see BitArray.intersectValues */\n    intersectValues(values) {\n        return this.bitArray.intersectValues(values);\n    }\n    /** @see BitArray.getTrueBitIndexes */\n    getTrueBitIndexes() {\n        return this.bitArray.getTrueBitIndexes();\n    }\n    /** @see BitArray.getSingleTrueBit */\n    getSingleTrueBit() {\n        return this.bitArray.getSingleTrueBit();\n    }\n    /** @see BitArray.toBoolArray */\n    toBoolArray() {\n        return this.bitArray.toBoolArray();\n    }\n    /** Lazily computed bitArray instance */\n    get bitArray() {\n        if (this._bitArray === null) {\n            this._bitArray = this.type.tree_toValue(this._rootNode);\n        }\n        return this._bitArray;\n    }\n    clearCache() {\n        this._bitArray = null;\n    }\n}\nexports.BitArrayTreeViewDU = BitArrayTreeViewDU;\n//# sourceMappingURL=bitArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitArrayType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst byteArray_1 = require(\"../util/byteArray\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst composite_1 = require(\"./composite\");\nconst bitArray_1 = require(\"../view/bitArray\");\nconst bitArray_2 = require(\"../viewDU/bitArray\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * BitArray: ordered array collection of boolean values\n * - Value: `BitArray`, @see BitArray for a justification of its memory efficiency and performance\n * - View: `BitArrayTreeView`\n * - ViewDU: `BitArrayTreeViewDU`\n */\nclass BitArrayType extends composite_1.CompositeType {\n    constructor() {\n        super(...arguments);\n        this.isViewMutable = true;\n    }\n    getView(tree) {\n        return new bitArray_1.BitArrayTreeView(this, tree);\n    }\n    getViewDU(node) {\n        return new bitArray_2.BitArrayTreeViewDU(this, node);\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    // Merkleization\n    getRoots(value) {\n        return merkleize_1.splitIntoRootChunks(value.uint8Array);\n    }\n    // Proofs\n    getPropertyGindex() {\n        // Stop navigating below this type. Must only request complete data\n        return null;\n    }\n    getPropertyType() {\n        /* istanbul ignore next - unreachable code, getPropertyGindex null return prevents this call */\n        throw Error(\"Must only request BitArray complete data\");\n    }\n    getIndexProperty() {\n        /* istanbul ignore next - unreachable code, getPropertyGindex null return prevents this call */\n        throw Error(\"Must only request BitArray complete data\");\n    }\n    tree_fromProofNode(node) {\n        return { node, done: true };\n    }\n    tree_getLeafGindices(rootGindex, rootNode) {\n        const byteLen = this.tree_getByteLen(rootNode);\n        const chunkCount = Math.ceil(byteLen / 32);\n        const startIndex = persistent_merkle_tree_1.concatGindices([rootGindex, persistent_merkle_tree_1.toGindex(this.depth, BigInt(0))]);\n        const gindices = new Array(chunkCount);\n        for (let i = 0, gindex = startIndex; i < chunkCount; i++, gindex++) {\n            gindices[i] = gindex;\n        }\n        // include the length chunk\n        if (this.isList) {\n            gindices.push(persistent_merkle_tree_1.concatGindices([rootGindex, composite_1.LENGTH_GINDEX]));\n        }\n        return gindices;\n    }\n    // JSON\n    fromJson(json) {\n        const uint8Array = byteArray_1.fromHexString(json);\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        // value_deserializeFromBytes MUST validate length (limit, or length)\n        return this.value_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n    toJson(value) {\n        return byteArray_1.toHexString(this.serialize(value));\n    }\n    clone(value) {\n        return value.clone();\n    }\n    equals(a, b) {\n        return a.bitLen === b.bitLen && byteArray_1.byteArrayEquals(a.uint8Array, b.uint8Array);\n    }\n}\nexports.BitArrayType = BitArrayType;\n//# sourceMappingURL=bitArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitListType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst bitArray_1 = require(\"../value/bitArray\");\nconst bitArray_2 = require(\"./bitArray\");\n/**\n * BitList: ordered variable-length collection of boolean values, limited to N bits\n * - Notation `Bitlist[N]`\n * - Value: `BitArray`, @see BitArray for a justification of its memory efficiency and performance\n * - View: `BitArrayTreeView`\n * - ViewDU: `BitArrayTreeViewDU`\n */\nclass BitListType extends bitArray_2.BitArrayType {\n    constructor(limitBits, opts) {\n        super();\n        this.limitBits = limitBits;\n        this.fixedSize = null;\n        this.minSize = 1; // +1 for the extra padding bit\n        this.isList = true;\n        if (limitBits === 0)\n            throw Error(\"List limit must be > 0\");\n        this.typeName = opts?.typeName ?? `BitList[${limitBits}]`;\n        // TODO Check that itemsPerChunk is an integer\n        this.maxChunkCount = Math.ceil(this.limitBits / 8 / 32);\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        // Depth includes the extra level for the length node\n        this.depth = 1 + this.chunkDepth;\n        this.maxSize = Math.ceil(limitBits / 8) + 1; // +1 for the extra padding bit\n    }\n    static named(limitBits, opts) {\n        return new (named_1.namedClass(BitListType, opts.typeName))(limitBits, opts);\n    }\n    defaultValue() {\n        return bitArray_1.BitArray.fromBitLen(0);\n    }\n    // Views: inherited from BitArrayType\n    // Serialization + deserialization\n    value_serializedSize(value) {\n        return bitLenToSerializedLength(value.bitLen);\n    }\n    value_serializeToBytes(output, offset, value) {\n        output.uint8Array.set(value.uint8Array, offset);\n        return applyPaddingBit(output.uint8Array, offset, value.bitLen);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        const { uint8Array, bitLen } = this.deserializeUint8ArrayBitListFromBytes(data.uint8Array, start, end);\n        return new bitArray_1.BitArray(uint8Array, bitLen);\n    }\n    tree_serializedSize(node) {\n        return bitLenToSerializedLength(arrayBasic_1.getLengthFromRootNode(node));\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const chunksNode = arrayBasic_1.getChunksNodeFromRootNode(node);\n        const bitLen = arrayBasic_1.getLengthFromRootNode(node);\n        const byteLen = Math.ceil(bitLen / 8);\n        const chunkLen = Math.ceil(byteLen / 32);\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.chunkDepth, 0, chunkLen);\n        persistent_merkle_tree_1.packedNodeRootsToBytes(output.dataView, offset, byteLen, nodes);\n        return applyPaddingBit(output.uint8Array, offset, bitLen);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        const { uint8Array, bitLen } = this.deserializeUint8ArrayBitListFromBytes(data.uint8Array, start, end);\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        const chunksNode = persistent_merkle_tree_1.packedRootsBytesToNode(this.chunkDepth, dataView, 0, uint8Array.length);\n        return arrayBasic_1.addLengthNode(chunksNode, bitLen);\n    }\n    tree_getByteLen(node) {\n        if (!node)\n            throw new Error(\"BitListType requires a node to get leaves\");\n        return Math.ceil(arrayBasic_1.getLengthFromRootNode(node) / 8);\n    }\n    // Merkleization: inherited from BitArrayType\n    hashTreeRoot(value) {\n        return merkleize_1.mixInLength(super.hashTreeRoot(value), value.bitLen);\n    }\n    // Proofs: inherited from BitArrayType\n    // JSON: inherited from BitArrayType\n    // Deserializer helpers\n    deserializeUint8ArrayBitListFromBytes(data, start, end) {\n        const { uint8Array, bitLen } = deserializeUint8ArrayBitListFromBytes(data, start, end);\n        if (bitLen > this.limitBits) {\n            throw Error(`bitLen over limit ${bitLen} > ${this.limitBits}`);\n        }\n        return { uint8Array, bitLen };\n    }\n}\nexports.BitListType = BitListType;\nfunction deserializeUint8ArrayBitListFromBytes(data, start, end) {\n    if (end > data.length) {\n        throw Error(`BitList attempting to read byte ${end} of data length ${data.length}`);\n    }\n    const lastByte = data[end - 1];\n    const size = end - start;\n    if (lastByte === 0) {\n        throw new Error(\"Invalid deserialized bitlist, padding bit required\");\n    }\n    if (lastByte === 1) {\n        // Buffer.prototype.slice does not copy memory, Enforce Uint8Array usage https://github.com/nodejs/node/issues/28087\n        const uint8Array = Uint8Array.prototype.slice.call(data, start, end - 1);\n        const bitLen = (size - 1) * 8;\n        return { uint8Array, bitLen };\n    }\n    // the last byte is > 1, so a padding bit will exist in the last byte and need to be removed\n    // Buffer.prototype.slice does not copy memory, Enforce Uint8Array usage https://github.com/nodejs/node/issues/28087\n    const uint8Array = Uint8Array.prototype.slice.call(data, start, end);\n    // mask lastChunkByte\n    const lastByteBitLength = lastByte.toString(2).length - 1;\n    const bitLen = (size - 1) * 8 + lastByteBitLength;\n    const mask = 0xff >> (8 - lastByteBitLength);\n    uint8Array[size - 1] &= mask;\n    return { uint8Array, bitLen };\n}\nfunction bitLenToSerializedLength(bitLen) {\n    const bytes = Math.ceil(bitLen / 8);\n    // +1 for the extra padding bit\n    return bitLen % 8 === 0 ? bytes + 1 : bytes;\n}\n/**\n * Apply padding bit to a serialized BitList already written to `output` at `offset`\n * @returns New offset after (maybe) writting a padding bit.\n */\nfunction applyPaddingBit(output, offset, bitLen) {\n    const byteLen = Math.ceil(bitLen / 8);\n    const newOffset = offset + byteLen;\n    if (bitLen % 8 === 0) {\n        output[newOffset] = 1;\n        return newOffset + 1;\n    }\n    else {\n        output[newOffset - 1] |= 1 << bitLen % 8;\n        return newOffset;\n    }\n}\n//# sourceMappingURL=bitList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitVectorType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst bitArray_1 = require(\"../value/bitArray\");\nconst bitArray_2 = require(\"./bitArray\");\n/**\n * BitVector: ordered fixed-length collection of boolean values, with N bits\n * - Notation: `Bitvector[N]`\n * - Value: `BitArray`, @see BitArray for a justification of its memory efficiency and performance\n * - View: `BitArrayTreeView`\n * - ViewDU: `BitArrayTreeViewDU`\n */\nclass BitVectorType extends bitArray_2.BitArrayType {\n    constructor(lengthBits, opts) {\n        super();\n        this.lengthBits = lengthBits;\n        this.isList = false;\n        if (lengthBits === 0)\n            throw Error(\"Vector length must be > 0\");\n        this.typeName = opts?.typeName ?? `BitVector[${lengthBits}]`;\n        this.chunkCount = Math.ceil(this.lengthBits / 8 / 32);\n        this.maxChunkCount = this.chunkCount;\n        this.depth = merkleize_1.maxChunksToDepth(this.chunkCount);\n        this.fixedSize = Math.ceil(this.lengthBits / 8);\n        this.minSize = this.fixedSize;\n        this.maxSize = this.fixedSize;\n        // To cache mask for trailing zero bits validation\n        this.zeroBitsMask = lengthBits % 8 === 0 ? 0 : 0xff & (0xff << lengthBits % 8);\n    }\n    static named(limitBits, opts) {\n        return new (named_1.namedClass(BitVectorType, opts.typeName))(limitBits, opts);\n    }\n    defaultValue() {\n        return bitArray_1.BitArray.fromBitLen(this.lengthBits);\n    }\n    // Views: inherited from BitArrayType\n    // Serialization + deserialization\n    value_serializedSize() {\n        return this.fixedSize;\n    }\n    value_serializeToBytes(output, offset, value) {\n        output.uint8Array.set(value.uint8Array, offset);\n        return offset + this.fixedSize;\n    }\n    value_deserializeFromBytes(data, start, end) {\n        this.assertValidLength(data.uint8Array, start, end);\n        // Buffer.prototype.slice does not copy memory, Enforce Uint8Array usage https://github.com/nodejs/node/issues/28087\n        return new bitArray_1.BitArray(Uint8Array.prototype.slice.call(data.uint8Array, start, end), this.lengthBits);\n    }\n    tree_serializedSize() {\n        return this.fixedSize;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, this.depth, 0, this.chunkCount);\n        persistent_merkle_tree_1.packedNodeRootsToBytes(output.dataView, offset, this.fixedSize, nodes);\n        return offset + this.fixedSize;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        this.assertValidLength(data.uint8Array, start, end);\n        return persistent_merkle_tree_1.packedRootsBytesToNode(this.depth, data.dataView, start, end);\n    }\n    tree_getByteLen() {\n        return this.fixedSize;\n    }\n    // Merkleization: inherited from BitArrayType\n    // Proofs: inherited from BitArrayType\n    // JSON: inherited from BitArrayType\n    // Deserializer helpers\n    assertValidLength(data, start, end) {\n        const size = end - start;\n        if (end - start !== this.fixedSize) {\n            throw Error(`Invalid BitVector size ${size} != ${this.fixedSize}`);\n        }\n        // If lengthBits is not aligned to bytes, ensure trailing bits are zeroed\n        if (\n        // If zeroBitsMask == 0, then the BitVector uses full bytes only\n        this.zeroBitsMask > 0 &&\n            // if the last byte is partial, retrieve it and use the cached mask to check if trailing bits are zeroed\n            (data[end - 1] & this.zeroBitsMask) > 0) {\n            throw Error(\"BitVector: nonzero bits past length\");\n        }\n    }\n}\nexports.BitVectorType = BitVectorType;\n//# sourceMappingURL=bitVector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBasicType = exports.BasicType = void 0;\nconst abstract_1 = require(\"./abstract\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * Represents a basic type as defined in the spec:\n * https://github.com/ethereum/consensus-specs/blob/dev/ssz/simple-serialize.md#basic-types\n */\nclass BasicType extends abstract_1.Type {\n    constructor() {\n        super(...arguments);\n        this.isBasic = true;\n        // Basic types merkleize to exactly one chunk, thus depth of 0\n        this.depth = 0;\n        // Basic types merkleize to exactly one chunk\n        this.maxChunkCount = 1;\n    }\n    value_serializedSize() {\n        return this.byteLength;\n    }\n    tree_serializedSize() {\n        return this.byteLength;\n    }\n    assertValidSize(size) {\n        if (size !== this.byteLength) {\n            throw Error(`BasicType invalid size ${size} expected ${this.byteLength}`);\n        }\n    }\n    hashTreeRoot(value) {\n        // TODO: Optimize\n        const uint8Array = new Uint8Array(32);\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.value_serializeToBytes({ uint8Array, dataView }, 0, value);\n        return uint8Array;\n    }\n    clone(value) {\n        // All basic types are represented by primitive Javascript types, don't require clone\n        return value;\n    }\n    equals(a, b) {\n        // All basic types are represented by primitive Javascript types, the operator === is sufficient\n        return a === b;\n    }\n}\nexports.BasicType = BasicType;\nfunction isBasicType(type) {\n    return type.isBasic;\n}\nexports.isBasicType = isBasicType;\n//# sourceMappingURL=basic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst named_1 = require(\"../util/named\");\nconst basic_1 = require(\"./basic\");\n/**\n * Boolean: True or False\n * - Notation: `boolean`\n */\nclass BooleanType extends basic_1.BasicType {\n    constructor(opts) {\n        super();\n        this.byteLength = 1;\n        this.itemsPerChunk = 32;\n        this.fixedSize = 1;\n        this.minSize = 1;\n        this.maxSize = 1;\n        this.typeName = opts?.typeName ?? \"boolean\";\n    }\n    static named(opts) {\n        return new (named_1.namedClass(BooleanType, opts.typeName))(opts);\n    }\n    defaultValue() {\n        return false;\n    }\n    // Serialization + deserialization\n    value_serializeToBytes(output, offset, value) {\n        output.uint8Array[offset] = value ? 1 : 0;\n        return offset + 1;\n    }\n    value_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        switch (data.uint8Array[start]) {\n            case 1:\n                return true;\n            case 0:\n                return false;\n            default:\n                throw new Error(`Boolean: invalid value: ${data.uint8Array[start]}`);\n        }\n    }\n    tree_serializeToBytes(output, offset, node) {\n        // TODO: Assumes LeafNode has 4 byte uints are primary unit\n        output.uint8Array[offset] = node.getUint(4, 0);\n        return offset + 1;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        const value = data.uint8Array[start];\n        if (value > 1) {\n            throw Error(`Boolean: invalid value ${value}`);\n        }\n        return persistent_merkle_tree_1.LeafNode.fromUint32(value);\n    }\n    // Fast tree opts\n    tree_getFromNode(leafNode) {\n        return leafNode.getUint(4, 0) === 1;\n    }\n    tree_setToNode(leafNode, value) {\n        leafNode.setUint(4, 0, value ? 1 : 0);\n    }\n    tree_getFromPackedNode(leafNode, index) {\n        const offsetBytes = index % this.itemsPerChunk;\n        return leafNode.getUint(1, offsetBytes) !== 0;\n    }\n    tree_setToPackedNode(leafNode, index, value) {\n        const offsetBytes = index % this.itemsPerChunk;\n        leafNode.setUint(1, offsetBytes, value ? 1 : 0);\n    }\n    // JSON\n    fromJson(json) {\n        if (typeof json !== \"boolean\") {\n            throw Error(`JSON invalid type ${typeof json} expected boolean`);\n        }\n        return json;\n    }\n    toJson(value) {\n        return value;\n    }\n}\nexports.BooleanType = BooleanType;\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteArrayType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst byteArray_1 = require(\"../util/byteArray\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst composite_1 = require(\"./composite\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * ByteArray: ordered array collection of byte values\n * - Value: `Uint8Array`\n * - View: `Uint8Array`\n * - ViewDU: `Uint8Array`\n *\n * ByteArray is an immutable value which is represented by a Uint8Array for memory efficiency and performance.\n * Note: Consumers of this type MUST never mutate the `Uint8Array` representation of a ByteArray.\n */\nclass ByteArrayType extends composite_1.CompositeType {\n    constructor() {\n        super(...arguments);\n        this.isViewMutable = false;\n    }\n    defaultValue() {\n        // Since it's a byte array the minSize is bytes is the default size\n        return new Uint8Array(this.minSize);\n    }\n    getView(tree) {\n        return this.getViewDU(tree.rootNode);\n    }\n    getViewDU(node) {\n        return this.tree_toValue(node);\n    }\n    commitView(view) {\n        return this.commitViewDU(view);\n    }\n    commitViewDU(view) {\n        const uint8Array = new Uint8Array(this.value_serializedSize(view));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.value_serializeToBytes({ uint8Array, dataView }, 0, view);\n        return this.tree_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n    cacheOfViewDU() {\n        return;\n    }\n    // Over-write to prevent serialize + deserialize\n    toView(value) {\n        return value;\n    }\n    toViewDU(value) {\n        return value;\n    }\n    // Serialization + deserialization (only value is generic)\n    value_serializeToBytes(output, offset, value) {\n        output.uint8Array.set(value, offset);\n        return offset + value.length;\n    }\n    value_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        return Uint8Array.prototype.slice.call(data.uint8Array, start, end);\n    }\n    // Merkleization\n    getRoots(value) {\n        return merkleize_1.splitIntoRootChunks(value);\n    }\n    // Proofs\n    getPropertyGindex() {\n        // Stop navigating below this type. Must only request complete data\n        return null;\n    }\n    getPropertyType() {\n        throw Error(\"Must only request ByteArray complete data\");\n    }\n    getIndexProperty() {\n        throw Error(\"Must only request ByteArray complete data\");\n    }\n    tree_fromProofNode(node) {\n        return { node, done: true };\n    }\n    tree_getLeafGindices(rootGindex, rootNode) {\n        const byteLen = this.tree_getByteLen(rootNode);\n        const chunkCount = Math.ceil(byteLen / 32);\n        const startIndex = persistent_merkle_tree_1.concatGindices([rootGindex, persistent_merkle_tree_1.toGindex(this.depth, BigInt(0))]);\n        const gindices = new Array(chunkCount);\n        for (let i = 0, gindex = startIndex; i < chunkCount; i++, gindex++) {\n            gindices[i] = gindex;\n        }\n        // include the length chunk\n        if (this.isList) {\n            gindices.push(persistent_merkle_tree_1.concatGindices([rootGindex, composite_1.LENGTH_GINDEX]));\n        }\n        return gindices;\n    }\n    // JSON\n    fromJson(json) {\n        const value = byteArray_1.fromHexString(json);\n        this.assertValidSize(value.length);\n        return value;\n    }\n    toJson(value) {\n        return byteArray_1.toHexString(value);\n    }\n    // ByteArray is immutable\n    clone(value) {\n        return value;\n    }\n    equals(a, b) {\n        return byteArray_1.byteArrayEquals(a, b);\n    }\n}\nexports.ByteArrayType = ByteArrayType;\n//# sourceMappingURL=byteArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteListType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst byteArray_1 = require(\"./byteArray\");\n/**\n * ByteList: Immutable alias of List[byte, N]\n * - Notation: `ByteList[N]`\n * - Value: `Uint8Array`\n * - View: `Uint8Array`\n * - ViewDU: `Uint8Array`\n *\n * ByteList is an immutable value which is represented by a Uint8Array for memory efficiency and performance.\n * Note: Consumers of this type MUST never mutate the `Uint8Array` representation of a ByteList.\n *\n * For a `ByteListType` with mutability, use `ListBasicType(byteType)`\n */\nclass ByteListType extends byteArray_1.ByteArrayType {\n    constructor(limitBytes, opts) {\n        super();\n        this.limitBytes = limitBytes;\n        this.fixedSize = null;\n        this.isList = true;\n        if (limitBytes === 0)\n            throw Error(\"List limit must be > 0\");\n        this.typeName = opts?.typeName ?? `ByteList[${limitBytes}]`;\n        this.maxChunkCount = Math.ceil(this.limitBytes / 32);\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        this.depth = 1 + this.chunkDepth;\n        this.minSize = 0;\n        this.maxSize = this.limitBytes;\n    }\n    static named(limitBits, opts) {\n        return new (named_1.namedClass(ByteListType, opts.typeName))(limitBits, opts);\n    }\n    // Views: inherited from ByteArrayType\n    // Serialization + deserialization\n    value_serializedSize(value) {\n        return value.length;\n    }\n    // value_* inherited from ByteArrayType\n    tree_serializedSize(node) {\n        return arrayBasic_1.getLengthFromRootNode(node);\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const chunksNode = arrayBasic_1.getChunksNodeFromRootNode(node);\n        const byteLen = arrayBasic_1.getLengthFromRootNode(node);\n        const chunkLen = Math.ceil(byteLen / 32);\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.chunkDepth, 0, chunkLen);\n        persistent_merkle_tree_1.packedNodeRootsToBytes(output.dataView, offset, byteLen, nodes);\n        return offset + byteLen;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        const chunksNode = persistent_merkle_tree_1.packedRootsBytesToNode(this.chunkDepth, data.dataView, start, end);\n        return arrayBasic_1.addLengthNode(chunksNode, end - start);\n    }\n    tree_getByteLen(node) {\n        if (!node)\n            throw new Error(\"ByteListType requires a node to get leaves\");\n        return arrayBasic_1.getLengthFromRootNode(node);\n    }\n    // Merkleization: inherited from ByteArrayType\n    hashTreeRoot(value) {\n        return merkleize_1.mixInLength(super.hashTreeRoot(value), value.length);\n    }\n    // Proofs: inherited from BitArrayType\n    // JSON: inherited from ByteArrayType\n    assertValidSize(size) {\n        if (size > this.limitBytes) {\n            throw Error(`ByteList invalid size ${size} limit ${this.limitBytes}`);\n        }\n    }\n}\nexports.ByteListType = ByteListType;\n//# sourceMappingURL=byteList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteVectorType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst byteArray_1 = require(\"./byteArray\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * ByteVector: Immutable alias of Vector[byte, N]\n * - Notation: `ByteVector[N]`\n * - Value: `Uint8Array`\n * - View: `Uint8Array`\n * - ViewDU: `Uint8Array`\n *\n * ByteVector is an immutable value which is represented by a Uint8Array for memory efficiency and performance.\n * Note: Consumers of this type MUST never mutate the `Uint8Array` representation of a ByteVector.\n *\n * For a `ByteVectorType` with mutability, use `VectorBasicType(byteType)`\n */\nclass ByteVectorType extends byteArray_1.ByteArrayType {\n    constructor(lengthBytes, opts) {\n        super();\n        this.lengthBytes = lengthBytes;\n        this.isList = false;\n        if (lengthBytes === 0)\n            throw Error(\"Vector length must be > 0\");\n        this.typeName = opts?.typeName ?? `ByteVector[${lengthBytes}]`;\n        this.maxChunkCount = Math.ceil(this.lengthBytes / 32);\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        this.depth = this.chunkDepth;\n        this.fixedSize = this.lengthBytes;\n        this.minSize = this.fixedSize;\n        this.maxSize = this.fixedSize;\n    }\n    static named(limitBits, opts) {\n        return new (named_1.namedClass(ByteVectorType, opts.typeName))(limitBits, opts);\n    }\n    // Views: inherited from ByteArrayType\n    // Serialization + deserialization\n    value_serializedSize() {\n        return this.fixedSize;\n    }\n    // value_* inherited from ByteArrayType\n    tree_serializedSize() {\n        return this.fixedSize;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, this.chunkDepth, 0, this.maxChunkCount);\n        persistent_merkle_tree_1.packedNodeRootsToBytes(output.dataView, offset, this.fixedSize, nodes);\n        return offset + this.fixedSize;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        return persistent_merkle_tree_1.packedRootsBytesToNode(this.chunkDepth, data.dataView, start, end);\n    }\n    tree_getByteLen() {\n        return this.lengthBytes;\n    }\n    // Merkleization: inherited from ByteArrayType\n    // Proofs: inherited from BitArrayType\n    // JSON: inherited from ByteArrayType\n    assertValidSize(size) {\n        if (size !== this.lengthBytes) {\n            throw Error(`ByteVector invalid size ${size} expected ${this.lengthBytes}`);\n        }\n    }\n}\nexports.ByteVectorType = ByteVectorType;\n//# sourceMappingURL=byteVector.js.map","/*! Case - v1.6.2 - 2020-03-24\n* Copyright (c) 2020 Nathan Bubna; Licensed MIT, GPL */\n(function() {\n    \"use strict\";\n    var unicodes = function(s, prefix) {\n        prefix = prefix || '';\n        return s.replace(/(^|-)/g, '$1\\\\u'+prefix).replace(/,/g, '\\\\u'+prefix);\n    },\n    basicSymbols = unicodes('20-26,28-2F,3A-40,5B-60,7B-7E,A0-BF,D7,F7', '00'),\n    baseLowerCase = 'a-z'+unicodes('DF-F6,F8-FF', '00'),\n    baseUpperCase = 'A-Z'+unicodes('C0-D6,D8-DE', '00'),\n    improperInTitle = 'A|An|And|As|At|But|By|En|For|If|In|Of|On|Or|The|To|Vs?\\\\.?|Via',\n    regexps = function(symbols, lowers, uppers, impropers) {\n        symbols = symbols || basicSymbols;\n        lowers = lowers || baseLowerCase;\n        uppers = uppers || baseUpperCase;\n        impropers = impropers || improperInTitle;\n        return {\n            capitalize: new RegExp('(^|['+symbols+'])(['+lowers+'])', 'g'),\n            pascal: new RegExp('(^|['+symbols+'])+(['+lowers+uppers+'])', 'g'),\n            fill: new RegExp('['+symbols+']+(.|$)','g'),\n            sentence: new RegExp('(^\\\\s*|[\\\\?\\\\!\\\\.]+\"?\\\\s+\"?|,\\\\s+\")(['+lowers+'])', 'g'),\n            improper: new RegExp('\\\\b('+impropers+')\\\\b', 'g'),\n            relax: new RegExp('([^'+uppers+'])(['+uppers+']*)(['+uppers+'])(?=[^'+uppers+']|$)', 'g'),\n            upper: new RegExp('^[^'+lowers+']+$'),\n            hole: /[^\\s]\\s[^\\s]/,\n            apostrophe: /'/g,\n            room: new RegExp('['+symbols+']')\n        };\n    },\n    re = regexps(),\n    _ = {\n        re: re,\n        unicodes: unicodes,\n        regexps: regexps,\n        types: [],\n        up: String.prototype.toUpperCase,\n        low: String.prototype.toLowerCase,\n        cap: function(s) {\n            return _.up.call(s.charAt(0))+s.slice(1);\n        },\n        decap: function(s) {\n            return _.low.call(s.charAt(0))+s.slice(1);\n        },\n        deapostrophe: function(s) {\n            return s.replace(re.apostrophe, '');\n        },\n        fill: function(s, fill, deapostrophe) {\n            if (fill != null) {\n                s = s.replace(re.fill, function(m, next) {\n                    return next ? fill + next : '';\n                });\n            }\n            if (deapostrophe) {\n                s = _.deapostrophe(s);\n            }\n            return s;\n        },\n        prep: function(s, fill, pascal, upper) {\n            s = s == null ? '' : s + '';// force to string\n            if (!upper && re.upper.test(s)) {\n                s = _.low.call(s);\n            }\n            if (!fill && !re.hole.test(s)) {\n                var holey = _.fill(s, ' ');\n                if (re.hole.test(holey)) {\n                    s = holey;\n                }\n            }\n            if (!pascal && !re.room.test(s)) {\n                s = s.replace(re.relax, _.relax);\n            }\n            return s;\n        },\n        relax: function(m, before, acronym, caps) {\n            return before + ' ' + (acronym ? acronym+' ' : '') + caps;\n        }\n    },\n    Case = {\n        _: _,\n        of: function(s) {\n            for (var i=0,m=_.types.length; i<m; i++) {\n                if (Case[_.types[i]].apply(Case, arguments) === s){ return _.types[i]; }\n            }\n        },\n        flip: function(s) {\n            return s.replace(/\\w/g, function(l) {\n                return (l == _.up.call(l) ? _.low : _.up).call(l);\n            });\n        },\n        random: function(s) {\n            return s.replace(/\\w/g, function(l) {\n                return (Math.round(Math.random()) ? _.up : _.low).call(l);\n            });\n        },\n        type: function(type, fn) {\n            Case[type] = fn;\n            _.types.push(type);\n        }\n    },\n    types = {\n        lower: function(s, fill, deapostrophe) {\n            return _.fill(_.low.call(_.prep(s, fill)), fill, deapostrophe);\n        },\n        snake: function(s) {\n            return Case.lower(s, '_', true);\n        },\n        constant: function(s) {\n            return Case.upper(s, '_', true);\n        },\n        camel: function(s) {\n            return _.decap(Case.pascal(s));\n        },\n        kebab: function(s) {\n            return Case.lower(s, '-', true);\n        },\n        upper: function(s, fill, deapostrophe) {\n            return _.fill(_.up.call(_.prep(s, fill, false, true)), fill, deapostrophe);\n        },\n        capital: function(s, fill, deapostrophe) {\n            return _.fill(_.prep(s).replace(re.capitalize, function(m, border, letter) {\n                return border+_.up.call(letter);\n            }), fill, deapostrophe);\n        },\n        header: function(s) {\n            return Case.capital(s, '-', true);\n        },\n        pascal: function(s) {\n            return _.fill(_.prep(s, false, true).replace(re.pascal, function(m, border, letter) {\n                return _.up.call(letter);\n            }), '', true);\n        },\n        title: function(s) {\n            return Case.capital(s).replace(re.improper, function(small, p, i, s) {\n                return i > 0 && i < s.lastIndexOf(' ') ? _.low.call(small) : small;\n            });\n        },\n        sentence: function(s, names, abbreviations) {\n            s = Case.lower(s).replace(re.sentence, function(m, prelude, letter) {\n                return prelude + _.up.call(letter);\n            });\n            if (names) {\n                names.forEach(function(name) {\n                    s = s.replace(new RegExp('\\\\b'+Case.lower(name)+'\\\\b', \"g\"), _.cap);\n                });\n            }\n            if (abbreviations) {\n                abbreviations.forEach(function(abbr) {\n                    s = s.replace(new RegExp('(\\\\b'+Case.lower(abbr)+'\\\\. +)(\\\\w)'), function(m, abbrAndSpace, letter) {\n                        return abbrAndSpace + _.low.call(letter);\n                    });\n                });\n            }\n            return s;\n        }\n    };\n\n    // TODO: Remove \"squish\" in a future breaking release.\n    types.squish = types.pascal;\n    \n    // Allow import default\n    Case.default = Case;\n\n    for (var type in types) {\n        Case.type(type, types[type]);\n    }\n    // export Case (AMD, commonjs, or global)\n    var define = typeof define === \"function\" ? define : function(){};\n    define(typeof module === \"object\" && module.exports ? module.exports = Case : this.Case = Case);\n\n}).call(this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContainerTreeViewClass = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"../type/basic\");\nconst composite_1 = require(\"../type/composite\");\nconst abstract_1 = require(\"./abstract\");\n/**\n * Intented usage:\n *\n * - Get initial BeaconState from disk.\n * - Before applying next block, switch to mutable\n * - Get some field, create a view in mutable mode\n * - Do modifications of the state in the state transition function\n * - When done, commit and apply new root node once to og BeaconState\n * - However, keep all the caches and transfer them to the new BeaconState\n *\n * Questions:\n * - Can the child views created in mutable mode switch to not mutable? If so, it seems that it needs to recursively\n *   iterate the entire data structure and views\n *\n */\nclass ContainerTreeView extends abstract_1.TreeView {\n    constructor(type, tree) {\n        super();\n        this.type = type;\n        this.tree = tree;\n    }\n    get node() {\n        return this.tree.rootNode;\n    }\n}\nfunction getContainerTreeViewClass(type) {\n    class CustomContainerTreeView extends ContainerTreeView {\n    }\n    // Dynamically define prototype methods\n    for (let index = 0; index < type.fieldsEntries.length; index++) {\n        const { fieldName, fieldType } = type.fieldsEntries[index];\n        // If the field type is basic, the value to get and set will be the actual 'struct' value (i.e. a JS number).\n        // The view must use the tree_getFromNode() and tree_setToNode() methods to persist the struct data to the node,\n        // and use the cached views array to store the new node.\n        if (basic_1.isBasicType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeView.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // TODO: Review the memory cost of this closures\n                get: function () {\n                    const leafNode = persistent_merkle_tree_1.getNodeAtDepth(this.node, this.type.depth, index);\n                    return fieldType.tree_getFromNode(leafNode);\n                },\n                set: function (value) {\n                    const leafNodePrev = persistent_merkle_tree_1.getNodeAtDepth(this.node, this.type.depth, index);\n                    const leafNode = leafNodePrev.clone();\n                    fieldType.tree_setToNode(leafNode, value);\n                    this.tree.setNodeAtDepth(this.type.depth, index, leafNode);\n                },\n            });\n        }\n        // If the field type is composite, the value to get and set will be another TreeView. The parent TreeView must\n        // cache the view itself to retain the caches of the child view. To set a value the view must return a node to\n        // set it to the parent tree in the field gindex.\n        else if (composite_1.isCompositeType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeView.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // Returns TreeView of fieldName\n                get: function () {\n                    const gindex = persistent_merkle_tree_1.toGindexBitstring(this.type.depth, index);\n                    return fieldType.getView(this.tree.getSubtree(gindex));\n                },\n                // Expects TreeView of fieldName\n                set: function (value) {\n                    const node = fieldType.commitView(value);\n                    this.tree.setNodeAtDepth(this.type.depth, index, node);\n                },\n            });\n        }\n        // Should never happen\n        else {\n            /* istanbul ignore next - unreachable code */\n            throw Error(`Unknown fieldType ${fieldType.typeName} for fieldName ${fieldName}`);\n        }\n    }\n    // Change class name\n    Object.defineProperty(CustomContainerTreeView, \"name\", { value: type.typeName, writable: false });\n    return CustomContainerTreeView;\n}\nexports.getContainerTreeViewClass = getContainerTreeViewClass;\n//# sourceMappingURL=container.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContainerTreeViewDUClass = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"../type/basic\");\nconst composite_1 = require(\"../type/composite\");\nconst abstract_1 = require(\"./abstract\");\nclass ContainerTreeViewDU extends abstract_1.TreeViewDU {\n    constructor(type, _rootNode, cache) {\n        super();\n        this.type = type;\n        this._rootNode = _rootNode;\n        this.nodes = [];\n        this.nodesChanged = new Set();\n        this.viewsChanged = new Map();\n        if (cache) {\n            this.nodes = cache.nodes;\n            this.caches = cache.caches;\n            this.nodesPopulated = cache.nodesPopulated;\n        }\n        else {\n            this.nodes = [];\n            this.caches = [];\n            this.nodesPopulated = false;\n        }\n    }\n    get node() {\n        return this._rootNode;\n    }\n    get cache() {\n        return {\n            nodes: this.nodes,\n            caches: this.caches,\n            nodesPopulated: this.nodesPopulated,\n        };\n    }\n    commit() {\n        if (this.nodesChanged.size === 0 && this.viewsChanged.size === 0) {\n            return;\n        }\n        const nodesChanged = [];\n        for (const [index, view] of this.viewsChanged) {\n            const fieldType = this.type.fieldsEntries[index].fieldType;\n            const node = fieldType.commitViewDU(view);\n            // Set new node in nodes array to ensure data represented in the tree and fast nodes access is equal\n            this.nodes[index] = node;\n            nodesChanged.push({ index, node });\n            // Cache the view's caches to preserve it's data after 'this.viewsChanged.clear()'\n            const cache = fieldType.cacheOfViewDU(view);\n            if (cache)\n                this.caches[index] = cache;\n        }\n        for (const index of this.nodesChanged) {\n            nodesChanged.push({ index, node: this.nodes[index] });\n        }\n        // TODO: Optimize to loop only once, Numerical sort ascending\n        const nodesChangedSorted = nodesChanged.sort((a, b) => a.index - b.index);\n        const indexes = nodesChangedSorted.map((entry) => entry.index);\n        const nodes = nodesChangedSorted.map((entry) => entry.node);\n        this._rootNode = persistent_merkle_tree_1.setNodesAtDepth(this._rootNode, this.type.depth, indexes, nodes);\n        this.nodesChanged.clear();\n        this.viewsChanged.clear();\n    }\n    clearCache() {\n        this.nodes = [];\n        this.caches = [];\n        this.nodesPopulated = false;\n        // Must clear nodesChanged, otherwise a subsequent commit call will break, because it assumes a node is there\n        this.nodesChanged.clear();\n        // It's not necessary to clear this.viewsChanged since they have no effect on the cache.\n        // However preserving _SOME_ caches results in a very unpredictable experience.\n        this.viewsChanged.clear();\n    }\n}\nfunction getContainerTreeViewDUClass(type) {\n    class CustomContainerTreeViewDU extends ContainerTreeViewDU {\n    }\n    // Dynamically define prototype methods\n    for (let index = 0; index < type.fieldsEntries.length; index++) {\n        const { fieldName, fieldType } = type.fieldsEntries[index];\n        // If the field type is basic, the value to get and set will be the actual 'struct' value (i.e. a JS number).\n        // The view must use the tree_getFromNode() and tree_setToNode() methods to persist the struct data to the node,\n        // and use the cached views array to store the new node.\n        if (basic_1.isBasicType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeViewDU.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // TODO: Review the memory cost of this closures\n                get: function () {\n                    // First walk through the tree to get the root node for that index\n                    let node = this.nodes[index];\n                    if (node === undefined) {\n                        node = persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, index);\n                        this.nodes[index] = node;\n                    }\n                    return fieldType.tree_getFromNode(node);\n                },\n                set: function (value) {\n                    // Create new node if current leafNode is not dirty\n                    let nodeChanged;\n                    if (this.nodesChanged.has(index)) {\n                        // TODO: This assumes that node has already been populated\n                        nodeChanged = this.nodes[index];\n                    }\n                    else {\n                        const nodePrev = (this.nodes[index] ?? persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, index));\n                        nodeChanged = nodePrev.clone();\n                        // Store the changed node in the nodes cache\n                        this.nodes[index] = nodeChanged;\n                        this.nodesChanged.add(index);\n                    }\n                    fieldType.tree_setToNode(nodeChanged, value);\n                },\n            });\n        }\n        // If the field type is composite, the value to get and set will be another TreeView. The parent TreeView must\n        // cache the view itself to retain the caches of the child view. To set a value the view must return a node to\n        // set it to the parent tree in the field gindex.\n        else if (composite_1.isCompositeType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeViewDU.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // Returns TreeViewDU of fieldName\n                get: function () {\n                    const viewChanged = this.viewsChanged.get(index);\n                    if (viewChanged) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                        return viewChanged;\n                    }\n                    let node = this.nodes[index];\n                    if (node === undefined) {\n                        node = persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, index);\n                        this.nodes[index] = node;\n                    }\n                    // Keep a reference to the new view to call .commit on it latter, only if mutable\n                    const view = fieldType.getViewDU(node, this.caches[index]);\n                    if (fieldType.isViewMutable) {\n                        this.viewsChanged.set(index, view);\n                    }\n                    // No need to persist the child's view cache since a second get returns this view instance.\n                    // The cache is only persisted on commit where the viewsChanged map is dropped.\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return view;\n                },\n                // Expects TreeViewDU of fieldName\n                set: function (view) {\n                    // When setting a view:\n                    // - Not necessary to commit node\n                    // - Not necessary to persist cache\n                    // Just keeping a reference to the view in this.viewsChanged ensures consistency\n                    this.viewsChanged.set(index, view);\n                },\n            });\n        }\n        // Should never happen\n        else {\n            /* istanbul ignore next - unreachable code */\n            throw Error(`Unknown fieldType ${fieldType.typeName} for fieldName ${fieldName}`);\n        }\n    }\n    // Change class name\n    Object.defineProperty(CustomContainerTreeViewDU, \"name\", { value: type.typeName, writable: false });\n    return CustomContainerTreeViewDU;\n}\nexports.getContainerTreeViewDUClass = getContainerTreeViewDUClass;\n//# sourceMappingURL=container.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.renderContainerTypeName = exports.precomputeJsonKey = exports.ContainerType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst case_1 = __importDefault(require(\"case\"));\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst composite_1 = require(\"./composite\");\nconst container_1 = require(\"../view/container\");\nconst container_2 = require(\"../viewDU/container\");\n/**\n * Container: ordered heterogeneous collection of values\n * - Notation: Custom name per instance\n */\nclass ContainerType extends composite_1.CompositeType {\n    constructor(fields, opts) {\n        super(opts?.cachePermanentRootStruct);\n        this.fields = fields;\n        this.opts = opts;\n        this.isList = false;\n        this.isViewMutable = true;\n        // Render detailed typeName. Consumers should overwrite since it can get long\n        this.typeName = opts?.typeName ?? renderContainerTypeName(fields);\n        this.maxChunkCount = Object.keys(fields).length;\n        this.depth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        // Precalculated data for faster serdes\n        this.fieldsEntries = [];\n        for (const fieldName of Object.keys(fields)) {\n            this.fieldsEntries.push({\n                fieldName,\n                fieldType: this.fields[fieldName],\n                jsonKey: precomputeJsonKey(fieldName, opts?.casingMap, opts?.jsonCase),\n                gindex: persistent_merkle_tree_1.toGindex(this.depth, BigInt(this.fieldsEntries.length)),\n            });\n        }\n        if (this.fieldsEntries.length === 0) {\n            throw Error(\"Container must have > 0 fields\");\n        }\n        // Precalculate for Proofs API\n        this.fieldsGindex = {};\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            this.fieldsGindex[this.fieldsEntries[i].fieldName] = persistent_merkle_tree_1.toGindex(this.depth, BigInt(i));\n        }\n        // To resolve JSON paths in fieldName notation and jsonKey notation\n        this.jsonKeyToFieldName = {};\n        for (const { fieldName, jsonKey } of this.fieldsEntries) {\n            this.jsonKeyToFieldName[jsonKey] = fieldName;\n        }\n        const { minLen, maxLen, fixedSize } = precomputeSizes(fields);\n        this.minSize = minLen;\n        this.maxSize = maxLen;\n        this.fixedSize = fixedSize;\n        const { isFixedLen, fieldRangesFixedLen, variableOffsetsPosition, fixedEnd } = precomputeSerdesData(fields);\n        this.isFixedLen = isFixedLen;\n        this.fieldRangesFixedLen = fieldRangesFixedLen;\n        this.variableOffsetsPosition = variableOffsetsPosition;\n        this.fixedEnd = fixedEnd;\n        // TODO: This options are necessary for ContainerNodeStruct to override this.\n        // Refactor this constructor to allow customization without pollutin the options\n        this.TreeView = opts?.getContainerTreeViewClass?.(this) ?? container_1.getContainerTreeViewClass(this);\n        this.TreeViewDU = opts?.getContainerTreeViewDUClass?.(this) ?? container_2.getContainerTreeViewDUClass(this);\n    }\n    static named(fields, opts) {\n        return new (named_1.namedClass(ContainerType, opts.typeName))(fields, opts);\n    }\n    defaultValue() {\n        const value = {};\n        for (const { fieldName, fieldType } of this.fieldsEntries) {\n            value[fieldName] = fieldType.defaultValue();\n        }\n        return value;\n    }\n    getView(tree) {\n        return new this.TreeView(this, tree);\n    }\n    getViewDU(node, cache) {\n        return new this.TreeViewDU(this, node, cache);\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    // Serialization + deserialization\n    // -------------------------------\n    // Containers can mix fixed length and variable length data.\n    //\n    // Fixed part                         Variable part\n    // [field1 offset][field2 data       ][field1 data               ]\n    // [0x000000c]    [0xaabbaabbaabbaabb][0xffffffffffffffffffffffff]\n    value_serializedSize(value) {\n        let totalSize = 0;\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            // Offset (4 bytes) + size\n            totalSize +=\n                fieldType.fixedSize === null ? 4 + fieldType.value_serializedSize(value[fieldName]) : fieldType.fixedSize;\n        }\n        return totalSize;\n    }\n    value_serializeToBytes(output, offset, value) {\n        let fixedIndex = offset;\n        let variableIndex = offset + this.fixedEnd;\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            if (fieldType.fixedSize === null) {\n                // write offset\n                output.dataView.setUint32(fixedIndex, variableIndex - offset, true);\n                fixedIndex += 4;\n                // write serialized element to variable section\n                variableIndex = fieldType.value_serializeToBytes(output, variableIndex, value[fieldName]);\n            }\n            else {\n                fixedIndex = fieldType.value_serializeToBytes(output, fixedIndex, value[fieldName]);\n            }\n        }\n        return variableIndex;\n    }\n    value_deserializeFromBytes(data, start, end) {\n        const fieldRanges = this.getFieldRanges(data.dataView, start, end);\n        const value = {};\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            const fieldRange = fieldRanges[i];\n            value[fieldName] = fieldType.value_deserializeFromBytes(data, start + fieldRange.start, start + fieldRange.end);\n        }\n        return value;\n    }\n    tree_serializedSize(node) {\n        let totalSize = 0;\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, this.depth, 0, this.fieldsEntries.length);\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldType } = this.fieldsEntries[i];\n            const node = nodes[i];\n            // Offset (4 bytes) + size\n            totalSize += fieldType.fixedSize === null ? 4 + fieldType.tree_serializedSize(node) : fieldType.fixedSize;\n        }\n        return totalSize;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        let fixedIndex = offset;\n        let variableIndex = offset + this.fixedEnd;\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, this.depth, 0, this.fieldsEntries.length);\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldType } = this.fieldsEntries[i];\n            const node = nodes[i];\n            if (fieldType.fixedSize === null) {\n                // write offset\n                output.dataView.setUint32(fixedIndex, variableIndex - offset, true);\n                fixedIndex += 4;\n                // write serialized element to variable section\n                variableIndex = fieldType.tree_serializeToBytes(output, variableIndex, node);\n            }\n            else {\n                fixedIndex = fieldType.tree_serializeToBytes(output, fixedIndex, node);\n            }\n        }\n        return variableIndex;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        const fieldRanges = this.getFieldRanges(data.dataView, start, end);\n        const nodes = new Array(this.fieldsEntries.length);\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldType } = this.fieldsEntries[i];\n            const fieldRange = fieldRanges[i];\n            nodes[i] = fieldType.tree_deserializeFromBytes(data, start + fieldRange.start, start + fieldRange.end);\n        }\n        return persistent_merkle_tree_1.subtreeFillToContents(nodes, this.depth);\n    }\n    // Merkleization\n    getRoots(struct) {\n        const roots = new Array(this.fieldsEntries.length);\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            roots[i] = fieldType.hashTreeRoot(struct[fieldName]);\n        }\n        return roots;\n    }\n    // Proofs\n    // getPropertyGindex\n    // getPropertyType\n    // tree_getLeafGindices\n    getPropertyGindex(prop) {\n        const gindex = this.fieldsGindex[prop] ?? this.fieldsGindex[this.jsonKeyToFieldName[prop]];\n        if (gindex === undefined)\n            throw Error(`Unknown container property ${prop}`);\n        return gindex;\n    }\n    getPropertyType(prop) {\n        const type = this.fields[prop] ?? this.fields[this.jsonKeyToFieldName[prop]];\n        if (type === undefined)\n            throw Error(`Unknown container property ${prop}`);\n        return type;\n    }\n    getIndexProperty(index) {\n        if (index >= this.fieldsEntries.length) {\n            return null;\n        }\n        return this.fieldsEntries[index].fieldName;\n    }\n    tree_getLeafGindices(rootGindex, rootNode) {\n        const gindices = [];\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            const fieldGindex = this.fieldsGindex[fieldName];\n            const fieldGindexFromRoot = persistent_merkle_tree_1.concatGindices([rootGindex, fieldGindex]);\n            if (fieldType.isBasic) {\n                gindices.push(fieldGindexFromRoot);\n            }\n            else {\n                const compositeType = fieldType;\n                if (fieldType.fixedSize === null) {\n                    if (!rootNode) {\n                        throw new Error(\"variable type requires tree argument to get leaves\");\n                    }\n                    gindices.push(...compositeType.tree_getLeafGindices(fieldGindexFromRoot, persistent_merkle_tree_1.getNode(rootNode, fieldGindex)));\n                }\n                else {\n                    gindices.push(...compositeType.tree_getLeafGindices(fieldGindexFromRoot));\n                }\n            }\n        }\n        return gindices;\n    }\n    // JSON\n    fromJson(json) {\n        if (typeof json !== \"object\") {\n            throw Error(\"JSON must be of type object\");\n        }\n        if (json === null) {\n            throw Error(\"JSON must not be null\");\n        }\n        const value = {};\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType, jsonKey } = this.fieldsEntries[i];\n            const jsonValue = json[jsonKey];\n            if (jsonValue === undefined) {\n                throw Error(`JSON expected key ${jsonKey} is undefined`);\n            }\n            value[fieldName] = fieldType.fromJson(jsonValue);\n        }\n        return value;\n    }\n    toJson(value) {\n        const json = {};\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType, jsonKey } = this.fieldsEntries[i];\n            json[jsonKey] = fieldType.toJson(value[fieldName]);\n        }\n        return json;\n    }\n    clone(value) {\n        const newValue = {};\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            newValue[fieldName] = fieldType.clone(value[fieldName]);\n        }\n        return newValue;\n    }\n    equals(a, b) {\n        for (let i = 0; i < this.fieldsEntries.length; i++) {\n            const { fieldName, fieldType } = this.fieldsEntries[i];\n            if (!fieldType.equals(a[fieldName], b[fieldName])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Deserializer helper: Returns the bytes ranges of all fields, both variable and fixed size.\n     * Fields may not be contiguous in the serialized bytes, so the returned ranges are [start, end].\n     * - For fixed size fields re-uses the pre-computed values this.fieldRangesFixedLen\n     * - For variable size fields does a first pass over the fixed section to read offsets\n     */\n    getFieldRanges(data, start, end) {\n        if (this.variableOffsetsPosition.length === 0) {\n            // Validate fixed length container\n            const size = end - start;\n            if (size !== this.fixedEnd) {\n                throw Error(`${this.typeName} size ${size} not equal fixed size ${this.fixedEnd}`);\n            }\n            return this.fieldRangesFixedLen;\n        }\n        // Read offsets in one pass\n        const offsets = readVariableOffsets(data, start, end, this.fixedEnd, this.variableOffsetsPosition);\n        offsets.push(end - start); // The offsets are relative to the start\n        // Merge fieldRangesFixedLen + offsets in one array\n        let variableIdx = 0;\n        let fixedIdx = 0;\n        const fieldRanges = new Array(this.isFixedLen.length);\n        for (let i = 0; i < this.isFixedLen.length; i++) {\n            if (this.isFixedLen[i]) {\n                // push from fixLen ranges ++\n                fieldRanges[i] = this.fieldRangesFixedLen[fixedIdx++];\n            }\n            else {\n                // push from varLen ranges ++\n                fieldRanges[i] = { start: offsets[variableIdx], end: offsets[variableIdx + 1] };\n                variableIdx++;\n            }\n        }\n        return fieldRanges;\n    }\n}\nexports.ContainerType = ContainerType;\n/**\n * Returns the byte ranges of all variable size fields.\n */\nfunction readVariableOffsets(data, start, end, fixedEnd, variableOffsetsPosition) {\n    // Since variable-sized values can be interspersed with fixed-sized values, we precalculate\n    // the offset indices so we can more easily deserialize the fields in once pass first we get the fixed sizes\n    // Note: `fixedSizes[i] = null` if that field has variable length\n    const size = end - start;\n    // with the fixed sizes, we can read the offsets, and store for our single pass\n    const offsets = new Array(variableOffsetsPosition.length);\n    for (let i = 0; i < variableOffsetsPosition.length; i++) {\n        const offset = data.getUint32(start + variableOffsetsPosition[i], true);\n        // Validate offsets. If the list is empty the offset points to the end of the buffer, offset == size\n        if (offset > size) {\n            throw new Error(`Offset out of bounds ${offset} > ${size}`);\n        }\n        if (i === 0) {\n            if (offset !== fixedEnd) {\n                throw new Error(`First offset must equal to fixedEnd ${offset} != ${fixedEnd}`);\n            }\n        }\n        else {\n            if (offset < offsets[i - 1]) {\n                throw new Error(`Offsets must be increasing ${offset} < ${offsets[i - 1]}`);\n            }\n        }\n        offsets[i] = offset;\n    }\n    return offsets;\n}\n/**\n * Precompute fixed and variable offsets position for faster deserialization.\n * @returns Does a single pass over all fields and returns:\n * - isFixedLen: If field index [i] is fixed length\n * - fieldRangesFixedLen: For fields with fixed length, their range of bytes\n * - variableOffsetsPosition: Position of the 4 bytes offset for variable size fields\n * - fixedEnd: End of the fixed size range\n * -\n */\nfunction precomputeSerdesData(fields) {\n    const isFixedLen = [];\n    const fieldRangesFixedLen = [];\n    const variableOffsetsPosition = [];\n    let pointerFixed = 0;\n    for (const fieldType of Object.values(fields)) {\n        isFixedLen.push(fieldType.fixedSize !== null);\n        if (fieldType.fixedSize === null) {\n            // Variable length\n            variableOffsetsPosition.push(pointerFixed);\n            pointerFixed += 4;\n        }\n        else {\n            fieldRangesFixedLen.push({ start: pointerFixed, end: pointerFixed + fieldType.fixedSize });\n            pointerFixed += fieldType.fixedSize;\n        }\n    }\n    return {\n        isFixedLen,\n        fieldRangesFixedLen,\n        variableOffsetsPosition,\n        fixedEnd: pointerFixed,\n    };\n}\n/**\n * Precompute sizes of the Container doing one pass over fields\n */\nfunction precomputeSizes(fields) {\n    let minLen = 0;\n    let maxLen = 0;\n    let fixedSize = 0;\n    for (const fieldType of Object.values(fields)) {\n        minLen += fieldType.minSize;\n        maxLen += fieldType.maxSize;\n        if (fieldType.fixedSize === null) {\n            // +4 for the offset\n            minLen += 4;\n            maxLen += 4;\n            fixedSize = null;\n        }\n        else if (fixedSize !== null) {\n            fixedSize += fieldType.fixedSize;\n        }\n    }\n    return { minLen, maxLen, fixedSize };\n}\n/**\n * Compute the JSON key for each fieldName. There will exist a single JSON representation for each type.\n * To transform JSON payloads to a casing that is different from the type's defined use external tooling.\n */\nfunction precomputeJsonKey(fieldName, casingMap, jsonCase) {\n    if (casingMap) {\n        const keyFromCaseMap = casingMap[fieldName];\n        if (keyFromCaseMap === undefined) {\n            throw Error(`casingMap[${fieldName}] not defined`);\n        }\n        return keyFromCaseMap;\n    }\n    else if (jsonCase) {\n        if (jsonCase === \"eth2\") {\n            const snake = case_1.default.snake(fieldName);\n            return snake.replace(/(\\d)$/, \"_$1\");\n        }\n        else {\n            return case_1.default[jsonCase](fieldName);\n        }\n    }\n    else {\n        return fieldName;\n    }\n}\nexports.precomputeJsonKey = precomputeJsonKey;\n/**\n * Render field typeNames for a detailed typeName of this Container\n */\nfunction renderContainerTypeName(fields, prefix = \"Container\") {\n    const fieldNames = Object.keys(fields);\n    const fieldTypeNames = fieldNames.map((fieldName) => `${fieldName}: ${fields[fieldName].typeName}`).join(\", \");\n    return `${prefix}({${fieldTypeNames}})`;\n}\nexports.renderContainerTypeName = renderContainerTypeName;\n//# sourceMappingURL=container.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BranchNodeStruct = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\n/**\n * BranchNode whose children's data is represented as a struct, not a tree.\n *\n * This approach is usefull for memory efficiency of data that is not modified often, for example the validators\n * registry in Ethereum consensus `state.validators`. The tradeoff is that getting the hash, are proofs is more\n * expensive because the tree has to be recreated every time.\n */\nclass BranchNodeStruct extends persistent_merkle_tree_1.Node {\n    constructor(valueToNode, value) {\n        // First null value is to save an extra variable to check if a node has a root or not\n        super(null, 0, 0, 0, 0, 0, 0, 0);\n        this.valueToNode = valueToNode;\n        this.value = value;\n    }\n    get rootHashObject() {\n        if (this.h0 === null) {\n            const node = this.valueToNode(this.value);\n            super.applyHash(node.rootHashObject);\n        }\n        return this;\n    }\n    get root() {\n        return persistent_merkle_tree_1.hashObjectToUint8Array(this.rootHashObject);\n    }\n    isLeaf() {\n        return false;\n    }\n    get left() {\n        return this.valueToNode(this.value).left;\n    }\n    get right() {\n        return this.valueToNode(this.value).right;\n    }\n}\nexports.BranchNodeStruct = BranchNodeStruct;\n//# sourceMappingURL=branchNodeStruct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContainerTreeViewClass = void 0;\nconst composite_1 = require(\"../type/composite\");\nconst branchNodeStruct_1 = require(\"../branchNodeStruct\");\nconst abstract_1 = require(\"./abstract\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * Intented usage:\n *\n * - Get initial BeaconState from disk.\n * - Before applying next block, switch to mutable\n * - Get some field, create a view in mutable mode\n * - Do modifications of the state in the state transition function\n * - When done, commit and apply new root node once to og BeaconState\n * - However, keep all the caches and transfer them to the new BeaconState\n *\n * Questions:\n * - Can the child views created in mutable mode switch to not mutable? If so, it seems that it needs to recursively\n *   iterate the entire data structure and views\n *\n */\nclass ContainerTreeView extends abstract_1.TreeView {\n    constructor(type, tree) {\n        super();\n        this.type = type;\n        this.tree = tree;\n    }\n    get node() {\n        return this.tree.rootNode;\n    }\n}\nfunction getContainerTreeViewClass(type) {\n    class CustomContainerTreeView extends ContainerTreeView {\n    }\n    // Dynamically define prototype methods\n    for (let index = 0; index < type.fieldsEntries.length; index++) {\n        const { fieldName, fieldType } = type.fieldsEntries[index];\n        // If the field type is basic, the value to get and set will be the actual 'struct' value (i.e. a JS number).\n        // The view must use the tree_getFromNode() and tree_setToNode() methods to persist the struct data to the node,\n        // and use the cached views array to store the new node.\n        if (fieldType.isBasic) {\n            Object.defineProperty(CustomContainerTreeView.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // TODO: Review the memory cost of this closures\n                get: function () {\n                    return this.tree.rootNode.value[fieldName];\n                },\n                set: function (value) {\n                    const node = this.tree.rootNode;\n                    const newNodeValue = this.type.clone(node.value);\n                    // TODO: Should this check for valid field name? Benchmark the cost\n                    newNodeValue[fieldName] = value;\n                    this.tree.rootNode = new branchNodeStruct_1.BranchNodeStruct(node[\"valueToNode\"], newNodeValue);\n                },\n            });\n        }\n        // If the field type is composite, the value to get and set will be another TreeView. The parent TreeView must\n        // cache the view itself to retain the caches of the child view. To set a value the view must return a node to\n        // set it to the parent tree in the field gindex.\n        else if (composite_1.isCompositeType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeView.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // Returns TreeView of fieldName\n                get: function () {\n                    const { value } = this.tree.rootNode;\n                    return fieldType.toView(value[fieldName]);\n                },\n                // Expects TreeView of fieldName\n                set: function (view) {\n                    const node = this.tree.rootNode;\n                    const newNodeValue = this.type.clone(node.value);\n                    // TODO: Should this check for valid field name? Benchmark the cost\n                    newNodeValue[fieldName] = fieldType.toValueFromView(view);\n                    this.tree.rootNode = new branchNodeStruct_1.BranchNodeStruct(node[\"valueToNode\"], newNodeValue);\n                },\n            });\n        }\n        // Should never happen\n        else {\n            /* istanbul ignore next - unreachable code */\n            throw Error(`Unknown fieldType ${fieldType.typeName} for fieldName ${fieldName}`);\n        }\n    }\n    // Change class name\n    Object.defineProperty(CustomContainerTreeView, \"name\", { value: type.typeName, writable: false });\n    return CustomContainerTreeView;\n}\nexports.getContainerTreeViewClass = getContainerTreeViewClass;\n//# sourceMappingURL=containerNodeStruct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContainerTreeViewDUClass = void 0;\nconst composite_1 = require(\"../type/composite\");\nconst abstract_1 = require(\"./abstract\");\n/* eslint-disable @typescript-eslint/member-ordering */\nclass ContainerTreeViewDU extends abstract_1.TreeViewDU {\n    constructor(type, node) {\n        super();\n        this.type = type;\n        this.valueChanged = null;\n        this._rootNode = node;\n    }\n    get node() {\n        return this._rootNode;\n    }\n    get cache() {\n        return;\n    }\n    commit() {\n        if (this.valueChanged === null) {\n            return;\n        }\n        const value = this.valueChanged;\n        this.valueChanged = null;\n        this._rootNode = this.type.value_toTree(value);\n    }\n    clearCache() {\n        this.valueChanged = null;\n    }\n}\nfunction getContainerTreeViewDUClass(type) {\n    class CustomContainerTreeViewDU extends ContainerTreeViewDU {\n    }\n    // Dynamically define prototype methods\n    for (let index = 0; index < type.fieldsEntries.length; index++) {\n        const { fieldName, fieldType } = type.fieldsEntries[index];\n        // If the field type is basic, the value to get and set will be the actual 'struct' value (i.e. a JS number).\n        // The view must use the tree_getFromNode() and tree_setToNode() methods to persist the struct data to the node,\n        // and use the cached views array to store the new node.\n        if (fieldType.isBasic) {\n            Object.defineProperty(CustomContainerTreeViewDU.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // TODO: Review the memory cost of this closures\n                get: function () {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                    return (this.valueChanged || this._rootNode.value)[fieldName];\n                },\n                set: function (value) {\n                    if (this.valueChanged === null) {\n                        this.valueChanged = this.type.clone(this._rootNode.value);\n                    }\n                    this.valueChanged[fieldName] = value;\n                },\n            });\n        }\n        // If the field type is composite, the value to get and set will be another TreeView. The parent TreeView must\n        // cache the view itself to retain the caches of the child view. To set a value the view must return a node to\n        // set it to the parent tree in the field gindex.\n        else if (composite_1.isCompositeType(fieldType)) {\n            Object.defineProperty(CustomContainerTreeViewDU.prototype, fieldName, {\n                configurable: false,\n                enumerable: true,\n                // Returns TreeViewDU of fieldName\n                get: function () {\n                    const value = this.valueChanged || this._rootNode.value;\n                    return fieldType.toViewDU(value[fieldName]);\n                },\n                // Expects TreeViewDU of fieldName\n                set: function (view) {\n                    if (this.valueChanged === null) {\n                        this.valueChanged = this.type.clone(this._rootNode.value);\n                    }\n                    const value = fieldType.toValueFromViewDU(view);\n                    this.valueChanged[fieldName] = value;\n                },\n            });\n        }\n        // Should never happen\n        else {\n            /* istanbul ignore next - unreachable code */\n            throw Error(`Unknown fieldType ${fieldType.typeName} for fieldName ${fieldName}`);\n        }\n    }\n    // Change class name\n    Object.defineProperty(CustomContainerTreeViewDU, \"name\", { value: type.typeName, writable: false });\n    return CustomContainerTreeViewDU;\n}\nexports.getContainerTreeViewDUClass = getContainerTreeViewDUClass;\n//# sourceMappingURL=containerNodeStruct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerNodeStructType = void 0;\nconst composite_1 = require(\"./composite\");\nconst container_1 = require(\"./container\");\nconst named_1 = require(\"../util/named\");\nconst containerNodeStruct_1 = require(\"../view/containerNodeStruct\");\nconst containerNodeStruct_2 = require(\"../viewDU/containerNodeStruct\");\nconst branchNodeStruct_1 = require(\"../branchNodeStruct\");\n/**\n * ContainerNodeStruct: ordered heterogeneous collection of values.\n * - Notation: Custom name per instance\n *\n * A ContainerNodeStruct is identical to a Container type except that it represents tree data with a custom\n * BranchNodeStruct node. This special branch node represents the data of its entire sub tree as a value, instead\n * of a tree of nodes. This approach is a tradeoff:\n *\n * - More memory efficient\n * - Faster reads, since it doesn't require parsing merkleized data\n * - Slower hashing, since it has to merkleize the entire value everytime and has not intermediary hashing cache\n *\n * This tradeoff is good for data that is read often, written rarely, and consumes a lot of memory (i.e. Validator)\n */\nclass ContainerNodeStructType extends container_1.ContainerType {\n    constructor(fields, opts) {\n        super(fields, {\n            // Overwrite default \"Container\" typeName\n            // Render detailed typeName. Consumers should overwrite since it can get long\n            typeName: opts?.typeName ?? container_1.renderContainerTypeName(fields, \"ContainerNodeStruct\"),\n            ...opts,\n            getContainerTreeViewClass: containerNodeStruct_1.getContainerTreeViewClass,\n            getContainerTreeViewDUClass: containerNodeStruct_2.getContainerTreeViewDUClass,\n        });\n        this.fields = fields;\n        // ContainerNodeStructType TreeViews don't handle recursive mutable TreeViews like ContainerType does.\n        // Using ContainerNodeStructType for fields that have mutable views (like a ListBasic), will result in\n        // unnexpected behaviour if those child views are mutated.\n        //\n        // For example, this example below won't persist the pushed values to the list:\n        // ```ts\n        // const type = ContainerNodeStructType({a: new ListBasicType(byteType, 1)});\n        // const view = type.defaultViewDU();\n        // view.a.push(0)\n        // ```\n        // because the ListBasicViewDU in view.a will never propagate the changes upwards to its ContainerNodeStructType.\n        for (const { fieldName, fieldType } of this.fieldsEntries) {\n            if (composite_1.isCompositeType(fieldType) && fieldType.isViewMutable) {\n                throw Error(`ContainerNodeStructType field '${fieldName}' ${fieldType.typeName} view is mutable`);\n            }\n        }\n    }\n    static named(fields, opts) {\n        return new (named_1.namedClass(container_1.ContainerType, opts.typeName))(fields, opts);\n    }\n    tree_serializedSize(node) {\n        return this.value_serializedSize(node.value);\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const { value } = node;\n        return this.value_serializeToBytes(output, offset, value);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        const value = this.value_deserializeFromBytes(data, start, end);\n        return new branchNodeStruct_1.BranchNodeStruct(this.valueToTree.bind(this), value);\n    }\n    // Proofs\n    // ContainerNodeStructType can only parse proofs that contain all the data.\n    // TODO: Support converting a partial tree to a partial value\n    getPropertyGindex() {\n        return null;\n    }\n    // Post process tree to convert regular BranchNode to BranchNodeStruct\n    // TODO: Optimize conversions\n    tree_fromProofNode(node) {\n        // TODO: Figure out from `node` alone if it contains complete data.\n        // Otherwise throw a nice error \"ContainerNodeStruct type requires proofs for all its data\"\n        const uint8Array = new Uint8Array(super.tree_serializedSize(node));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        super.tree_serializeToBytes({ uint8Array, dataView }, 0, node);\n        const value = this.value_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n        return {\n            node: new branchNodeStruct_1.BranchNodeStruct(this.valueToTree.bind(this), value),\n            done: true,\n        };\n    }\n    // Overwrites for fast conversion node <-> value\n    tree_toValue(node) {\n        return node.value;\n    }\n    value_toTree(value) {\n        return new branchNodeStruct_1.BranchNodeStruct(this.valueToTree.bind(this), value);\n    }\n    // TODO: Optimize conversion\n    valueToTree(value) {\n        const uint8Array = new Uint8Array(this.value_serializedSize(value));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        this.value_serializeToBytes({ uint8Array, dataView }, 0, value);\n        return super.tree_deserializeFromBytes({ uint8Array, dataView }, 0, uint8Array.length);\n    }\n}\nexports.ContainerNodeStructType = ContainerNodeStructType;\n//# sourceMappingURL=containerNodeStruct.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayBasicTreeView = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst abstract_1 = require(\"./abstract\");\nclass ArrayBasicTreeView extends abstract_1.TreeView {\n    constructor(type, tree) {\n        super();\n        this.type = type;\n        this.tree = tree;\n    }\n    /**\n     * Number of elements in the array. Equal to the Uint32 value of the Tree's length node\n     */\n    get length() {\n        return this.type.tree_getLength(this.tree.rootNode);\n    }\n    get node() {\n        return this.tree.rootNode;\n    }\n    /**\n     * Get element at `index`. Returns the Basic element type value directly\n     */\n    get(index) {\n        // First walk through the tree to get the root node for that index\n        const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n        const leafNode = this.tree.getNodeAtDepth(this.type.depth, chunkIndex);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.type.elementType.tree_getFromPackedNode(leafNode, index);\n    }\n    /**\n     * Set Basic element type `value` at `index`\n     */\n    set(index, value) {\n        const length = this.length;\n        if (index >= length) {\n            throw Error(`Error setting index over length ${index} > ${length}`);\n        }\n        const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n        const leafNodePrev = this.tree.getNodeAtDepth(this.type.depth, chunkIndex);\n        // Create a new node to preserve immutability\n        const leafNode = leafNodePrev.clone();\n        this.type.elementType.tree_setToPackedNode(leafNode, index, value);\n        // Commit immediately\n        this.tree.setNodeAtDepth(this.type.depth, chunkIndex, leafNode);\n    }\n    /**\n     * Get all values of this array as Basic element type values, from index zero to `this.length - 1`\n     */\n    getAll() {\n        const length = this.length;\n        const chunksNode = this.type.tree_getChunksNode(this.node);\n        const chunkCount = Math.ceil(length / this.type.itemsPerChunk);\n        const leafNodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.type.chunkDepth, 0, chunkCount);\n        const values = new Array(length);\n        const itemsPerChunk = this.type.itemsPerChunk; // Prevent many access in for loop below\n        const lenFullNodes = Math.floor(length / itemsPerChunk);\n        const remainder = length % itemsPerChunk;\n        for (let n = 0; n < lenFullNodes; n++) {\n            const leafNode = leafNodes[n];\n            // TODO: Implement add a fast bulk packed element reader in the elementType\n            // ```\n            // abstract getValuesFromPackedNode(leafNode: LeafNode, output: V[], indexOffset: number): void;\n            // ```\n            // if performance here is a problem\n            for (let i = 0; i < itemsPerChunk; i++) {\n                values[n * itemsPerChunk + i] = this.type.elementType.tree_getFromPackedNode(leafNode, i);\n            }\n        }\n        if (remainder > 0) {\n            const leafNode = leafNodes[lenFullNodes];\n            for (let i = 0; i < remainder; i++) {\n                values[lenFullNodes * itemsPerChunk + i] = this.type.elementType.tree_getFromPackedNode(leafNode, i);\n            }\n        }\n        return values;\n    }\n}\nexports.ArrayBasicTreeView = ArrayBasicTreeView;\n//# sourceMappingURL=arrayBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBasicTreeView = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nclass ListBasicTreeView extends arrayBasic_1.ArrayBasicTreeView {\n    constructor(type, tree) {\n        super(type, tree);\n        this.type = type;\n        this.tree = tree;\n    }\n    /**\n     * Adds one value element at the end of the array and adds 1 to the current Tree length.\n     */\n    push(value) {\n        const length = this.length;\n        if (length >= this.type.limit) {\n            throw Error(\"Error pushing over limit\");\n        }\n        this.type.tree_setLength(this.tree, length + 1);\n        // If in new node..\n        if (length % this.type.itemsPerChunk === 0) {\n            // TODO: Optimize: This `inNewNode` could be ommitted but it would cause a full navigation in .set()\n            // Benchmark the cost of that navigation vs the extra math here\n            // TODO: Optimize: prevent double initialization\n            const leafNode = persistent_merkle_tree_1.LeafNode.fromZero();\n            this.type.elementType.tree_setToPackedNode(leafNode, length, value);\n            // Commit immediately\n            const chunkIndex = Math.floor(length / this.type.itemsPerChunk);\n            this.tree.setNodeAtDepth(this.type.depth, chunkIndex, leafNode);\n        }\n        else {\n            // Re-use .set() since no new node is added\n            this.set(length, value);\n        }\n    }\n}\nexports.ListBasicTreeView = ListBasicTreeView;\n//# sourceMappingURL=listBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayBasicTreeViewDU = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst abstract_1 = require(\"./abstract\");\nclass ArrayBasicTreeViewDU extends abstract_1.TreeViewDU {\n    constructor(type, _rootNode, cache) {\n        super();\n        this.type = type;\n        this._rootNode = _rootNode;\n        this.nodesChanged = new Set();\n        this.dirtyLength = false;\n        if (cache) {\n            this.nodes = cache.nodes;\n            this._length = cache.length;\n            this.nodesPopulated = cache.nodesPopulated;\n        }\n        else {\n            this.nodes = [];\n            this._length = this.type.tree_getLength(_rootNode);\n            this.nodesPopulated = false;\n        }\n    }\n    /**\n     * Number of elements in the array. Equal to un-commited length of the array\n     */\n    get length() {\n        return this._length;\n    }\n    get node() {\n        return this._rootNode;\n    }\n    get cache() {\n        return {\n            nodes: this.nodes,\n            length: this._length,\n            nodesPopulated: this.nodesPopulated,\n        };\n    }\n    /**\n     * Get element at `index`. Returns the Basic element type value directly\n     */\n    get(index) {\n        // First walk through the tree to get the root node for that index\n        const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n        let node = this.nodes[chunkIndex];\n        if (node === undefined) {\n            node = persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, chunkIndex);\n            this.nodes[chunkIndex] = node;\n        }\n        return this.type.elementType.tree_getFromPackedNode(node, index);\n    }\n    /**\n     * Set Basic element type `value` at `index`\n     */\n    set(index, value) {\n        if (index >= this._length) {\n            throw Error(`Error setting index over length ${index} > ${this._length}`);\n        }\n        const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n        // Create new node if current leafNode is not dirty\n        let nodeChanged;\n        if (this.nodesChanged.has(chunkIndex)) {\n            // TODO: This assumes that node has already been populated\n            nodeChanged = this.nodes[chunkIndex];\n        }\n        else {\n            const nodePrev = (this.nodes[chunkIndex] ??\n                persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, chunkIndex));\n            nodeChanged = nodePrev.clone();\n            // Store the changed node in the nodes cache\n            this.nodes[chunkIndex] = nodeChanged;\n            this.nodesChanged.add(chunkIndex);\n        }\n        this.type.elementType.tree_setToPackedNode(nodeChanged, index, value);\n    }\n    /**\n     * Get all values of this array as Basic element type values, from index zero to `this.length - 1`\n     */\n    getAll() {\n        if (!this.nodesPopulated) {\n            const nodesPrev = this.nodes;\n            const chunksNode = this.type.tree_getChunksNode(this.node);\n            const chunkCount = Math.ceil(this._length / this.type.itemsPerChunk);\n            this.nodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.type.chunkDepth, 0, chunkCount);\n            // Re-apply changed nodes\n            for (const index of this.nodesChanged) {\n                this.nodes[index] = nodesPrev[index];\n            }\n            this.nodesPopulated = true;\n        }\n        const values = new Array(this._length);\n        const itemsPerChunk = this.type.itemsPerChunk; // Prevent many access in for loop below\n        const lenFullNodes = Math.floor(this._length / itemsPerChunk);\n        const remainder = this._length % itemsPerChunk;\n        // TODO Optimize: caching the variables used in the loop above it\n        for (let n = 0; n < lenFullNodes; n++) {\n            const leafNode = this.nodes[n];\n            // TODO: Implement add a fast bulk packed element reader in the elementType\n            // ```\n            // abstract getValuesFromPackedNode(leafNode: LeafNode, output: V[], indexOffset: number): void;\n            // ```\n            // if performance here is a problem\n            for (let i = 0; i < itemsPerChunk; i++) {\n                values[n * itemsPerChunk + i] = this.type.elementType.tree_getFromPackedNode(leafNode, i);\n            }\n        }\n        if (remainder > 0) {\n            const leafNode = this.nodes[lenFullNodes];\n            for (let i = 0; i < remainder; i++) {\n                values[lenFullNodes * itemsPerChunk + i] = this.type.elementType.tree_getFromPackedNode(leafNode, i);\n            }\n        }\n        return values;\n    }\n    commit() {\n        if (this.nodesChanged.size === 0) {\n            return;\n        }\n        // Numerical sort ascending\n        const indexes = Array.from(this.nodesChanged.keys()).sort((a, b) => a - b);\n        const nodes = new Array(indexes.length);\n        for (let i = 0; i < indexes.length; i++) {\n            nodes[i] = this.nodes[indexes[i]];\n        }\n        const chunksNode = this.type.tree_getChunksNode(this._rootNode);\n        // TODO: Ensure fast setNodesAtDepth() method is correct\n        const newChunksNode = persistent_merkle_tree_1.setNodesAtDepth(chunksNode, this.type.chunkDepth, indexes, nodes);\n        this._rootNode = this.type.tree_setChunksNode(this._rootNode, newChunksNode, this.dirtyLength ? this._length : undefined);\n        this.nodesChanged.clear();\n        this.dirtyLength = false;\n    }\n    clearCache() {\n        this.nodes = [];\n        this.nodesPopulated = false;\n        // Must clear nodesChanged, otherwise a subsequent commit call will break, because it assumes a node is there\n        this.nodesChanged.clear();\n        // Reset cached length only if it has been mutated\n        if (this.dirtyLength) {\n            this._length = this.type.tree_getLength(this._rootNode);\n            this.dirtyLength = false;\n        }\n    }\n}\nexports.ArrayBasicTreeViewDU = ArrayBasicTreeViewDU;\n//# sourceMappingURL=arrayBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBasicTreeViewDU = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nclass ListBasicTreeViewDU extends arrayBasic_1.ArrayBasicTreeViewDU {\n    constructor(type, _rootNode, cache) {\n        super(type, _rootNode, cache);\n        this.type = type;\n        this._rootNode = _rootNode;\n    }\n    /**\n     * Adds one value element at the end of the array and adds 1 to the un-commited ViewDU length\n     */\n    push(value) {\n        if (this._length >= this.type.limit) {\n            throw Error(\"Error pushing over limit\");\n        }\n        // Mutate length before .set()\n        this.dirtyLength = true;\n        const index = this._length++;\n        // If in new node..\n        if (index % this.type.itemsPerChunk === 0) {\n            // Set a zero node to the nodes array to avoid a navigation downwards in .set()\n            const chunkIndex = Math.floor(index / this.type.itemsPerChunk);\n            this.nodes[chunkIndex] = persistent_merkle_tree_1.zeroNode(0);\n        }\n        this.set(index, value);\n    }\n}\nexports.ListBasicTreeViewDU = ListBasicTreeViewDU;\n//# sourceMappingURL=listBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst composite_1 = require(\"./composite\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/**\n * Array: ordered homogeneous collection\n */\nclass ArrayType extends composite_1.CompositeType {\n    constructor(elementType) {\n        super();\n        this.elementType = elementType;\n    }\n    defaultValue() {\n        return arrayBasic_1.value_defaultValueArray(this.elementType, this.defaultLen);\n    }\n    // Proofs\n    getPropertyType() {\n        return this.elementType;\n    }\n    getPropertyGindex(prop) {\n        if (typeof prop !== \"number\") {\n            throw Error(`Invalid array index: ${prop}`);\n        }\n        const chunkIdx = Math.floor(prop / this.itemsPerChunk);\n        return persistent_merkle_tree_1.toGindex(this.depth, BigInt(chunkIdx));\n    }\n    getIndexProperty(index) {\n        return index;\n    }\n    tree_getLeafGindices(rootGindex, rootNode) {\n        let length;\n        if (this.isList) {\n            if (!rootNode) {\n                throw new Error(\"List type requires tree argument to get leaves\");\n            }\n            length = this.tree_getLength(rootNode);\n        }\n        else {\n            // Vectors don't need a rootNode to return length\n            length = this.tree_getLength(null);\n        }\n        const gindices = [];\n        if (composite_1.isCompositeType(this.elementType)) {\n            // Underlying elements exist one per chunk\n            // Iterate through chunk gindices, recursively fetching leaf gindices from each chunk\n            const startIndex = persistent_merkle_tree_1.toGindex(this.depth, BigInt(0));\n            const endGindex = startIndex + BigInt(length);\n            const extendedStartIndex = persistent_merkle_tree_1.concatGindices([rootGindex, startIndex]);\n            if (this.elementType.fixedSize === null) {\n                if (!rootNode) {\n                    /* istanbul ignore next - unreachable code */\n                    throw new Error(\"Array of variable size requires tree argument to get leaves\");\n                }\n                // variable-length elements must pass the underlying subtrees to determine the length\n                for (let gindex = startIndex, extendedGindex = extendedStartIndex; gindex < endGindex; gindex++, extendedGindex++) {\n                    gindices.push(...this.elementType.tree_getLeafGindices(extendedGindex, persistent_merkle_tree_1.getNode(rootNode, gindex)));\n                }\n            }\n            else {\n                for (let i = 0, extendedGindex = extendedStartIndex; i < length; i++, extendedGindex++) {\n                    gindices.push(...this.elementType.tree_getLeafGindices(extendedGindex));\n                }\n            }\n        }\n        // Basic\n        else {\n            const chunkCount = Math.ceil(length / this.itemsPerChunk);\n            const startIndex = persistent_merkle_tree_1.concatGindices([rootGindex, persistent_merkle_tree_1.toGindex(this.depth, BigInt(0))]);\n            const endGindex = startIndex + BigInt(chunkCount);\n            for (let gindex = startIndex; gindex < endGindex; gindex++) {\n                gindices.push(gindex);\n            }\n        }\n        // include the length chunk\n        if (this.isList) {\n            gindices.push(persistent_merkle_tree_1.concatGindices([rootGindex, composite_1.LENGTH_GINDEX]));\n        }\n        return gindices;\n    }\n    // JSON\n    fromJson(json) {\n        // TODO: Do a better typesafe approach, all final classes of ArrayType implement ArrayProps\n        // There are multiple tests that cover this path for all clases\n        return arrayBasic_1.value_fromJsonArray(this.elementType, json, this);\n    }\n    toJson(value) {\n        return arrayBasic_1.value_toJsonArray(this.elementType, value, this);\n    }\n    clone(value) {\n        return arrayBasic_1.value_cloneArray(this.elementType, value);\n    }\n    equals(a, b) {\n        return arrayBasic_1.value_equals(this.elementType, a, b);\n    }\n}\nexports.ArrayType = ArrayType;\n//# sourceMappingURL=array.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBasicType = void 0;\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst listBasic_1 = require(\"../view/listBasic\");\nconst listBasic_2 = require(\"../viewDU/listBasic\");\nconst array_1 = require(\"./array\");\n/**\n * List: ordered variable-length homogeneous collection, limited to N values\n *\n * Array of Basic type:\n * - Basic types are max 32 bytes long so multiple values may be packed in the same node.\n * - Basic types are never returned in a view wrapper, but their value representation\n */\nclass ListBasicType extends array_1.ArrayType {\n    constructor(elementType, limit, opts) {\n        super(elementType);\n        this.elementType = elementType;\n        this.limit = limit;\n        this.fixedSize = null;\n        this.isList = true;\n        this.isViewMutable = true;\n        this.defaultLen = 0;\n        if (!elementType.isBasic)\n            throw Error(\"elementType must be basic\");\n        if (limit === 0)\n            throw Error(\"List limit must be > 0\");\n        this.typeName = opts?.typeName ?? `List[${elementType.typeName}, ${limit}]`;\n        // TODO Check that itemsPerChunk is an integer\n        this.itemsPerChunk = 32 / elementType.byteLength;\n        this.maxChunkCount = Math.ceil((this.limit * elementType.byteLength) / 32);\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        // Depth includes the extra level for the length node\n        this.depth = this.chunkDepth + 1;\n        this.minSize = 0;\n        this.maxSize = this.limit * elementType.maxSize;\n    }\n    static named(elementType, limit, opts) {\n        return new (named_1.namedClass(ListBasicType, opts.typeName))(elementType, limit, opts);\n    }\n    getView(tree) {\n        return new listBasic_1.ListBasicTreeView(this, tree);\n    }\n    getViewDU(node, cache) {\n        // cache type should be validated (if applicate) in the view\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new listBasic_2.ListBasicTreeViewDU(this, node, cache);\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    // Serialization + deserialization\n    value_serializedSize(value) {\n        return value.length * this.elementType.byteLength;\n    }\n    value_serializeToBytes(output, offset, value) {\n        return arrayBasic_1.value_serializeToBytesArrayBasic(this.elementType, value.length, output, offset, value);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        return arrayBasic_1.value_deserializeFromBytesArrayBasic(this.elementType, data, start, end, this);\n    }\n    tree_serializedSize(node) {\n        return this.tree_getLength(node) * this.elementType.byteLength;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const chunksNode = this.tree_getChunksNode(node);\n        const length = this.tree_getLength(node);\n        return arrayBasic_1.tree_serializeToBytesArrayBasic(this.elementType, length, this.chunkDepth, output, offset, chunksNode);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return arrayBasic_1.tree_deserializeFromBytesArrayBasic(this.elementType, this.chunkDepth, data, start, end, this);\n    }\n    // Helpers for TreeView\n    tree_getLength(node) {\n        return node.right.getUint(4, 0);\n    }\n    tree_setLength(tree, length) {\n        tree.rootNode = arrayBasic_1.addLengthNode(tree.rootNode.left, length);\n    }\n    tree_getChunksNode(node) {\n        return node.left;\n    }\n    tree_setChunksNode(rootNode, chunksNode, newLength) {\n        return arrayBasic_1.setChunksNode(rootNode, chunksNode, newLength);\n    }\n    // Merkleization\n    hashTreeRoot(value) {\n        return merkleize_1.mixInLength(super.hashTreeRoot(value), value.length);\n    }\n    getRoots(value) {\n        const uint8Array = new Uint8Array(this.value_serializedSize(value));\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        arrayBasic_1.value_serializeToBytesArrayBasic(this.elementType, value.length, { uint8Array, dataView }, 0, value);\n        return merkleize_1.splitIntoRootChunks(uint8Array);\n    }\n}\nexports.ListBasicType = ListBasicType;\n//# sourceMappingURL=listBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.value_getRootsArrayComposite = exports.tree_deserializeFromBytesArrayComposite = exports.tree_serializeToBytesArrayComposite = exports.tree_serializedSizeArrayComposite = exports.value_deserializeFromBytesArrayComposite = exports.value_serializeToBytesArrayComposite = exports.value_serializedSizeArrayComposite = exports.maxSizeArrayComposite = exports.minSizeArrayComposite = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nfunction minSizeArrayComposite(elementType, minCount) {\n    // Variable Length\n    if (elementType.fixedSize === null) {\n        return minCount * (4 + elementType.minSize);\n    }\n    // Fixed length\n    else {\n        return minCount * elementType.minSize;\n    }\n}\nexports.minSizeArrayComposite = minSizeArrayComposite;\nfunction maxSizeArrayComposite(elementType, maxCount) {\n    // Variable Length\n    if (elementType.fixedSize === null) {\n        return maxCount * (4 + elementType.maxSize);\n    }\n    // Fixed length\n    else {\n        return maxCount * elementType.maxSize;\n    }\n}\nexports.maxSizeArrayComposite = maxSizeArrayComposite;\nfunction value_serializedSizeArrayComposite(elementType, length, value) {\n    // Variable Length\n    if (elementType.fixedSize === null) {\n        let size = 0;\n        for (let i = 0; i < length; i++) {\n            size += 4 + elementType.value_serializedSize(value[i]);\n        }\n        return size;\n    }\n    // Fixed length\n    else {\n        return length * elementType.fixedSize;\n    }\n}\nexports.value_serializedSizeArrayComposite = value_serializedSizeArrayComposite;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction value_serializeToBytesArrayComposite(elementType, length, output, offset, value) {\n    // Variable length\n    if (elementType.fixedSize === null) {\n        let variableIndex = offset + length * 4;\n        for (let i = 0; i < length; i++) {\n            // write offset\n            output.dataView.setUint32(offset + i * 4, variableIndex - offset, true);\n            // write serialized element to variable section\n            variableIndex = elementType.value_serializeToBytes(output, variableIndex, value[i]);\n        }\n        return variableIndex;\n    }\n    // Fixed length\n    else {\n        for (let i = 0; i < length; i++) {\n            elementType.value_serializeToBytes(output, offset + i * elementType.fixedSize, value[i]);\n        }\n        return offset + length * elementType.fixedSize;\n    }\n}\nexports.value_serializeToBytesArrayComposite = value_serializeToBytesArrayComposite;\nfunction value_deserializeFromBytesArrayComposite(elementType, data, start, end, arrayProps) {\n    const offsets = readOffsetsArrayComposite(elementType.fixedSize, data.dataView, start, end, arrayProps);\n    const length = offsets.length; // Capture length before pushing end offset\n    const values = new Array(length);\n    // offests include the last element end\n    for (let i = 0; i < length; i++) {\n        // The offsets are relative to the start\n        const startEl = start + offsets[i];\n        const endEl = i === length - 1 ? end : start + offsets[i + 1];\n        values[i] = elementType.value_deserializeFromBytes(data, startEl, endEl);\n    }\n    return values;\n}\nexports.value_deserializeFromBytesArrayComposite = value_deserializeFromBytesArrayComposite;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction tree_serializedSizeArrayComposite(elementType, length, depth, node) {\n    // Variable Length\n    if (elementType.fixedSize === null) {\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, depth, 0, length);\n        let size = 0;\n        for (let i = 0; i < nodes.length; i++) {\n            size += 4 + elementType.tree_serializedSize(nodes[i]);\n        }\n        return size;\n    }\n    // Fixed length\n    else {\n        return length * elementType.fixedSize;\n    }\n}\nexports.tree_serializedSizeArrayComposite = tree_serializedSizeArrayComposite;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction tree_serializeToBytesArrayComposite(elementType, length, depth, node, output, offset) {\n    const nodes = persistent_merkle_tree_1.getNodesAtDepth(node, depth, 0, length);\n    // Variable Length\n    // Indices contain offsets, which are indices deeper in the byte array\n    if (elementType.fixedSize === null) {\n        let variableIndex = offset + length * 4;\n        const { dataView } = output;\n        for (let i = 0; i < nodes.length; i++) {\n            // write offset\n            dataView.setUint32(offset + i * 4, variableIndex - offset, true);\n            // write serialized element to variable section\n            variableIndex = elementType.tree_serializeToBytes(output, variableIndex, nodes[i]);\n        }\n        return variableIndex;\n    }\n    // Fixed length\n    else {\n        for (let i = 0; i < nodes.length; i++) {\n            offset = elementType.tree_serializeToBytes(output, offset, nodes[i]);\n        }\n        return offset;\n    }\n}\nexports.tree_serializeToBytesArrayComposite = tree_serializeToBytesArrayComposite;\nfunction tree_deserializeFromBytesArrayComposite(elementType, chunkDepth, data, start, end, arrayProps) {\n    const offsets = readOffsetsArrayComposite(elementType.fixedSize, data.dataView, start, end, arrayProps);\n    const length = offsets.length; // Capture length before pushing end offset\n    const nodes = new Array(length);\n    // offests include the last element end\n    for (let i = 0; i < length; i++) {\n        // The offsets are relative to the start\n        const startEl = start + offsets[i];\n        const endEl = i === length - 1 ? end : start + offsets[i + 1];\n        nodes[i] = elementType.tree_deserializeFromBytes(data, startEl, endEl);\n    }\n    // Abstract converting data to LeafNode to allow for custom data representation, such as the hashObject\n    const chunksNode = persistent_merkle_tree_1.subtreeFillToContents(nodes, chunkDepth);\n    // TODO: Add LeafNode.fromUint()\n    if (arrayProps.isList) {\n        return arrayBasic_1.addLengthNode(chunksNode, length);\n    }\n    else {\n        return chunksNode;\n    }\n}\nexports.tree_deserializeFromBytesArrayComposite = tree_deserializeFromBytesArrayComposite;\n/**\n * @param length In List length = value.length, Vector length = fixed value\n */\nfunction value_getRootsArrayComposite(elementType, length, value) {\n    const roots = new Array(length);\n    for (let i = 0; i < length; i++) {\n        roots[i] = elementType.hashTreeRoot(value[i]);\n    }\n    return roots;\n}\nexports.value_getRootsArrayComposite = value_getRootsArrayComposite;\nfunction readOffsetsArrayComposite(elementFixedSize, data, start, end, arrayProps) {\n    const size = end - start;\n    let offsets;\n    // Variable Length\n    // Indices contain offsets, which are indices deeper in the byte array\n    if (elementFixedSize === null) {\n        offsets = readVariableOffsetsArrayComposite(data, start, size);\n    }\n    // Fixed length\n    else {\n        // There's no valid CompositeType with fixed size 0, it's un-rechable code. But prevents diving by zero\n        /* istanbul ignore if */\n        if (elementFixedSize === 0) {\n            throw Error(\"element fixed length is 0\");\n        }\n        if (size % elementFixedSize !== 0) {\n            throw Error(`size ${size} is not multiple of element fixedSize ${elementFixedSize}`);\n        }\n        const length = size / elementFixedSize;\n        offsets = new Uint32Array(length);\n        for (let i = 0; i < length; i++) {\n            offsets[i] = i * elementFixedSize;\n        }\n    }\n    // Vector + List length validation\n    arrayBasic_1.assertValidArrayLength(offsets.length, arrayProps);\n    return offsets;\n}\n/**\n * Reads the values of contiguous variable offsets. Provided buffer includes offsets that point to position\n * within `size`. This function also validates that all offsets are in range.\n */\nfunction readVariableOffsetsArrayComposite(dataView, start, size) {\n    if (size === 0) {\n        return new Uint32Array(0);\n    }\n    // all elements are variable-sized\n    // indices contain offsets, which are indices deeper in the byte array\n    // The serialized data will start with offsets of all the serialized objects (BYTES_PER_LENGTH_OFFSET bytes each)\n    const firstOffset = dataView.getUint32(start, true);\n    // Using the first offset, we can compute the length of the list (divide by BYTES_PER_LENGTH_OFFSET), as it gives\n    // us the total number of bytes in the offset data\n    const offsetDataLength = firstOffset;\n    if (firstOffset === 0) {\n        throw Error(\"First offset must be > 0\");\n    }\n    if (offsetDataLength % 4 !== 0) {\n        throw Error(\"Offset data length not multiple of 4\");\n    }\n    const offsetCount = offsetDataLength / 4;\n    const offsets = new Uint32Array(offsetCount);\n    offsets[0] = firstOffset;\n    // ArrayComposite has a contiguous section of offsets, then the data\n    //\n    //    [offset 1] [offset 2] [data 1 ..........] [data 2 ..]\n    // 0x 08000000   0e000000   010002000300        01000200\n    //\n    // Ensure that:\n    // - Offsets point to regions of > 0 bytes, i.e. are increasing\n    // - Offsets don't point to bytes outside of the array's size\n    //\n    // In the example above the first offset is 8, so 8 / 4 = 2 offsets.\n    // Then, read the rest of offsets to get offsets = [8, 14]\n    for (let offsetIdx = 1; offsetIdx < offsetCount; offsetIdx++) {\n        const offset = dataView.getUint32(start + offsetIdx * 4, true);\n        offsets[offsetIdx] = offset;\n        // Offsets must point to data within the Array bytes section\n        if (offset > size) {\n            throw new Error(`Offset out of bounds ${offset} > ${size}`);\n        }\n        if (offset < offsets[offsetIdx - 1]) {\n            throw new Error(`Offsets must be increasing ${offset} < ${offsets[offsetIdx - 1]}`);\n        }\n    }\n    return offsets;\n}\n//# sourceMappingURL=arrayComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayCompositeTreeView = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst abstract_1 = require(\"./abstract\");\nclass ArrayCompositeTreeView extends abstract_1.TreeView {\n    constructor(type, tree) {\n        super();\n        this.type = type;\n        this.tree = tree;\n    }\n    /**\n     * Number of elements in the array. Equal to the Uint32 value of the Tree's length node\n     */\n    get length() {\n        return this.type.tree_getLength(this.tree.rootNode);\n    }\n    /**\n     * Returns the View's Tree rootNode\n     */\n    get node() {\n        return this.tree.rootNode;\n    }\n    /**\n     * Get element at `index`. Returns a view of the Composite element type\n     */\n    get(index) {\n        // TODO: Optimize without bitstring\n        const gindex = persistent_merkle_tree_1.toGindexBitstring(this.type.depth, index);\n        const subtree = this.tree.getSubtree(gindex);\n        return this.type.elementType.getView(subtree);\n    }\n    /**\n     * Get element at `index`. Returns a view of the Composite element type.\n     * DOES NOT PROPAGATE CHANGES: use only for reads and to skip parent references.\n     */\n    getReadonly(index) {\n        // TODO: Optimize without bitstring\n        const gindex = persistent_merkle_tree_1.toGindexBitstring(this.type.depth, index);\n        // tree.getSubtree but without the hook\n        const subtree = new persistent_merkle_tree_1.Tree(this.tree.getNode(gindex));\n        return this.type.elementType.getView(subtree);\n    }\n    /**\n     * Set Composite element type `view` at `index`\n     */\n    set(index, view) {\n        const length = this.length;\n        if (index >= length) {\n            throw Error(`Error setting index over length ${index} > ${length}`);\n        }\n        const node = this.type.elementType.commitView(view);\n        this.tree.setNodeAtDepth(this.type.depth, index, node);\n    }\n    /**\n     * Returns an array of views of all elements in the array, from index zero to `this.length - 1`.\n     * The returned views don't have a parent hook to this View's Tree, so changes in the returned views won't be\n     * propagated upwards. To get linked element Views use `this.get()`\n     */\n    getAllReadonly() {\n        const length = this.length;\n        const chunksNode = this.type.tree_getChunksNode(this.node);\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.type.chunkDepth, 0, length);\n        const views = new Array(length);\n        for (let i = 0; i < length; i++) {\n            // TODO: Optimize\n            views[i] = this.type.elementType.getView(new persistent_merkle_tree_1.Tree(nodes[i]));\n        }\n        return views;\n    }\n    /**\n     * Returns an array of values of all elements in the array, from index zero to `this.length - 1`.\n     * The returned values are not Views so any changes won't be propagated upwards.\n     * To get linked element Views use `this.get()`\n     */\n    getAllReadonlyValues() {\n        const length = this.length;\n        const chunksNode = this.type.tree_getChunksNode(this.node);\n        const nodes = persistent_merkle_tree_1.getNodesAtDepth(chunksNode, this.type.chunkDepth, 0, length);\n        const values = new Array(length);\n        for (let i = 0; i < length; i++) {\n            values[i] = this.type.elementType.tree_toValue(nodes[i]);\n        }\n        return values;\n    }\n}\nexports.ArrayCompositeTreeView = ArrayCompositeTreeView;\n//# sourceMappingURL=arrayComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCompositeTreeView = void 0;\nconst arrayComposite_1 = require(\"./arrayComposite\");\nclass ListCompositeTreeView extends arrayComposite_1.ArrayCompositeTreeView {\n    constructor(type, tree) {\n        super(type, tree);\n        this.type = type;\n        this.tree = tree;\n    }\n    /**\n     * Adds one view element at the end of the array and adds 1 to the current Tree length.\n     */\n    push(view) {\n        const length = this.length;\n        if (length >= this.type.limit) {\n            throw Error(\"Error pushing over limit\");\n        }\n        this.type.tree_setLength(this.tree, length + 1);\n        // No need for pre-initialization like in ListBasic.push since ArrayCompositeTreeView.set() doesn't do a get node\n        this.set(length, view);\n    }\n}\nexports.ListCompositeTreeView = ListCompositeTreeView;\n//# sourceMappingURL=listComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayCompositeTreeViewDU = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst abstract_1 = require(\"./abstract\");\nclass ArrayCompositeTreeViewDU extends abstract_1.TreeViewDU {\n    constructor(type, _rootNode, cache) {\n        super();\n        this.type = type;\n        this._rootNode = _rootNode;\n        this.viewsChanged = new Map();\n        // TODO: Consider these properties are not accessible in the cache object persisted in the parent's cache.\n        // nodes, caches, _length, and nodesPopulated are mutated. Consider having them in a _cache object such that\n        // mutations affect the cache already found in the parent object\n        this.dirtyLength = false;\n        if (cache) {\n            this.nodes = cache.nodes;\n            this.caches = cache.caches;\n            this._length = cache.length;\n            this.nodesPopulated = cache.nodesPopulated;\n        }\n        else {\n            this.nodes = [];\n            this.caches = [];\n            this._length = this.type.tree_getLength(_rootNode);\n            // If there are exactly 0 nodes, nodesPopulated = true because 0 / 0 are in the nodes array\n            this.nodesPopulated = this._length === 0;\n        }\n    }\n    /**\n     * Number of elements in the array. Equal to un-commited length of the array\n     */\n    get length() {\n        return this._length;\n    }\n    get node() {\n        return this._rootNode;\n    }\n    get cache() {\n        return {\n            nodes: this.nodes,\n            caches: this.caches,\n            length: this._length,\n            nodesPopulated: this.nodesPopulated,\n        };\n    }\n    /**\n     * Get element at `index`. Returns a view of the Composite element type.\n     *\n     * NOTE: Assumes that any view created here will change and will call .commit() on it.\n     * .get() should be used only for cases when something may mutate. To get all items without\n     * triggering a .commit() in all them use .getAllReadOnly().\n     */\n    get(index) {\n        const viewChanged = this.viewsChanged.get(index);\n        if (viewChanged) {\n            return viewChanged;\n        }\n        let node = this.nodes[index];\n        if (node === undefined) {\n            node = persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, index);\n            this.nodes[index] = node;\n        }\n        // Keep a reference to the new view to call .commit on it latter, only if mutable\n        const view = this.type.elementType.getViewDU(node, this.caches[index]);\n        if (this.type.elementType.isViewMutable) {\n            this.viewsChanged.set(index, view);\n        }\n        // No need to persist the child's view cache since a second get returns this view instance.\n        // The cache is only persisted on commit where the viewsChanged map is dropped.\n        return view;\n    }\n    /**\n     * Get element at `index`. Returns a view of the Composite element type.\n     * DOES NOT PROPAGATE CHANGES: use only for reads and to skip parent references.\n     */\n    getReadonly(index) {\n        const viewChanged = this.viewsChanged.get(index);\n        if (viewChanged) {\n            return viewChanged;\n        }\n        let node = this.nodes[index];\n        if (node === undefined) {\n            node = persistent_merkle_tree_1.getNodeAtDepth(this._rootNode, this.type.depth, index);\n            this.nodes[index] = node;\n        }\n        return this.type.elementType.getViewDU(node, this.caches[index]);\n    }\n    // Did not implemented\n    // `getReadonlyValue(index: number): ValueOf<ElementType>`\n    // because it can break in unexpected ways if there are pending changes in this.viewsChanged.\n    // This function could first check if `this.viewsChanged` has a view for `index` and commit it,\n    // but that would be pretty slow, and the same result can be achieved with\n    // `this.getReadonly(index).toValue()`\n    /**\n     * Set Composite element type `view` at `index`\n     */\n    set(index, view) {\n        if (index >= this._length) {\n            throw Error(`Error setting index over length ${index} > ${this._length}`);\n        }\n        // When setting a view:\n        // - Not necessary to commit node\n        // - Not necessary to persist cache\n        // Just keeping a reference to the view in this.viewsChanged ensures consistency\n        this.viewsChanged.set(index, view);\n    }\n    /**\n     * WARNING: Returns all commited changes, if there are any pending changes commit them beforehand\n     */\n    getAllReadonly() {\n        this.populateAllNodes();\n        const views = new Array(this._length);\n        for (let i = 0; i < this._length; i++) {\n            views[i] = this.type.elementType.getViewDU(this.nodes[i], this.caches[i]);\n        }\n        return views;\n    }\n    /**\n     * WARNING: Returns all commited changes, if there are any pending changes commit them beforehand\n     */\n    getAllReadonlyValues() {\n        this.populateAllNodes();\n        const values = new Array(this._length);\n        for (let i = 0; i < this._length; i++) {\n            values[i] = this.type.elementType.tree_toValue(this.nodes[i]);\n        }\n        return values;\n    }\n    commit() {\n        if (this.viewsChanged.size === 0) {\n            return;\n        }\n        const nodesChanged = [];\n        for (const [index, view] of this.viewsChanged) {\n            const node = this.type.elementType.commitViewDU(view);\n            // Set new node in nodes array to ensure data represented in the tree and fast nodes access is equal\n            this.nodes[index] = node;\n            nodesChanged.push({ index, node });\n            // Cache the view's caches to preserve it's data after 'this.viewsChanged.clear()'\n            const cache = this.type.elementType.cacheOfViewDU(view);\n            if (cache)\n                this.caches[index] = cache;\n        }\n        // TODO: Optimize to loop only once, Numerical sort ascending\n        const nodesChangedSorted = nodesChanged.sort((a, b) => a.index - b.index);\n        const indexes = nodesChangedSorted.map((entry) => entry.index);\n        const nodes = nodesChangedSorted.map((entry) => entry.node);\n        const chunksNode = this.type.tree_getChunksNode(this._rootNode);\n        // TODO: Ensure fast setNodesAtDepth() method is correct\n        const newChunksNode = persistent_merkle_tree_1.setNodesAtDepth(chunksNode, this.type.chunkDepth, indexes, nodes);\n        this._rootNode = this.type.tree_setChunksNode(this._rootNode, newChunksNode, this.dirtyLength ? this._length : undefined);\n        this.viewsChanged.clear();\n        this.dirtyLength = false;\n    }\n    clearCache() {\n        this.nodes = [];\n        this.caches = [];\n        this.nodesPopulated = false;\n        // It's not necessary to clear this.viewsChanged since they have no effect on the cache.\n        // However preserving _SOME_ caches results in a very unpredictable experience.\n        this.viewsChanged.clear();\n        // Reset cached length only if it has been mutated\n        if (this.dirtyLength) {\n            this._length = this.type.tree_getLength(this._rootNode);\n            this.dirtyLength = false;\n        }\n    }\n    populateAllNodes() {\n        // If there's uncommited changes it may break.\n        // this.length can be increased but this._rootNode doesn't have that item\n        if (this.viewsChanged.size > 0) {\n            throw Error(\"Must commit changes before reading all nodes\");\n        }\n        if (!this.nodesPopulated) {\n            this.nodes = persistent_merkle_tree_1.getNodesAtDepth(this._rootNode, this.type.depth, 0, this.length);\n            this.nodesPopulated = true;\n        }\n    }\n}\nexports.ArrayCompositeTreeViewDU = ArrayCompositeTreeViewDU;\n//# sourceMappingURL=arrayComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCompositeTreeViewDU = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst arrayComposite_1 = require(\"./arrayComposite\");\nclass ListCompositeTreeViewDU extends arrayComposite_1.ArrayCompositeTreeViewDU {\n    constructor(type, _rootNode, cache) {\n        super(type, _rootNode, cache);\n        this.type = type;\n        this._rootNode = _rootNode;\n    }\n    /**\n     * Adds one value element at the end of the array and adds 1 to the un-commited ViewDU length\n     */\n    push(view) {\n        if (this._length >= this.type.limit) {\n            throw Error(\"Error pushing over limit\");\n        }\n        this.dirtyLength = true;\n        const index = this._length++;\n        // No need for pre-initialization like in ListBasic.push since ArrayCompositeTreeViewDU.set() doesn't do a get node\n        this.set(index, view);\n    }\n    /**\n     * Returns a new ListCompositeTreeViewDU instance with the values from 0 to `index`.\n     * The new list is equivalent to (pseudo-code):\n     *\n     * ```ts\n     * const nodes = getChunkNodes()\n     * return listFromChunkNodes(nodes.slice(0, index + 1))\n     * ```\n     *\n     * To achieve it, rebinds the underlying tree zero-ing all nodes right of `index`.\n     *\n     * Note: Using index = -1, returns an empty list of length 0.\n     */\n    sliceTo(index) {\n        // Commit before getting rootNode to ensure all pending data is in the rootNode\n        this.commit();\n        const rootNode = this._rootNode;\n        const length = this.type.tree_getLength(rootNode);\n        // All nodes beyond length are already zero\n        // Array of length 2: [X,X,0,0], for index >= 1 no action needed\n        if (index >= length - 1) {\n            return this;\n        }\n        // Since this is a List, do the treeZeroAfterIndex operation on the chunks tree\n        const chunksNode = this.type.tree_getChunksNode(rootNode);\n        const newChunksNode = persistent_merkle_tree_1.treeZeroAfterIndex(chunksNode, this.type.chunkDepth, index);\n        // Must set new length and commit to tree to restore the same tree at that index\n        const newLength = index + 1;\n        const newRootNode = this.type.tree_setChunksNode(rootNode, newChunksNode, newLength);\n        return this.type.getViewDU(newRootNode);\n    }\n}\nexports.ListCompositeTreeViewDU = ListCompositeTreeViewDU;\n//# sourceMappingURL=listComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCompositeType = void 0;\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst arrayComposite_1 = require(\"./arrayComposite\");\nconst listComposite_1 = require(\"../view/listComposite\");\nconst listComposite_2 = require(\"../viewDU/listComposite\");\nconst array_1 = require(\"./array\");\n/**\n * List: ordered variable-length homogeneous collection, limited to N values\n *\n * Array of Composite type:\n * - Composite types always take at least one chunk\n * - Composite types are always returned as views\n */\nclass ListCompositeType extends array_1.ArrayType {\n    constructor(elementType, limit, opts) {\n        super(elementType);\n        this.elementType = elementType;\n        this.limit = limit;\n        this.itemsPerChunk = 1;\n        this.fixedSize = null;\n        this.isList = true;\n        this.isViewMutable = true;\n        this.defaultLen = 0;\n        if (elementType.isBasic)\n            throw Error(\"elementType must not be basic\");\n        if (limit === 0)\n            throw Error(\"List limit must be > 0\");\n        this.typeName = opts?.typeName ?? `List[${elementType.typeName}, ${limit}]`;\n        this.maxChunkCount = this.limit;\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        // Depth includes the extra level for the length node\n        this.depth = this.chunkDepth + 1;\n        this.minSize = 0;\n        this.maxSize = arrayComposite_1.maxSizeArrayComposite(elementType, this.limit);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static named(elementType, limit, opts) {\n        return new (named_1.namedClass(ListCompositeType, opts.typeName))(elementType, limit, opts);\n    }\n    getView(tree) {\n        return new listComposite_1.ListCompositeTreeView(this, tree);\n    }\n    getViewDU(node, cache) {\n        // cache type should be validated (if applicate) in the view\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new listComposite_2.ListCompositeTreeViewDU(this, node, cache);\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    // Serialization + deserialization\n    value_serializedSize(value) {\n        return arrayComposite_1.value_serializedSizeArrayComposite(this.elementType, value.length, value);\n    }\n    value_serializeToBytes(output, offset, value) {\n        return arrayComposite_1.value_serializeToBytesArrayComposite(this.elementType, value.length, output, offset, value);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        return arrayComposite_1.value_deserializeFromBytesArrayComposite(this.elementType, data, start, end, this);\n    }\n    tree_serializedSize(node) {\n        const chunksNode = this.tree_getChunksNode(node);\n        const length = this.tree_getLength(node);\n        return arrayComposite_1.tree_serializedSizeArrayComposite(this.elementType, length, this.chunkDepth, chunksNode);\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const chunksNode = this.tree_getChunksNode(node);\n        const length = this.tree_getLength(node);\n        return arrayComposite_1.tree_serializeToBytesArrayComposite(this.elementType, length, this.chunkDepth, chunksNode, output, offset);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return arrayComposite_1.tree_deserializeFromBytesArrayComposite(this.elementType, this.chunkDepth, data, start, end, this);\n    }\n    // Helpers for TreeView\n    tree_getLength(node) {\n        return arrayBasic_1.getLengthFromRootNode(node);\n    }\n    tree_setLength(tree, length) {\n        tree.rootNode = arrayBasic_1.addLengthNode(tree.rootNode.left, length);\n    }\n    tree_getChunksNode(node) {\n        return node.left;\n    }\n    tree_setChunksNode(rootNode, chunksNode, newLength) {\n        return arrayBasic_1.setChunksNode(rootNode, chunksNode, newLength);\n    }\n    // Merkleization\n    hashTreeRoot(value) {\n        return merkleize_1.mixInLength(super.hashTreeRoot(value), value.length);\n    }\n    getRoots(value) {\n        return arrayComposite_1.value_getRootsArrayComposite(this.elementType, value.length, value);\n    }\n}\nexports.ListCompositeType = ListCompositeType;\n//# sourceMappingURL=listComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoneType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NoneType extends basic_1.BasicType {\n    constructor() {\n        super(...arguments);\n        this.typeName = \"none\";\n        this.byteLength = 0;\n        this.itemsPerChunk = 32;\n        this.fixedSize = 0;\n        this.minSize = 0;\n        this.maxSize = 0;\n    }\n    defaultValue() {\n        return null;\n    }\n    // bytes serdes\n    value_serializeToBytes(output, offset, value) {\n        return offset;\n    }\n    value_deserializeFromBytes(data, start) {\n        return null;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        return offset;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return persistent_merkle_tree_1.zeroNode(0);\n    }\n    // Fast tree opts\n    tree_getFromNode(leafNode) {\n        return null;\n    }\n    tree_setToNode(leafNode, value) {\n        return;\n    }\n    tree_getFromPackedNode(leafNode, index) {\n        return null;\n    }\n    tree_setToPackedNode(leafNode, index, value) {\n        return;\n    }\n    // JSON\n    fromJson(json) {\n        if (json !== null) {\n            throw Error(\"JSON invalid type none must be null\");\n        }\n        return null;\n    }\n    toJson(value) {\n        return null;\n    }\n}\nexports.NoneType = NoneType;\n//# sourceMappingURL=none.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UintBigintType = exports.UintNumberType = exports.uintBigintByteLens = exports.uintNumberByteLens = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst named_1 = require(\"../util/named\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\nconst MAX_SAFE_INTEGER_BN = BigInt(Number.MAX_SAFE_INTEGER);\nconst BIGINT_2_POW_64 = BigInt(2) ** BigInt(64);\nconst BIGINT_2_POW_128 = BigInt(2) ** BigInt(128);\nconst BIGINT_2_POW_192 = BigInt(2) ** BigInt(192);\n// const BIGINT_64_MAX = BigInt(\"0xffffffffffffffff\");\nconst NUMBER_2_POW_32 = 2 ** 32;\nconst NUMBER_32_MAX = 0xffffffff;\nexports.uintNumberByteLens = [1, 2, 4, 8];\nexports.uintBigintByteLens = [1, 2, 4, 8, 16, 32];\n/**\n * Uint: N-bit unsigned integer (where N in [8, 16, 32, 64, 128, 256])\n * - Notation: uintN\n *\n * UintNumber is represented as the Javascript primitive value 'Number'.\n *\n * The Number type is a double-precision 64-bit binary format IEEE 754 value (numbers between -(2^53 − 1) and\n * 2^53 − 1). It also has the symbolic value: +Infinity.\n *\n * As of 2021 performance of 'Number' is extremely faster than 'BigInt'. Some values are spec'ed as Uint64 but\n * practically they will never exceed 53 bits, such as any unit time or simple counters. This type is an optimization\n * for these cases, as UintNumber64 can represent any value between 0 and 2^53−1 as well as the max value 2^64-1.\n */\nclass UintNumberType extends basic_1.BasicType {\n    constructor(byteLength, opts) {\n        super();\n        this.byteLength = byteLength;\n        if (byteLength > 8) {\n            throw Error(\"UintNumber byteLength limit is 8\");\n        }\n        if (Math.log2(byteLength) % 1 !== 0) {\n            throw Error(\"byteLength must be a power of 2\");\n        }\n        this.typeName = opts?.typeName ?? `uint${byteLength * 8}`;\n        if (opts?.clipInfinity)\n            this.typeName += \"Inf\";\n        if (opts?.setBitwiseOR)\n            this.typeName += \"OR\";\n        this.itemsPerChunk = 32 / this.byteLength;\n        this.fixedSize = byteLength;\n        this.minSize = byteLength;\n        this.maxSize = byteLength;\n        this.maxDecimalStr = (BigInt(2) ** BigInt(this.byteLength * 8) - BigInt(1)).toString(10);\n        this.clipInfinity = opts?.clipInfinity === true;\n        this.setBitwiseOR = opts?.setBitwiseOR === true;\n    }\n    static named(byteLength, opts) {\n        return new (named_1.namedClass(UintNumberType, opts.typeName))(byteLength, opts);\n    }\n    defaultValue() {\n        return 0;\n    }\n    // Serialization + deserialization\n    value_serializeToBytes({ dataView }, offset, value) {\n        switch (this.byteLength) {\n            case 1:\n                dataView.setInt8(offset, value);\n                break;\n            case 2:\n                dataView.setUint16(offset, value, true);\n                break;\n            case 4:\n                dataView.setUint32(offset, value, true);\n                break;\n            case 8:\n                if (value === Infinity) {\n                    // TODO: Benchmark if it's faster to set BIGINT_64_MAX once\n                    dataView.setUint32(offset, 0xffffffff);\n                    dataView.setUint32(offset + 4, 0xffffffff);\n                }\n                else {\n                    dataView.setUint32(offset, value & 0xffffffff, true);\n                    dataView.setUint32(offset + 4, (value / NUMBER_2_POW_32) & 0xffffffff, true);\n                }\n                break;\n        }\n        return offset + this.byteLength;\n    }\n    value_deserializeFromBytes({ dataView }, start, end) {\n        this.assertValidSize(end - start);\n        switch (this.byteLength) {\n            case 1:\n                return dataView.getUint8(start);\n            case 2:\n                return dataView.getUint16(start, true);\n            case 4:\n                return dataView.getUint32(start, true);\n            case 8: {\n                const a = dataView.getUint32(start, true);\n                const b = dataView.getUint32(start + 4, true);\n                if (b === NUMBER_32_MAX && a === NUMBER_32_MAX && this.clipInfinity) {\n                    return Infinity;\n                }\n                else {\n                    return b * NUMBER_2_POW_32 + a;\n                }\n            }\n        }\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const value = node.getUint(this.byteLength, 0, this.clipInfinity);\n        this.value_serializeToBytes(output, offset, value);\n        return offset + this.byteLength;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        this.assertValidSize(end - start);\n        const value = this.value_deserializeFromBytes(data, start, end);\n        const node = persistent_merkle_tree_1.LeafNode.fromZero();\n        node.setUint(this.byteLength, 0, value, this.clipInfinity);\n        return node;\n    }\n    // Fast Tree access\n    tree_getFromNode(leafNode) {\n        return leafNode.getUint(this.byteLength, 0, this.clipInfinity);\n    }\n    tree_setToNode(leafNode, value) {\n        this.tree_setToPackedNode(leafNode, 0, value);\n    }\n    tree_getFromPackedNode(leafNode, index) {\n        const offsetBytes = this.byteLength * (index % this.itemsPerChunk);\n        return leafNode.getUint(this.byteLength, offsetBytes, this.clipInfinity);\n    }\n    tree_setToPackedNode(leafNode, index, value) {\n        const offsetBytes = this.byteLength * (index % this.itemsPerChunk);\n        // TODO: Benchmark the cost of this if, and consider using a different class\n        if (this.setBitwiseOR) {\n            leafNode.bitwiseOrUint(this.byteLength, offsetBytes, value);\n        }\n        else {\n            leafNode.setUint(this.byteLength, offsetBytes, value, this.clipInfinity);\n        }\n    }\n    // JSON\n    fromJson(json) {\n        if (typeof json === \"number\") {\n            return json;\n        }\n        else if (typeof json === \"string\") {\n            if (this.clipInfinity && json === this.maxDecimalStr) {\n                // Allow to handle max possible number\n                return Infinity;\n            }\n            else {\n                const num = parseInt(json, 10);\n                if (isNaN(num)) {\n                    throw Error(\"JSON invalid number isNaN\");\n                }\n                else if (num > Number.MAX_SAFE_INTEGER) {\n                    // Throw to prevent decimal precision errors downstream\n                    throw Error(\"JSON invalid number > MAX_SAFE_INTEGER\");\n                }\n                else {\n                    return num;\n                }\n            }\n        }\n        else if (typeof json === \"bigint\") {\n            if (json > MAX_SAFE_INTEGER_BN) {\n                // Throw to prevent decimal precision errors downstream\n                throw Error(\"JSON invalid number > MAX_SAFE_INTEGER_BN\");\n            }\n            else {\n                return Number(json);\n            }\n        }\n        else {\n            throw Error(`JSON invalid type ${typeof json} expected number`);\n        }\n    }\n    toJson(value) {\n        if (value === Infinity) {\n            return this.maxDecimalStr;\n        }\n        else {\n            return value.toString(10);\n        }\n    }\n}\nexports.UintNumberType = UintNumberType;\n/**\n * Uint: N-bit unsigned integer (where N in [8, 16, 32, 64, 128, 256])\n * - Notation: uintN\n *\n * UintBigint is represented as the Javascript primitive value 'BigInt'.\n *\n * The BigInt type is a numeric primitive in JavaScript that can represent integers with arbitrary precision.\n * With BigInts, you can safely store and operate on large integers even beyond the safe integer limit for Numbers.\n *\n * As of 2021 performance of 'Number' is extremely faster than 'BigInt'. For Uint values under 53 bits use UintNumber.\n * For other values that may exceed 53 bits, use UintBigint.\n */\nclass UintBigintType extends basic_1.BasicType {\n    constructor(byteLength, opts) {\n        super();\n        this.byteLength = byteLength;\n        if (byteLength > 32) {\n            throw Error(\"UintBigint byteLength limit is 32\");\n        }\n        if (Math.log2(byteLength) % 1 !== 0) {\n            throw Error(\"byteLength must be a power of 2\");\n        }\n        this.typeName = opts?.typeName ?? `uintBigint${byteLength * 8}`;\n        this.byteLength = byteLength;\n        this.itemsPerChunk = 32 / this.byteLength;\n        this.fixedSize = byteLength;\n        this.minSize = byteLength;\n        this.maxSize = byteLength;\n    }\n    static named(byteLength, opts) {\n        return new (named_1.namedClass(UintBigintType, opts.typeName))(byteLength, opts);\n    }\n    defaultValue() {\n        return BigInt(0);\n    }\n    // Serialization + deserialization\n    value_serializeToBytes({ dataView }, offset, value) {\n        switch (this.byteLength) {\n            case 1:\n                dataView.setInt8(offset, Number(value));\n                break;\n            case 2:\n                dataView.setUint16(offset, Number(value), true);\n                break;\n            case 4:\n                dataView.setUint32(offset, Number(value), true);\n                break;\n            case 8:\n                dataView.setBigUint64(offset, value, true);\n                break;\n            default: {\n                for (let i = 0; i < this.byteLength; i += 8) {\n                    if (i > 0)\n                        value = value / BIGINT_2_POW_64;\n                    const lo = BigInt.asUintN(64, value);\n                    dataView.setBigUint64(offset + i, lo, true);\n                }\n            }\n        }\n        return offset + this.byteLength;\n    }\n    value_deserializeFromBytes({ dataView }, start, end) {\n        const size = end - start;\n        if (size !== this.byteLength) {\n            throw Error(`Invalid size ${size} expected ${this.byteLength}`);\n        }\n        // Note: pre-assigning the right function at the constructor to avoid this switch is not faster\n        switch (this.byteLength) {\n            case 1:\n                return BigInt(dataView.getUint8(start));\n            case 2:\n                return BigInt(dataView.getUint16(start, true));\n            case 4:\n                return BigInt(dataView.getUint32(start, true));\n            case 8:\n                return dataView.getBigUint64(start, true);\n            case 16: {\n                const a = dataView.getBigUint64(start, true);\n                const b = dataView.getBigUint64(start + 8, true);\n                return b * BIGINT_2_POW_64 + a;\n            }\n            case 32: {\n                const a = dataView.getBigUint64(start, true);\n                const b = dataView.getBigUint64(start + 8, true);\n                const c = dataView.getBigUint64(start + 16, true);\n                const d = dataView.getBigUint64(start + 24, true);\n                return d * BIGINT_2_POW_192 + c * BIGINT_2_POW_128 + b * BIGINT_2_POW_64 + a;\n            }\n        }\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const value = node.getUintBigint(this.byteLength, 0);\n        this.value_serializeToBytes(output, offset, value);\n        return offset + this.byteLength;\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        const size = end - start;\n        if (size !== this.byteLength) {\n            throw Error(`Invalid size ${size} expected ${this.byteLength}`);\n        }\n        const value = this.value_deserializeFromBytes(data, start, end);\n        const node = persistent_merkle_tree_1.LeafNode.fromZero();\n        node.setUintBigint(this.byteLength, 0, value);\n        return node;\n    }\n    // Fast Tree access\n    tree_getFromNode(leafNode) {\n        return leafNode.getUintBigint(this.byteLength, 0);\n    }\n    /** Mutates node to set value */\n    tree_setToNode(leafNode, value) {\n        this.tree_setToPackedNode(leafNode, 0, value);\n    }\n    /** EXAMPLE of `tree_getFromNode` */\n    tree_getFromPackedNode(leafNode, index) {\n        const offsetBytes = this.byteLength * (index % this.itemsPerChunk);\n        return leafNode.getUintBigint(this.byteLength, offsetBytes);\n    }\n    /** Mutates node to set value */\n    tree_setToPackedNode(leafNode, index, value) {\n        const offsetBytes = this.byteLength * (index % this.itemsPerChunk);\n        // TODO: Not-optimized, copy pasted from UintNumberType\n        leafNode.setUintBigint(this.byteLength, offsetBytes, value);\n    }\n    // JSON\n    fromJson(json) {\n        if (typeof json === \"bigint\") {\n            return json;\n        }\n        else if (typeof json === \"string\" || typeof json === \"number\") {\n            return BigInt(json);\n        }\n        else {\n            throw Error(`JSON invalid type ${typeof json} expected bigint`);\n        }\n    }\n    toJson(value) {\n        return value.toString(10);\n    }\n}\nexports.UintBigintType = UintBigintType;\n//# sourceMappingURL=uint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnionType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst composite_1 = require(\"./composite\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst none_1 = require(\"./none\");\nconst VALUE_GINDEX = BigInt(2);\nconst SELECTOR_GINDEX = BigInt(3);\n/**\n * Union: union type containing one of the given subtypes\n * - Notation: Union[type_0, type_1, ...], e.g. union[None, uint64, uint32]\n */\nclass UnionType extends composite_1.CompositeType {\n    constructor(types, opts) {\n        super();\n        this.types = types;\n        this.depth = 1;\n        this.maxChunkCount = 1;\n        this.fixedSize = null;\n        this.isList = true;\n        this.isViewMutable = true;\n        if (types.length >= 128) {\n            throw Error(\"Must have less than 128 types\");\n        }\n        if (types.length === 0) {\n            throw Error(\"Must have at least 1 type option\");\n        }\n        if (types[0] instanceof none_1.NoneType && types.length < 2) {\n            throw Error(\"Must have at least 2 type options if the first is None\");\n        }\n        for (let i = 1; i < types.length; i++) {\n            if (types[i] instanceof none_1.NoneType) {\n                throw Error(\"None may only be the first option\");\n            }\n        }\n        this.typeName = opts?.typeName ?? `Union[${types.map((t) => t.typeName).join(\",\")}]`;\n        const minLens = [];\n        const maxLens = [];\n        for (const _type of types) {\n            minLens.push(_type.minSize);\n            maxLens.push(_type.maxSize);\n        }\n        this.minSize = 1 + Math.min(...minLens);\n        this.maxSize = 1 + Math.max(...maxLens);\n        this.maxSelector = this.types.length - 1;\n    }\n    static named(types, opts) {\n        return new (named_1.namedClass(UnionType, opts.typeName))(types, opts);\n    }\n    defaultValue() {\n        return {\n            selector: 0,\n            value: this.types[0].defaultValue(),\n        };\n    }\n    getView(tree) {\n        return this.tree_toValue(tree.rootNode);\n    }\n    getViewDU(node) {\n        return this.tree_toValue(node);\n    }\n    cacheOfViewDU() {\n        return;\n    }\n    commitView(view) {\n        return this.value_toTree(view);\n    }\n    commitViewDU(view) {\n        return this.value_toTree(view);\n    }\n    value_serializedSize(value) {\n        return 1 + this.types[value.selector].value_serializedSize(value.value);\n    }\n    value_serializeToBytes(output, offset, value) {\n        output.uint8Array[offset] = value.selector;\n        return this.types[value.selector].value_serializeToBytes(output, offset + 1, value.value);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        const selector = data.uint8Array[start];\n        if (selector > this.maxSelector) {\n            throw Error(`Invalid selector ${selector}`);\n        }\n        return {\n            selector,\n            value: this.types[selector].value_deserializeFromBytes(data, start + 1, end),\n        };\n    }\n    tree_serializedSize(node) {\n        const selector = arrayBasic_1.getLengthFromRootNode(node);\n        const valueNode = node.left;\n        return 1 + this.types[selector].value_serializedSize(valueNode);\n    }\n    tree_serializeToBytes(output, offset, node) {\n        const selector = arrayBasic_1.getLengthFromRootNode(node);\n        const valueNode = node.left;\n        output.uint8Array[offset] = selector;\n        return this.types[selector].tree_serializeToBytes(output, offset + 1, valueNode);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        const selector = data.uint8Array[start];\n        if (selector > this.maxSelector) {\n            throw Error(`Invalid selector ${selector}`);\n        }\n        const valueNode = this.types[selector].tree_deserializeFromBytes(data, start + 1, end);\n        return arrayBasic_1.addLengthNode(valueNode, selector);\n    }\n    // Merkleization\n    hashTreeRoot(value) {\n        return merkleize_1.mixInLength(super.hashTreeRoot(value), value.selector);\n    }\n    getRoots(value) {\n        const valueRoot = this.types[value.selector].hashTreeRoot(value.value);\n        return [valueRoot];\n    }\n    // Proofs\n    getPropertyGindex(prop) {\n        switch (prop) {\n            case \"value\":\n                return VALUE_GINDEX;\n            case \"selector\":\n                return SELECTOR_GINDEX;\n            default:\n                throw new Error(`Invalid Union type property ${prop}`);\n        }\n    }\n    getPropertyType() {\n        // a Union has multiple types\n        throw new Error(\"Not applicable for Union type\");\n    }\n    getIndexProperty(index) {\n        if (index === 0)\n            return \"value\";\n        if (index === 1)\n            return \"selector\";\n        throw Error(\"Union index of out bounds\");\n    }\n    tree_getLeafGindices(rootGindex, rootNode) {\n        if (!rootNode) {\n            throw Error(\"rootNode required\");\n        }\n        const gindices = [persistent_merkle_tree_1.concatGindices([rootGindex, SELECTOR_GINDEX])];\n        const selector = arrayBasic_1.getLengthFromRootNode(rootNode);\n        const type = this.types[selector];\n        const extendedFieldGindex = persistent_merkle_tree_1.concatGindices([rootGindex, VALUE_GINDEX]);\n        if (composite_1.isCompositeType(type)) {\n            gindices.push(...type.tree_getLeafGindices(extendedFieldGindex, persistent_merkle_tree_1.getNode(rootNode, VALUE_GINDEX)));\n        }\n        else {\n            gindices.push(extendedFieldGindex);\n        }\n        return gindices;\n    }\n    // JSON\n    fromJson(json) {\n        if (typeof json !== \"object\") {\n            throw new Error(\"JSON must be of type object\");\n        }\n        const union = json;\n        if (typeof union.selector !== \"number\") {\n            throw new Error(\"Invalid JSON Union selector must be number\");\n        }\n        const type = this.types[union.selector];\n        if (!type) {\n            throw new Error(\"Invalid JSON Union selector out of range\");\n        }\n        return {\n            selector: union.selector,\n            value: type.toJson(union.value),\n        };\n    }\n    toJson(value) {\n        return {\n            selector: value.selector,\n            value: this.types[value.selector].toJson(value.value),\n        };\n    }\n    clone(value) {\n        return {\n            selector: value.selector,\n            value: this.types[value.selector].clone(value.value),\n        };\n    }\n    equals(a, b) {\n        if (a.selector !== b.selector) {\n            return false;\n        }\n        return this.types[a.selector].equals(a.value, b.value);\n    }\n}\nexports.UnionType = UnionType;\n//# sourceMappingURL=union.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VectorBasicType = void 0;\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst arrayBasic_1 = require(\"./arrayBasic\");\nconst arrayBasic_2 = require(\"../view/arrayBasic\");\nconst arrayBasic_3 = require(\"../viewDU/arrayBasic\");\nconst array_1 = require(\"./array\");\n/**\n * Vector: Ordered fixed-length homogeneous collection, with N values\n *\n * Array of Basic type:\n * - Basic types are max 32 bytes long so multiple values may be packed in the same node.\n * - Basic types are never returned in a view wrapper, but their value representation\n */\nclass VectorBasicType extends array_1.ArrayType {\n    constructor(elementType, length, opts) {\n        super(elementType);\n        this.elementType = elementType;\n        this.length = length;\n        this.isList = false;\n        this.isViewMutable = true;\n        if (!elementType.isBasic)\n            throw Error(\"elementType must be basic\");\n        if (length === 0)\n            throw Error(\"Vector length must be > 0\");\n        this.typeName = opts?.typeName ?? `Vector[${elementType.typeName}, ${length}]`;\n        // TODO Check that itemsPerChunk is an integer\n        this.itemsPerChunk = 32 / elementType.byteLength;\n        this.maxChunkCount = Math.ceil((length * elementType.byteLength) / 32);\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        this.depth = this.chunkDepth;\n        this.fixedSize = length * elementType.byteLength;\n        this.minSize = this.fixedSize;\n        this.maxSize = this.fixedSize;\n        this.defaultLen = length;\n    }\n    static named(elementType, limit, opts) {\n        return new (named_1.namedClass(VectorBasicType, opts.typeName))(elementType, limit, opts);\n    }\n    getView(tree) {\n        return new arrayBasic_2.ArrayBasicTreeView(this, tree);\n    }\n    getViewDU(node, cache) {\n        // cache type should be validated (if applicate) in the view\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new arrayBasic_3.ArrayBasicTreeViewDU(this, node, cache);\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    // Serialization + deserialization\n    value_serializedSize() {\n        return this.fixedSize;\n    }\n    value_serializeToBytes(output, offset, value) {\n        return arrayBasic_1.value_serializeToBytesArrayBasic(this.elementType, this.length, output, offset, value);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        return arrayBasic_1.value_deserializeFromBytesArrayBasic(this.elementType, data, start, end, this);\n    }\n    tree_serializedSize() {\n        return this.fixedSize;\n    }\n    tree_serializeToBytes(output, offset, node) {\n        return arrayBasic_1.tree_serializeToBytesArrayBasic(this.elementType, this.length, this.depth, output, offset, node);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return arrayBasic_1.tree_deserializeFromBytesArrayBasic(this.elementType, this.depth, data, start, end, this);\n    }\n    // Helpers for TreeView\n    tree_getLength() {\n        return this.length;\n    }\n    tree_setLength() {\n        // Vector's length is immutable, ignore this call\n    }\n    tree_getChunksNode(node) {\n        return node;\n    }\n    tree_setChunksNode(rootNode, chunksNode) {\n        return chunksNode;\n    }\n    // Merkleization\n    getRoots(value) {\n        const uint8Array = new Uint8Array(this.fixedSize);\n        const dataView = new DataView(uint8Array.buffer, uint8Array.byteOffset, uint8Array.byteLength);\n        arrayBasic_1.value_serializeToBytesArrayBasic(this.elementType, this.length, { uint8Array, dataView }, 0, value);\n        return merkleize_1.splitIntoRootChunks(uint8Array);\n    }\n}\nexports.VectorBasicType = VectorBasicType;\n//# sourceMappingURL=vectorBasic.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VectorCompositeType = void 0;\nconst merkleize_1 = require(\"../util/merkleize\");\nconst named_1 = require(\"../util/named\");\nconst arrayComposite_1 = require(\"./arrayComposite\");\nconst arrayComposite_2 = require(\"../view/arrayComposite\");\nconst arrayComposite_3 = require(\"../viewDU/arrayComposite\");\nconst array_1 = require(\"./array\");\n/**\n * Vector: Ordered fixed-length homogeneous collection, with N values\n *\n * Array of Composite type:\n * - Composite types always take at least one chunk\n * - Composite types are always returned as views\n */\nclass VectorCompositeType extends array_1.ArrayType {\n    constructor(elementType, length, opts) {\n        super(elementType);\n        this.elementType = elementType;\n        this.length = length;\n        this.itemsPerChunk = 1;\n        this.isList = false;\n        this.isViewMutable = true;\n        if (elementType.isBasic)\n            throw Error(\"elementType must not be basic\");\n        if (length === 0)\n            throw Error(\"Vector length must be > 0\");\n        this.typeName = opts?.typeName ?? `Vector[${elementType.typeName}, ${length}]`;\n        this.maxChunkCount = length;\n        this.chunkDepth = merkleize_1.maxChunksToDepth(this.maxChunkCount);\n        this.depth = this.chunkDepth;\n        this.fixedSize = elementType.fixedSize === null ? null : length * elementType.fixedSize;\n        this.minSize = arrayComposite_1.minSizeArrayComposite(elementType, length);\n        this.maxSize = arrayComposite_1.maxSizeArrayComposite(elementType, length);\n        this.defaultLen = length;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static named(elementType, limit, opts) {\n        return new (named_1.namedClass(VectorCompositeType, opts.typeName))(elementType, limit, opts);\n    }\n    getView(tree) {\n        return new arrayComposite_2.ArrayCompositeTreeView(this, tree);\n    }\n    getViewDU(node, cache) {\n        // cache type should be validated (if applicate) in the view\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new arrayComposite_3.ArrayCompositeTreeViewDU(this, node, cache);\n    }\n    commitView(view) {\n        return view.node;\n    }\n    commitViewDU(view) {\n        view.commit();\n        return view.node;\n    }\n    cacheOfViewDU(view) {\n        return view.cache;\n    }\n    // Serialization + deserialization\n    value_serializedSize(value) {\n        return arrayComposite_1.value_serializedSizeArrayComposite(this.elementType, this.length, value);\n    }\n    value_serializeToBytes(output, offset, value) {\n        return arrayComposite_1.value_serializeToBytesArrayComposite(this.elementType, this.length, output, offset, value);\n    }\n    value_deserializeFromBytes(data, start, end) {\n        return arrayComposite_1.value_deserializeFromBytesArrayComposite(this.elementType, data, start, end, this);\n    }\n    tree_serializedSize(node) {\n        return arrayComposite_1.tree_serializedSizeArrayComposite(this.elementType, this.length, this.depth, node);\n    }\n    tree_serializeToBytes(output, offset, node) {\n        return arrayComposite_1.tree_serializeToBytesArrayComposite(this.elementType, this.length, this.depth, node, output, offset);\n    }\n    tree_deserializeFromBytes(data, start, end) {\n        return arrayComposite_1.tree_deserializeFromBytesArrayComposite(this.elementType, this.depth, data, start, end, this);\n    }\n    // Helpers for TreeView\n    tree_getLength() {\n        return this.length;\n    }\n    tree_setLength() {\n        // Vector's length is immutable, ignore this call\n    }\n    tree_getChunksNode(node) {\n        return node;\n    }\n    tree_setChunksNode(rootNode, chunksNode) {\n        return chunksNode;\n    }\n    // Merkleization\n    getRoots(value) {\n        return arrayComposite_1.value_getRootsArrayComposite(this.elementType, this.length, value);\n    }\n}\nexports.VectorCompositeType = VectorCompositeType;\n//# sourceMappingURL=vectorComposite.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hash64 = exports.byteArrayEquals = exports.toHexString = exports.fromHexString = exports.getUint8ByteToBitBooleanArray = exports.BitArray = exports.TreeViewDU = exports.TreeView = exports.isCompositeType = exports.CompositeType = exports.isBasicType = exports.BasicType = exports.Type = exports.ByteArrayType = exports.BitArrayType = exports.ArrayType = exports.VectorCompositeType = exports.VectorBasicType = exports.UnionType = exports.UintNumberType = exports.UintBigintType = exports.NoneType = exports.ListCompositeType = exports.ListBasicType = exports.ContainerNodeStructType = exports.ContainerType = exports.ByteVectorType = exports.ByteListType = exports.BooleanType = exports.BitVectorType = exports.BitListType = void 0;\n// Types\nvar bitList_1 = require(\"./type/bitList\");\nObject.defineProperty(exports, \"BitListType\", { enumerable: true, get: function () { return bitList_1.BitListType; } });\nvar bitVector_1 = require(\"./type/bitVector\");\nObject.defineProperty(exports, \"BitVectorType\", { enumerable: true, get: function () { return bitVector_1.BitVectorType; } });\nvar boolean_1 = require(\"./type/boolean\");\nObject.defineProperty(exports, \"BooleanType\", { enumerable: true, get: function () { return boolean_1.BooleanType; } });\nvar byteList_1 = require(\"./type/byteList\");\nObject.defineProperty(exports, \"ByteListType\", { enumerable: true, get: function () { return byteList_1.ByteListType; } });\nvar byteVector_1 = require(\"./type/byteVector\");\nObject.defineProperty(exports, \"ByteVectorType\", { enumerable: true, get: function () { return byteVector_1.ByteVectorType; } });\nvar container_1 = require(\"./type/container\");\nObject.defineProperty(exports, \"ContainerType\", { enumerable: true, get: function () { return container_1.ContainerType; } });\nvar containerNodeStruct_1 = require(\"./type/containerNodeStruct\");\nObject.defineProperty(exports, \"ContainerNodeStructType\", { enumerable: true, get: function () { return containerNodeStruct_1.ContainerNodeStructType; } });\nvar listBasic_1 = require(\"./type/listBasic\");\nObject.defineProperty(exports, \"ListBasicType\", { enumerable: true, get: function () { return listBasic_1.ListBasicType; } });\nvar listComposite_1 = require(\"./type/listComposite\");\nObject.defineProperty(exports, \"ListCompositeType\", { enumerable: true, get: function () { return listComposite_1.ListCompositeType; } });\nvar none_1 = require(\"./type/none\");\nObject.defineProperty(exports, \"NoneType\", { enumerable: true, get: function () { return none_1.NoneType; } });\nvar uint_1 = require(\"./type/uint\");\nObject.defineProperty(exports, \"UintBigintType\", { enumerable: true, get: function () { return uint_1.UintBigintType; } });\nObject.defineProperty(exports, \"UintNumberType\", { enumerable: true, get: function () { return uint_1.UintNumberType; } });\nvar union_1 = require(\"./type/union\");\nObject.defineProperty(exports, \"UnionType\", { enumerable: true, get: function () { return union_1.UnionType; } });\nvar vectorBasic_1 = require(\"./type/vectorBasic\");\nObject.defineProperty(exports, \"VectorBasicType\", { enumerable: true, get: function () { return vectorBasic_1.VectorBasicType; } });\nvar vectorComposite_1 = require(\"./type/vectorComposite\");\nObject.defineProperty(exports, \"VectorCompositeType\", { enumerable: true, get: function () { return vectorComposite_1.VectorCompositeType; } });\n// Base types\nvar array_1 = require(\"./type/array\");\nObject.defineProperty(exports, \"ArrayType\", { enumerable: true, get: function () { return array_1.ArrayType; } });\nvar bitArray_1 = require(\"./type/bitArray\");\nObject.defineProperty(exports, \"BitArrayType\", { enumerable: true, get: function () { return bitArray_1.BitArrayType; } });\nvar byteArray_1 = require(\"./type/byteArray\");\nObject.defineProperty(exports, \"ByteArrayType\", { enumerable: true, get: function () { return byteArray_1.ByteArrayType; } });\n// Base type clases\nvar abstract_1 = require(\"./type/abstract\");\nObject.defineProperty(exports, \"Type\", { enumerable: true, get: function () { return abstract_1.Type; } });\nvar basic_1 = require(\"./type/basic\");\nObject.defineProperty(exports, \"BasicType\", { enumerable: true, get: function () { return basic_1.BasicType; } });\nObject.defineProperty(exports, \"isBasicType\", { enumerable: true, get: function () { return basic_1.isBasicType; } });\nvar composite_1 = require(\"./type/composite\");\nObject.defineProperty(exports, \"CompositeType\", { enumerable: true, get: function () { return composite_1.CompositeType; } });\nObject.defineProperty(exports, \"isCompositeType\", { enumerable: true, get: function () { return composite_1.isCompositeType; } });\nvar abstract_2 = require(\"./view/abstract\");\nObject.defineProperty(exports, \"TreeView\", { enumerable: true, get: function () { return abstract_2.TreeView; } });\nvar abstract_3 = require(\"./viewDU/abstract\");\nObject.defineProperty(exports, \"TreeViewDU\", { enumerable: true, get: function () { return abstract_3.TreeViewDU; } });\n// Values\nvar bitArray_2 = require(\"./value/bitArray\");\nObject.defineProperty(exports, \"BitArray\", { enumerable: true, get: function () { return bitArray_2.BitArray; } });\nObject.defineProperty(exports, \"getUint8ByteToBitBooleanArray\", { enumerable: true, get: function () { return bitArray_2.getUint8ByteToBitBooleanArray; } });\n// Utils\nvar byteArray_2 = require(\"./util/byteArray\");\nObject.defineProperty(exports, \"fromHexString\", { enumerable: true, get: function () { return byteArray_2.fromHexString; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return byteArray_2.toHexString; } });\nObject.defineProperty(exports, \"byteArrayEquals\", { enumerable: true, get: function () { return byteArray_2.byteArrayEquals; } });\nvar merkleize_1 = require(\"./util/merkleize\");\nObject.defineProperty(exports, \"hash64\", { enumerable: true, get: function () { return merkleize_1.hash64; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Withdrawals = exports.Withdrawal = exports.Bytes20 = exports.UintBigInt64 = exports.UintNum64 = void 0;\nconst ssz_1 = require(\"@chainsafe/ssz\");\nconst constants_1 = require(\"./constants\");\nexports.UintNum64 = new ssz_1.UintNumberType(8);\nexports.UintBigInt64 = new ssz_1.UintBigintType(8);\nexports.Bytes20 = new ssz_1.ByteVectorType(20);\nexports.Withdrawal = new ssz_1.ContainerType({\n    index: exports.UintBigInt64,\n    validatorIndex: exports.UintBigInt64,\n    address: exports.Bytes20,\n    amount: exports.UintBigInt64,\n}, { typeName: 'Withdrawal', jsonCase: 'eth2' });\nexports.Withdrawals = new ssz_1.ListCompositeType(exports.Withdrawal, constants_1.MAX_WITHDRAWALS_PER_PAYLOAD);\n//# sourceMappingURL=ssz.js.map","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_base.proto\" (package \"db3_base_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_base.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * @generated from protobuf message db3_base_proto.BroadcastMeta\n */\nexport interface BroadcastMeta {\n    /**\n     * @generated from protobuf field: uint64 nonce = 1;\n     */\n    nonce: string;\n    /**\n     * the chain id of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainId chain_id = 2;\n     */\n    chainId: ChainId;\n    /**\n     * the chain role of db3\n     *\n     * @generated from protobuf field: db3_base_proto.ChainRole chain_role = 3;\n     */\n    chainRole: ChainRole;\n}\n/**\n * @generated from protobuf enum db3_base_proto.ChainRole\n */\nexport enum ChainRole {\n    /**\n     * @generated from protobuf enum value: SettlementChain = 0;\n     */\n    SettlementChain = 0,\n    /**\n     * @generated from protobuf enum value: StorageShardChain = 10;\n     */\n    StorageShardChain = 10,\n    /**\n     * @generated from protobuf enum value: DvmComputingChain = 20;\n     */\n    DvmComputingChain = 20\n}\n/**\n * @generated from protobuf enum db3_base_proto.ChainId\n */\nexport enum ChainId {\n    /**\n     * @generated from protobuf enum value: MainNet = 0;\n     */\n    MainNet = 0,\n    /**\n     * @generated from protobuf enum value: TestNet = 10;\n     */\n    TestNet = 10,\n    /**\n     * @generated from protobuf enum value: DevNet = 20;\n     */\n    DevNet = 20\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastMeta$Type extends MessageType<BroadcastMeta> {\n    constructor() {\n        super(\"db3_base_proto.BroadcastMeta\", [\n            { no: 1, name: \"nonce\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"chain_id\", kind: \"enum\", T: () => [\"db3_base_proto.ChainId\", ChainId] },\n            { no: 3, name: \"chain_role\", kind: \"enum\", T: () => [\"db3_base_proto.ChainRole\", ChainRole] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_base_proto.BroadcastMeta\n */\nexport const BroadcastMeta = new BroadcastMeta$Type();\n","\"use strict\";\n/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncEventEmitter = void 0;\nconst events_1 = require(\"events\");\nasync function runInSeries(context, tasks, data) {\n    let error;\n    for await (const task of tasks) {\n        try {\n            if (task.length < 2) {\n                //sync\n                task.call(context, data);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    task.call(context, data, (error) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            }\n        }\n        catch (e) {\n            error = e;\n        }\n    }\n    if (error) {\n        throw error;\n    }\n}\nclass AsyncEventEmitter extends events_1.EventEmitter {\n    emit(event, ...args) {\n        let [data, callback] = args;\n        const self = this;\n        let listeners = self._events[event] ?? [];\n        // Optional data argument\n        if (callback === undefined && typeof data === 'function') {\n            callback = data;\n            data = undefined;\n        }\n        // Special treatment of internal newListener and removeListener events\n        if (event === 'newListener' || event === 'removeListener') {\n            data = {\n                event: data,\n                fn: callback,\n            };\n            callback = undefined;\n        }\n        // A single listener is just a function not an array...\n        listeners = Array.isArray(listeners) ? listeners : [listeners];\n        runInSeries(self, listeners.slice(), data).then(callback).catch(callback);\n        return self.listenerCount(event) > 0;\n    }\n    once(event, listener) {\n        const self = this;\n        let g;\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        // Hack to support set arity\n        if (listener.length >= 2) {\n            g = function (e, next) {\n                self.removeListener(event, g);\n                void listener(e, next);\n            };\n        }\n        else {\n            g = function (e) {\n                self.removeListener(event, g);\n                void listener(e, g);\n            };\n        }\n        self.on(event, g);\n        return self;\n    }\n    first(event, listener) {\n        let listeners = this._events[event] ?? [];\n        // Contract\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        // Listeners are not always an array\n        if (!Array.isArray(listeners)) {\n            ;\n            this._events[event] = listeners = [listeners];\n        }\n        listeners.unshift(listener);\n        return this;\n    }\n    before(event, target, listener) {\n        return this.beforeOrAfter(event, target, listener);\n    }\n    after(event, target, listener) {\n        return this.beforeOrAfter(event, target, listener, 'after');\n    }\n    beforeOrAfter(event, target, listener, beforeOrAfter) {\n        let listeners = this._events[event] ?? [];\n        let i;\n        let index;\n        const add = beforeOrAfter === 'after' ? 1 : 0;\n        // Contract\n        if (typeof listener !== 'function') {\n            throw new TypeError('listener must be a function');\n        }\n        if (typeof target !== 'function') {\n            throw new TypeError('target must be a function');\n        }\n        // Listeners are not always an array\n        if (!Array.isArray(listeners)) {\n            ;\n            this._events[event] = listeners = [listeners];\n        }\n        index = listeners.length;\n        for (i = listeners.length; i--;) {\n            if (listeners[i] === target) {\n                index = i + add;\n                break;\n            }\n        }\n        listeners.splice(index, 0, listener);\n        return this;\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    addListener(event, listener) {\n        return super.addListener(event, listener);\n    }\n    prependListener(event, listener) {\n        return super.prependListener(event, listener);\n    }\n    prependOnceListener(event, listener) {\n        return super.prependOnceListener(event, listener);\n    }\n    removeAllListeners(event) {\n        return super.removeAllListeners(event);\n    }\n    removeListener(event, listener) {\n        return super.removeListener(event, listener);\n    }\n    eventNames() {\n        return super.eventNames();\n    }\n    listeners(event) {\n        return super.listeners(event);\n    }\n    listenerCount(event) {\n        return super.listenerCount(event);\n    }\n    getMaxListeners() {\n        return super.getMaxListeners();\n    }\n    setMaxListeners(maxListeners) {\n        return super.setMaxListeners(maxListeners);\n    }\n}\nexports.AsyncEventEmitter = AsyncEventEmitter;\n//# sourceMappingURL=asyncEventEmitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lock = void 0;\n// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nclass Lock {\n    constructor() {\n        this.permits = 1;\n        this.promiseResolverQueue = [];\n    }\n    /**\n     * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n     * @returns  A promise that gets resolved when execution is allowed to proceed.\n     */\n    async acquire() {\n        if (this.permits > 0) {\n            this.permits -= 1;\n            return Promise.resolve(true);\n        }\n        // If there is no permit available, we return a promise that resolves once the semaphore gets\n        // signaled enough times that permits is equal to one.\n        return new Promise((resolver) => this.promiseResolverQueue.push(resolver));\n    }\n    /**\n     * Increases the number of permits by one. If there are other functions waiting, one of them will\n     * continue to execute in a future iteration of the event loop.\n     */\n    release() {\n        this.permits += 1;\n        if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n            // eslint-disable-next-line no-console\n            console.warn('Lock.permits should never be > 0 when there is someone waiting.');\n        }\n        else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n            // If there is someone else waiting, immediately consume the permit that was released\n            // at the beginning of this function and let the waiting function resume.\n            this.permits -= 1;\n            const nextResolver = this.promiseResolverQueue.shift();\n            if (nextResolver) {\n                nextResolver(true);\n            }\n        }\n    }\n}\nexports.Lock = Lock;\n//# sourceMappingURL=lock.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toAscii = exports.stripHexPrefix = exports.padToEven = exports.isHexString = exports.isHexPrefixed = exports.getKeys = exports.getBinarySize = exports.fromUtf8 = exports.fromAscii = exports.arrayContainsArray = exports.ssz = void 0;\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Units helpers\n */\n__exportStar(require(\"./units\"), exports);\n/**\n * Account class and helper functions\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Address type\n */\n__exportStar(require(\"./address\"), exports);\n/**\n * Withdrawal type\n */\n__exportStar(require(\"./withdrawal\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * SSZ containers\n */\nexports.ssz = require(\"./ssz\");\n/**\n * Helpful TypeScript types\n */\n__exportStar(require(\"./types\"), exports);\n/**\n * Export ethjs-util methods\n */\n__exportStar(require(\"./asyncEventEmitter\"), exports);\nvar internal_1 = require(\"./internal\");\nObject.defineProperty(exports, \"arrayContainsArray\", { enumerable: true, get: function () { return internal_1.arrayContainsArray; } });\nObject.defineProperty(exports, \"fromAscii\", { enumerable: true, get: function () { return internal_1.fromAscii; } });\nObject.defineProperty(exports, \"fromUtf8\", { enumerable: true, get: function () { return internal_1.fromUtf8; } });\nObject.defineProperty(exports, \"getBinarySize\", { enumerable: true, get: function () { return internal_1.getBinarySize; } });\nObject.defineProperty(exports, \"getKeys\", { enumerable: true, get: function () { return internal_1.getKeys; } });\nObject.defineProperty(exports, \"isHexPrefixed\", { enumerable: true, get: function () { return internal_1.isHexPrefixed; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return internal_1.isHexString; } });\nObject.defineProperty(exports, \"padToEven\", { enumerable: true, get: function () { return internal_1.padToEven; } });\nObject.defineProperty(exports, \"stripHexPrefix\", { enumerable: true, get: function () { return internal_1.stripHexPrefix; } });\nObject.defineProperty(exports, \"toAscii\", { enumerable: true, get: function () { return internal_1.toAscii; } });\n__exportStar(require(\"./lock\"), exports);\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numberToBuffer = exports.normalize = exports.recoverPublicKey = exports.concatSig = exports.legacyToBuffer = exports.isNullish = exports.padWithZeroes = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst ethjs_util_1 = require(\"ethjs-util\");\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nfunction padWithZeroes(hexString, targetLength) {\n    if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n        throw new Error(`Expected an unprefixed hex string. Received: ${hexString}`);\n    }\n    if (targetLength < 0) {\n        throw new Error(`Expected a non-negative integer target length. Received: ${targetLength}`);\n    }\n    return String.prototype.padStart.call(hexString, targetLength, '0');\n}\nexports.padWithZeroes = padWithZeroes;\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nfunction isNullish(value) {\n    return value === null || value === undefined;\n}\nexports.isNullish = isNullish;\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nfunction legacyToBuffer(value) {\n    return typeof value === 'string' && !(0, ethjs_util_1.isHexString)(value)\n        ? Buffer.from(value)\n        : (0, util_1.toBuffer)(value);\n}\nexports.legacyToBuffer = legacyToBuffer;\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nfunction concatSig(v, r, s) {\n    const rSig = (0, util_1.fromSigned)(r);\n    const sSig = (0, util_1.fromSigned)(s);\n    const vSig = (0, util_1.bufferToInt)(v);\n    const rStr = padWithZeroes((0, util_1.toUnsigned)(rSig).toString('hex'), 64);\n    const sStr = padWithZeroes((0, util_1.toUnsigned)(sSig).toString('hex'), 64);\n    const vStr = (0, ethjs_util_1.stripHexPrefix)((0, ethjs_util_1.intToHex)(vSig));\n    return (0, util_1.addHexPrefix)(rStr.concat(sStr, vStr));\n}\nexports.concatSig = concatSig;\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nfunction recoverPublicKey(messageHash, signature) {\n    const sigParams = (0, util_1.fromRpcSig)(signature);\n    return (0, util_1.ecrecover)(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\nexports.recoverPublicKey = recoverPublicKey;\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nfunction normalize(input) {\n    if (!input) {\n        return undefined;\n    }\n    if (typeof input === 'number') {\n        if (input < 0) {\n            return '0x';\n        }\n        const buffer = (0, util_1.toBuffer)(input);\n        input = (0, util_1.bufferToHex)(buffer);\n    }\n    if (typeof input !== 'string') {\n        let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n        msg += ` received ${typeof input}: ${input}`;\n        throw new Error(msg);\n    }\n    return (0, util_1.addHexPrefix)(input.toLowerCase());\n}\nexports.normalize = normalize;\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nfunction numberToBuffer(num) {\n    const hexVal = num.toString(16);\n    const prepend = hexVal.length % 2 ? '0' : '';\n    return Buffer.from(prepend + hexVal, 'hex');\n}\nexports.numberToBuffer = numberToBuffer;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"./utils\");\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction personalSign({ privateKey, data, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const message = (0, utils_1.legacyToBuffer)(data);\n    const msgHash = (0, util_1.hashPersonalMessage)(message);\n    const sig = (0, util_1.ecsign)(msgHash, privateKey);\n    const serialized = (0, utils_1.concatSig)((0, util_1.toBuffer)(sig.v), sig.r, sig.s);\n    return serialized;\n}\nexports.personalSign = personalSign;\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nfunction recoverPersonalSignature({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    const senderHex = (0, util_1.bufferToHex)(sender);\n    return senderHex;\n}\nexports.recoverPersonalSignature = recoverPersonalSignature;\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nfunction extractPublicKey({ data, signature, }) {\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const publicKey = getPublicKeyFor(data, signature);\n    return `0x${publicKey.toString('hex')}`;\n}\nexports.extractPublicKey = extractPublicKey;\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message, signature) {\n    const messageHash = (0, util_1.hashPersonalMessage)((0, utils_1.legacyToBuffer)(message));\n    return (0, utils_1.recoverPublicKey)(messageHash, signature);\n}\n//# sourceMappingURL=personal-sign.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rawEncode = exports.parseNumber = exports.solidityPack = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst ethjs_util_1 = require(\"ethjs-util\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst utils_1 = require(\"./utils\");\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nfunction solidityPack(types, values) {\n    if (types.length !== values.length) {\n        throw new Error('Number of types are not matching the values');\n    }\n    const ret = [];\n    for (let i = 0; i < types.length; i++) {\n        const type = elementaryName(types[i]);\n        const value = values[i];\n        ret.push(solidityHexValue(type, value, null));\n    }\n    return Buffer.concat(ret);\n}\nexports.solidityPack = solidityPack;\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type) {\n    return type.lastIndexOf(']') === type.length - 1;\n}\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type) {\n    const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n    if (tmp) {\n        return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n    }\n    return null;\n}\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type) {\n    return parseInt(/^\\D+(\\d+)$/u.exec(type)[1], 10);\n}\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nfunction parseNumber(arg) {\n    const type = typeof arg;\n    if (type === 'string') {\n        if ((0, util_1.isHexPrefixed)(arg)) {\n            return new bn_js_1.default((0, ethjs_util_1.stripHexPrefix)(arg), 16);\n        }\n        return new bn_js_1.default(arg, 10);\n    }\n    else if (type === 'number') {\n        return new bn_js_1.default(arg);\n    }\n    else if (arg.toArray) {\n        // assume this is a BN for the moment, replace with BN.isBN soon\n        return arg;\n    }\n    throw new Error('Argument is not a number');\n}\nexports.parseNumber = parseNumber;\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(type, value, bitsize) {\n    // pass in bitsize = null if use default bitsize\n    let size, num;\n    if (isArray(type)) {\n        const subType = type.replace(/\\[.*?\\]/u, '');\n        if (!isArray(subType)) {\n            const arraySize = parseTypeArray(type);\n            if (arraySize !== 'dynamic' &&\n                arraySize !== 0 &&\n                value.length > arraySize) {\n                throw new Error(`Elements exceed array size: ${arraySize}`);\n            }\n        }\n        const arrayValues = value.map(function (v) {\n            return solidityHexValue(subType, v, 256);\n        });\n        return Buffer.concat(arrayValues);\n    }\n    else if (type === 'bytes') {\n        return value;\n    }\n    else if (type === 'string') {\n        return Buffer.from(value, 'utf8');\n    }\n    else if (type === 'bool') {\n        bitsize = bitsize || 8;\n        const padding = Array(bitsize / 4).join('0');\n        return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n    }\n    else if (type === 'address') {\n        let bytesize = 20;\n        if (bitsize) {\n            bytesize = bitsize / 8;\n        }\n        return (0, util_1.setLengthLeft)((0, util_1.toBuffer)(value), bytesize);\n    }\n    else if (type.startsWith('bytes')) {\n        size = parseTypeN(type);\n        if (size < 1 || size > 32) {\n            throw new Error(`Invalid bytes<N> width: ${size}`);\n        }\n        if (typeof value === 'number') {\n            value = (0, utils_1.normalize)(value);\n        }\n        return (0, util_1.setLengthRight)((0, util_1.toBuffer)(value), size);\n    }\n    else if (type.startsWith('uint')) {\n        size = parseTypeN(type);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new Error(`Invalid uint<N> width: ${size}`);\n        }\n        num = parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error(`Supplied uint exceeds width: ${size} vs ${num.bitLength()}`);\n        }\n        bitsize = bitsize || size;\n        return num.toArrayLike(Buffer, 'be', bitsize / 8);\n    }\n    else if (type.startsWith('int')) {\n        size = parseTypeN(type);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new Error(`Invalid int<N> width: ${size}`);\n        }\n        num = parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error(`Supplied int exceeds width: ${size} vs ${num.bitLength()}`);\n        }\n        bitsize = bitsize || size;\n        return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n    }\n    // FIXME: support all other types\n    throw new Error(`Unsupported or invalid type: ${type}`);\n}\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name) {\n    if (name.startsWith('int[')) {\n        return `int256${name.slice(3)}`;\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return `uint256${name.slice(4)}`;\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return `fixed128x128${name.slice(5)}`;\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return `ufixed128x128${name.slice(6)}`;\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n}\n/**\n * @param types\n * @param values\n */\nfunction rawEncode(types, values) {\n    const output = [];\n    const data = [];\n    let headLength = 0;\n    types.forEach(function (type) {\n        if (isArray(type)) {\n            const size = parseTypeArray(type);\n            // eslint-disable-next-line no-negated-condition\n            if (size !== 'dynamic') {\n                headLength += 32 * size;\n            }\n            else {\n                headLength += 32;\n            }\n        }\n        else {\n            headLength += 32;\n        }\n    });\n    for (let i = 0; i < types.length; i++) {\n        const type = elementaryName(types[i]);\n        const value = values[i];\n        const cur = encodeSingle(type, value);\n        // Use the head/tail method for storing dynamic data\n        if (isDynamic(type)) {\n            output.push(encodeSingle('uint256', headLength));\n            data.push(cur);\n            headLength += cur.length;\n        }\n        else {\n            output.push(cur);\n        }\n    }\n    return Buffer.concat(output.concat(data));\n}\nexports.rawEncode = rawEncode;\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(type, arg) {\n    let size, num, ret, i;\n    if (type === 'address') {\n        return encodeSingle('uint160', parseNumber(arg));\n    }\n    else if (type === 'bool') {\n        return encodeSingle('uint8', arg ? 1 : 0);\n    }\n    else if (type === 'string') {\n        return encodeSingle('bytes', Buffer.from(arg, 'utf8'));\n    }\n    else if (isArray(type)) {\n        // this part handles fixed-length ([2]) and variable length ([]) arrays\n        // NOTE: we catch here all calls to arrays, that simplifies the rest\n        if (typeof arg.length === 'undefined') {\n            throw new Error('Not an array?');\n        }\n        size = parseTypeArray(type);\n        if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n            throw new Error(`Elements exceed array size: ${size}`);\n        }\n        ret = [];\n        type = type.slice(0, type.lastIndexOf('['));\n        if (typeof arg === 'string') {\n            arg = JSON.parse(arg);\n        }\n        for (i in arg) {\n            if (Object.prototype.hasOwnProperty.call(arg, i)) {\n                ret.push(encodeSingle(type, arg[i]));\n            }\n        }\n        if (size === 'dynamic') {\n            const length = encodeSingle('uint256', arg.length);\n            ret.unshift(length);\n        }\n        return Buffer.concat(ret);\n    }\n    else if (type === 'bytes') {\n        arg = Buffer.from(arg);\n        ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n        if (arg.length % 32 !== 0) {\n            ret = Buffer.concat([ret, (0, util_1.zeros)(32 - (arg.length % 32))]);\n        }\n        return ret;\n    }\n    else if (type.startsWith('bytes')) {\n        size = parseTypeN(type);\n        if (size < 1 || size > 32) {\n            throw new Error(`Invalid bytes<N> width: ${size}`);\n        }\n        if (typeof arg === 'number') {\n            arg = (0, utils_1.normalize)(arg);\n        }\n        return (0, util_1.setLengthRight)((0, util_1.toBuffer)(arg), 32);\n    }\n    else if (type.startsWith('uint')) {\n        size = parseTypeN(type);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new Error(`Invalid uint<N> width: ${size}`);\n        }\n        num = parseNumber(arg);\n        if (num.bitLength() > size) {\n            throw new Error(`Supplied uint exceeds width: ${size} vs ${num.bitLength()}`);\n        }\n        if (num < 0) {\n            throw new Error('Supplied uint is negative');\n        }\n        return num.toArrayLike(Buffer, 'be', 32);\n    }\n    else if (type.startsWith('int')) {\n        size = parseTypeN(type);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new Error(`Invalid int<N> width: ${size}`);\n        }\n        num = parseNumber(arg);\n        if (num.bitLength() > size) {\n            throw new Error(`Supplied int exceeds width: ${size} vs ${num.bitLength()}`);\n        }\n        return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n    }\n    else if (type.startsWith('ufixed')) {\n        size = parseTypeNxM(type);\n        num = parseNumber(arg);\n        if (num < 0) {\n            throw new Error('Supplied ufixed is negative');\n        }\n        return encodeSingle('uint256', num.mul(new bn_js_1.default(2).pow(new bn_js_1.default(size[1]))));\n    }\n    else if (type.startsWith('fixed')) {\n        size = parseTypeNxM(type);\n        return encodeSingle('int256', parseNumber(arg).mul(new bn_js_1.default(2).pow(new bn_js_1.default(size[1]))));\n    }\n    throw new Error(`Unsupported or invalid type: ${type}`);\n}\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type) {\n    // FIXME: handle all types? I don't think anything is missing now\n    return (type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic');\n}\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type) {\n    const tmp = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n    return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];\n}\n//# sourceMappingURL=ethereumjs-abi-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recoverTypedSignature = exports.signTypedData = exports.typedSignatureHash = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = exports.SignTypedDataVersion = void 0;\nconst ethjs_util_1 = require(\"ethjs-util\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst keccak_1 = require(\"ethereum-cryptography/keccak\");\nconst ethereumjs_abi_utils_1 = require(\"./ethereumjs-abi-utils\");\nconst utils_1 = require(\"./utils\");\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nvar SignTypedDataVersion;\n(function (SignTypedDataVersion) {\n    SignTypedDataVersion[\"V1\"] = \"V1\";\n    SignTypedDataVersion[\"V3\"] = \"V3\";\n    SignTypedDataVersion[\"V4\"] = \"V4\";\n})(SignTypedDataVersion = exports.SignTypedDataVersion || (exports.SignTypedDataVersion = {}));\nexports.TYPED_MESSAGE_SCHEMA = {\n    type: 'object',\n    properties: {\n        types: {\n            type: 'object',\n            additionalProperties: {\n                type: 'array',\n                items: {\n                    type: 'object',\n                    properties: {\n                        name: { type: 'string' },\n                        type: { type: 'string' },\n                    },\n                    required: ['name', 'type'],\n                },\n            },\n        },\n        primaryType: { type: 'string' },\n        domain: { type: 'object' },\n        message: { type: 'object' },\n    },\n    required: ['types', 'primaryType', 'domain', 'message'],\n};\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(version, allowedVersions) {\n    if (!Object.keys(SignTypedDataVersion).includes(version)) {\n        throw new Error(`Invalid version: '${version}'`);\n    }\n    else if (allowedVersions && !allowedVersions.includes(version)) {\n        throw new Error(`SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(', ')}`);\n    }\n}\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(types, name, type, value, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    if (types[type] !== undefined) {\n        return [\n            'bytes32',\n            version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n                ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n                : (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodeData(type, value, types, version))),\n        ];\n    }\n    if (value === undefined) {\n        throw new Error(`missing value for field ${name} of type ${type}`);\n    }\n    if (type === 'bytes') {\n        if (typeof value === 'number') {\n            value = (0, utils_1.numberToBuffer)(value);\n        }\n        else if ((0, ethjs_util_1.isHexString)(value)) {\n            const prepend = value.length % 2 ? '0' : '';\n            value = Buffer.from(prepend + value.slice(2), 'hex');\n        }\n        else {\n            value = Buffer.from(value, 'utf8');\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type === 'string') {\n        if (typeof value === 'number') {\n            value = (0, utils_1.numberToBuffer)(value);\n        }\n        else {\n            value = Buffer.from(value !== null && value !== void 0 ? value : '', 'utf8');\n        }\n        return ['bytes32', (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(value))];\n    }\n    if (type.lastIndexOf(']') === type.length - 1) {\n        if (version === SignTypedDataVersion.V3) {\n            throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n        }\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField(types, name, parsedType, item, version));\n        return [\n            'bytes32',\n            (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, ethereumjs_abi_utils_1.rawEncode)(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v)))),\n        ];\n    }\n    return [type, value];\n}\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const encodedTypes = ['bytes32'];\n    const encodedValues = [hashType(primaryType, types)];\n    for (const field of types[primaryType]) {\n        if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n            continue;\n        }\n        const [type, value] = encodeField(types, field.name, field.type, data[field.name], version);\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0, ethereumjs_abi_utils_1.rawEncode)(encodedTypes, encodedValues);\n}\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(primaryType, types) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies(primaryType, types);\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        const children = types[type];\n        if (!children) {\n            throw new Error(`No type definition specified: ${type}`);\n        }\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(primaryType, types, results = new Set()) {\n    [primaryType] = primaryType.match(/^\\w*/u);\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies(field.type, types, results);\n    }\n    return results;\n}\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(primaryType, data, types, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodeData(primaryType, data, types, version)));\n}\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(primaryType, types) {\n    const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(encodedHashType));\n}\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData(data) {\n    const sanitizedData = {};\n    for (const key in exports.TYPED_MESSAGE_SCHEMA.properties) {\n        if (data[key]) {\n            sanitizedData[key] = data[key];\n        }\n    }\n    if ('types' in sanitizedData) {\n        sanitizedData.types = Object.assign({ EIP712Domain: [] }, sanitizedData.types);\n    }\n    return sanitizedData;\n}\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash(typedData, version) {\n    validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n    const sanitizedData = sanitizeData(typedData);\n    const parts = [Buffer.from('1901', 'hex')];\n    parts.push(hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, version));\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n        parts.push(hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, version));\n    }\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)(Buffer.concat(parts)));\n}\n/**\n * A collection of utility functions used for signing typed data.\n */\nexports.TypedDataUtils = {\n    encodeData,\n    encodeType,\n    findTypeDependencies,\n    hashStruct,\n    hashType,\n    sanitizeData,\n    eip712Hash,\n};\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nfunction typedSignatureHash(typedData) {\n    const hashBuffer = _typedSignatureHash(typedData);\n    return (0, util_1.bufferToHex)(hashBuffer);\n}\nexports.typedSignatureHash = typedSignatureHash;\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData) {\n    const error = new Error('Expect argument to be non-empty array');\n    if (typeof typedData !== 'object' ||\n        !('length' in typedData) ||\n        !typedData.length) {\n        throw error;\n    }\n    const data = typedData.map(function (e) {\n        if (e.type !== 'bytes') {\n            return e.value;\n        }\n        return (0, utils_1.legacyToBuffer)(e.value);\n    });\n    const types = typedData.map(function (e) {\n        return e.type;\n    });\n    const schema = typedData.map(function (e) {\n        if (!e.name) {\n            throw error;\n        }\n        return `${e.type} ${e.name}`;\n    });\n    return (0, util_1.arrToBufArr)((0, keccak_1.keccak256)((0, ethereumjs_abi_utils_1.solidityPack)(['bytes32', 'bytes32'], [\n        (0, keccak_1.keccak256)((0, ethereumjs_abi_utils_1.solidityPack)(new Array(typedData.length).fill('string'), schema)),\n        (0, keccak_1.keccak256)((0, ethereumjs_abi_utils_1.solidityPack)(types, data)),\n    ])));\n}\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nfunction signTypedData({ privateKey, data, version, }) {\n    validateVersion(version);\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing private key parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const sig = (0, util_1.ecsign)(messageHash, privateKey);\n    return (0, utils_1.concatSig)((0, util_1.toBuffer)(sig.v), sig.r, sig.s);\n}\nexports.signTypedData = signTypedData;\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nfunction recoverTypedSignature({ data, signature, version, }) {\n    validateVersion(version);\n    if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(signature)) {\n        throw new Error('Missing signature parameter');\n    }\n    const messageHash = version === SignTypedDataVersion.V1\n        ? _typedSignatureHash(data)\n        : exports.TypedDataUtils.eip712Hash(data, version);\n    const publicKey = (0, utils_1.recoverPublicKey)(messageHash, signature);\n    const sender = (0, util_1.publicToAddress)(publicKey);\n    return (0, util_1.bufferToHex)(sender);\n}\nexports.recoverTypedSignature = recoverTypedSignature;\n//# sourceMappingURL=sign-typed-data.js.map","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = void 0;\nconst nacl = __importStar(require(\"tweetnacl\"));\nconst naclUtil = __importStar(require(\"tweetnacl-util\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encrypt({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    switch (version) {\n        case 'x25519-xsalsa20-poly1305': {\n            if (typeof data !== 'string') {\n                throw new Error('Message data must be given as a string');\n            }\n            // generate ephemeral keypair\n            const ephemeralKeyPair = nacl.box.keyPair();\n            // assemble encryption parameters - from string to UInt8\n            let pubKeyUInt8Array;\n            try {\n                pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n            }\n            catch (err) {\n                throw new Error('Bad public key');\n            }\n            const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n            const nonce = nacl.randomBytes(nacl.box.nonceLength);\n            // encrypt\n            const encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey);\n            // handle encrypted data\n            const output = {\n                version: 'x25519-xsalsa20-poly1305',\n                nonce: naclUtil.encodeBase64(nonce),\n                ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n                ciphertext: naclUtil.encodeBase64(encryptedMessage),\n            };\n            // return encrypted msg data\n            return output;\n        }\n        default:\n            throw new Error('Encryption type/version not supported');\n    }\n}\nexports.encrypt = encrypt;\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nfunction encryptSafely({ publicKey, data, version, }) {\n    if ((0, utils_1.isNullish)(publicKey)) {\n        throw new Error('Missing publicKey parameter');\n    }\n    else if ((0, utils_1.isNullish)(data)) {\n        throw new Error('Missing data parameter');\n    }\n    else if ((0, utils_1.isNullish)(version)) {\n        throw new Error('Missing version parameter');\n    }\n    const DEFAULT_PADDING_LENGTH = 2 ** 11;\n    const NACL_EXTRA_BYTES = 16;\n    if (typeof data === 'object' && 'toJSON' in data) {\n        // remove toJSON attack vector\n        // TODO, check all possible children\n        throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n    }\n    // add padding\n    const dataWithPadding = {\n        data,\n        padding: '',\n    };\n    // calculate padding\n    const dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n    const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n    let padLength = 0;\n    // Only pad if necessary\n    if (modVal > 0) {\n        padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n    }\n    dataWithPadding.padding = '0'.repeat(padLength);\n    const paddedMessage = JSON.stringify(dataWithPadding);\n    return encrypt({ publicKey, data: paddedMessage, version });\n}\nexports.encryptSafely = encryptSafely;\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decrypt({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    switch (encryptedData.version) {\n        case 'x25519-xsalsa20-poly1305': {\n            // string to buffer to UInt8Array\n            const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n            const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey;\n            // assemble decryption parameters\n            const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n            const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n            const ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey);\n            // decrypt\n            const decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey);\n            // return decrypted msg data\n            let output;\n            try {\n                output = naclUtil.encodeUTF8(decryptedMessage);\n            }\n            catch (err) {\n                throw new Error('Decryption failed.');\n            }\n            if (output) {\n                return output;\n            }\n            throw new Error('Decryption failed.');\n        }\n        default:\n            throw new Error('Encryption type/version not supported.');\n    }\n}\nexports.decrypt = decrypt;\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nfunction decryptSafely({ encryptedData, privateKey, }) {\n    if ((0, utils_1.isNullish)(encryptedData)) {\n        throw new Error('Missing encryptedData parameter');\n    }\n    else if ((0, utils_1.isNullish)(privateKey)) {\n        throw new Error('Missing privateKey parameter');\n    }\n    const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n    return dataWithPadding.data;\n}\nexports.decryptSafely = decryptSafely;\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nfunction getEncryptionPublicKey(privateKey) {\n    const privateKeyUint8Array = nacl_decodeHex(privateKey);\n    const encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n    return naclUtil.encodeBase64(encryptionPublicKey);\n}\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex) {\n    const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n    return naclUtil.decodeBase64(msgBase64);\n}\n//# sourceMappingURL=encryption.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = exports.concatSig = void 0;\n__exportStar(require(\"./personal-sign\"), exports);\n__exportStar(require(\"./sign-typed-data\"), exports);\n__exportStar(require(\"./encryption\"), exports);\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"concatSig\", { enumerable: true, get: function () { return utils_1.concatSig; } });\nObject.defineProperty(exports, \"normalize\", { enumerable: true, get: function () { return utils_1.normalize; } });\n//# sourceMappingURL=index.js.map","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_mutation.proto\" (package \"db3_mutation_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_mutation.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Index } from \"./db3_database\";\nimport { BroadcastMeta } from \"./db3_base\";\n/**\n * @generated from protobuf message db3_mutation_proto.DatabaseMutation\n */\nexport interface DatabaseMutation {\n    /**\n     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 1;\n     */\n    meta?: BroadcastMeta;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.DatabaseAction action = 2;\n     */\n    action: DatabaseAction;\n    /**\n     * @generated from protobuf field: bytes db_address = 3;\n     */\n    dbAddress: Uint8Array;\n    /**\n     * @generated from protobuf field: repeated db3_mutation_proto.CollectionMutation collection_mutations = 4;\n     */\n    collectionMutations: CollectionMutation[];\n    /**\n     * @generated from protobuf field: repeated db3_mutation_proto.DocumentMutation document_mutations = 5;\n     */\n    documentMutations: DocumentMutation[];\n}\n/**\n * @generated from protobuf message db3_mutation_proto.CollectionMutation\n */\nexport interface CollectionMutation {\n    /**\n     * @generated from protobuf field: repeated db3_database_proto.Index index = 1;\n     */\n    index: Index[];\n    /**\n     * @generated from protobuf field: string collection_name = 2;\n     */\n    collectionName: string;\n}\n/**\n * @generated from protobuf message db3_mutation_proto.DocumentMutation\n */\nexport interface DocumentMutation {\n    /**\n     * @generated from protobuf field: string collection_name = 1;\n     */\n    collectionName: string;\n    /**\n     * @generated from protobuf field: repeated bytes documents = 2;\n     */\n    documents: Uint8Array[];\n    /**\n     * @generated from protobuf field: repeated string ids = 3;\n     */\n    ids: string[];\n    /**\n     * The fields to update.\n     * None of the field paths in the mask may contain a reserved name.\n     *\n     * If the document exists on the server and has fields not referenced in the\n     * mask, they are left unchanged.\n     * Fields referenced in the mask, but not present in the input document, are\n     * deleted from the document on the server.\n     *\n     * @generated from protobuf field: repeated db3_mutation_proto.DocumentMask masks = 4;\n     */\n    masks: DocumentMask[];\n}\n/**\n * @generated from protobuf message db3_mutation_proto.DocumentMask\n */\nexport interface DocumentMask {\n    /**\n     * @generated from protobuf field: repeated string fields = 1;\n     */\n    fields: string[];\n}\n/**\n * @generated from protobuf message db3_mutation_proto.MintCreditsMutation\n */\nexport interface MintCreditsMutation {\n    /**\n     * @generated from protobuf field: uint32 chain_id = 1;\n     */\n    chainId: number;\n    /**\n     * @generated from protobuf field: uint64 block_id = 2;\n     */\n    blockId: string;\n    /**\n     * @generated from protobuf field: bytes tx_id = 3;\n     */\n    txId: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes to = 5;\n     */\n    to: Uint8Array;\n    /**\n     * @generated from protobuf field: uint64 amount = 6;\n     */\n    amount: string;\n    /**\n     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 7;\n     */\n    meta?: BroadcastMeta;\n}\n/**\n * @generated from protobuf message db3_mutation_proto.WriteRequest\n */\nexport interface WriteRequest {\n    /**\n     * @generated from protobuf field: bytes signature = 1;\n     */\n    signature: Uint8Array;\n    /**\n     * the protobuf binary format\n     *\n     * @generated from protobuf field: bytes payload = 2;\n     */\n    payload: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;\n     */\n    payloadType: PayloadType;\n}\n/**\n * @generated from protobuf enum db3_mutation_proto.DatabaseAction\n */\nexport enum DatabaseAction {\n    /**\n     * @generated from protobuf enum value: CreateDB = 0;\n     */\n    CreateDB = 0,\n    /**\n     * @generated from protobuf enum value: AddCollection = 1;\n     */\n    AddCollection = 1,\n    /**\n     * @generated from protobuf enum value: AddDocument = 2;\n     */\n    AddDocument = 2,\n    /**\n     * @generated from protobuf enum value: DeleteDocument = 3;\n     */\n    DeleteDocument = 3,\n    /**\n     * @generated from protobuf enum value: UpdateDocument = 4;\n     */\n    UpdateDocument = 4\n}\n/**\n * @generated from protobuf enum db3_mutation_proto.PayloadType\n */\nexport enum PayloadType {\n    /**\n     * @generated from protobuf enum value: QuerySessionPayload = 0;\n     */\n    QuerySessionPayload = 0,\n    /**\n     * @generated from protobuf enum value: DatabasePayload = 1;\n     */\n    DatabasePayload = 1,\n    /**\n     * @generated from protobuf enum value: MintCreditsPayload = 2;\n     */\n    MintCreditsPayload = 2,\n    /**\n     * a evm chain request\n     *\n     * @generated from protobuf enum value: TypedDataPayload = 3;\n     */\n    TypedDataPayload = 3\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass DatabaseMutation$Type extends MessageType<DatabaseMutation> {\n    constructor() {\n        super(\"db3_mutation_proto.DatabaseMutation\", [\n            { no: 1, name: \"meta\", kind: \"message\", T: () => BroadcastMeta },\n            { no: 2, name: \"action\", kind: \"enum\", T: () => [\"db3_mutation_proto.DatabaseAction\", DatabaseAction] },\n            { no: 3, name: \"db_address\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"collection_mutations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => CollectionMutation },\n            { no: 5, name: \"document_mutations\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentMutation }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.DatabaseMutation\n */\nexport const DatabaseMutation = new DatabaseMutation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CollectionMutation$Type extends MessageType<CollectionMutation> {\n    constructor() {\n        super(\"db3_mutation_proto.CollectionMutation\", [\n            { no: 1, name: \"index\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Index },\n            { no: 2, name: \"collection_name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.CollectionMutation\n */\nexport const CollectionMutation = new CollectionMutation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DocumentMutation$Type extends MessageType<DocumentMutation> {\n    constructor() {\n        super(\"db3_mutation_proto.DocumentMutation\", [\n            { no: 1, name: \"collection_name\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"documents\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"ids\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"masks\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => DocumentMask }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.DocumentMutation\n */\nexport const DocumentMutation = new DocumentMutation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass DocumentMask$Type extends MessageType<DocumentMask> {\n    constructor() {\n        super(\"db3_mutation_proto.DocumentMask\", [\n            { no: 1, name: \"fields\", kind: \"scalar\", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.DocumentMask\n */\nexport const DocumentMask = new DocumentMask$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MintCreditsMutation$Type extends MessageType<MintCreditsMutation> {\n    constructor() {\n        super(\"db3_mutation_proto.MintCreditsMutation\", [\n            { no: 1, name: \"chain_id\", kind: \"scalar\", T: 13 /*ScalarType.UINT32*/ },\n            { no: 2, name: \"block_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"tx_id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 5, name: \"to\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 6, name: \"amount\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 7, name: \"meta\", kind: \"message\", T: () => BroadcastMeta }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.MintCreditsMutation\n */\nexport const MintCreditsMutation = new MintCreditsMutation$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass WriteRequest$Type extends MessageType<WriteRequest> {\n    constructor() {\n        super(\"db3_mutation_proto.WriteRequest\", [\n            { no: 1, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"payload_type\", kind: \"enum\", T: () => [\"db3_mutation_proto.PayloadType\", PayloadType] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_mutation_proto.WriteRequest\n */\nexport const WriteRequest = new WriteRequest$Type();\n","/**\n * An error that occurred while calling a RPC method.\n */\nexport class RpcError extends Error {\n    constructor(message, code = 'UNKNOWN', meta) {\n        super(message);\n        this.name = 'RpcError';\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.code = code;\n        this.meta = meta !== null && meta !== void 0 ? meta : {};\n    }\n    toString() {\n        const l = [this.name + ': ' + this.message];\n        if (this.code) {\n            l.push('');\n            l.push('Code: ' + this.code);\n        }\n        if (this.serviceName && this.methodName) {\n            l.push('Method: ' + this.serviceName + '/' + this.methodName);\n        }\n        let m = Object.entries(this.meta);\n        if (m.length) {\n            l.push('');\n            l.push('Meta:');\n            for (let [k, v] of m) {\n                l.push(`  ${k}: ${v}`);\n            }\n        }\n        return l.join('\\n');\n    }\n}\n","import { mergeBinaryOptions, mergeJsonOptions } from \"@protobuf-ts/runtime\";\n/**\n * Merges custom RPC options with defaults. Returns a new instance and keeps\n * the \"defaults\" and the \"options\" unmodified.\n *\n * Merges `RpcMetadata` \"meta\", overwriting values from \"defaults\" with\n * values from \"options\". Does not append values to existing entries.\n *\n * Merges \"jsonOptions\", including \"jsonOptions.typeRegistry\", by creating\n * a new array that contains types from \"options.jsonOptions.typeRegistry\"\n * first, then types from \"defaults.jsonOptions.typeRegistry\".\n *\n * Merges \"binaryOptions\".\n *\n * Merges \"interceptors\" by creating a new array that contains interceptors\n * from \"defaults\" first, then interceptors from \"options\".\n *\n * Works with objects that extend `RpcOptions`, but only if the added\n * properties are of type Date, primitive like string, boolean, or Array\n * of primitives. If you have other property types, you have to merge them\n * yourself.\n */\nexport function mergeRpcOptions(defaults, options) {\n    if (!options)\n        return defaults;\n    let o = {};\n    copy(defaults, o);\n    copy(options, o);\n    for (let key of Object.keys(options)) {\n        let val = options[key];\n        switch (key) {\n            case \"jsonOptions\":\n                o.jsonOptions = mergeJsonOptions(defaults.jsonOptions, o.jsonOptions);\n                break;\n            case \"binaryOptions\":\n                o.binaryOptions = mergeBinaryOptions(defaults.binaryOptions, o.binaryOptions);\n                break;\n            case \"meta\":\n                o.meta = {};\n                copy(defaults.meta, o.meta);\n                copy(options.meta, o.meta);\n                break;\n            case \"interceptors\":\n                o.interceptors = defaults.interceptors ? defaults.interceptors.concat(val) : val.concat();\n                break;\n        }\n    }\n    return o;\n}\nfunction copy(a, into) {\n    if (!a)\n        return;\n    let c = into;\n    for (let [k, v] of Object.entries(a)) {\n        if (v instanceof Date)\n            c[k] = new Date(v.getTime());\n        else if (Array.isArray(v))\n            c[k] = v.concat();\n        else\n            c[k] = v;\n    }\n}\n","export var DeferredState;\n(function (DeferredState) {\n    DeferredState[DeferredState[\"PENDING\"] = 0] = \"PENDING\";\n    DeferredState[DeferredState[\"REJECTED\"] = 1] = \"REJECTED\";\n    DeferredState[DeferredState[\"RESOLVED\"] = 2] = \"RESOLVED\";\n})(DeferredState || (DeferredState = {}));\n/**\n * A deferred promise. This is a \"controller\" for a promise, which lets you\n * pass a promise around and reject or resolve it from the outside.\n *\n * Warning: This class is to be used with care. Using it can make code very\n * difficult to read. It is intended for use in library code that exposes\n * promises, not for regular business logic.\n */\nexport class Deferred {\n    /**\n     * @param preventUnhandledRejectionWarning - prevents the warning\n     * \"Unhandled Promise rejection\" by adding a noop rejection handler.\n     * Working with calls returned from the runtime-rpc package in an\n     * async function usually means awaiting one call property after\n     * the other. This means that the \"status\" is not being awaited when\n     * an earlier await for the \"headers\" is rejected. This causes the\n     * \"unhandled promise reject\" warning. A more correct behaviour for\n     * calls might be to become aware whether at least one of the\n     * promises is handled and swallow the rejection warning for the\n     * others.\n     */\n    constructor(preventUnhandledRejectionWarning = true) {\n        this._state = DeferredState.PENDING;\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        if (preventUnhandledRejectionWarning) {\n            this._promise.catch(_ => { });\n        }\n    }\n    /**\n     * Get the current state of the promise.\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     * Get the deferred promise.\n     */\n    get promise() {\n        return this._promise;\n    }\n    /**\n     * Resolve the promise. Throws if the promise is already resolved or rejected.\n     */\n    resolve(value) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot resolve ${DeferredState[this.state].toLowerCase()}`);\n        this._resolve(value);\n        this._state = DeferredState.RESOLVED;\n    }\n    /**\n     * Reject the promise. Throws if the promise is already resolved or rejected.\n     */\n    reject(reason) {\n        if (this.state !== DeferredState.PENDING)\n            throw new Error(`cannot reject ${DeferredState[this.state].toLowerCase()}`);\n        this._reject(reason);\n        this._state = DeferredState.REJECTED;\n    }\n    /**\n     * Resolve the promise. Ignore if not pending.\n     */\n    resolvePending(val) {\n        if (this._state === DeferredState.PENDING)\n            this.resolve(val);\n    }\n    /**\n     * Reject the promise. Ignore if not pending.\n     */\n    rejectPending(reason) {\n        if (this._state === DeferredState.PENDING)\n            this.reject(reason);\n    }\n}\n","// Copyright 2016 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * See [grpc status_code_enum.h](https://github.com/grpc/grpc/blob/a19d8dcfb50caa81cddc25bc1a6afdd7a2f497b7/include/grpcpp/impl/codegen/status_code_enum.h#L24)\n *\n * Copyright 2020 Google LLC\n */\nexport var GrpcStatusCode;\n(function (GrpcStatusCode) {\n    /**\n     * Not an error; returned on success.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled (typically by the caller).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error. An example of where this error may be returned is if a\n     * Status value received from another address space belongs to an error-space\n     * that is not known in this address space. Also errors raised by APIs that\n     * do not return enough error information may be converted to this error.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    GrpcStatusCode[GrpcStatusCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operations execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * Operation is not implemented or not supported/enabled in this service.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    GrpcStatusCode[GrpcStatusCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n})(GrpcStatusCode || (GrpcStatusCode = {}));\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { base64decode, base64encode } from \"@protobuf-ts/runtime\";\nimport { RpcError } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Create fetch API headers for a grpc-web request.\n */\nexport function createGrpcWebRequestHeader(headers, format, timeout, meta, userAgent) {\n    // add meta as headers\n    if (meta) {\n        for (let [k, v] of Object.entries(meta)) {\n            if (typeof v == \"string\")\n                headers.append(k, v);\n            else\n                for (let i of v)\n                    headers.append(k, i);\n        }\n    }\n    // set standard headers (possibly overwriting meta)\n    headers.set('Content-Type', format === \"text\" ? \"application/grpc-web-text\" : \"application/grpc-web+proto\");\n    if (format == \"text\") {\n        // The client library should indicate to the server via the \"Accept\" header that\n        // the response stream needs to be text encoded e.g. when XHR is used or due to\n        // security policies with XHR\n        headers.set(\"Accept\", \"application/grpc-web-text\");\n    }\n    headers.set('X-Grpc-Web', \"1\");\n    if (userAgent)\n        headers.set(\"X-User-Agent\", userAgent);\n    if (typeof timeout === \"number\") {\n        if (timeout <= 0) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`timeout ${timeout} ms exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${timeout}m`);\n    }\n    else if (timeout) {\n        const deadline = timeout.getTime();\n        const now = Date.now();\n        if (deadline <= now) {\n            // we raise an error ourselves because header \"grpc-timeout\" must be a positive integer\n            throw new RpcError(`deadline ${timeout} exceeded`, GrpcStatusCode[GrpcStatusCode.DEADLINE_EXCEEDED]);\n        }\n        headers.set('grpc-timeout', `${deadline - now}m`);\n    }\n    return headers;\n}\nexport function createGrpcWebRequestBody(message, format) {\n    let body = new Uint8Array(5 + message.length); // we need 5 bytes for frame type + message length\n    body[0] = GrpcWebFrame.DATA; // first byte is frame type\n    // 4 bytes message length\n    for (let msgLen = message.length, i = 4; i > 0; i--) {\n        body[i] = (msgLen % 256);\n        msgLen >>>= 8;\n    }\n    body.set(message, 5); // reset is message\n    return format === \"binary\" ? body : base64encode(body);\n}\nexport function readGrpcWebResponseHeader(headersOrFetchResponse, httpStatus, httpStatusText) {\n    if (arguments.length === 1) {\n        let fetchResponse = headersOrFetchResponse;\n        // Cloudflare Workers throw when the type property of a fetch response\n        // is accessed, so wrap access with try/catch. See:\n        // * https://developers.cloudflare.com/workers/runtime-apis/response/#properties\n        // * https://github.com/cloudflare/miniflare/blob/72f046e/packages/core/src/standards/http.ts#L646\n        let responseType;\n        try {\n            responseType = fetchResponse.type;\n        }\n        catch (_a) { }\n        switch (responseType) {\n            case \"error\":\n            case \"opaque\":\n            case \"opaqueredirect\":\n                // see https://developer.mozilla.org/en-US/docs/Web/API/Response/type\n                throw new RpcError(`fetch response type ${fetchResponse.type}`, GrpcStatusCode[GrpcStatusCode.UNKNOWN]);\n        }\n        return readGrpcWebResponseHeader(fetchHeadersToHttp(fetchResponse.headers), fetchResponse.status, fetchResponse.statusText);\n    }\n    let headers = headersOrFetchResponse, httpOk = httpStatus >= 200 && httpStatus < 300, responseMeta = parseMetadata(headers), [statusCode, statusDetail] = parseStatus(headers);\n    if ((statusCode === undefined || statusCode === GrpcStatusCode.OK) && !httpOk) {\n        statusCode = httpStatusToGrpc(httpStatus);\n        statusDetail = httpStatusText;\n    }\n    return [statusCode, statusDetail, responseMeta];\n}\n/**\n * Parses a grpc status (code and optional text) and meta data from response\n * trailers.\n *\n * Response trailers are expected as a byte array, but are actually just an\n * ASCII string with HTTP headers. Just pass the data of a grpc-web trailer\n * frame.\n */\nexport function readGrpcWebResponseTrailer(data) {\n    let headers = parseTrailer(data), [code, detail] = parseStatus(headers), meta = parseMetadata(headers);\n    return [code !== null && code !== void 0 ? code : GrpcStatusCode.OK, detail, meta];\n}\n/**\n * A grpc-frame type. Can be used to determine type of frame emitted by\n * `readGrpcWebResponseBody()`.\n */\nexport var GrpcWebFrame;\n(function (GrpcWebFrame) {\n    GrpcWebFrame[GrpcWebFrame[\"DATA\"] = 0] = \"DATA\";\n    GrpcWebFrame[GrpcWebFrame[\"TRAILER\"] = 128] = \"TRAILER\";\n})(GrpcWebFrame || (GrpcWebFrame = {}));\n/**\n * Parses a grpc-web response (unary or server streaming) from a fetch API\n * stream.\n *\n * Emits grpc-web frames.\n *\n * The returned promise resolves when the response is complete.\n */\nexport function readGrpcWebResponseBody(stream, contentType, onFrame) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let streamReader, base64queue = \"\", byteQueue = new Uint8Array(0), format = parseFormat(contentType);\n        // allows to read streams from the 'node-fetch' polyfill which uses\n        // node.js ReadableStream instead of the what-wg streams api ReadableStream\n        if (isReadableStream(stream)) {\n            let whatWgReadableStream = stream.getReader();\n            streamReader = {\n                next: () => whatWgReadableStream.read()\n            };\n        }\n        else {\n            streamReader = stream[Symbol.asyncIterator]();\n        }\n        while (true) {\n            let result = yield streamReader.next();\n            if (result.value !== undefined) {\n                if (format === \"text\") {\n                    // the statements below just decode base64 and append to `bytesUnread`\n                    // add incoming base64 to queue\n                    for (let i = 0; i < result.value.length; i++)\n                        base64queue += String.fromCharCode(result.value[i]);\n                    // if the base64 queue is not a multiple of 4,\n                    // we have to wait for more data\n                    let safeLen = base64queue.length - base64queue.length % 4;\n                    if (safeLen === 0)\n                        continue;\n                    // decode safe chunk of base64 and add to byte queue\n                    byteQueue = concatBytes(byteQueue, base64decode(base64queue.substring(0, safeLen)));\n                    base64queue = base64queue.substring(safeLen);\n                }\n                else {\n                    byteQueue = concatBytes(byteQueue, result.value);\n                }\n                // read all fully available data frames\n                while (byteQueue.length >= 5 && byteQueue[0] === GrpcWebFrame.DATA) {\n                    let msgLen = 0;\n                    for (let i = 1; i < 5; i++)\n                        msgLen = (msgLen << 8) + byteQueue[i];\n                    if (byteQueue.length - 5 >= msgLen) {\n                        // we have the entire message\n                        onFrame(GrpcWebFrame.DATA, byteQueue.subarray(5, 5 + msgLen));\n                        byteQueue = byteQueue.subarray(5 + msgLen);\n                    }\n                    else\n                        break; //  wait for more data\n                }\n            }\n            // exit, but emit trailer if exists\n            if (result.done) {\n                if (byteQueue.length === 0)\n                    break;\n                if (byteQueue[0] !== GrpcWebFrame.TRAILER || byteQueue.length < 5)\n                    throw new RpcError(\"premature EOF\", GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                onFrame(GrpcWebFrame.TRAILER, byteQueue.subarray(5));\n                break;\n            }\n        }\n    });\n}\n// internal\nconst isReadableStream = (s) => {\n    return typeof s.getReader == \"function\";\n};\n// internal\nfunction concatBytes(a, b) {\n    let n = new Uint8Array(a.length + b.length);\n    n.set(a);\n    n.set(b, a.length);\n    return n;\n}\n// determines format from response \"content-type\" value.\n// throws if value is unknown or missing.\nfunction parseFormat(contentType) {\n    // > the sender *should* always specify the message format, e.g. +proto, +json\n    //\n    // > the receiver should assume the default is \"+proto\" when the message format is\n    // > missing in Content-Type (as \"application/grpc-web\")\n    //\n    // see https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n    switch (contentType) {\n        case \"application/grpc-web-text\":\n        case \"application/grpc-web-text+proto\":\n            return \"text\";\n        case \"application/grpc-web\":\n        case \"application/grpc-web+proto\":\n            return \"binary\";\n        case undefined:\n        case null:\n            throw new RpcError(\"missing response content type\", GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n        default:\n            throw new RpcError(\"unexpected response content type: \" + contentType, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n    }\n}\n// returns error code on parse failure\nfunction parseStatus(headers) {\n    let code, message;\n    let m = headers['grpc-message'];\n    if (m !== undefined) {\n        if (Array.isArray(m))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web message\"];\n        message = m;\n    }\n    let s = headers['grpc-status'];\n    if (s !== undefined) {\n        if (Array.isArray(s))\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n        code = parseInt(s, 10);\n        if (GrpcStatusCode[code] === undefined)\n            return [GrpcStatusCode.INTERNAL, \"invalid grpc-web status\"];\n    }\n    return [code, message];\n}\n// skips grpc-web headers\nfunction parseMetadata(headers) {\n    let meta = {};\n    for (let [k, v] of Object.entries(headers))\n        switch (k) {\n            case 'grpc-message':\n            case 'grpc-status':\n            case 'content-type':\n                break;\n            default:\n                meta[k] = v;\n        }\n    return meta;\n}\n// parse trailer data (ASCII) to our headers rep\nfunction parseTrailer(trailerData) {\n    let headers = {};\n    for (let chunk of String.fromCharCode.apply(String, trailerData).trim().split(\"\\r\\n\")) {\n        if (chunk == \"\")\n            continue;\n        let [key, ...val] = chunk.split(\":\");\n        const value = val.join(\":\").trim();\n        key = key.trim();\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    }\n    return headers;\n}\n// fetch API to our headers rep\nfunction fetchHeadersToHttp(fetchHeaders) {\n    let headers = {};\n    fetchHeaders.forEach((value, key) => {\n        let e = headers[key];\n        if (typeof e == \"string\")\n            headers[key] = [e, value];\n        else if (Array.isArray(e))\n            e.push(value);\n        else\n            headers[key] = value;\n    });\n    return headers;\n}\n// internal\nfunction httpStatusToGrpc(httpStatus) {\n    switch (httpStatus) {\n        case 200:\n            return GrpcStatusCode.OK;\n        case 400:\n            return GrpcStatusCode.INVALID_ARGUMENT;\n        case 401:\n            return GrpcStatusCode.UNAUTHENTICATED;\n        case 403:\n            return GrpcStatusCode.PERMISSION_DENIED;\n        case 404:\n            return GrpcStatusCode.NOT_FOUND;\n        case 409:\n            return GrpcStatusCode.ABORTED;\n        case 412:\n            return GrpcStatusCode.FAILED_PRECONDITION;\n        case 429:\n            return GrpcStatusCode.RESOURCE_EXHAUSTED;\n        case 499:\n            return GrpcStatusCode.CANCELLED;\n        case 500:\n            return GrpcStatusCode.UNKNOWN;\n        case 501:\n            return GrpcStatusCode.UNIMPLEMENTED;\n        case 503:\n            return GrpcStatusCode.UNAVAILABLE;\n        case 504:\n            return GrpcStatusCode.DEADLINE_EXCEEDED;\n        default:\n            return GrpcStatusCode.UNKNOWN;\n    }\n}\n","import { Deferred, DeferredState } from \"./deferred\";\nimport { assert } from \"@protobuf-ts/runtime\";\n/**\n * A `RpcOutputStream` that you control.\n */\nexport class RpcOutputStreamController {\n    constructor() {\n        this._lis = {\n            nxt: [],\n            msg: [],\n            err: [],\n            cmp: [],\n        };\n        this._closed = false;\n    }\n    // --- RpcOutputStream callback API\n    onNext(callback) {\n        return this.addLis(callback, this._lis.nxt);\n    }\n    onMessage(callback) {\n        return this.addLis(callback, this._lis.msg);\n    }\n    onError(callback) {\n        return this.addLis(callback, this._lis.err);\n    }\n    onComplete(callback) {\n        return this.addLis(callback, this._lis.cmp);\n    }\n    addLis(callback, list) {\n        list.push(callback);\n        return () => {\n            let i = list.indexOf(callback);\n            if (i >= 0)\n                list.splice(i, 1);\n        };\n    }\n    // remove all listeners\n    clearLis() {\n        for (let l of Object.values(this._lis))\n            l.splice(0, l.length);\n    }\n    // --- Controller API\n    /**\n     * Is this stream already closed by a completion or error?\n     */\n    get closed() {\n        return this._closed !== false;\n    }\n    /**\n     * Emit message, close with error, or close successfully, but only one\n     * at a time.\n     * Can be used to wrap a stream by using the other stream's `onNext`.\n     */\n    notifyNext(message, error, complete) {\n        assert((message ? 1 : 0) + (error ? 1 : 0) + (complete ? 1 : 0) <= 1, 'only one emission at a time');\n        if (message)\n            this.notifyMessage(message);\n        if (error)\n            this.notifyError(error);\n        if (complete)\n            this.notifyComplete();\n    }\n    /**\n     * Emits a new message. Throws if stream is closed.\n     *\n     * Triggers onNext and onMessage callbacks.\n     */\n    notifyMessage(message) {\n        assert(!this.closed, 'stream is closed');\n        this.pushIt({ value: message, done: false });\n        this._lis.msg.forEach(l => l(message));\n        this._lis.nxt.forEach(l => l(message, undefined, false));\n    }\n    /**\n     * Closes the stream with an error. Throws if stream is closed.\n     *\n     * Triggers onNext and onError callbacks.\n     */\n    notifyError(error) {\n        assert(!this.closed, 'stream is closed');\n        this._closed = error;\n        this.pushIt(error);\n        this._lis.err.forEach(l => l(error));\n        this._lis.nxt.forEach(l => l(undefined, error, false));\n        this.clearLis();\n    }\n    /**\n     * Closes the stream successfully. Throws if stream is closed.\n     *\n     * Triggers onNext and onComplete callbacks.\n     */\n    notifyComplete() {\n        assert(!this.closed, 'stream is closed');\n        this._closed = true;\n        this.pushIt({ value: null, done: true });\n        this._lis.cmp.forEach(l => l());\n        this._lis.nxt.forEach(l => l(undefined, undefined, true));\n        this.clearLis();\n    }\n    /**\n     * Creates an async iterator (that can be used with `for await {...}`)\n     * to consume the stream.\n     *\n     * Some things to note:\n     * - If an error occurs, the `for await` will throw it.\n     * - If an error occurred before the `for await` was started, `for await`\n     *   will re-throw it.\n     * - If the stream is already complete, the `for await` will be empty.\n     * - If your `for await` consumes slower than the stream produces,\n     *   for example because you are relaying messages in a slow operation,\n     *   messages are queued.\n     */\n    [Symbol.asyncIterator]() {\n        // init the iterator state, enabling pushIt()\n        if (!this._itState) {\n            this._itState = { q: [] };\n        }\n        // if we are closed, we are definitely not receiving any more messages.\n        // but we can't let the iterator get stuck. we want to either:\n        // a) finish the new iterator immediately, because we are completed\n        // b) reject the new iterator, because we errored\n        if (this._closed === true)\n            this.pushIt({ value: null, done: true });\n        else if (this._closed !== false)\n            this.pushIt(this._closed);\n        // the async iterator\n        return {\n            next: () => {\n                let state = this._itState;\n                assert(state, \"bad state\"); // if we don't have a state here, code is broken\n                // there should be no pending result.\n                // did the consumer call next() before we resolved our previous result promise?\n                assert(!state.p, \"iterator contract broken\");\n                // did we produce faster than the iterator consumed?\n                // return the oldest result from the queue.\n                let first = state.q.shift();\n                if (first)\n                    return (\"value\" in first) ? Promise.resolve(first) : Promise.reject(first);\n                // we have no result ATM, but we promise one.\n                // as soon as we have a result, we must resolve promise.\n                state.p = new Deferred();\n                return state.p.promise;\n            },\n        };\n    }\n    // \"push\" a new iterator result.\n    // this either resolves a pending promise, or enqueues the result.\n    pushIt(result) {\n        let state = this._itState;\n        if (!state)\n            return;\n        // is the consumer waiting for us?\n        if (state.p) {\n            // yes, consumer is waiting for this promise.\n            const p = state.p;\n            assert(p.state == DeferredState.PENDING, \"iterator contract broken\");\n            // resolve the promise\n            (\"value\" in result) ? p.resolve(result) : p.reject(result);\n            // must cleanup, otherwise iterator.next() would pick it up again.\n            delete state.p;\n        }\n        else {\n            // we are producing faster than the iterator consumes.\n            // push result onto queue.\n            state.q.push(result);\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A unary RPC call. Unary means there is exactly one input message and\n * exactly one output message unless an error occurred.\n */\nexport class UnaryCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.response = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * If you are only interested in the final outcome of this call,\n     * you can await it to receive a `FinishedUnaryCall`.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, response, status, trailers] = yield Promise.all([this.headers, this.response, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                response,\n                status,\n                trailers\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * A server streaming RPC call. The client provides exactly one input message\n * but the server may respond with 0, 1, or more messages.\n */\nexport class ServerStreamingCall {\n    constructor(method, requestHeaders, request, headers, response, status, trailers) {\n        this.method = method;\n        this.requestHeaders = requestHeaders;\n        this.request = request;\n        this.headers = headers;\n        this.responses = response;\n        this.status = status;\n        this.trailers = trailers;\n    }\n    /**\n     * Instead of awaiting the response status and trailers, you can\n     * just as well await this call itself to receive the server outcome.\n     * You should first setup some listeners to the `request` to\n     * see the actual messages the server replied with.\n     */\n    then(onfulfilled, onrejected) {\n        return this.promiseFinished().then(value => onfulfilled ? Promise.resolve(onfulfilled(value)) : value, reason => onrejected ? Promise.resolve(onrejected(reason)) : Promise.reject(reason));\n    }\n    promiseFinished() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let [headers, status, trailers] = yield Promise.all([this.headers, this.status, this.trailers]);\n            return {\n                method: this.method,\n                requestHeaders: this.requestHeaders,\n                request: this.request,\n                headers,\n                status,\n                trailers,\n            };\n        });\n    }\n}\n","import { assertNever } from \"@protobuf-ts/runtime\";\n/**\n * Creates a \"stack\" of of all interceptors specified in the given `RpcOptions`.\n * Used by generated client implementations.\n * @internal\n */\nexport function stackIntercept(kind, transport, method, options, input) {\n    var _a, _b, _c, _d;\n    if (kind == \"unary\") {\n        let tail = (mtd, inp, opt) => transport.unary(mtd, inp, opt);\n        for (const curr of ((_a = options.interceptors) !== null && _a !== void 0 ? _a : []).filter(i => i.interceptUnary).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptUnary(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"serverStreaming\") {\n        let tail = (mtd, inp, opt) => transport.serverStreaming(mtd, inp, opt);\n        for (const curr of ((_b = options.interceptors) !== null && _b !== void 0 ? _b : []).filter(i => i.interceptServerStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, inp, opt) => curr.interceptServerStreaming(next, mtd, inp, opt);\n        }\n        return tail(method, input, options);\n    }\n    if (kind == \"clientStreaming\") {\n        let tail = (mtd, opt) => transport.clientStreaming(mtd, opt);\n        for (const curr of ((_c = options.interceptors) !== null && _c !== void 0 ? _c : []).filter(i => i.interceptClientStreaming).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptClientStreaming(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    if (kind == \"duplex\") {\n        let tail = (mtd, opt) => transport.duplex(mtd, opt);\n        for (const curr of ((_d = options.interceptors) !== null && _d !== void 0 ? _d : []).filter(i => i.interceptDuplex).reverse()) {\n            const next = tail;\n            tail = (mtd, opt) => curr.interceptDuplex(next, mtd, opt);\n        }\n        return tail(method, options);\n    }\n    assertNever(kind);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackUnaryInterceptors(transport, method, input, options) {\n    return stackIntercept(\"unary\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackServerStreamingInterceptors(transport, method, input, options) {\n    return stackIntercept(\"serverStreaming\", transport, method, options, input);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackClientStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"clientStreaming\", transport, method, options);\n}\n/**\n * @deprecated replaced by `stackIntercept()`, still here to support older generated code\n */\nexport function stackDuplexStreamingInterceptors(transport, method, options) {\n    return stackIntercept(\"duplex\", transport, method, options);\n}\n","import { Deferred, RpcError, RpcOutputStreamController, ServerStreamingCall, UnaryCall, mergeRpcOptions } from \"@protobuf-ts/runtime-rpc\";\nimport { GrpcWebFrame, createGrpcWebRequestBody, createGrpcWebRequestHeader, readGrpcWebResponseBody, readGrpcWebResponseHeader, readGrpcWebResponseTrailer } from \"./grpc-web-format\";\nimport { GrpcStatusCode } from \"./goog-grpc-status-code\";\n/**\n * Implements the grpc-web protocol, supporting text format or binary\n * format on the wire. Uses the fetch API to do the HTTP requests.\n *\n * Does not support client streaming or duplex calls because grpc-web\n * does not support them.\n */\nexport class GrpcWebFetchTransport {\n    constructor(defaultOptions) {\n        this.defaultOptions = defaultOptions;\n    }\n    mergeOptions(options) {\n        return mergeRpcOptions(this.defaultOptions, options);\n    }\n    /**\n     * Create an URI for a gRPC web call.\n     *\n     * Takes the `baseUrl` option and appends:\n     * - slash \"/\"\n     * - package name\n     * - dot \".\"\n     * - service name\n     * - slash \"/\"\n     * - method name\n     *\n     * If the service was declared without a package, the package name and dot\n     * are omitted.\n     *\n     * All names are used exactly like declared in .proto.\n     */\n    makeUrl(method, options) {\n        let base = options.baseUrl;\n        if (base.endsWith('/'))\n            base = base.substring(0, base.length - 1);\n        return `${base}/${method.service.typeName}/${method.name}`;\n    }\n    clientStreaming(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Client streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    duplex(method /*, options: RpcOptions*/) {\n        const e = new RpcError('Duplex streaming is not supported by grpc-web', GrpcStatusCode[GrpcStatusCode.UNIMPLEMENTED]);\n        e.methodName = method.name;\n        e.serviceName = method.service.typeName;\n        throw e;\n    }\n    serverStreaming(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), responseStream = new RpcOutputStreamController(), responseEmptyBody = true, maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        responseStream.notifyMessage(method.O.fromBinary(data, opt.binaryOptions));\n                        responseEmptyBody = false;\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && !responseEmptyBody)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            responseStream.notifyComplete();\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            responseStream.notifyError(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new ServerStreamingCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, responseStream, defStatus.promise, defTrailer.promise);\n    }\n    unary(method, input, options) {\n        var _a, _b, _c, _d;\n        let opt = options, format = (_a = opt.format) !== null && _a !== void 0 ? _a : 'text', fetchInit = (_b = opt.fetchInit) !== null && _b !== void 0 ? _b : {}, url = this.makeUrl(method, opt), inputBytes = method.I.toBinary(input, opt.binaryOptions), defHeader = new Deferred(), maybeMessage, defMessage = new Deferred(), maybeStatus, defStatus = new Deferred(), maybeTrailer, defTrailer = new Deferred();\n        globalThis.fetch(url, Object.assign(Object.assign({}, fetchInit), { method: 'POST', headers: createGrpcWebRequestHeader(new globalThis.Headers(), format, opt.timeout, opt.meta), body: createGrpcWebRequestBody(inputBytes, format), signal: (_c = options.abort) !== null && _c !== void 0 ? _c : null // node-fetch@3.0.0-beta.9 rejects `undefined`\n         }))\n            .then(fetchResponse => {\n            let [code, detail, meta] = readGrpcWebResponseHeader(fetchResponse);\n            defHeader.resolve(meta);\n            if (code != null && code !== GrpcStatusCode.OK)\n                throw new RpcError(detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code], GrpcStatusCode[code], meta);\n            if (code != null)\n                maybeStatus = {\n                    code: GrpcStatusCode[code],\n                    detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                };\n            return fetchResponse;\n        })\n            .then(fetchResponse => {\n            if (!fetchResponse.body)\n                throw new RpcError('missing response body', GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            return readGrpcWebResponseBody(fetchResponse.body, fetchResponse.headers.get('content-type'), (type, data) => {\n                switch (type) {\n                    case GrpcWebFrame.DATA:\n                        if (maybeMessage)\n                            throw new RpcError(`unary call received 2nd message`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n                        maybeMessage = method.O.fromBinary(data, opt.binaryOptions);\n                        break;\n                    case GrpcWebFrame.TRAILER:\n                        let code, detail;\n                        [code, detail, maybeTrailer] = readGrpcWebResponseTrailer(data);\n                        maybeStatus = {\n                            code: GrpcStatusCode[code],\n                            detail: detail !== null && detail !== void 0 ? detail : GrpcStatusCode[code]\n                        };\n                        break;\n                }\n            });\n        })\n            .then(() => {\n            if (!maybeTrailer && maybeMessage)\n                throw new RpcError(`missing trailers`, GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            // istanbul ignore if - this should be impossible and only here to satisfy TypeScript\n            if (!maybeStatus)\n                throw new RpcError(`missing status`, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            if (!maybeMessage && maybeStatus.code === 'OK')\n                throw new RpcError('expected error status', GrpcStatusCode[GrpcStatusCode.DATA_LOSS]);\n            if (!maybeMessage)\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defMessage.resolve(maybeMessage);\n            if (maybeStatus.code !== 'OK')\n                throw new RpcError(maybeStatus.detail, maybeStatus.code, maybeTrailer);\n            defStatus.resolve(maybeStatus);\n            defTrailer.resolve(maybeTrailer || {});\n        })\n            .catch(reason => {\n            let error;\n            if (reason instanceof RpcError)\n                error = reason;\n            else if (reason instanceof Error && reason.name === 'AbortError')\n                // aborted\n                error = new RpcError(reason.message, GrpcStatusCode[GrpcStatusCode.CANCELLED]);\n            else\n                // RpcErrors are thrown by us, everything else is an internal error\n                error = new RpcError(reason instanceof Error ? reason.message : \"\" + reason, GrpcStatusCode[GrpcStatusCode.INTERNAL]);\n            error.methodName = method.name;\n            error.serviceName = method.service.typeName;\n            defHeader.rejectPending(error);\n            defMessage.rejectPending(error);\n            defStatus.rejectPending(error);\n            defTrailer.rejectPending(error);\n        });\n        return new UnaryCall(method, (_d = opt.meta) !== null && _d !== void 0 ? _d : {}, input, defHeader.promise, defMessage.promise, defStatus.promise, defTrailer.promise);\n    }\n}\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_event.proto\" (package \"db3_event_proto\", syntax proto3)\n// tslint:disable\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * the node will dispatch a block event when a new block has been proposed\n *\n * @generated from protobuf message db3_event_proto.BlockEvent\n */\nexport interface BlockEvent {\n    /**\n     * @generated from protobuf field: uint64 height = 1;\n     */\n    height: string;\n    /**\n     * @generated from protobuf field: bytes block_hash = 2;\n     */\n    blockHash: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes app_hash = 3;\n     */\n    appHash: Uint8Array;\n    /**\n     * @generated from protobuf field: string chain_id = 4;\n     */\n    chainId: string;\n    /**\n     * @generated from protobuf field: uint64 gas = 5;\n     */\n    gas: string;\n}\n/**\n * the node will dispatch a mutation event when a mutation has been checked\n *\n * @generated from protobuf message db3_event_proto.MutationEvent\n */\nexport interface MutationEvent {\n    /**\n     * @generated from protobuf field: bytes sender = 1;\n     */\n    sender: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_event_proto.MutationEvent.MutationEventStatus status = 2;\n     */\n    status: MutationEvent_MutationEventStatus;\n    /**\n     * the address that mutation has been send to\n     *\n     * @generated from protobuf field: bytes to = 3;\n     */\n    to: Uint8Array;\n    /**\n     * @generated from protobuf field: uint64 gas = 4;\n     */\n    gas: string;\n}\n/**\n * @generated from protobuf enum db3_event_proto.MutationEvent.MutationEventStatus\n */\nexport enum MutationEvent_MutationEventStatus {\n    /**\n     * the mutation has been deliveried\n     *\n     * @generated from protobuf enum value: Deliveried = 0;\n     */\n    Deliveried = 0,\n    /**\n     * not enough gas\n     *\n     * @generated from protobuf enum value: OutOfGas = 1;\n     */\n    OutOfGas = 1,\n    /**\n     * invalid mutation\n     *\n     * @generated from protobuf enum value: Invalid = 2;\n     */\n    Invalid = 2\n}\n/**\n * @generated from protobuf enum db3_event_proto.MutationEvent.ToAddressType\n */\nexport enum MutationEvent_ToAddressType {\n    /**\n     * mutation for data\n     *\n     * @generated from protobuf enum value: Database = 0;\n     */\n    Database = 0,\n    /**\n     * mutation for credit\n     *\n     * @generated from protobuf enum value: Account = 1;\n     */\n    Account = 1\n}\n/**\n * @generated from protobuf message db3_event_proto.EventMessage\n */\nexport interface EventMessage {\n    /**\n     * @generated from protobuf field: db3_event_proto.EventType type = 1;\n     */\n    type: EventType;\n    /**\n     * @generated from protobuf oneof: event\n     */\n    event: {\n        oneofKind: \"mutationEvent\";\n        /**\n         * @generated from protobuf field: db3_event_proto.MutationEvent mutation_event = 2;\n         */\n        mutationEvent: MutationEvent;\n    } | {\n        oneofKind: \"blockEvent\";\n        /**\n         * @generated from protobuf field: db3_event_proto.BlockEvent block_event = 3;\n         */\n        blockEvent: BlockEvent;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * @generated from protobuf message db3_event_proto.MutationEventFilter\n */\nexport interface MutationEventFilter {\n    /**\n     * @generated from protobuf field: bytes sender = 1;\n     */\n    sender: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_event_proto.BlockEventFilter\n */\nexport interface BlockEventFilter {\n}\n/**\n * @generated from protobuf message db3_event_proto.EventFilter\n */\nexport interface EventFilter {\n    /**\n     * @generated from protobuf oneof: filter\n     */\n    filter: {\n        oneofKind: \"mfilter\";\n        /**\n         * @generated from protobuf field: db3_event_proto.MutationEventFilter mfilter = 1;\n         */\n        mfilter: MutationEventFilter;\n    } | {\n        oneofKind: \"bfilter\";\n        /**\n         * @generated from protobuf field: db3_event_proto.BlockEventFilter bfilter = 2;\n         */\n        bfilter: BlockEventFilter;\n    } | {\n        oneofKind: undefined;\n    };\n}\n/**\n * @generated from protobuf message db3_event_proto.Subscribution\n */\nexport interface Subscribution {\n    /**\n     * @generated from protobuf field: repeated db3_event_proto.EventType topics = 1;\n     */\n    topics: EventType[];\n    /**\n     * @generated from protobuf field: repeated db3_event_proto.EventFilter filters = 2;\n     */\n    filters: EventFilter[];\n}\n/**\n * @generated from protobuf enum db3_event_proto.EventType\n */\nexport enum EventType {\n    /**\n     * @generated from protobuf enum value: Block = 0;\n     */\n    Block = 0,\n    /**\n     * @generated from protobuf enum value: Mutation = 1;\n     */\n    Mutation = 1,\n    /**\n     * @generated from protobuf enum value: Query = 2;\n     */\n    Query = 2\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass BlockEvent$Type extends MessageType<BlockEvent> {\n    constructor() {\n        super(\"db3_event_proto.BlockEvent\", [\n            { no: 1, name: \"height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"block_hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"app_hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"chain_id\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 5, name: \"gas\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.BlockEvent\n */\nexport const BlockEvent = new BlockEvent$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MutationEvent$Type extends MessageType<MutationEvent> {\n    constructor() {\n        super(\"db3_event_proto.MutationEvent\", [\n            { no: 1, name: \"sender\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"status\", kind: \"enum\", T: () => [\"db3_event_proto.MutationEvent.MutationEventStatus\", MutationEvent_MutationEventStatus] },\n            { no: 3, name: \"to\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"gas\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.MutationEvent\n */\nexport const MutationEvent = new MutationEvent$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass EventMessage$Type extends MessageType<EventMessage> {\n    constructor() {\n        super(\"db3_event_proto.EventMessage\", [\n            { no: 1, name: \"type\", kind: \"enum\", T: () => [\"db3_event_proto.EventType\", EventType] },\n            { no: 2, name: \"mutation_event\", kind: \"message\", oneof: \"event\", T: () => MutationEvent },\n            { no: 3, name: \"block_event\", kind: \"message\", oneof: \"event\", T: () => BlockEvent }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.EventMessage\n */\nexport const EventMessage = new EventMessage$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass MutationEventFilter$Type extends MessageType<MutationEventFilter> {\n    constructor() {\n        super(\"db3_event_proto.MutationEventFilter\", [\n            { no: 1, name: \"sender\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.MutationEventFilter\n */\nexport const MutationEventFilter = new MutationEventFilter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BlockEventFilter$Type extends MessageType<BlockEventFilter> {\n    constructor() {\n        super(\"db3_event_proto.BlockEventFilter\", []);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.BlockEventFilter\n */\nexport const BlockEventFilter = new BlockEventFilter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass EventFilter$Type extends MessageType<EventFilter> {\n    constructor() {\n        super(\"db3_event_proto.EventFilter\", [\n            { no: 1, name: \"mfilter\", kind: \"message\", oneof: \"filter\", T: () => MutationEventFilter },\n            { no: 2, name: \"bfilter\", kind: \"message\", oneof: \"filter\", T: () => BlockEventFilter }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.EventFilter\n */\nexport const EventFilter = new EventFilter$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass Subscribution$Type extends MessageType<Subscribution> {\n    constructor() {\n        super(\"db3_event_proto.Subscribution\", [\n            { no: 1, name: \"topics\", kind: \"enum\", repeat: 1 /*RepeatType.PACKED*/, T: () => [\"db3_event_proto.EventType\", EventType] },\n            { no: 2, name: \"filters\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => EventFilter }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_event_proto.Subscribution\n */\nexport const Subscribution = new Subscribution$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_session.proto\" (package \"db3_session_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_mutation.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { PayloadType } from \"./db3_mutation\";\nimport { BroadcastMeta } from \"./db3_base\";\n/**\n * @generated from protobuf message db3_session_proto.QuerySessionInfo\n */\nexport interface QuerySessionInfo {\n    /**\n     * the hex encoded string\n     *\n     * @generated from protobuf field: int32 id = 1;\n     */\n    id: number;\n    /**\n     * @generated from protobuf field: int64 start_time = 2;\n     */\n    startTime: string;\n    /**\n     * @generated from protobuf field: int32 query_count = 3;\n     */\n    queryCount: number;\n    /**\n     * the meta for client\n     *\n     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 4;\n     */\n    meta?: BroadcastMeta;\n}\n/**\n * @generated from protobuf message db3_session_proto.OpenSessionPayload\n */\nexport interface OpenSessionPayload {\n    /**\n     * @generated from protobuf field: string header = 1;\n     */\n    header: string;\n    /**\n     * @generated from protobuf field: int64 start_time = 2;\n     */\n    startTime: string;\n}\n/**\n * the session for mutation\n *\n * @generated from protobuf message db3_session_proto.QuerySession\n */\nexport interface QuerySession {\n    /**\n     * the meta for node client\n     *\n     * @generated from protobuf field: db3_base_proto.BroadcastMeta meta = 1;\n     */\n    meta?: BroadcastMeta;\n    /**\n     * the agreed session info\n     *\n     * @generated from protobuf field: bytes payload = 2;\n     */\n    payload: Uint8Array;\n    /**\n     * client signature\n     *\n     * @generated from protobuf field: bytes client_signature = 3;\n     */\n    clientSignature: Uint8Array;\n    /**\n     * the type of payload\n     *\n     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;\n     */\n    payloadType: PayloadType;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuerySessionInfo$Type extends MessageType<QuerySessionInfo> {\n    constructor() {\n        super(\"db3_session_proto.QuerySessionInfo\", [\n            { no: 1, name: \"id\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 2, name: \"start_time\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ },\n            { no: 3, name: \"query_count\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 4, name: \"meta\", kind: \"message\", T: () => BroadcastMeta }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.QuerySessionInfo\n */\nexport const QuerySessionInfo = new QuerySessionInfo$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionPayload$Type extends MessageType<OpenSessionPayload> {\n    constructor() {\n        super(\"db3_session_proto.OpenSessionPayload\", [\n            { no: 1, name: \"header\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"start_time\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.OpenSessionPayload\n */\nexport const OpenSessionPayload = new OpenSessionPayload$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QuerySession$Type extends MessageType<QuerySession> {\n    constructor() {\n        super(\"db3_session_proto.QuerySession\", [\n            { no: 1, name: \"meta\", kind: \"message\", T: () => BroadcastMeta },\n            { no: 2, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"client_signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 4, name: \"payload_type\", kind: \"enum\", T: () => [\"db3_mutation_proto.PayloadType\", PayloadType] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_session_proto.QuerySession\n */\nexport const QuerySession = new QuerySession$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_bill.proto\" (package \"db3_bill_proto\", syntax proto3)\n// tslint:disable\n//\n//\n//\n// db3_bill.proto\n// Copyright (C) 2022 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n//\nimport { MessageType } from \"@protobuf-ts/runtime\";\n/**\n * @generated from protobuf message db3_bill_proto.Bill\n */\nexport interface Bill {\n    /**\n     * uint256\n     *\n     * @generated from protobuf field: uint64 gas_fee = 1;\n     */\n    gasFee: string;\n    /**\n     * the block id\n     *\n     * @generated from protobuf field: uint64 block_id = 2;\n     */\n    blockId: string;\n    /**\n     * query session or mutation\n     *\n     * @generated from protobuf field: db3_bill_proto.BillType bill_type = 4;\n     */\n    billType: BillType;\n    /**\n     * time on block created\n     *\n     * @generated from protobuf field: uint64 time = 5;\n     */\n    time: string;\n    /**\n     * mutation id or query session id\n     *\n     * @generated from protobuf field: bytes tx_id = 6;\n     */\n    txId: Uint8Array;\n    /**\n     * owner address\n     *\n     * @generated from protobuf field: bytes owner = 8;\n     */\n    owner: Uint8Array;\n    /**\n     * to address\n     *\n     * @generated from protobuf field: bytes to = 9;\n     */\n    to: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_bill_proto.BillQueryRequest\n */\nexport interface BillQueryRequest {\n    /**\n     * @generated from protobuf field: uint64 block_height = 1;\n     */\n    blockHeight: string;\n}\n/**\n * @generated from protobuf enum db3_bill_proto.BillType\n */\nexport enum BillType {\n    /**\n     * @generated from protobuf enum value: BillForMutation = 0;\n     */\n    BillForMutation = 0,\n    /**\n     * @generated from protobuf enum value: BillForQuery = 1;\n     */\n    BillForQuery = 1,\n    /**\n     * @generated from protobuf enum value: BillForMint = 2;\n     */\n    BillForMint = 2\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass Bill$Type extends MessageType<Bill> {\n    constructor() {\n        super(\"db3_bill_proto.Bill\", [\n            { no: 1, name: \"gas_fee\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"block_id\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"bill_type\", kind: \"enum\", T: () => [\"db3_bill_proto.BillType\", BillType] },\n            { no: 5, name: \"time\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 6, name: \"tx_id\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 8, name: \"owner\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 9, name: \"to\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_bill_proto.Bill\n */\nexport const Bill = new Bill$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BillQueryRequest$Type extends MessageType<BillQueryRequest> {\n    constructor() {\n        super(\"db3_bill_proto.BillQueryRequest\", [\n            { no: 1, name: \"block_height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_bill_proto.BillQueryRequest\n */\nexport const BillQueryRequest = new BillQueryRequest$Type();\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_node.proto\" (package \"db3_node_proto\", syntax proto3)\n// tslint:disable\nimport { EventMessage } from \"./db3_event\";\nimport { ServiceType } from \"@protobuf-ts/runtime-rpc\";\nimport { MessageType } from \"@protobuf-ts/runtime\";\nimport { Subscribution } from \"./db3_event\";\nimport { Document } from \"./db3_database\";\nimport { StructuredQuery } from \"./db3_database\";\nimport { Database } from \"./db3_database\";\nimport { QuerySessionInfo } from \"./db3_session\";\nimport { PayloadType } from \"./db3_mutation\";\nimport { Account } from \"./db3_account\";\nimport { Bill } from \"./db3_bill\";\n/**\n * @generated from protobuf message db3_node_proto.NetworkStatus\n */\nexport interface NetworkStatus {\n    /**\n     * @generated from protobuf field: uint64 total_database_count = 1;\n     */\n    totalDatabaseCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_collection_count = 2;\n     */\n    totalCollectionCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_document_count = 3;\n     */\n    totalDocumentCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_account_count = 4;\n     */\n    totalAccountCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_mutation_count = 5;\n     */\n    totalMutationCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_session_count = 6;\n     */\n    totalSessionCount: string;\n    /**\n     * @generated from protobuf field: uint64 total_storage_in_bytes = 7;\n     */\n    totalStorageInBytes: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.QueryBillKey\n */\nexport interface QueryBillKey {\n    /**\n     * @generated from protobuf field: uint64 height = 1;\n     */\n    height: string;\n    /**\n     * @generated from protobuf field: string session_token = 2;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.QueryBillRequest\n */\nexport interface QueryBillRequest {\n    /**\n     * @generated from protobuf field: db3_node_proto.QueryBillKey query_bill_key = 1;\n     */\n    queryBillKey?: QueryBillKey;\n}\n/**\n * @generated from protobuf message db3_node_proto.QueryBillResponse\n */\nexport interface QueryBillResponse {\n    /**\n     * @generated from protobuf field: repeated db3_bill_proto.Bill bills = 1;\n     */\n    bills: Bill[];\n}\n/**\n * @generated from protobuf message db3_node_proto.SessionIdentifier\n */\nexport interface SessionIdentifier {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetAccountRequest\n */\nexport interface GetAccountRequest {\n    /**\n     * @generated from protobuf field: bytes addr = 1;\n     */\n    addr: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetAccountResponse\n */\nexport interface GetAccountResponse {\n    /**\n     * @generated from protobuf field: db3_account_proto.Account account = 1;\n     */\n    account?: Account;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetSessionInfoRequest\n */\nexport interface GetSessionInfoRequest {\n    /**\n     * the hex encoded string\n     *\n     * @generated from protobuf field: db3_node_proto.SessionIdentifier session_identifier = 1;\n     */\n    sessionIdentifier?: SessionIdentifier;\n}\n/**\n * @generated from protobuf message db3_node_proto.OpenSessionRequest\n */\nexport interface OpenSessionRequest {\n    /**\n     * @generated from protobuf field: bytes payload = 1;\n     */\n    payload: Uint8Array;\n    /**\n     * @generated from protobuf field: bytes signature = 2;\n     */\n    signature: Uint8Array;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 3;\n     */\n    payloadType: PayloadType;\n}\n/**\n * @generated from protobuf message db3_node_proto.OpenSessionResponse\n */\nexport interface OpenSessionResponse {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;\n     */\n    querySessionInfo?: QuerySessionInfo;\n    /**\n     * @generated from protobuf field: int64 session_timeout_second = 2;\n     */\n    sessionTimeoutSecond: string;\n    /**\n     * @generated from protobuf field: int32 max_query_limit = 3;\n     */\n    maxQueryLimit: number;\n    /**\n     * @generated from protobuf field: string session_token = 4;\n     */\n    sessionToken: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.CloseSessionRequest\n */\nexport interface CloseSessionRequest {\n    /**\n     * the query session info\n     *\n     * @generated from protobuf field: bytes payload = 1;\n     */\n    payload: Uint8Array;\n    /**\n     * the signature of query session info\n     *\n     * @generated from protobuf field: bytes signature = 2;\n     */\n    signature: Uint8Array;\n    /**\n     * @generated from protobuf field: string session_token = 3;\n     */\n    sessionToken: string;\n    /**\n     * @generated from protobuf field: db3_mutation_proto.PayloadType payload_type = 4;\n     */\n    payloadType: PayloadType;\n}\n/**\n * @generated from protobuf message db3_node_proto.CloseSessionResponse\n */\nexport interface CloseSessionResponse {\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo query_session_info = 1;\n     */\n    querySessionInfo?: QuerySessionInfo;\n    /**\n     * @generated from protobuf field: bytes hash = 2;\n     */\n    hash: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetSessionInfoResponse\n */\nexport interface GetSessionInfoResponse {\n    /**\n     * @generated from protobuf field: int32 session_status = 1;\n     */\n    sessionStatus: number;\n    /**\n     * @generated from protobuf field: db3_session_proto.QuerySessionInfo session_info = 2;\n     */\n    sessionInfo?: QuerySessionInfo;\n}\n/**\n * @generated from protobuf message db3_node_proto.BroadcastRequest\n */\nexport interface BroadcastRequest {\n    /**\n     * @generated from protobuf field: bytes body = 1;\n     */\n    body: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.BroadcastResponse\n */\nexport interface BroadcastResponse {\n    /**\n     * @generated from protobuf field: bytes hash = 2;\n     */\n    hash: Uint8Array;\n}\n/**\n * @generated from protobuf message db3_node_proto.ShowDatabaseRequest\n */\nexport interface ShowDatabaseRequest {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n    /**\n     * a hex string\n     *\n     * @generated from protobuf field: string address = 2;\n     */\n    address: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.ShowDatabaseResponse\n */\nexport interface ShowDatabaseResponse {\n    /**\n     * @generated from protobuf field: db3_database_proto.Database db = 1;\n     */\n    db?: Database;\n}\n/**\n * @generated from protobuf message db3_node_proto.RunQueryRequest\n */\nexport interface RunQueryRequest {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n    /**\n     * a hex string\n     *\n     * @generated from protobuf field: string address = 2;\n     */\n    address: string;\n    /**\n     * @generated from protobuf field: db3_database_proto.StructuredQuery query = 3;\n     */\n    query?: StructuredQuery; // TODO: support paging setting (e.g page_size, page_token)\n    // TODO: support document mask\n}\n/**\n * @generated from protobuf message db3_node_proto.GetDocumentRequest\n */\nexport interface GetDocumentRequest {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n    /**\n     * a hex string\n     *\n     * @generated from protobuf field: string id = 2;\n     */\n    id: string;\n}\n/**\n * @generated from protobuf message db3_node_proto.GetDocumentResponse\n */\nexport interface GetDocumentResponse {\n    /**\n     * @generated from protobuf field: db3_database_proto.Document document = 1;\n     */\n    document?: Document;\n}\n/**\n * @generated from protobuf message db3_node_proto.RunQueryResponse\n */\nexport interface RunQueryResponse {\n    /**\n     * @generated from protobuf field: repeated db3_database_proto.Document documents = 2;\n     */\n    documents: Document[]; // TODO: support next_page_token for page loading\n}\n/**\n * @generated from protobuf message db3_node_proto.ShowNetworkStatusRequest\n */\nexport interface ShowNetworkStatusRequest {\n}\n/**\n * @generated from protobuf message db3_node_proto.SubscribeRequest\n */\nexport interface SubscribeRequest {\n    /**\n     * @generated from protobuf field: string session_token = 1;\n     */\n    sessionToken: string;\n    /**\n     * @generated from protobuf field: db3_event_proto.Subscribution sub = 2;\n     */\n    sub?: Subscribution;\n}\n// @generated message type with reflection information, may provide speed optimized methods\nclass NetworkStatus$Type extends MessageType<NetworkStatus> {\n    constructor() {\n        super(\"db3_node_proto.NetworkStatus\", [\n            { no: 1, name: \"total_database_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"total_collection_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 3, name: \"total_document_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 4, name: \"total_account_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 5, name: \"total_mutation_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 6, name: \"total_session_count\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 7, name: \"total_storage_in_bytes\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.NetworkStatus\n */\nexport const NetworkStatus = new NetworkStatus$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillKey$Type extends MessageType<QueryBillKey> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillKey\", [\n            { no: 1, name: \"height\", kind: \"scalar\", T: 4 /*ScalarType.UINT64*/ },\n            { no: 2, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillKey\n */\nexport const QueryBillKey = new QueryBillKey$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillRequest$Type extends MessageType<QueryBillRequest> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillRequest\", [\n            { no: 1, name: \"query_bill_key\", kind: \"message\", T: () => QueryBillKey }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillRequest\n */\nexport const QueryBillRequest = new QueryBillRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass QueryBillResponse$Type extends MessageType<QueryBillResponse> {\n    constructor() {\n        super(\"db3_node_proto.QueryBillResponse\", [\n            { no: 1, name: \"bills\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Bill }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.QueryBillResponse\n */\nexport const QueryBillResponse = new QueryBillResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SessionIdentifier$Type extends MessageType<SessionIdentifier> {\n    constructor() {\n        super(\"db3_node_proto.SessionIdentifier\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.SessionIdentifier\n */\nexport const SessionIdentifier = new SessionIdentifier$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetAccountRequest$Type extends MessageType<GetAccountRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetAccountRequest\", [\n            { no: 1, name: \"addr\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetAccountRequest\n */\nexport const GetAccountRequest = new GetAccountRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetAccountResponse$Type extends MessageType<GetAccountResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetAccountResponse\", [\n            { no: 1, name: \"account\", kind: \"message\", T: () => Account }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetAccountResponse\n */\nexport const GetAccountResponse = new GetAccountResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetSessionInfoRequest$Type extends MessageType<GetSessionInfoRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetSessionInfoRequest\", [\n            { no: 1, name: \"session_identifier\", kind: \"message\", T: () => SessionIdentifier }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoRequest\n */\nexport const GetSessionInfoRequest = new GetSessionInfoRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionRequest$Type extends MessageType<OpenSessionRequest> {\n    constructor() {\n        super(\"db3_node_proto.OpenSessionRequest\", [\n            { no: 1, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"payload_type\", kind: \"enum\", T: () => [\"db3_mutation_proto.PayloadType\", PayloadType] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.OpenSessionRequest\n */\nexport const OpenSessionRequest = new OpenSessionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass OpenSessionResponse$Type extends MessageType<OpenSessionResponse> {\n    constructor() {\n        super(\"db3_node_proto.OpenSessionResponse\", [\n            { no: 1, name: \"query_session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 2, name: \"session_timeout_second\", kind: \"scalar\", T: 3 /*ScalarType.INT64*/ },\n            { no: 3, name: \"max_query_limit\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 4, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.OpenSessionResponse\n */\nexport const OpenSessionResponse = new OpenSessionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CloseSessionRequest$Type extends MessageType<CloseSessionRequest> {\n    constructor() {\n        super(\"db3_node_proto.CloseSessionRequest\", [\n            { no: 1, name: \"payload\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 2, name: \"signature\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ },\n            { no: 3, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 4, name: \"payload_type\", kind: \"enum\", T: () => [\"db3_mutation_proto.PayloadType\", PayloadType] }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.CloseSessionRequest\n */\nexport const CloseSessionRequest = new CloseSessionRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass CloseSessionResponse$Type extends MessageType<CloseSessionResponse> {\n    constructor() {\n        super(\"db3_node_proto.CloseSessionResponse\", [\n            { no: 1, name: \"query_session_info\", kind: \"message\", T: () => QuerySessionInfo },\n            { no: 2, name: \"hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.CloseSessionResponse\n */\nexport const CloseSessionResponse = new CloseSessionResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetSessionInfoResponse$Type extends MessageType<GetSessionInfoResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetSessionInfoResponse\", [\n            { no: 1, name: \"session_status\", kind: \"scalar\", T: 5 /*ScalarType.INT32*/ },\n            { no: 2, name: \"session_info\", kind: \"message\", T: () => QuerySessionInfo }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetSessionInfoResponse\n */\nexport const GetSessionInfoResponse = new GetSessionInfoResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastRequest$Type extends MessageType<BroadcastRequest> {\n    constructor() {\n        super(\"db3_node_proto.BroadcastRequest\", [\n            { no: 1, name: \"body\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BroadcastRequest\n */\nexport const BroadcastRequest = new BroadcastRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass BroadcastResponse$Type extends MessageType<BroadcastResponse> {\n    constructor() {\n        super(\"db3_node_proto.BroadcastResponse\", [\n            { no: 2, name: \"hash\", kind: \"scalar\", T: 12 /*ScalarType.BYTES*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.BroadcastResponse\n */\nexport const BroadcastResponse = new BroadcastResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ShowDatabaseRequest$Type extends MessageType<ShowDatabaseRequest> {\n    constructor() {\n        super(\"db3_node_proto.ShowDatabaseRequest\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"address\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseRequest\n */\nexport const ShowDatabaseRequest = new ShowDatabaseRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ShowDatabaseResponse$Type extends MessageType<ShowDatabaseResponse> {\n    constructor() {\n        super(\"db3_node_proto.ShowDatabaseResponse\", [\n            { no: 1, name: \"db\", kind: \"message\", T: () => Database }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.ShowDatabaseResponse\n */\nexport const ShowDatabaseResponse = new ShowDatabaseResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RunQueryRequest$Type extends MessageType<RunQueryRequest> {\n    constructor() {\n        super(\"db3_node_proto.RunQueryRequest\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"address\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 3, name: \"query\", kind: \"message\", T: () => StructuredQuery }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.RunQueryRequest\n */\nexport const RunQueryRequest = new RunQueryRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetDocumentRequest$Type extends MessageType<GetDocumentRequest> {\n    constructor() {\n        super(\"db3_node_proto.GetDocumentRequest\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"id\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetDocumentRequest\n */\nexport const GetDocumentRequest = new GetDocumentRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass GetDocumentResponse$Type extends MessageType<GetDocumentResponse> {\n    constructor() {\n        super(\"db3_node_proto.GetDocumentResponse\", [\n            { no: 1, name: \"document\", kind: \"message\", T: () => Document }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.GetDocumentResponse\n */\nexport const GetDocumentResponse = new GetDocumentResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass RunQueryResponse$Type extends MessageType<RunQueryResponse> {\n    constructor() {\n        super(\"db3_node_proto.RunQueryResponse\", [\n            { no: 2, name: \"documents\", kind: \"message\", repeat: 1 /*RepeatType.PACKED*/, T: () => Document }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.RunQueryResponse\n */\nexport const RunQueryResponse = new RunQueryResponse$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass ShowNetworkStatusRequest$Type extends MessageType<ShowNetworkStatusRequest> {\n    constructor() {\n        super(\"db3_node_proto.ShowNetworkStatusRequest\", []);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.ShowNetworkStatusRequest\n */\nexport const ShowNetworkStatusRequest = new ShowNetworkStatusRequest$Type();\n// @generated message type with reflection information, may provide speed optimized methods\nclass SubscribeRequest$Type extends MessageType<SubscribeRequest> {\n    constructor() {\n        super(\"db3_node_proto.SubscribeRequest\", [\n            { no: 1, name: \"session_token\", kind: \"scalar\", T: 9 /*ScalarType.STRING*/ },\n            { no: 2, name: \"sub\", kind: \"message\", T: () => Subscribution }\n        ]);\n    }\n}\n/**\n * @generated MessageType for protobuf message db3_node_proto.SubscribeRequest\n */\nexport const SubscribeRequest = new SubscribeRequest$Type();\n/**\n * @generated ServiceType for protobuf service db3_node_proto.StorageNode\n */\nexport const StorageNode = new ServiceType(\"db3_node_proto.StorageNode\", [\n    { name: \"QueryBill\", options: {}, I: QueryBillRequest, O: QueryBillResponse },\n    { name: \"OpenQuerySession\", options: {}, I: OpenSessionRequest, O: OpenSessionResponse },\n    { name: \"CloseQuerySession\", options: {}, I: CloseSessionRequest, O: CloseSessionResponse },\n    { name: \"GetAccount\", options: {}, I: GetAccountRequest, O: GetAccountResponse },\n    { name: \"GetSessionInfo\", options: {}, I: GetSessionInfoRequest, O: GetSessionInfoResponse },\n    { name: \"Broadcast\", options: {}, I: BroadcastRequest, O: BroadcastResponse },\n    { name: \"ShowDatabase\", options: {}, I: ShowDatabaseRequest, O: ShowDatabaseResponse },\n    { name: \"RunQuery\", options: {}, I: RunQueryRequest, O: RunQueryResponse },\n    { name: \"GetDocument\", options: {}, I: GetDocumentRequest, O: GetDocumentResponse },\n    { name: \"ShowNetworkStatus\", options: {}, I: ShowNetworkStatusRequest, O: NetworkStatus },\n    { name: \"Subscribe\", serverStreaming: true, options: {}, I: SubscribeRequest, O: EventMessage }\n]);\n","import { normalizeMethodInfo } from \"./reflection-info\";\nexport class ServiceType {\n    constructor(typeName, methods, options) {\n        this.typeName = typeName;\n        this.methods = methods.map(i => normalizeMethodInfo(i, this));\n        this.options = options !== null && options !== void 0 ? options : {};\n    }\n}\n","import { lowerCamelCase } from \"@protobuf-ts/runtime\";\n/**\n * Turns PartialMethodInfo into MethodInfo.\n */\nexport function normalizeMethodInfo(method, service) {\n    var _a, _b, _c;\n    let m = method;\n    m.service = service;\n    m.localName = (_a = m.localName) !== null && _a !== void 0 ? _a : lowerCamelCase(m.name);\n    // noinspection PointlessBooleanExpressionJS\n    m.serverStreaming = !!m.serverStreaming;\n    // noinspection PointlessBooleanExpressionJS\n    m.clientStreaming = !!m.clientStreaming;\n    m.options = (_b = m.options) !== null && _b !== void 0 ? _b : {};\n    m.idempotency = (_c = m.idempotency) !== null && _c !== void 0 ? _c : undefined;\n    return m;\n}\n/**\n * Read custom method options from a generated service client.\n *\n * @deprecated use readMethodOption()\n */\nexport function readMethodOptions(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    return options && options[extensionName] ? extensionType.fromJson(options[extensionName]) : undefined;\n}\nexport function readMethodOption(service, methodName, extensionName, extensionType) {\n    var _a;\n    const options = (_a = service.methods.find((m, i) => m.localName === methodName || i === methodName)) === null || _a === void 0 ? void 0 : _a.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\nexport function readServiceOption(service, extensionName, extensionType) {\n    const options = service.options;\n    if (!options) {\n        return undefined;\n    }\n    const optionVal = options[extensionName];\n    if (optionVal === undefined) {\n        return optionVal;\n    }\n    return extensionType ? extensionType.fromJson(optionVal) : optionVal;\n}\n","// @generated by protobuf-ts 2.8.2 with parameter optimize_code_size,long_type_string\n// @generated from protobuf file \"db3_node.proto\" (package \"db3_node_proto\", syntax proto3)\n// tslint:disable\nimport type { RpcTransport } from \"@protobuf-ts/runtime-rpc\";\nimport type { ServiceInfo } from \"@protobuf-ts/runtime-rpc\";\nimport { StorageNode } from \"./db3_node\";\nimport type { EventMessage } from \"./db3_event\";\nimport type { SubscribeRequest } from \"./db3_node\";\nimport type { ServerStreamingCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { NetworkStatus } from \"./db3_node\";\nimport type { ShowNetworkStatusRequest } from \"./db3_node\";\nimport type { GetDocumentResponse } from \"./db3_node\";\nimport type { GetDocumentRequest } from \"./db3_node\";\nimport type { RunQueryResponse } from \"./db3_node\";\nimport type { RunQueryRequest } from \"./db3_node\";\nimport type { ShowDatabaseResponse } from \"./db3_node\";\nimport type { ShowDatabaseRequest } from \"./db3_node\";\nimport type { BroadcastResponse } from \"./db3_node\";\nimport type { BroadcastRequest } from \"./db3_node\";\nimport type { GetSessionInfoResponse } from \"./db3_node\";\nimport type { GetSessionInfoRequest } from \"./db3_node\";\nimport type { GetAccountResponse } from \"./db3_node\";\nimport type { GetAccountRequest } from \"./db3_node\";\nimport type { CloseSessionResponse } from \"./db3_node\";\nimport type { CloseSessionRequest } from \"./db3_node\";\nimport type { OpenSessionResponse } from \"./db3_node\";\nimport type { OpenSessionRequest } from \"./db3_node\";\nimport { stackIntercept } from \"@protobuf-ts/runtime-rpc\";\nimport type { QueryBillResponse } from \"./db3_node\";\nimport type { QueryBillRequest } from \"./db3_node\";\nimport type { UnaryCall } from \"@protobuf-ts/runtime-rpc\";\nimport type { RpcOptions } from \"@protobuf-ts/runtime-rpc\";\n/**\n * @generated from protobuf service db3_node_proto.StorageNode\n */\nexport interface IStorageNodeClient {\n    /**\n     * method for querying bills by height\n     *\n     * @generated from protobuf rpc: QueryBill(db3_node_proto.QueryBillRequest) returns (db3_node_proto.QueryBillResponse);\n     */\n    queryBill(input: QueryBillRequest, options?: RpcOptions): UnaryCall<QueryBillRequest, QueryBillResponse>;\n    /**\n     * method for open query session\n     *\n     * @generated from protobuf rpc: OpenQuerySession(db3_node_proto.OpenSessionRequest) returns (db3_node_proto.OpenSessionResponse);\n     */\n    openQuerySession(input: OpenSessionRequest, options?: RpcOptions): UnaryCall<OpenSessionRequest, OpenSessionResponse>;\n    /**\n     * method for close query session\n     *\n     * @generated from protobuf rpc: CloseQuerySession(db3_node_proto.CloseSessionRequest) returns (db3_node_proto.CloseSessionResponse);\n     */\n    closeQuerySession(input: CloseSessionRequest, options?: RpcOptions): UnaryCall<CloseSessionRequest, CloseSessionResponse>;\n    /**\n     * method for querying account\n     *\n     * @generated from protobuf rpc: GetAccount(db3_node_proto.GetAccountRequest) returns (db3_node_proto.GetAccountResponse);\n     */\n    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountResponse>;\n    /**\n     * @generated from protobuf rpc: GetSessionInfo(db3_node_proto.GetSessionInfoRequest) returns (db3_node_proto.GetSessionInfoResponse);\n     */\n    getSessionInfo(input: GetSessionInfoRequest, options?: RpcOptions): UnaryCall<GetSessionInfoRequest, GetSessionInfoResponse>;\n    /**\n     * method for broadcast request\n     *\n     * @generated from protobuf rpc: Broadcast(db3_node_proto.BroadcastRequest) returns (db3_node_proto.BroadcastResponse);\n     */\n    broadcast(input: BroadcastRequest, options?: RpcOptions): UnaryCall<BroadcastRequest, BroadcastResponse>;\n    /**\n     * method for show database\n     *\n     * @generated from protobuf rpc: ShowDatabase(db3_node_proto.ShowDatabaseRequest) returns (db3_node_proto.ShowDatabaseResponse);\n     */\n    showDatabase(input: ShowDatabaseRequest, options?: RpcOptions): UnaryCall<ShowDatabaseRequest, ShowDatabaseResponse>;\n    /**\n     * method for query document\n     *\n     * @generated from protobuf rpc: RunQuery(db3_node_proto.RunQueryRequest) returns (db3_node_proto.RunQueryResponse);\n     */\n    runQuery(input: RunQueryRequest, options?: RpcOptions): UnaryCall<RunQueryRequest, RunQueryResponse>;\n    /**\n     * method for get document\n     *\n     * @generated from protobuf rpc: GetDocument(db3_node_proto.GetDocumentRequest) returns (db3_node_proto.GetDocumentResponse);\n     */\n    getDocument(input: GetDocumentRequest, options?: RpcOptions): UnaryCall<GetDocumentRequest, GetDocumentResponse>;\n    /**\n     * method for show the network status\n     *\n     * @generated from protobuf rpc: ShowNetworkStatus(db3_node_proto.ShowNetworkStatusRequest) returns (db3_node_proto.NetworkStatus);\n     */\n    showNetworkStatus(input: ShowNetworkStatusRequest, options?: RpcOptions): UnaryCall<ShowNetworkStatusRequest, NetworkStatus>;\n    /**\n     * method for subscribution\n     *\n     * @generated from protobuf rpc: Subscribe(db3_node_proto.SubscribeRequest) returns (stream db3_event_proto.EventMessage);\n     */\n    subscribe(input: SubscribeRequest, options?: RpcOptions): ServerStreamingCall<SubscribeRequest, EventMessage>;\n}\n/**\n * @generated from protobuf service db3_node_proto.StorageNode\n */\nexport class StorageNodeClient implements IStorageNodeClient, ServiceInfo {\n    typeName = StorageNode.typeName;\n    methods = StorageNode.methods;\n    options = StorageNode.options;\n    constructor(private readonly _transport: RpcTransport) {\n    }\n    /**\n     * method for querying bills by height\n     *\n     * @generated from protobuf rpc: QueryBill(db3_node_proto.QueryBillRequest) returns (db3_node_proto.QueryBillResponse);\n     */\n    queryBill(input: QueryBillRequest, options?: RpcOptions): UnaryCall<QueryBillRequest, QueryBillResponse> {\n        const method = this.methods[0], opt = this._transport.mergeOptions(options);\n        return stackIntercept<QueryBillRequest, QueryBillResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for open query session\n     *\n     * @generated from protobuf rpc: OpenQuerySession(db3_node_proto.OpenSessionRequest) returns (db3_node_proto.OpenSessionResponse);\n     */\n    openQuerySession(input: OpenSessionRequest, options?: RpcOptions): UnaryCall<OpenSessionRequest, OpenSessionResponse> {\n        const method = this.methods[1], opt = this._transport.mergeOptions(options);\n        return stackIntercept<OpenSessionRequest, OpenSessionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for close query session\n     *\n     * @generated from protobuf rpc: CloseQuerySession(db3_node_proto.CloseSessionRequest) returns (db3_node_proto.CloseSessionResponse);\n     */\n    closeQuerySession(input: CloseSessionRequest, options?: RpcOptions): UnaryCall<CloseSessionRequest, CloseSessionResponse> {\n        const method = this.methods[2], opt = this._transport.mergeOptions(options);\n        return stackIntercept<CloseSessionRequest, CloseSessionResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for querying account\n     *\n     * @generated from protobuf rpc: GetAccount(db3_node_proto.GetAccountRequest) returns (db3_node_proto.GetAccountResponse);\n     */\n    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountResponse> {\n        const method = this.methods[3], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetAccountRequest, GetAccountResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * @generated from protobuf rpc: GetSessionInfo(db3_node_proto.GetSessionInfoRequest) returns (db3_node_proto.GetSessionInfoResponse);\n     */\n    getSessionInfo(input: GetSessionInfoRequest, options?: RpcOptions): UnaryCall<GetSessionInfoRequest, GetSessionInfoResponse> {\n        const method = this.methods[4], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetSessionInfoRequest, GetSessionInfoResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for broadcast request\n     *\n     * @generated from protobuf rpc: Broadcast(db3_node_proto.BroadcastRequest) returns (db3_node_proto.BroadcastResponse);\n     */\n    broadcast(input: BroadcastRequest, options?: RpcOptions): UnaryCall<BroadcastRequest, BroadcastResponse> {\n        const method = this.methods[5], opt = this._transport.mergeOptions(options);\n        return stackIntercept<BroadcastRequest, BroadcastResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for show database\n     *\n     * @generated from protobuf rpc: ShowDatabase(db3_node_proto.ShowDatabaseRequest) returns (db3_node_proto.ShowDatabaseResponse);\n     */\n    showDatabase(input: ShowDatabaseRequest, options?: RpcOptions): UnaryCall<ShowDatabaseRequest, ShowDatabaseResponse> {\n        const method = this.methods[6], opt = this._transport.mergeOptions(options);\n        return stackIntercept<ShowDatabaseRequest, ShowDatabaseResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for query document\n     *\n     * @generated from protobuf rpc: RunQuery(db3_node_proto.RunQueryRequest) returns (db3_node_proto.RunQueryResponse);\n     */\n    runQuery(input: RunQueryRequest, options?: RpcOptions): UnaryCall<RunQueryRequest, RunQueryResponse> {\n        const method = this.methods[7], opt = this._transport.mergeOptions(options);\n        return stackIntercept<RunQueryRequest, RunQueryResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for get document\n     *\n     * @generated from protobuf rpc: GetDocument(db3_node_proto.GetDocumentRequest) returns (db3_node_proto.GetDocumentResponse);\n     */\n    getDocument(input: GetDocumentRequest, options?: RpcOptions): UnaryCall<GetDocumentRequest, GetDocumentResponse> {\n        const method = this.methods[8], opt = this._transport.mergeOptions(options);\n        return stackIntercept<GetDocumentRequest, GetDocumentResponse>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for show the network status\n     *\n     * @generated from protobuf rpc: ShowNetworkStatus(db3_node_proto.ShowNetworkStatusRequest) returns (db3_node_proto.NetworkStatus);\n     */\n    showNetworkStatus(input: ShowNetworkStatusRequest, options?: RpcOptions): UnaryCall<ShowNetworkStatusRequest, NetworkStatus> {\n        const method = this.methods[9], opt = this._transport.mergeOptions(options);\n        return stackIntercept<ShowNetworkStatusRequest, NetworkStatus>(\"unary\", this._transport, method, opt, input);\n    }\n    /**\n     * method for subscribution\n     *\n     * @generated from protobuf rpc: Subscribe(db3_node_proto.SubscribeRequest) returns (stream db3_event_proto.EventMessage);\n     */\n    subscribe(input: SubscribeRequest, options?: RpcOptions): ServerStreamingCall<SubscribeRequest, EventMessage> {\n        const method = this.methods[10], opt = this._transport.mergeOptions(options);\n        return stackIntercept<SubscribeRequest, EventMessage>(\"serverStreaming\", this._transport, method, opt, input);\n    }\n}\n","// int64-buffer.js\n\n/*jshint -W018 */ // Confusing use of '!'.\n/*jshint -W030 */ // Expected an assignment or function call and instead saw an expression.\n/*jshint -W093 */ // Did you mean to return a conditional instead of an assignment?\n\nvar Uint64BE, Int64BE, Uint64LE, Int64LE;\n\n!function(exports) {\n  // constants\n\n  var UNDEFINED = \"undefined\";\n  var BUFFER = (UNDEFINED !== typeof Buffer) && Buffer;\n  var UINT8ARRAY = (UNDEFINED !== typeof Uint8Array) && Uint8Array;\n  var ARRAYBUFFER = (UNDEFINED !== typeof ArrayBuffer) && ArrayBuffer;\n  var ZERO = [0, 0, 0, 0, 0, 0, 0, 0];\n  var isArray = Array.isArray || _isArray;\n  var BIT32 = 4294967296;\n  var BIT24 = 16777216;\n\n  // storage class\n\n  var storage; // Array;\n\n  // generate classes\n\n  Uint64BE = factory(\"Uint64BE\", true, true);\n  Int64BE = factory(\"Int64BE\", true, false);\n  Uint64LE = factory(\"Uint64LE\", false, true);\n  Int64LE = factory(\"Int64LE\", false, false);\n\n  // class factory\n\n  function factory(name, bigendian, unsigned) {\n    var posH = bigendian ? 0 : 4;\n    var posL = bigendian ? 4 : 0;\n    var pos0 = bigendian ? 0 : 3;\n    var pos1 = bigendian ? 1 : 2;\n    var pos2 = bigendian ? 2 : 1;\n    var pos3 = bigendian ? 3 : 0;\n    var fromPositive = bigendian ? fromPositiveBE : fromPositiveLE;\n    var fromNegative = bigendian ? fromNegativeBE : fromNegativeLE;\n    var proto = Int64.prototype;\n    var isName = \"is\" + name;\n    var _isInt64 = \"_\" + isName;\n\n    // properties\n    proto.buffer = void 0;\n    proto.offset = 0;\n    proto[_isInt64] = true;\n\n    // methods\n    proto.toNumber = toNumber;\n    proto.toString = toString;\n    proto.toJSON = toNumber;\n    proto.toArray = toArray;\n\n    // add .toBuffer() method only when Buffer available\n    if (BUFFER) proto.toBuffer = toBuffer;\n\n    // add .toArrayBuffer() method only when Uint8Array available\n    if (UINT8ARRAY) proto.toArrayBuffer = toArrayBuffer;\n\n    // isUint64BE, isInt64BE\n    Int64[isName] = isInt64;\n\n    // CommonJS\n    exports[name] = Int64;\n\n    return Int64;\n\n    // constructor\n    function Int64(buffer, offset, value, raddix) {\n      if (!(this instanceof Int64)) return new Int64(buffer, offset, value, raddix);\n      return init(this, buffer, offset, value, raddix);\n    }\n\n    // isUint64BE, isInt64BE\n    function isInt64(b) {\n      return !!(b && b[_isInt64]);\n    }\n\n    // initializer\n    function init(that, buffer, offset, value, raddix) {\n      if (UINT8ARRAY && ARRAYBUFFER) {\n        if (buffer instanceof ARRAYBUFFER) buffer = new UINT8ARRAY(buffer);\n        if (value instanceof ARRAYBUFFER) value = new UINT8ARRAY(value);\n      }\n\n      // Int64BE() style\n      if (!buffer && !offset && !value && !storage) {\n        // shortcut to initialize with zero\n        that.buffer = newArray(ZERO, 0);\n        return;\n      }\n\n      // Int64BE(value, raddix) style\n      if (!isValidBuffer(buffer, offset)) {\n        var _storage = storage || Array;\n        raddix = offset;\n        value = buffer;\n        offset = 0;\n        buffer = (storage === BUFFER) ? BUFFER.alloc(8) : new _storage(8);\n      }\n\n      that.buffer = buffer;\n      that.offset = offset |= 0;\n\n      // Int64BE(buffer, offset) style\n      if (UNDEFINED === typeof value) return;\n\n      // Int64BE(buffer, offset, value, raddix) style\n      if (\"string\" === typeof value) {\n        fromString(buffer, offset, value, raddix || 10);\n      } else if (isValidBuffer(value, raddix)) {\n        fromArray(buffer, offset, value, raddix);\n      } else if (\"number\" === typeof raddix) {\n        writeInt32(buffer, offset + posH, value); // high\n        writeInt32(buffer, offset + posL, raddix); // low\n      } else if (value > 0) {\n        fromPositive(buffer, offset, value); // positive\n      } else if (value < 0) {\n        fromNegative(buffer, offset, value); // negative\n      } else {\n        fromArray(buffer, offset, ZERO, 0); // zero, NaN and others\n      }\n    }\n\n    function fromString(buffer, offset, str, raddix) {\n      var pos = 0;\n      var len = str.length;\n      var high = 0;\n      var low = 0;\n      if (str[0] === \"-\") pos++;\n      var sign = pos;\n      while (pos < len) {\n        var chr = parseInt(str[pos++], raddix);\n        if (!(chr >= 0)) break; // NaN\n        low = low * raddix + chr;\n        high = high * raddix + Math.floor(low / BIT32);\n        low %= BIT32;\n      }\n      if (sign) {\n        high = ~high;\n        if (low) {\n          low = BIT32 - low;\n        } else {\n          high++;\n        }\n      }\n      writeInt32(buffer, offset + posH, high);\n      writeInt32(buffer, offset + posL, low);\n    }\n\n    function toNumber() {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      if (!unsigned) high |= 0; // a trick to get signed\n      return high ? (high * BIT32 + low) : low;\n    }\n\n    function toString(radix) {\n      var buffer = this.buffer;\n      var offset = this.offset;\n      var high = readInt32(buffer, offset + posH);\n      var low = readInt32(buffer, offset + posL);\n      var str = \"\";\n      var sign = !unsigned && (high & 0x80000000);\n      if (sign) {\n        high = ~high;\n        low = BIT32 - low;\n      }\n      radix = radix || 10;\n      while (1) {\n        var mod = (high % radix) * BIT32 + low;\n        high = Math.floor(high / radix);\n        low = Math.floor(mod / radix);\n        str = (mod % radix).toString(radix) + str;\n        if (!high && !low) break;\n      }\n      if (sign) {\n        str = \"-\" + str;\n      }\n      return str;\n    }\n\n    function writeInt32(buffer, offset, value) {\n      buffer[offset + pos3] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos2] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos1] = value & 255;\n      value = value >> 8;\n      buffer[offset + pos0] = value & 255;\n    }\n\n    function readInt32(buffer, offset) {\n      return (buffer[offset + pos0] * BIT24) +\n        (buffer[offset + pos1] << 16) +\n        (buffer[offset + pos2] << 8) +\n        buffer[offset + pos3];\n    }\n  }\n\n  function toArray(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = null; // Array\n\n    if (raw !== false && isArray(buffer)) {\n      return (buffer.length === 8) ? buffer : buffer.slice(offset, offset + 8);\n    }\n\n    return newArray(buffer, offset);\n  }\n\n  function toBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    storage = BUFFER;\n\n    if (raw !== false && BUFFER.isBuffer(buffer)) {\n      return (buffer.length === 8) ? buffer : buffer.slice(offset, offset + 8);\n    }\n\n    // Buffer.from(arraybuffer) available since Node v4.5.0\n    // https://nodejs.org/en/blog/release/v4.5.0/\n    return BUFFER.from(toArrayBuffer.call(this, raw));\n  }\n\n  function toArrayBuffer(raw) {\n    var buffer = this.buffer;\n    var offset = this.offset;\n    var arrbuf = buffer.buffer;\n    storage = UINT8ARRAY;\n\n    // arrbuf.slice() ignores buffer.offset until Node v8.0.0\n    if (raw !== false && !buffer.offset && (arrbuf instanceof ARRAYBUFFER)) {\n      return (arrbuf.byteLength === 8) ? arrbuf : arrbuf.slice(offset, offset + 8);\n    }\n\n    var dest = new UINT8ARRAY(8);\n    fromArray(dest, 0, buffer, offset);\n    return dest.buffer;\n  }\n\n  function isValidBuffer(buffer, offset) {\n    var len = buffer && buffer.length;\n    offset |= 0;\n    return len && (offset + 8 <= len) && (\"string\" !== typeof buffer[offset]);\n  }\n\n  function fromArray(destbuf, destoff, srcbuf, srcoff) {\n    destoff |= 0;\n    srcoff |= 0;\n    for (var i = 0; i < 8; i++) {\n      destbuf[destoff++] = srcbuf[srcoff++] & 255;\n    }\n  }\n\n  function newArray(buffer, offset) {\n    return Array.prototype.slice.call(buffer, offset, offset + 8);\n  }\n\n  function fromPositiveBE(buffer, offset, value) {\n    var pos = offset + 8;\n    while (pos > offset) {\n      buffer[--pos] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeBE(buffer, offset, value) {\n    var pos = offset + 8;\n    value++;\n    while (pos > offset) {\n      buffer[--pos] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  function fromPositiveLE(buffer, offset, value) {\n    var end = offset + 8;\n    while (offset < end) {\n      buffer[offset++] = value & 255;\n      value /= 256;\n    }\n  }\n\n  function fromNegativeLE(buffer, offset, value) {\n    var end = offset + 8;\n    value++;\n    while (offset < end) {\n      buffer[offset++] = ((-value) & 255) ^ 255;\n      value /= 256;\n    }\n  }\n\n  // https://github.com/retrofox/is-array\n  function _isArray(val) {\n    return !!val && \"[object Array]\" == Object.prototype.toString.call(val);\n  }\n\n}(typeof exports === 'object' && typeof exports.nodeName !== 'string' ? exports : (this || {}));\n","//\n// id.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\nimport sha3 from 'js-sha3'\nimport { toB64, fromHEX } from './crypto_utils'\nimport { Uint64BE } from 'int64-buffer'\n\nconst TX_ID_LENGTH = 32\nconst DB_ID_LENGTH = 20\n\nexport class TxId {\n    data: Uint8Array\n    constructor(data: Uint8Array) {\n        const inputDataLength = data.length\n        if (inputDataLength != TX_ID_LENGTH) {\n            throw new Error(\n                `Wrong data size. Expected 32 bytes, got ${inputDataLength}.`\n            )\n        }\n        this.data = data\n    }\n\n    //\n    // from the broadcast response\n    //\n    static from(hash: Uint8Array): TxId {\n        return new TxId(hash)\n    }\n\n    getB64(): string {\n        return toB64(this.data)\n    }\n}\n\nexport class DbId {\n    addr: string\n    constructor(sender: string, nonce: number) {\n        const binary_addr = fromHEX(sender)\n        const nonceBuf = new Uint64BE(nonce)\n        let tmp = new Uint8Array(DB_ID_LENGTH + 8)\n        tmp.set(nonceBuf.toArray(), 0)\n        tmp.set(binary_addr, 8)\n        this.addr = '0x' + sha3.sha3_256(tmp).slice(0, 40)\n    }\n\n    getHexAddr(): string {\n        return this.addr\n    }\n}\n","//\n// storage_provider.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// @ts-nocheck\nimport {\n    GrpcWebFetchTransport,\n    GrpcWebOptions,\n} from '@protobuf-ts/grpcweb-transport'\nimport { StorageNodeClient } from '../proto/db3_node.client'\nimport { WriteRequest, PayloadType } from '../proto/db3_mutation'\nimport {\n    OpenSessionRequest,\n    BroadcastRequest,\n    GetAccountRequest,\n    RunQueryRequest,\n    CloseSessionRequest,\n    ShowDatabaseRequest,\n    GetDocumentRequest,\n    ShowNetworkStatusRequest,\n} from '../proto/db3_node'\nimport { QuerySessionInfo, OpenSessionPayload } from '../proto/db3_session'\nimport { StructuredQuery } from '../proto/db3_database'\nimport { TxId } from '../crypto/id'\nimport { Wallet } from '../wallet/wallet'\nimport { fromHEX, toHEX } from '../crypto/crypto_utils'\n\n//\n// the db3 storage node provider implementation which provides low level methods to exchange with db3 network\n//\nexport class StorageProvider {\n    readonly client: StorageNodeClient\n    readonly wallet: Wallet\n    readonly useTypedFormat: boolean\n    /**\n     * new a storage provider with db3 storage grpc url\n     */\n    constructor(url: string, wallet: Wallet) {\n        const goptions: GrpcWebOptions = {\n            baseUrl: url,\n            // simple example for how to add auth headers to each request\n            // see `RpcInterceptor` for documentation\n            interceptors: [],\n            // you can set global request headers here\n            meta: {},\n        }\n        const transport = new GrpcWebFetchTransport(goptions)\n        this.client = new StorageNodeClient(transport)\n        this.wallet = wallet\n        if (wallet.getType() === 'MetaMask') {\n            this.useTypedFormat = true\n        } else {\n            this.useTypedFormat = false\n        }\n    }\n\n    /**\n     * send mutation to db3 network\n     */\n    async sendMutation(mutation: Uint8Array, payloadType: PayloadType) {\n        if (this.useTypedFormat) {\n            const writeRequest = await this.wrapTypedWriteRequest(\n                mutation,\n                payloadType\n            )\n            const broadcastRequest: BroadcastRequest = {\n                body: WriteRequest.toBinary(writeRequest),\n            }\n            const { response } = await this.client.broadcast(broadcastRequest)\n            return new TxId(response.hash)\n        } else {\n            const writeRequest = await this.wrapProtoWriteRequest(\n                mutation,\n                payloadType\n            )\n            const broadcastRequest: BroadcastRequest = {\n                body: WriteRequest.toBinary(writeRequest),\n            }\n            const { response } = await this.client.broadcast(broadcastRequest)\n            return new TxId(response.hash)\n        }\n    }\n\n    private async wrapProtoWriteRequest(\n        mutation: Uint8Array,\n        payloadType: PayloadType\n    ) {\n        const signature = await this.wallet.sign(mutation)\n        const writeRequest: WriteRequest = {\n            payload: mutation,\n            signature: signature,\n            payloadType: payloadType,\n        }\n        return writeRequest\n    }\n\n    private async wrapTypedWriteRequest(\n        mutation: Uint8Array,\n        payloadType: PayloadType\n    ) {\n        const hexMutation = toHEX(mutation)\n        const message = {\n            types: {\n                EIP712Domain: [],\n                Message: [\n                    { name: 'payload', type: 'bytes' },\n                    { name: 'payloadType', type: 'string' },\n                ],\n            },\n            domain: {},\n            primaryType: 'Message',\n            message: {\n                payload: '0x' + hexMutation,\n                payloadType: payloadType.toString(),\n            },\n        }\n        const signature = await this.wallet.sign(message)\n        //TODO avoid multi times stringfy\n        const msgParams = JSON.stringify(message)\n        const binaryMsg = new TextEncoder().encode(msgParams)\n        const writeRequest: WriteRequest = {\n            payload: binaryMsg,\n            signature: signature,\n            payloadType: PayloadType.TypedDataPayload,\n        }\n        return writeRequest\n    }\n\n    // @ts-nocheck\n    /**\n     * build a session with storage node for querying data\n     */\n    async openSession() {\n        let header\n        if (typeof window === 'undefined') {\n            header =\n                new Date().getTime() +\n                '' +\n                '_Header_' +\n                Math.floor(Math.random() * 1000)\n        } else {\n            header = window.crypto.getRandomValues(new Uint8Array(32))\n        }\n        const payload: OpenSessionPayload = {\n            header: header.toString(),\n            startTime: Math.floor(Date.now() / 1000),\n        }\n        if (this.useTypedFormat) {\n            const request = await this.wrapTypedSession(payload)\n            const { response } = await this.client.openQuerySession(request)\n            return response\n        } else {\n            const request = await this.wrapProtoSession(payload)\n            const { response } = await this.client.openQuerySession(request)\n            return response\n        }\n    }\n\n    private async wrapProtoSession(payload: OpenSessionPayload) {\n        const payloadBinary = OpenSessionPayload.toBinary(payload)\n        const signature = await this.wallet.sign(payloadBinary)\n        const sessionRequest: OpenSessionRequest = {\n            payload: payloadBinary,\n            signature: signature,\n            payloadType: PayloadType.QuerySessionPayload,\n        }\n        return sessionRequest\n    }\n\n    private async wrapTypedSession(payload: OpenSessionPayload) {\n        const payloadBinary = OpenSessionPayload.toBinary(payload)\n        const payloadHex = toHEX(payloadBinary)\n        const message = {\n            types: {\n                EIP712Domain: [],\n                Message: [\n                    { name: 'payload', type: 'bytes' },\n                    { name: 'payloadType', type: 'string' },\n                ],\n            },\n            domain: {},\n            primaryType: 'Message',\n            message: {\n                payload: '0x' + payloadHex,\n                payloadType: PayloadType.QuerySessionPayload.toString(),\n            },\n        }\n        const msgParams = JSON.stringify(message)\n        const binaryMsg = new TextEncoder().encode(msgParams)\n        const signature = await this.wallet.sign(message)\n        const sessionRequest: OpenSessionRequest = {\n            payload: binaryMsg,\n            signature: signature,\n            payloadType: PayloadType.TypedDataPayload,\n        }\n        return sessionRequest\n    }\n\n    private async wrapProtoCloseSession(\n        token: string,\n        sessionInfo: QuerySessionInfo\n    ) {\n        const payloadBinary = QuerySessionInfo.toBinary(payload)\n        const signature = await this.wallet.sign(payloadBinary)\n        const sessionRequest: CloseSessionRequest = {\n            payload: payloadBinary,\n            signature: signature,\n            payloadType: PayloadType.QuerySessionPayload,\n            sessionToke: token,\n        }\n        return sessionRequest\n    }\n\n    private async wrapTypedCloseSession(\n        token: string,\n        payload: QuerySessionInfo\n    ) {\n        const payloadBinary = QuerySessionInfo.toBinary(payload)\n        const payloadHex = toHEX(payloadBinary)\n        const message = {\n            types: {\n                EIP712Domain: [],\n                Message: [\n                    { name: 'payload', type: 'bytes' },\n                    { name: 'payloadType', type: 'string' },\n                ],\n            },\n            domain: {},\n            primaryType: 'Message',\n            message: {\n                payload: '0x' + payloadHex,\n                payloadType: PayloadType.QuerySessionPayload.toString(),\n            },\n        }\n        const msgParams = JSON.stringify(message)\n        const binaryMsg = new TextEncoder().encode(msgParams)\n        const signature = await this.wallet.sign(message)\n        const sessionRequest: CloseSessionRequest = {\n            payload: binaryMsg,\n            signature: signature,\n            payloadType: PayloadType.TypedDataPayload,\n            sessionToke: token,\n        }\n        return sessionRequest\n    }\n\n    /**\n     * close the session from storage node\n     *\n     */\n    async closeSession(token: string, sessionInfo: QuerySessionInfo) {\n        let closeRequest\n        if (this.useTypedFormat) {\n            closeRequest = await this.wrapTypedCloseSession(token, sessionInfo)\n        } else {\n            closeRequest = await this.wrapTypedCloseSession(token, sessionInfo)\n        }\n        const { response } = await this.client.closeQuerySession(closeRequest)\n        return response\n    }\n\n    /**\n     * get the account information with db3 address\n     *\n     */\n    async getAccount(addr: Uint8Array) {\n        const getAccountRequest: GetAccountRequest = {\n            addr,\n        }\n        const { response } = await this.client.getAccount(getAccountRequest)\n        return response\n    }\n\n    async getState() {\n        const request: ShowNetworkStatusRequest = {}\n        const { response } = await this.client.showNetworkStatus(request)\n        return response\n    }\n\n    async getDatabase(address: string, token: string) {\n        const request: ShowDatabaseRequest = {\n            sessionToken: token,\n            address,\n        }\n        const { response } = await this.client.showDatabase(request)\n        return response\n    }\n\n    getNonce(): number {\n        //TODO get nonce from remote with account address\n        return new Date().getTime()\n    }\n\n    async runQuery(token: string, addr: string, query: StructuredQuery) {\n        const request: RunQueryRequest = {\n            sessionToken: token,\n            address: addr,\n            query,\n        }\n        const { response } = await this.client.runQuery(request)\n        return response\n    }\n\n    async getDocument(token: string, id: string) {\n        const request: GetDocumentRequest = {\n            sessionToken: token,\n            id,\n        }\n        const { response } = await this.client.getDoument(request)\n        return response\n    }\n}\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","const BSON_MAJOR_VERSION = 5;\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\nconst BSON_INT64_MAX = Math.pow(2, 63) - 1;\nconst BSON_INT64_MIN = -Math.pow(2, 63);\nconst JS_INT_MAX = Math.pow(2, 53);\nconst JS_INT_MIN = -Math.pow(2, 53);\nconst BSON_DATA_NUMBER = 1;\nconst BSON_DATA_STRING = 2;\nconst BSON_DATA_OBJECT = 3;\nconst BSON_DATA_ARRAY = 4;\nconst BSON_DATA_BINARY = 5;\nconst BSON_DATA_UNDEFINED = 6;\nconst BSON_DATA_OID = 7;\nconst BSON_DATA_BOOLEAN = 8;\nconst BSON_DATA_DATE = 9;\nconst BSON_DATA_NULL = 10;\nconst BSON_DATA_REGEXP = 11;\nconst BSON_DATA_DBPOINTER = 12;\nconst BSON_DATA_CODE = 13;\nconst BSON_DATA_SYMBOL = 14;\nconst BSON_DATA_CODE_W_SCOPE = 15;\nconst BSON_DATA_INT = 16;\nconst BSON_DATA_TIMESTAMP = 17;\nconst BSON_DATA_LONG = 18;\nconst BSON_DATA_DECIMAL128 = 19;\nconst BSON_DATA_MIN_KEY = 0xff;\nconst BSON_DATA_MAX_KEY = 0x7f;\nconst BSON_BINARY_SUBTYPE_DEFAULT = 0;\nconst BSON_BINARY_SUBTYPE_UUID_NEW = 4;\nconst BSONType = Object.freeze({\n    double: 1,\n    string: 2,\n    object: 3,\n    array: 4,\n    binData: 5,\n    undefined: 6,\n    objectId: 7,\n    bool: 8,\n    date: 9,\n    null: 10,\n    regex: 11,\n    dbPointer: 12,\n    javascript: 13,\n    symbol: 14,\n    javascriptWithScope: 15,\n    int: 16,\n    timestamp: 17,\n    long: 18,\n    decimal: 19,\n    minKey: -1,\n    maxKey: 127\n});\n\nclass BSONError extends Error {\n    get bsonError() {\n        return true;\n    }\n    get name() {\n        return 'BSONError';\n    }\n    constructor(message) {\n        super(message);\n    }\n    static isBSONError(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            'bsonError' in value &&\n            value.bsonError === true &&\n            'name' in value &&\n            'message' in value &&\n            'stack' in value);\n    }\n}\nclass BSONVersionError extends BSONError {\n    get name() {\n        return 'BSONVersionError';\n    }\n    constructor() {\n        super(`Unsupported BSON version, bson types must be from bson ${BSON_MAJOR_VERSION}.0 or later`);\n    }\n}\nclass BSONRuntimeError extends BSONError {\n    get name() {\n        return 'BSONRuntimeError';\n    }\n    constructor(message) {\n        super(message);\n    }\n}\n\nfunction nodejsMathRandomBytes(byteLength) {\n    return nodeJsByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\n\nconst nodejsRandomBytes =  (() => {\n        return nodejsMathRandomBytes;\n})();\n\nconst nodeJsByteUtils = {\n    toLocalBufferType(potentialBuffer) {\n        if (Buffer.isBuffer(potentialBuffer)) {\n            return potentialBuffer;\n        }\n        if (ArrayBuffer.isView(potentialBuffer)) {\n            return Buffer.from(potentialBuffer.buffer, potentialBuffer.byteOffset, potentialBuffer.byteLength);\n        }\n        const stringTag = potentialBuffer?.[Symbol.toStringTag] ?? Object.prototype.toString.call(potentialBuffer);\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return Buffer.from(potentialBuffer);\n        }\n        throw new BSONError(`Cannot create Buffer from ${String(potentialBuffer)}`);\n    },\n    allocate(size) {\n        return Buffer.alloc(size);\n    },\n    equals(a, b) {\n        return nodeJsByteUtils.toLocalBufferType(a).equals(b);\n    },\n    fromNumberArray(array) {\n        return Buffer.from(array);\n    },\n    fromBase64(base64) {\n        return Buffer.from(base64, 'base64');\n    },\n    toBase64(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('base64');\n    },\n    fromISO88591(codePoints) {\n        return Buffer.from(codePoints, 'binary');\n    },\n    toISO88591(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('binary');\n    },\n    fromHex(hex) {\n        return Buffer.from(hex, 'hex');\n    },\n    toHex(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('hex');\n    },\n    fromUTF8(text) {\n        return Buffer.from(text, 'utf8');\n    },\n    toUTF8(buffer) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).toString('utf8');\n    },\n    utf8ByteLength(input) {\n        return Buffer.byteLength(input, 'utf8');\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        return nodeJsByteUtils.toLocalBufferType(buffer).write(source, byteOffset, undefined, 'utf8');\n    },\n    randomBytes: nodejsRandomBytes\n};\n\nfunction isReactNative() {\n    const { navigator } = globalThis;\n    return typeof navigator === 'object' && navigator.product === 'ReactNative';\n}\nfunction webMathRandomBytes(byteLength) {\n    if (byteLength < 0) {\n        throw new RangeError(`The argument 'byteLength' is invalid. Received ${byteLength}`);\n    }\n    return webByteUtils.fromNumberArray(Array.from({ length: byteLength }, () => Math.floor(Math.random() * 256)));\n}\nconst webRandomBytes = (() => {\n    const { crypto } = globalThis;\n    if (crypto != null && typeof crypto.getRandomValues === 'function') {\n        return (byteLength) => {\n            return crypto.getRandomValues(webByteUtils.allocate(byteLength));\n        };\n    }\n    else {\n        if (isReactNative()) {\n            const { console } = globalThis;\n            console?.warn?.('BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.');\n        }\n        return webMathRandomBytes;\n    }\n})();\nconst HEX_DIGIT = /(\\d|[a-f])/i;\nconst webByteUtils = {\n    toLocalBufferType(potentialUint8array) {\n        const stringTag = potentialUint8array?.[Symbol.toStringTag] ??\n            Object.prototype.toString.call(potentialUint8array);\n        if (stringTag === 'Uint8Array') {\n            return potentialUint8array;\n        }\n        if (ArrayBuffer.isView(potentialUint8array)) {\n            return new Uint8Array(potentialUint8array.buffer.slice(potentialUint8array.byteOffset, potentialUint8array.byteOffset + potentialUint8array.byteLength));\n        }\n        if (stringTag === 'ArrayBuffer' ||\n            stringTag === 'SharedArrayBuffer' ||\n            stringTag === '[object ArrayBuffer]' ||\n            stringTag === '[object SharedArrayBuffer]') {\n            return new Uint8Array(potentialUint8array);\n        }\n        throw new BSONError(`Cannot make a Uint8Array from ${String(potentialUint8array)}`);\n    },\n    allocate(size) {\n        if (typeof size !== 'number') {\n            throw new TypeError(`The \"size\" argument must be of type number. Received ${String(size)}`);\n        }\n        return new Uint8Array(size);\n    },\n    equals(a, b) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    },\n    fromNumberArray(array) {\n        return Uint8Array.from(array);\n    },\n    fromBase64(base64) {\n        return Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n    },\n    toBase64(uint8array) {\n        return btoa(webByteUtils.toISO88591(uint8array));\n    },\n    fromISO88591(codePoints) {\n        return Uint8Array.from(codePoints, c => c.charCodeAt(0) & 0xff);\n    },\n    toISO88591(uint8array) {\n        return Array.from(Uint16Array.from(uint8array), b => String.fromCharCode(b)).join('');\n    },\n    fromHex(hex) {\n        const evenLengthHex = hex.length % 2 === 0 ? hex : hex.slice(0, hex.length - 1);\n        const buffer = [];\n        for (let i = 0; i < evenLengthHex.length; i += 2) {\n            const firstDigit = evenLengthHex[i];\n            const secondDigit = evenLengthHex[i + 1];\n            if (!HEX_DIGIT.test(firstDigit)) {\n                break;\n            }\n            if (!HEX_DIGIT.test(secondDigit)) {\n                break;\n            }\n            const hexDigit = Number.parseInt(`${firstDigit}${secondDigit}`, 16);\n            buffer.push(hexDigit);\n        }\n        return Uint8Array.from(buffer);\n    },\n    toHex(uint8array) {\n        return Array.from(uint8array, byte => byte.toString(16).padStart(2, '0')).join('');\n    },\n    fromUTF8(text) {\n        return new TextEncoder().encode(text);\n    },\n    toUTF8(uint8array) {\n        return new TextDecoder('utf8', { fatal: false }).decode(uint8array);\n    },\n    utf8ByteLength(input) {\n        return webByteUtils.fromUTF8(input).byteLength;\n    },\n    encodeUTF8Into(buffer, source, byteOffset) {\n        const bytes = webByteUtils.fromUTF8(source);\n        buffer.set(bytes, byteOffset);\n        return bytes.byteLength;\n    },\n    randomBytes: webRandomBytes\n};\n\nconst hasGlobalBuffer = typeof Buffer === 'function' && Buffer.prototype?._isBuffer !== true;\nconst ByteUtils = hasGlobalBuffer ? nodeJsByteUtils : webByteUtils;\nclass BSONDataView extends DataView {\n    static fromUint8Array(input) {\n        return new DataView(input.buffer, input.byteOffset, input.byteLength);\n    }\n}\n\nconst VALIDATION_REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i;\nconst uuidValidateString = (str) => typeof str === 'string' && VALIDATION_REGEX.test(str);\nconst uuidHexStringToBuffer = (hexString) => {\n    if (!uuidValidateString(hexString)) {\n        throw new BSONError('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" or \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\".');\n    }\n    const sanitizedHexString = hexString.replace(/-/g, '');\n    return ByteUtils.fromHex(sanitizedHexString);\n};\nfunction bufferToUuidHexString(buffer, includeDashes = true) {\n    if (includeDashes) {\n        return [\n            ByteUtils.toHex(buffer.subarray(0, 4)),\n            ByteUtils.toHex(buffer.subarray(4, 6)),\n            ByteUtils.toHex(buffer.subarray(6, 8)),\n            ByteUtils.toHex(buffer.subarray(8, 10)),\n            ByteUtils.toHex(buffer.subarray(10, 16))\n        ].join('-');\n    }\n    return ByteUtils.toHex(buffer);\n}\n\nfunction isAnyArrayBuffer(value) {\n    return ['[object ArrayBuffer]', '[object SharedArrayBuffer]'].includes(Object.prototype.toString.call(value));\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\nfunction isMap(d) {\n    return Object.prototype.toString.call(d) === '[object Map]';\n}\nfunction isDate(d) {\n    return Object.prototype.toString.call(d) === '[object Date]';\n}\n\nclass BSONValue {\n    get [Symbol.for('@@mdb.bson.version')]() {\n        return BSON_MAJOR_VERSION;\n    }\n}\n\nclass Binary extends BSONValue {\n    get _bsontype() {\n        return 'Binary';\n    }\n    constructor(buffer, subType) {\n        super();\n        if (!(buffer == null) &&\n            !(typeof buffer === 'string') &&\n            !ArrayBuffer.isView(buffer) &&\n            !(buffer instanceof ArrayBuffer) &&\n            !Array.isArray(buffer)) {\n            throw new BSONError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n        }\n        this.sub_type = subType ?? Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer == null) {\n            this.buffer = ByteUtils.allocate(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            if (typeof buffer === 'string') {\n                this.buffer = ByteUtils.fromISO88591(buffer);\n            }\n            else if (Array.isArray(buffer)) {\n                this.buffer = ByteUtils.fromNumberArray(buffer);\n            }\n            else {\n                this.buffer = ByteUtils.toLocalBufferType(buffer);\n            }\n            this.position = this.buffer.byteLength;\n        }\n    }\n    put(byteValue) {\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new BSONError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new BSONError('only accepts single character Uint8Array or Array');\n        let decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new BSONError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.byteLength > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            const newSpace = ByteUtils.allocate(Binary.BUFFER_SIZE + this.buffer.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n            this.buffer[this.position++] = decodedByte;\n        }\n    }\n    write(sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        if (this.buffer.byteLength < offset + sequence.length) {\n            const newSpace = ByteUtils.allocate(this.buffer.byteLength + sequence.length);\n            newSpace.set(this.buffer, 0);\n            this.buffer = newSpace;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ByteUtils.toLocalBufferType(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            const bytes = ByteUtils.fromISO88591(sequence);\n            this.buffer.set(bytes, offset);\n            this.position =\n                offset + sequence.length > this.position ? offset + sequence.length : this.position;\n        }\n    }\n    read(position, length) {\n        length = length && length > 0 ? length : this.position;\n        return this.buffer.slice(position, position + length);\n    }\n    value(asRaw) {\n        asRaw = !!asRaw;\n        if (asRaw && this.buffer.length === this.position) {\n            return this.buffer;\n        }\n        if (asRaw) {\n            return this.buffer.slice(0, this.position);\n        }\n        return ByteUtils.toISO88591(this.buffer.subarray(0, this.position));\n    }\n    length() {\n        return this.position;\n    }\n    toJSON() {\n        return ByteUtils.toBase64(this.buffer);\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.buffer);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.buffer);\n        if (encoding === 'utf8' || encoding === 'utf-8')\n            return ByteUtils.toUTF8(this.buffer);\n        return ByteUtils.toUTF8(this.buffer);\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        const base64String = ByteUtils.toBase64(this.buffer);\n        const subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    }\n    toUUID() {\n        if (this.sub_type === Binary.SUBTYPE_UUID) {\n            return new UUID(this.buffer.slice(0, this.position));\n        }\n        throw new BSONError(`Binary sub_type \"${this.sub_type}\" is not supported for converting to UUID. Only \"${Binary.SUBTYPE_UUID}\" is currently supported.`);\n    }\n    static fromExtendedJSON(doc, options) {\n        options = options || {};\n        let data;\n        let type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = ByteUtils.fromBase64(doc.$binary);\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = ByteUtils.fromBase64(doc.$binary.base64);\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = uuidHexStringToBuffer(doc.$uuid);\n        }\n        if (!data) {\n            throw new BSONError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n        }\n        return type === BSON_BINARY_SUBTYPE_UUID_NEW ? new UUID(data) : new Binary(data, type);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Binary(Buffer.from(\"${ByteUtils.toHex(this.buffer)}\", \"hex\"), ${this.sub_type})`;\n    }\n}\nBinary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\nBinary.BUFFER_SIZE = 256;\nBinary.SUBTYPE_DEFAULT = 0;\nBinary.SUBTYPE_FUNCTION = 1;\nBinary.SUBTYPE_BYTE_ARRAY = 2;\nBinary.SUBTYPE_UUID_OLD = 3;\nBinary.SUBTYPE_UUID = 4;\nBinary.SUBTYPE_MD5 = 5;\nBinary.SUBTYPE_ENCRYPTED = 6;\nBinary.SUBTYPE_COLUMN = 7;\nBinary.SUBTYPE_USER_DEFINED = 128;\nconst UUID_BYTE_LENGTH = 16;\nclass UUID extends Binary {\n    constructor(input) {\n        let bytes;\n        let hexStr;\n        if (input == null) {\n            bytes = UUID.generate();\n        }\n        else if (input instanceof UUID) {\n            bytes = ByteUtils.toLocalBufferType(new Uint8Array(input.buffer));\n            hexStr = input.__id;\n        }\n        else if (ArrayBuffer.isView(input) && input.byteLength === UUID_BYTE_LENGTH) {\n            bytes = ByteUtils.toLocalBufferType(input);\n        }\n        else if (typeof input === 'string') {\n            bytes = uuidHexStringToBuffer(input);\n        }\n        else {\n            throw new BSONError('Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).');\n        }\n        super(bytes, BSON_BINARY_SUBTYPE_UUID_NEW);\n        this.__id = hexStr;\n    }\n    get id() {\n        return this.buffer;\n    }\n    set id(value) {\n        this.buffer = value;\n        if (UUID.cacheHexString) {\n            this.__id = bufferToUuidHexString(value);\n        }\n    }\n    toHexString(includeDashes = true) {\n        if (UUID.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const uuidHexString = bufferToUuidHexString(this.id, includeDashes);\n        if (UUID.cacheHexString) {\n            this.__id = uuidHexString;\n        }\n        return uuidHexString;\n    }\n    toString(encoding) {\n        if (encoding === 'hex')\n            return ByteUtils.toHex(this.id);\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    equals(otherId) {\n        if (!otherId) {\n            return false;\n        }\n        if (otherId instanceof UUID) {\n            return ByteUtils.equals(otherId.id, this.id);\n        }\n        try {\n            return ByteUtils.equals(new UUID(otherId).id, this.id);\n        }\n        catch {\n            return false;\n        }\n    }\n    toBinary() {\n        return new Binary(this.id, Binary.SUBTYPE_UUID);\n    }\n    static generate() {\n        const bytes = ByteUtils.randomBytes(UUID_BYTE_LENGTH);\n        bytes[6] = (bytes[6] & 0x0f) | 0x40;\n        bytes[8] = (bytes[8] & 0x3f) | 0x80;\n        return bytes;\n    }\n    static isValid(input) {\n        if (!input) {\n            return false;\n        }\n        if (input instanceof UUID) {\n            return true;\n        }\n        if (typeof input === 'string') {\n            return uuidValidateString(input);\n        }\n        if (isUint8Array(input)) {\n            if (input.byteLength !== UUID_BYTE_LENGTH) {\n                return false;\n            }\n            return (input[6] & 0xf0) === 0x40 && (input[8] & 0x80) === 0x80;\n        }\n        return false;\n    }\n    static createFromHexString(hexString) {\n        const buffer = uuidHexStringToBuffer(hexString);\n        return new UUID(buffer);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new UUID(\"${this.toHexString()}\")`;\n    }\n}\n\nclass Code extends BSONValue {\n    get _bsontype() {\n        return 'Code';\n    }\n    constructor(code, scope) {\n        super();\n        this.code = code.toString();\n        this.scope = scope ?? null;\n    }\n    toJSON() {\n        if (this.scope != null) {\n            return { code: this.code, scope: this.scope };\n        }\n        return { code: this.code };\n    }\n    toExtendedJSON() {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    }\n    static fromExtendedJSON(doc) {\n        return new Code(doc.$code, doc.$scope);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const codeJson = this.toJSON();\n        return `new Code(\"${String(codeJson.code)}\"${codeJson.scope != null ? `, ${JSON.stringify(codeJson.scope)}` : ''})`;\n    }\n}\n\nfunction isDBRefLike(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '$id' in value &&\n        value.$id != null &&\n        '$ref' in value &&\n        typeof value.$ref === 'string' &&\n        (!('$db' in value) || ('$db' in value && typeof value.$db === 'string')));\n}\nclass DBRef extends BSONValue {\n    get _bsontype() {\n        return 'DBRef';\n    }\n    constructor(collection, oid, db, fields) {\n        super();\n        const parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    get namespace() {\n        return this.collection;\n    }\n    set namespace(value) {\n        this.collection = value;\n    }\n    toJSON() {\n        const o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        let o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    }\n    static fromExtendedJSON(doc) {\n        const copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const oid = this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n        return `new DBRef(\"${this.namespace}\", new ObjectId(\"${String(oid)}\")${this.db ? `, \"${this.db}\"` : ''})`;\n    }\n}\n\nlet wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch {\n}\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\nconst INT_CACHE = {};\nconst UINT_CACHE = {};\nconst MAX_INT64_STRING_LENGTH = 20;\nconst DECIMAL_REG_EX = /^(\\+?0|(\\+|-)?[1-9][0-9]*)$/;\nclass Long extends BSONValue {\n    get _bsontype() {\n        return 'Long';\n    }\n    get __isLong__() {\n        return true;\n    }\n    constructor(low = 0, high, unsigned) {\n        super();\n        if (typeof low === 'bigint') {\n            Object.assign(this, Long.fromBigInt(low, !!high));\n        }\n        else if (typeof low === 'string') {\n            Object.assign(this, Long.fromString(low, !!high));\n        }\n        else {\n            this.low = low | 0;\n            this.high = high | 0;\n            this.unsigned = !!unsigned;\n        }\n    }\n    static fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n    static fromInt(value, unsigned) {\n        let obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n    static fromNumber(value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    }\n    static fromBigInt(value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    }\n    static fromString(str, unsigned, radix) {\n        if (str.length === 0)\n            throw new BSONError('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        let p;\n        if ((p = str.indexOf('-')) > 0)\n            throw new BSONError('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        let result = Long.ZERO;\n        for (let i = 0; i < str.length; i += 8) {\n            const size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                const power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n    static fromBytes(bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    static fromBytesLE(bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    }\n    static fromBytesBE(bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    }\n    static isLong(value) {\n        return (value != null &&\n            typeof value === 'object' &&\n            '__isLong__' in value &&\n            value.__isLong__ === true);\n    }\n    static fromValue(val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    add(addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = addend.high >>> 16;\n        const b32 = addend.high & 0xffff;\n        const b16 = addend.low >>> 16;\n        const b00 = addend.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    and(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    compare(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        const thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    }\n    comp(other) {\n        return this.compare(other);\n    }\n    divide(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw new BSONError('division by zero');\n        if (wasm) {\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                return this;\n            }\n            const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        let approx, rem, res;\n        if (!this.unsigned) {\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    const halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        rem = this;\n        while (rem.gte(divisor)) {\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            let approxRes = Long.fromNumber(approx);\n            let approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    }\n    div(divisor) {\n        return this.divide(divisor);\n    }\n    equals(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    eq(other) {\n        return this.equals(other);\n    }\n    getHighBits() {\n        return this.high;\n    }\n    getHighBitsUnsigned() {\n        return this.high >>> 0;\n    }\n    getLowBits() {\n        return this.low;\n    }\n    getLowBitsUnsigned() {\n        return this.low >>> 0;\n    }\n    getNumBitsAbs() {\n        if (this.isNegative()) {\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        const val = this.high !== 0 ? this.high : this.low;\n        let bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    greaterThan(other) {\n        return this.comp(other) > 0;\n    }\n    gt(other) {\n        return this.greaterThan(other);\n    }\n    greaterThanOrEqual(other) {\n        return this.comp(other) >= 0;\n    }\n    gte(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    ge(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    isEven() {\n        return (this.low & 1) === 0;\n    }\n    isNegative() {\n        return !this.unsigned && this.high < 0;\n    }\n    isOdd() {\n        return (this.low & 1) === 1;\n    }\n    isPositive() {\n        return this.unsigned || this.high >= 0;\n    }\n    isZero() {\n        return this.high === 0 && this.low === 0;\n    }\n    lessThan(other) {\n        return this.comp(other) < 0;\n    }\n    lt(other) {\n        return this.lessThan(other);\n    }\n    lessThanOrEqual(other) {\n        return this.comp(other) <= 0;\n    }\n    lte(other) {\n        return this.lessThanOrEqual(other);\n    }\n    modulo(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (wasm) {\n            const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    }\n    mod(divisor) {\n        return this.modulo(divisor);\n    }\n    rem(divisor) {\n        return this.modulo(divisor);\n    }\n    multiply(multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        if (wasm) {\n            const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = multiplier.high >>> 16;\n        const b32 = multiplier.high & 0xffff;\n        const b16 = multiplier.low >>> 16;\n        const b00 = multiplier.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    mul(multiplier) {\n        return this.multiply(multiplier);\n    }\n    negate() {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    }\n    neg() {\n        return this.negate();\n    }\n    not() {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    neq(other) {\n        return this.notEquals(other);\n    }\n    ne(other) {\n        return this.notEquals(other);\n    }\n    or(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    shiftLeft(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    }\n    shl(numBits) {\n        return this.shiftLeft(numBits);\n    }\n    shiftRight(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    shr(numBits) {\n        return this.shiftRight(numBits);\n    }\n    shiftRightUnsigned(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            const high = this.high;\n            if (numBits < 32) {\n                const low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    }\n    shr_u(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    shru(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    subtract(subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    }\n    sub(subtrahend) {\n        return this.subtract(subtrahend);\n    }\n    toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    toNumber() {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toBytes(le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    toBytesLE() {\n        const hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    }\n    toBytesBE() {\n        const hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    }\n    toSigned() {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    }\n    toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw new BSONError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            if (this.eq(Long.MIN_VALUE)) {\n                const radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        let rem = this;\n        let result = '';\n        while (true) {\n            const remDiv = rem.div(radixToPower);\n            const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            let digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    }\n    toUnsigned() {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    }\n    xor(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    eqz() {\n        return this.isZero();\n    }\n    le(other) {\n        return this.lessThanOrEqual(other);\n    }\n    toExtendedJSON(options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        const { useBigInt64 = false, relaxed = true } = { ...options };\n        if (doc.$numberLong.length > MAX_INT64_STRING_LENGTH) {\n            throw new BSONError('$numberLong string is too long');\n        }\n        if (!DECIMAL_REG_EX.test(doc.$numberLong)) {\n            throw new BSONError(`$numberLong string \"${doc.$numberLong}\" is in an invalid format`);\n        }\n        if (useBigInt64) {\n            const bigIntResult = BigInt(doc.$numberLong);\n            return BigInt.asIntN(64, bigIntResult);\n        }\n        const longResult = Long.fromString(doc.$numberLong);\n        if (relaxed) {\n            return longResult.toNumber();\n        }\n        return longResult;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Long(\"${this.toString()}\"${this.unsigned ? ', true' : ''})`;\n    }\n}\nLong.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\nLong.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\nLong.ZERO = Long.fromInt(0);\nLong.UZERO = Long.fromInt(0, true);\nLong.ONE = Long.fromInt(1);\nLong.UONE = Long.fromInt(1, true);\nLong.NEG_ONE = Long.fromInt(-1);\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\nconst NAN_BUFFER = ByteUtils.fromNumberArray([\n    0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_NEGATIVE_BUFFER = ByteUtils.fromNumberArray([\n    0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst INF_POSITIVE_BUFFER = ByteUtils.fromNumberArray([\n    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n].reverse());\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\nconst COMBINATION_MASK = 0x1f;\nconst EXPONENT_MASK = 0x3fff;\nconst COMBINATION_INFINITY = 30;\nconst COMBINATION_NAN = 31;\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\nfunction divideu128(value) {\n    const DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n    let _rem = Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (let i = 0; i <= 3; i++) {\n        _rem = _rem.shiftLeft(32);\n        _rem = _rem.add(new Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n    }\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0;\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        const ulleft = left.low >>> 0;\n        const ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new BSONError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\nclass Decimal128 extends BSONValue {\n    get _bsontype() {\n        return 'Decimal128';\n    }\n    constructor(bytes) {\n        super();\n        if (typeof bytes === 'string') {\n            this.bytes = Decimal128.fromString(bytes).bytes;\n        }\n        else if (isUint8Array(bytes)) {\n            if (bytes.byteLength !== 16) {\n                throw new BSONError('Decimal128 must take a Buffer of 16 bytes');\n            }\n            this.bytes = bytes;\n        }\n        else {\n            throw new BSONError('Decimal128 must take a Buffer or string');\n        }\n    }\n    static fromString(representation) {\n        let isNegative = false;\n        let sawRadix = false;\n        let foundNonZero = false;\n        let significantDigits = 0;\n        let nDigitsRead = 0;\n        let nDigits = 0;\n        let radixPosition = 0;\n        let firstNonZero = 0;\n        const digits = [0];\n        let nDigitsStored = 0;\n        let digitsInsert = 0;\n        let firstDigit = 0;\n        let lastDigit = 0;\n        let exponent = 0;\n        let i = 0;\n        let significandHigh = new Long(0, 0);\n        let significandLow = new Long(0, 0);\n        let biasedExponent = 0;\n        let index = 0;\n        if (representation.length >= 7000) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        const stringMatch = representation.match(PARSE_STRING_REGEXP);\n        const infMatch = representation.match(PARSE_INF_REGEXP);\n        const nanMatch = representation.match(PARSE_NAN_REGEXP);\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            const unsignedNumber = stringMatch[2];\n            const e = stringMatch[4];\n            const expSign = stringMatch[5];\n            const expNumber = stringMatch[6];\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        if (representation[index] === '+' || representation[index] === '-') {\n            isNegative = representation[index++] === '-';\n        }\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(NAN_BUFFER);\n            }\n        }\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < 34) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new BSONError('' + representation + ' not a valid Decimal128 string');\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            const match = representation.substr(++index).match(EXPONENT_REGEX);\n            if (!match || !match[2])\n                return new Decimal128(NAN_BUFFER);\n            exponent = parseInt(match[0], 10);\n            index = index + match[0].length;\n        }\n        if (representation[index])\n            return new Decimal128(NAN_BUFFER);\n        firstDigit = 0;\n        if (!nDigitsStored) {\n            firstDigit = 0;\n            lastDigit = 0;\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (digits[firstNonZero + significantDigits - 1] === 0) {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        while (exponent > EXPONENT_MAX) {\n            lastDigit = lastDigit + 1;\n            if (lastDigit - firstDigit > MAX_DIGITS) {\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            if (lastDigit === 0 && significantDigits < nDigitsStored) {\n                exponent = EXPONENT_MIN;\n                significantDigits = 0;\n                break;\n            }\n            if (nDigitsStored < nDigits) {\n                nDigits = nDigits - 1;\n            }\n            else {\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n        }\n        if (lastDigit - firstDigit + 1 < significantDigits) {\n            let endOfString = nDigitsRead;\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            if (isNegative) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            let roundBit = 0;\n            if (roundDigit >= 5) {\n                roundBit = 1;\n                if (roundDigit === 5) {\n                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                    for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                        if (parseInt(representation[i], 10)) {\n                            roundBit = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (roundBit) {\n                let dIdx = lastDigit;\n                for (; dIdx >= 0; dIdx--) {\n                    if (++digits[dIdx] > 9) {\n                        digits[dIdx] = 0;\n                        if (dIdx === 0) {\n                            if (exponent < EXPONENT_MAX) {\n                                exponent = exponent + 1;\n                                digits[dIdx] = 1;\n                            }\n                            else {\n                                return new Decimal128(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        significandHigh = Long.fromNumber(0);\n        significandLow = Long.fromNumber(0);\n        if (significantDigits === 0) {\n            significandHigh = Long.fromNumber(0);\n            significandLow = Long.fromNumber(0);\n        }\n        else if (lastDigit - firstDigit < 17) {\n            let dIdx = firstDigit;\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            significandHigh = new Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            let dIdx = firstDigit;\n            significandHigh = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(Long.fromNumber(10));\n                significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(Long.fromNumber(10));\n                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n            }\n        }\n        const significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(Long.fromNumber(1));\n        }\n        biasedExponent = exponent + EXPONENT_BIAS;\n        const dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n        if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))) {\n            dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        if (isNegative) {\n            dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n        }\n        const buffer = ByteUtils.allocate(16);\n        index = 0;\n        buffer[index++] = dec.low.low & 0xff;\n        buffer[index++] = (dec.low.low >> 8) & 0xff;\n        buffer[index++] = (dec.low.low >> 16) & 0xff;\n        buffer[index++] = (dec.low.low >> 24) & 0xff;\n        buffer[index++] = dec.low.high & 0xff;\n        buffer[index++] = (dec.low.high >> 8) & 0xff;\n        buffer[index++] = (dec.low.high >> 16) & 0xff;\n        buffer[index++] = (dec.low.high >> 24) & 0xff;\n        buffer[index++] = dec.high.low & 0xff;\n        buffer[index++] = (dec.high.low >> 8) & 0xff;\n        buffer[index++] = (dec.high.low >> 16) & 0xff;\n        buffer[index++] = (dec.high.low >> 24) & 0xff;\n        buffer[index++] = dec.high.high & 0xff;\n        buffer[index++] = (dec.high.high >> 8) & 0xff;\n        buffer[index++] = (dec.high.high >> 16) & 0xff;\n        buffer[index++] = (dec.high.high >> 24) & 0xff;\n        return new Decimal128(buffer);\n    }\n    toString() {\n        let biased_exponent;\n        let significand_digits = 0;\n        const significand = new Array(36);\n        for (let i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        let index = 0;\n        let is_zero = false;\n        let significand_msb;\n        let significand128 = { parts: [0, 0, 0, 0] };\n        let j, k;\n        const string = [];\n        index = 0;\n        const buffer = this.bytes;\n        const low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        const high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        index = 0;\n        const dec = {\n            low: new Long(low, midl),\n            high: new Long(midh, high)\n        };\n        if (dec.high.lessThan(Long.ZERO)) {\n            string.push('-');\n        }\n        const combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        const exponent = biased_exponent - EXPONENT_BIAS;\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                let least_digits = 0;\n                const result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    significand[k * 9 + j] = least_digits % 10;\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        const scientific_exponent = significand_digits - 1 + exponent;\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            if (significand_digits > 34) {\n                string.push(`${0}`);\n                if (exponent > 0)\n                    string.push(`E+${exponent}`);\n                else if (exponent < 0)\n                    string.push(`E${exponent}`);\n                return string.join('');\n            }\n            string.push(`${significand[index++]}`);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push(`+${scientific_exponent}`);\n            }\n            else {\n                string.push(`${scientific_exponent}`);\n            }\n        }\n        else {\n            if (exponent >= 0) {\n                for (let i = 0; i < significand_digits; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n            else {\n                let radix_position = significand_digits + exponent;\n                if (radix_position > 0) {\n                    for (let i = 0; i < radix_position; i++) {\n                        string.push(`${significand[index++]}`);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n        }\n        return string.join('');\n    }\n    toJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    toExtendedJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    static fromExtendedJSON(doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Decimal128(\"${this.toString()}\")`;\n    }\n}\n\nclass Double extends BSONValue {\n    get _bsontype() {\n        return 'Double';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toExtendedJSON(options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: '-0.0' };\n        }\n        return {\n            $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString()\n        };\n    }\n    static fromExtendedJSON(doc, options) {\n        const doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const eJSON = this.toExtendedJSON();\n        return `new Double(${eJSON.$numberDouble})`;\n    }\n}\n\nclass Int32 extends BSONValue {\n    get _bsontype() {\n        return 'Int32';\n    }\n    constructor(value) {\n        super();\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value | 0;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString(radix) {\n        return this.value.toString(radix);\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON(options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Int32(${this.valueOf()})`;\n    }\n}\n\nclass MaxKey extends BSONValue {\n    get _bsontype() {\n        return 'MaxKey';\n    }\n    toExtendedJSON() {\n        return { $maxKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MaxKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MaxKey()';\n    }\n}\n\nclass MinKey extends BSONValue {\n    get _bsontype() {\n        return 'MinKey';\n    }\n    toExtendedJSON() {\n        return { $minKey: 1 };\n    }\n    static fromExtendedJSON() {\n        return new MinKey();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'new MinKey()';\n    }\n}\n\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\nlet PROCESS_UNIQUE = null;\nconst kId = Symbol('id');\nclass ObjectId extends BSONValue {\n    get _bsontype() {\n        return 'ObjectId';\n    }\n    constructor(inputId) {\n        super();\n        let workingId;\n        if (typeof inputId === 'object' && inputId && 'id' in inputId) {\n            if (typeof inputId.id !== 'string' && !ArrayBuffer.isView(inputId.id)) {\n                throw new BSONError('Argument passed in must have an id that is of type string or Buffer');\n            }\n            if ('toHexString' in inputId && typeof inputId.toHexString === 'function') {\n                workingId = ByteUtils.fromHex(inputId.toHexString());\n            }\n            else {\n                workingId = inputId.id;\n            }\n        }\n        else {\n            workingId = inputId;\n        }\n        if (workingId == null || typeof workingId === 'number') {\n            this[kId] = ObjectId.generate(typeof workingId === 'number' ? workingId : undefined);\n        }\n        else if (ArrayBuffer.isView(workingId) && workingId.byteLength === 12) {\n            this[kId] = ByteUtils.toLocalBufferType(workingId);\n        }\n        else if (typeof workingId === 'string') {\n            if (workingId.length === 12) {\n                const bytes = ByteUtils.fromUTF8(workingId);\n                if (bytes.byteLength === 12) {\n                    this[kId] = bytes;\n                }\n                else {\n                    throw new BSONError('Argument passed in must be a string of 12 bytes');\n                }\n            }\n            else if (workingId.length === 24 && checkForHexRegExp.test(workingId)) {\n                this[kId] = ByteUtils.fromHex(workingId);\n            }\n            else {\n                throw new BSONError('Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer');\n            }\n        }\n        else {\n            throw new BSONError('Argument passed in does not match the accepted types');\n        }\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(this.id);\n        }\n    }\n    get id() {\n        return this[kId];\n    }\n    set id(value) {\n        this[kId] = value;\n        if (ObjectId.cacheHexString) {\n            this.__id = ByteUtils.toHex(value);\n        }\n    }\n    toHexString() {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const hexString = ByteUtils.toHex(this.id);\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    }\n    static getInc() {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    }\n    static generate(time) {\n        if ('number' !== typeof time) {\n            time = Math.floor(Date.now() / 1000);\n        }\n        const inc = ObjectId.getInc();\n        const buffer = ByteUtils.allocate(12);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        if (PROCESS_UNIQUE === null) {\n            PROCESS_UNIQUE = ByteUtils.randomBytes(5);\n        }\n        buffer[4] = PROCESS_UNIQUE[0];\n        buffer[5] = PROCESS_UNIQUE[1];\n        buffer[6] = PROCESS_UNIQUE[2];\n        buffer[7] = PROCESS_UNIQUE[3];\n        buffer[8] = PROCESS_UNIQUE[4];\n        buffer[11] = inc & 0xff;\n        buffer[10] = (inc >> 8) & 0xff;\n        buffer[9] = (inc >> 16) & 0xff;\n        return buffer;\n    }\n    toString(encoding) {\n        if (encoding === 'base64')\n            return ByteUtils.toBase64(this.id);\n        if (encoding === 'hex')\n            return this.toHexString();\n        return this.toHexString();\n    }\n    toJSON() {\n        return this.toHexString();\n    }\n    equals(otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (otherId instanceof ObjectId) {\n            return this[kId][11] === otherId[kId][11] && ByteUtils.equals(this[kId], otherId[kId]);\n        }\n        if (typeof otherId === 'string' &&\n            ObjectId.isValid(otherId) &&\n            otherId.length === 12 &&\n            isUint8Array(this.id)) {\n            return ByteUtils.equals(this.id, ByteUtils.fromISO88591(otherId));\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n            return ByteUtils.equals(ByteUtils.fromUTF8(otherId), this.id);\n        }\n        if (typeof otherId === 'object' &&\n            'toHexString' in otherId &&\n            typeof otherId.toHexString === 'function') {\n            const otherIdString = otherId.toHexString();\n            const thisIdString = this.toHexString().toLowerCase();\n            return typeof otherIdString === 'string' && otherIdString.toLowerCase() === thisIdString;\n        }\n        return false;\n    }\n    getTimestamp() {\n        const timestamp = new Date();\n        const time = BSONDataView.fromUint8Array(this.id).getUint32(0, false);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    }\n    static createPk() {\n        return new ObjectId();\n    }\n    static createFromTime(time) {\n        const buffer = ByteUtils.fromNumberArray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        BSONDataView.fromUint8Array(buffer).setUint32(0, time, false);\n        return new ObjectId(buffer);\n    }\n    static createFromHexString(hexString) {\n        if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n            throw new BSONError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n        }\n        return new ObjectId(ByteUtils.fromHex(hexString));\n    }\n    static isValid(id) {\n        if (id == null)\n            return false;\n        try {\n            new ObjectId(id);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    toExtendedJSON() {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    }\n    static fromExtendedJSON(doc) {\n        return new ObjectId(doc.$oid);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new ObjectId(\"${this.toHexString()}\")`;\n    }\n}\nObjectId.index = Math.floor(Math.random() * 0xffffff);\n\nfunction internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n        }\n        for (const key of Object.keys(object)) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\nfunction calculateElement(name, value, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    if (typeof value?.toBSON === 'function') {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + ByteUtils.utf8ByteLength(name) + 1 + 4 + ByteUtils.utf8ByteLength(value) + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= JS_INT_MIN &&\n                value <= JS_INT_MAX) {\n                if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value != null &&\n                typeof value._bsontype === 'string' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value == null || value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + 1;\n            }\n            else if (value._bsontype === 'ObjectId') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) ||\n                value instanceof ArrayBuffer ||\n                isAnyArrayBuffer(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value._bsontype === 'Long' ||\n                value._bsontype === 'Double' ||\n                value._bsontype === 'Timestamp') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (8 + 1);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                return (name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (16 + 1);\n            }\n            else if (value._bsontype === 'Code') {\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1 +\n                        internalCalculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        1 +\n                        4 +\n                        ByteUtils.utf8ByteLength(value.code.toString()) +\n                        1);\n                }\n            }\n            else if (value._bsontype === 'Binary') {\n                const binary = value;\n                if (binary.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                        (binary.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) + (binary.position + 1 + 4 + 1));\n                }\n            }\n            else if (value._bsontype === 'Symbol') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    ByteUtils.utf8ByteLength(value.value) +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value._bsontype === 'DBRef') {\n                const ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    internalCalculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.source) +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.pattern) +\n                    1 +\n                    ByteUtils.utf8ByteLength(value.options) +\n                    1);\n            }\n            else {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    internalCalculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            if (serializeFunctions) {\n                return ((name != null ? ByteUtils.utf8ByteLength(name) + 1 : 0) +\n                    1 +\n                    4 +\n                    ByteUtils.utf8ByteLength(value.toString()) +\n                    1);\n            }\n    }\n    return 0;\n}\n\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\nclass BSONRegExp extends BSONValue {\n    get _bsontype() {\n        return 'BSONRegExp';\n    }\n    constructor(pattern, options) {\n        super();\n        this.pattern = pattern;\n        this.options = alphabetize(options ?? '');\n        if (this.pattern.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);\n        }\n        if (this.options.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);\n        }\n        for (let i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new BSONError(`The regular expression option [${this.options[i]}] is not supported`);\n            }\n        }\n    }\n    static parseOptions(options) {\n        return options ? options.split('').sort().join('') : '';\n    }\n    toExtendedJSON(options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    }\n    static fromExtendedJSON(doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new BSONError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new BSONRegExp(${JSON.stringify(this.pattern)}, ${JSON.stringify(this.options)})`;\n    }\n}\n\nclass BSONSymbol extends BSONValue {\n    get _bsontype() {\n        return 'BSONSymbol';\n    }\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    valueOf() {\n        return this.value;\n    }\n    toString() {\n        return this.value;\n    }\n    inspect() {\n        return `new BSONSymbol(\"${this.value}\")`;\n    }\n    toJSON() {\n        return this.value;\n    }\n    toExtendedJSON() {\n        return { $symbol: this.value };\n    }\n    static fromExtendedJSON(doc) {\n        return new BSONSymbol(doc.$symbol);\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n}\n\nconst LongWithoutOverridesClass = Long;\nclass Timestamp extends LongWithoutOverridesClass {\n    get _bsontype() {\n        return 'Timestamp';\n    }\n    constructor(low) {\n        if (low == null) {\n            super(0, 0, true);\n        }\n        else if (typeof low === 'bigint') {\n            super(low, true);\n        }\n        else if (Long.isLong(low)) {\n            super(low.low, low.high, true);\n        }\n        else if (typeof low === 'object' && 't' in low && 'i' in low) {\n            if (typeof low.t !== 'number' && (typeof low.t !== 'object' || low.t._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t as a number');\n            }\n            if (typeof low.i !== 'number' && (typeof low.i !== 'object' || low.i._bsontype !== 'Int32')) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i as a number');\n            }\n            if (low.t < 0) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive t');\n            }\n            if (low.i < 0) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide a positive i');\n            }\n            if (low.t > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide t equal or less than uint32 max');\n            }\n            if (low.i > 4294967295) {\n                throw new BSONError('Timestamp constructed from { t, i } must provide i equal or less than uint32 max');\n            }\n            super(low.i.valueOf(), low.t.valueOf(), true);\n        }\n        else {\n            throw new BSONError('A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }');\n        }\n    }\n    toJSON() {\n        return {\n            $timestamp: this.toString()\n        };\n    }\n    static fromInt(value) {\n        return new Timestamp(Long.fromInt(value, true));\n    }\n    static fromNumber(value) {\n        return new Timestamp(Long.fromNumber(value, true));\n    }\n    static fromBits(lowBits, highBits) {\n        return new Timestamp({ i: lowBits, t: highBits });\n    }\n    static fromString(str, optRadix) {\n        return new Timestamp(Long.fromString(str, true, optRadix));\n    }\n    toExtendedJSON() {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    }\n    static fromExtendedJSON(doc) {\n        const i = Long.isLong(doc.$timestamp.i)\n            ? doc.$timestamp.i.getLowBitsUnsigned()\n            : doc.$timestamp.i;\n        const t = Long.isLong(doc.$timestamp.t)\n            ? doc.$timestamp.t.getLowBitsUnsigned()\n            : doc.$timestamp.t;\n        return new Timestamp({ t, i });\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `new Timestamp({ t: ${this.getHighBits()}, i: ${this.getLowBits()} })`;\n    }\n}\nTimestamp.MAX_VALUE = Long.MAX_UNSIGNED_VALUE;\n\nconst FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\nfunction validateUtf8(bytes, start, end) {\n    let continuation = 0;\n    for (let i = start; i < end; i += 1) {\n        const byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\n\nconst JS_INT_MAX_LONG = Long.fromNumber(JS_INT_MAX);\nconst JS_INT_MIN_LONG = Long.fromNumber(JS_INT_MIN);\nfunction internalDeserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0;\n    const size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new BSONError(`bson size must be >= 5, is ${size}`);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new BSONError(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new BSONError(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new BSONError(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    }\n    if (buffer[index + size - 1] !== 0) {\n        throw new BSONError(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    return deserializeObject(buffer, index, options, isArray);\n}\nconst allowedDBRefKeys = /^\\$ref$|^\\$id$|^\\$db$/;\nfunction deserializeObject(buffer, index, options, isArray = false) {\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    const raw = options['raw'] == null ? false : options['raw'];\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    const promoteBuffers = options.promoteBuffers ?? false;\n    const promoteLongs = options.promoteLongs ?? true;\n    const promoteValues = options.promoteValues ?? true;\n    const useBigInt64 = options.useBigInt64 ?? false;\n    if (useBigInt64 && !promoteValues) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    if (useBigInt64 && !promoteLongs) {\n        throw new BSONError('Must either request bigint or Long for int64 deserialization');\n    }\n    const validation = options.validation == null ? { utf8: true } : options.validation;\n    let globalUTFValidation = true;\n    let validationSetting;\n    const utf8KeysSet = new Set();\n    const utf8ValidatedKeys = validation.utf8;\n    if (typeof utf8ValidatedKeys === 'boolean') {\n        validationSetting = utf8ValidatedKeys;\n    }\n    else {\n        globalUTFValidation = false;\n        const utf8ValidationValues = Object.keys(utf8ValidatedKeys).map(function (key) {\n            return utf8ValidatedKeys[key];\n        });\n        if (utf8ValidationValues.length === 0) {\n            throw new BSONError('UTF-8 validation setting cannot be empty');\n        }\n        if (typeof utf8ValidationValues[0] !== 'boolean') {\n            throw new BSONError('Invalid UTF-8 validation option, must specify boolean values');\n        }\n        validationSetting = utf8ValidationValues[0];\n        if (!utf8ValidationValues.every(item => item === validationSetting)) {\n            throw new BSONError('Invalid UTF-8 validation option - keys must be all true or all false');\n        }\n    }\n    if (!globalUTFValidation) {\n        for (const key of Object.keys(utf8ValidatedKeys)) {\n            utf8KeysSet.add(key);\n        }\n    }\n    const startIndex = index;\n    if (buffer.length < 5)\n        throw new BSONError('corrupt bson message < 5 bytes long');\n    const size = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n    if (size < 5 || size > buffer.length)\n        throw new BSONError('corrupt bson message');\n    const object = isArray ? [] : {};\n    let arrayIndex = 0;\n    const done = false;\n    let isPossibleDBRef = isArray ? false : null;\n    const dataview = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    while (!done) {\n        const elementType = buffer[index++];\n        if (elementType === 0)\n            break;\n        let i = index;\n        while (buffer[i] !== 0x00 && i < buffer.length) {\n            i++;\n        }\n        if (i >= buffer.byteLength)\n            throw new BSONError('Bad BSON Document: illegal CString');\n        const name = isArray ? arrayIndex++ : ByteUtils.toUTF8(buffer.subarray(index, i));\n        let shouldValidateKey = true;\n        if (globalUTFValidation || utf8KeysSet.has(name)) {\n            shouldValidateKey = validationSetting;\n        }\n        else {\n            shouldValidateKey = !validationSetting;\n        }\n        if (isPossibleDBRef !== false && name[0] === '$') {\n            isPossibleDBRef = allowedDBRefKeys.test(name);\n        }\n        let value;\n        index = i + 1;\n        if (elementType === BSON_DATA_STRING) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            value = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_OID) {\n            const oid = ByteUtils.allocate(12);\n            oid.set(buffer.subarray(index, index + 12));\n            value = new ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === BSON_DATA_INT && promoteValues === false) {\n            value = new Int32(buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24));\n        }\n        else if (elementType === BSON_DATA_INT) {\n            value =\n                buffer[index++] |\n                    (buffer[index++] << 8) |\n                    (buffer[index++] << 16) |\n                    (buffer[index++] << 24);\n        }\n        else if (elementType === BSON_DATA_NUMBER && promoteValues === false) {\n            value = new Double(dataview.getFloat64(index, true));\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_NUMBER) {\n            value = dataview.getFloat64(index, true);\n            index = index + 8;\n        }\n        else if (elementType === BSON_DATA_DATE) {\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            value = new Date(new Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === BSON_DATA_BOOLEAN) {\n            if (buffer[index] !== 0 && buffer[index] !== 1)\n                throw new BSONError('illegal boolean type value');\n            value = buffer[index++] === 1;\n        }\n        else if (elementType === BSON_DATA_OBJECT) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer.length - index)\n                throw new BSONError('bad embedded document length in bson');\n            if (raw) {\n                value = buffer.slice(index, index + objectSize);\n            }\n            else {\n                let objectOptions = options;\n                if (!globalUTFValidation) {\n                    objectOptions = { ...options, validation: { utf8: shouldValidateKey } };\n                }\n                value = deserializeObject(buffer, _index, objectOptions, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === BSON_DATA_ARRAY) {\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            let arrayOptions = options;\n            const stopIndex = index + objectSize;\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = { ...options, raw: true };\n            }\n            if (!globalUTFValidation) {\n                arrayOptions = { ...arrayOptions, validation: { utf8: shouldValidateKey } };\n            }\n            value = deserializeObject(buffer, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer[index - 1] !== 0)\n                throw new BSONError('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new BSONError('corrupted array bson');\n        }\n        else if (elementType === BSON_DATA_UNDEFINED) {\n            value = undefined;\n        }\n        else if (elementType === BSON_DATA_NULL) {\n            value = null;\n        }\n        else if (elementType === BSON_DATA_LONG) {\n            const dataview = BSONDataView.fromUint8Array(buffer.subarray(index, index + 8));\n            const lowBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const highBits = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const long = new Long(lowBits, highBits);\n            if (useBigInt64) {\n                value = dataview.getBigInt64(0, true);\n            }\n            else if (promoteLongs && promoteValues === true) {\n                value =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                value = long;\n            }\n        }\n        else if (elementType === BSON_DATA_DECIMAL128) {\n            const bytes = ByteUtils.allocate(16);\n            bytes.set(buffer.subarray(index, index + 16), 0);\n            index = index + 16;\n            value = new Decimal128(bytes);\n        }\n        else if (elementType === BSON_DATA_BINARY) {\n            let binarySize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            const totalBinarySize = binarySize;\n            const subType = buffer[index++];\n            if (binarySize < 0)\n                throw new BSONError('Negative binary type element size found');\n            if (binarySize > buffer.byteLength)\n                throw new BSONError('Binary type size larger than document size');\n            if (buffer['slice'] != null) {\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = ByteUtils.toLocalBufferType(buffer.slice(index, index + binarySize));\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                    if (subType === BSON_BINARY_SUBTYPE_UUID_NEW) {\n                        value = value.toUUID();\n                    }\n                }\n            }\n            else {\n                const _buffer = ByteUtils.allocate(binarySize);\n                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer[index++] |\n                            (buffer[index++] << 8) |\n                            (buffer[index++] << 16) |\n                            (buffer[index++] << 24);\n                    if (binarySize < 0)\n                        throw new BSONError('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new BSONError('Binary type with subtype 0x02 contains too short binary size');\n                }\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    value = _buffer;\n                }\n                else if (subType === BSON_BINARY_SUBTYPE_UUID_NEW) {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType).toUUID();\n                }\n                else {\n                    value = new Binary(buffer.slice(index, index + binarySize), subType);\n                }\n            }\n            index = index + binarySize;\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === false) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            const optionsArray = new Array(regExpOptions.length);\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            value = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === BSON_DATA_REGEXP && bsonRegExp === true) {\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const source = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            i = index;\n            while (buffer[i] !== 0x00 && i < buffer.length) {\n                i++;\n            }\n            if (i >= buffer.length)\n                throw new BSONError('Bad BSON Document: illegal CString');\n            const regExpOptions = ByteUtils.toUTF8(buffer.subarray(index, i));\n            index = i + 1;\n            value = new BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === BSON_DATA_SYMBOL) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const symbol = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = promoteValues ? symbol : new BSONSymbol(symbol);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_TIMESTAMP) {\n            const i = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            const t = buffer[index++] +\n                buffer[index++] * (1 << 8) +\n                buffer[index++] * (1 << 16) +\n                buffer[index++] * (1 << 24);\n            value = new Timestamp({ i, t });\n        }\n        else if (elementType === BSON_DATA_MIN_KEY) {\n            value = new MinKey();\n        }\n        else if (elementType === BSON_DATA_MAX_KEY) {\n            value = new MaxKey();\n        }\n        else if (elementType === BSON_DATA_CODE) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            value = new Code(functionString);\n            index = index + stringSize;\n        }\n        else if (elementType === BSON_DATA_CODE_W_SCOPE) {\n            const totalSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new BSONError('code_w_scope total size shorter minimum expected length');\n            }\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0) {\n                throw new BSONError('bad string length in bson');\n            }\n            const functionString = getValidatedString(buffer, index, index + stringSize - 1, shouldValidateKey);\n            index = index + stringSize;\n            const _index = index;\n            const objectSize = buffer[index] |\n                (buffer[index + 1] << 8) |\n                (buffer[index + 2] << 16) |\n                (buffer[index + 3] << 24);\n            const scopeObject = deserializeObject(buffer, _index, options, false);\n            index = index + objectSize;\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too short, truncating scope');\n            }\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new BSONError('code_w_scope total size is too long, clips outer document');\n            }\n            value = new Code(functionString, scopeObject);\n        }\n        else if (elementType === BSON_DATA_DBPOINTER) {\n            const stringSize = buffer[index++] |\n                (buffer[index++] << 8) |\n                (buffer[index++] << 16) |\n                (buffer[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer.length - index ||\n                buffer[index + stringSize - 1] !== 0)\n                throw new BSONError('bad string length in bson');\n            if (validation != null && validation.utf8) {\n                if (!validateUtf8(buffer, index, index + stringSize - 1)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n            }\n            const namespace = ByteUtils.toUTF8(buffer.subarray(index, index + stringSize - 1));\n            index = index + stringSize;\n            const oidBuffer = ByteUtils.allocate(12);\n            oidBuffer.set(buffer.subarray(index, index + 12), 0);\n            const oid = new ObjectId(oidBuffer);\n            index = index + 12;\n            value = new DBRef(namespace, oid);\n        }\n        else {\n            throw new BSONError(`Detected unknown BSON type ${elementType.toString(16)} for fieldname \"${name}\"`);\n        }\n        if (name === '__proto__') {\n            Object.defineProperty(object, name, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n        else {\n            object[name] = value;\n        }\n    }\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new BSONError('corrupt array bson');\n        throw new BSONError('corrupt object bson');\n    }\n    if (!isPossibleDBRef)\n        return object;\n    if (isDBRefLike(object)) {\n        const copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\nfunction getValidatedString(buffer, start, end, shouldValidateUtf8) {\n    const value = ByteUtils.toUTF8(buffer.subarray(start, end));\n    if (shouldValidateUtf8) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 0xfffd) {\n                if (!validateUtf8(buffer, start, end)) {\n                    throw new BSONError('Invalid UTF-8 string in BSON document');\n                }\n                break;\n            }\n        }\n    }\n    return value;\n}\n\nconst regexp = /\\x00/;\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\nfunction serializeString(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_STRING;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value, index + 4);\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    index = index + 4 + size;\n    buffer[index++] = 0;\n    return index;\n}\nconst NUMBER_SPACE = new DataView(new ArrayBuffer(8), 0, 8);\nconst FOUR_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 4);\nconst EIGHT_BYTE_VIEW_ON_NUMBER = new Uint8Array(NUMBER_SPACE.buffer, 0, 8);\nfunction serializeNumber(buffer, key, value, index) {\n    const isNegativeZero = Object.is(value, -0);\n    const type = !isNegativeZero &&\n        Number.isSafeInteger(value) &&\n        value <= BSON_INT32_MAX &&\n        value >= BSON_INT32_MIN\n        ? BSON_DATA_INT\n        : BSON_DATA_NUMBER;\n    if (type === BSON_DATA_INT) {\n        NUMBER_SPACE.setInt32(0, value, true);\n    }\n    else {\n        NUMBER_SPACE.setFloat64(0, value, true);\n    }\n    const bytes = type === BSON_DATA_INT ? FOUR_BYTE_VIEW_ON_NUMBER : EIGHT_BYTE_VIEW_ON_NUMBER;\n    buffer[index++] = type;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0x00;\n    buffer.set(bytes, index);\n    index += bytes.byteLength;\n    return index;\n}\nfunction serializeBigInt(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_LONG;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index += numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setBigInt64(0, value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index += EIGHT_BYTE_VIEW_ON_NUMBER.byteLength;\n    return index;\n}\nfunction serializeNull(buffer, key, _, index) {\n    buffer[index++] = BSON_DATA_NULL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BOOLEAN;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DATE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const dateInMilis = Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw new BSONError('value ' + value.source + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.source, index);\n    buffer[index++] = 0x00;\n    if (value.ignoreCase)\n        buffer[index++] = 0x69;\n    if (value.global)\n        buffer[index++] = 0x73;\n    if (value.multiline)\n        buffer[index++] = 0x6d;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_REGEXP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.pattern.match(regexp) != null) {\n        throw new BSONError('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    index = index + ByteUtils.encodeUTF8Into(buffer, value.pattern, index);\n    buffer[index++] = 0x00;\n    const sortedOptions = value.options.split('').sort().join('');\n    index = index + ByteUtils.encodeUTF8Into(buffer, sortedOptions, index);\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index) {\n    if (value === null) {\n        buffer[index++] = BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = BSON_DATA_MAX_KEY;\n    }\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_OID;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (isUint8Array(value.id)) {\n        buffer.set(value.id.subarray(0, 12), index);\n    }\n    else {\n        throw new BSONError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = value.length;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = BSON_BINARY_SUBTYPE_DEFAULT;\n    buffer.set(value, index);\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path.has(value)) {\n        throw new BSONError('Cannot convert circular structure to BSON');\n    }\n    path.add(value);\n    buffer[index++] = Array.isArray(value) ? BSON_DATA_ARRAY : BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    path.delete(value);\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_DECIMAL128;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer.set(value.bytes.subarray(0, 16), index);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index) {\n    buffer[index++] =\n        value._bsontype === 'Long' ? BSON_DATA_LONG : BSON_DATA_TIMESTAMP;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits();\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index) {\n    value = value.valueOf();\n    buffer[index++] = BSON_DATA_INT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_NUMBER;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    NUMBER_SPACE.setFloat64(0, value.value, true);\n    buffer.set(EIGHT_BYTE_VIEW_ON_NUMBER, index);\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_CODE;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const functionString = value.toString();\n    const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, path) {\n    if (value.scope && typeof value.scope === 'object') {\n        buffer[index++] = BSON_DATA_CODE_W_SCOPE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        let startIndex = index;\n        const functionString = value.code;\n        index = index + 4;\n        const codeSize = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        buffer[index + 4 + codeSize - 1] = 0;\n        index = index + codeSize + 4;\n        const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n        index = endIndex - 1;\n        const totalSize = endIndex - startIndex;\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = BSON_DATA_CODE;\n        const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        const functionString = value.code.toString();\n        const size = ByteUtils.encodeUTF8Into(buffer, functionString, index + 4) + 1;\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        index = index + 4 + size - 1;\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_BINARY;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const data = value.buffer;\n    let size = value.position;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    buffer[index++] = value.sub_type;\n    if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    buffer.set(data, index);\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index) {\n    buffer[index++] = BSON_DATA_SYMBOL;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const size = ByteUtils.encodeUTF8Into(buffer, value.value, index + 4) + 1;\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    index = index + 4 + size - 1;\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path) {\n    buffer[index++] = BSON_DATA_OBJECT;\n    const numberOfWrittenBytes = ByteUtils.encodeUTF8Into(buffer, key, index);\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions, true, path);\n    const size = endIndex - startIndex;\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    return endIndex;\n}\nfunction serializeInto(buffer, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path) {\n    if (path == null) {\n        if (object == null) {\n            buffer[0] = 0x05;\n            buffer[1] = 0x00;\n            buffer[2] = 0x00;\n            buffer[3] = 0x00;\n            buffer[4] = 0x00;\n            return 5;\n        }\n        if (Array.isArray(object)) {\n            throw new BSONError('serialize does not support an array as the root input');\n        }\n        if (typeof object !== 'object') {\n            throw new BSONError('serialize does not support non-object as the root input');\n        }\n        else if ('_bsontype' in object && typeof object._bsontype === 'string') {\n            throw new BSONError(`BSON types cannot be serialized as a document`);\n        }\n        else if (isDate(object) ||\n            isRegExp(object) ||\n            isUint8Array(object) ||\n            isAnyArrayBuffer(object)) {\n            throw new BSONError(`date, regexp, typedarray, and arraybuffer cannot be BSON documents`);\n        }\n        path = new Set();\n    }\n    path.add(object);\n    let index = startingIndex + 4;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            const key = `${i}`;\n            let value = object[i];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (typeof value === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (typeof value === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else if (object instanceof Map || isMap(object)) {\n        const iterator = object.entries();\n        let done = false;\n        while (!done) {\n            const entry = iterator.next();\n            done = !!entry.done;\n            if (done)\n                continue;\n            const key = entry.value[0];\n            let value = entry.value[1];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    else {\n        if (typeof object?.toBSON === 'function') {\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object') {\n                throw new BSONError('toBSON function did not return an object');\n            }\n        }\n        for (const key of Object.keys(object)) {\n            let value = object[key];\n            if (typeof value?.toBSON === 'function') {\n                value = value.toBSON();\n            }\n            const type = typeof value;\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    throw new BSONError('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw new BSONError('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw new BSONError('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                index = serializeBigInt(buffer, key, value, index);\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'object' &&\n                value[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n                throw new BSONVersionError();\n            }\n            else if (value._bsontype === 'ObjectId') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (type === 'object' && value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Long' || value._bsontype === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, path);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'BSONSymbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, path);\n            }\n            else if (value._bsontype === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value._bsontype === 'MinKey' || value._bsontype === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value._bsontype !== 'undefined') {\n                throw new BSONError(`Unrecognized or invalid _bsontype: ${String(value._bsontype)}`);\n            }\n        }\n    }\n    path.delete(object);\n    buffer[index++] = 0x00;\n    const size = index - startingIndex;\n    buffer[startingIndex++] = size & 0xff;\n    buffer[startingIndex++] = (size >> 8) & 0xff;\n    buffer[startingIndex++] = (size >> 16) & 0xff;\n    buffer[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\n\nfunction isBSONType(value) {\n    return (value != null &&\n        typeof value === 'object' &&\n        '_bsontype' in value &&\n        typeof value._bsontype === 'string');\n}\nconst keysToCodecs = {\n    $oid: ObjectId,\n    $binary: Binary,\n    $uuid: Binary,\n    $symbol: BSONSymbol,\n    $numberInt: Int32,\n    $numberDecimal: Decimal128,\n    $numberDouble: Double,\n    $numberLong: Long,\n    $minKey: MinKey,\n    $maxKey: MaxKey,\n    $regex: BSONRegExp,\n    $regularExpression: BSONRegExp,\n    $timestamp: Timestamp\n};\nfunction deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n        const in32BitRange = value <= BSON_INT32_MAX && value >= BSON_INT32_MIN;\n        const in64BitRange = value <= BSON_INT64_MAX && value >= BSON_INT64_MIN;\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (in32BitRange) {\n                return new Int32(value);\n            }\n            if (in64BitRange) {\n                if (options.useBigInt64) {\n                    return BigInt(value);\n                }\n                return Long.fromNumber(value);\n            }\n        }\n        return new Double(value);\n    }\n    if (value == null || typeof value !== 'object')\n        return value;\n    if (value.$undefined)\n        return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n    for (let i = 0; i < keys.length; i++) {\n        const c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        const d = value.$date;\n        const date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n            else if (typeof d === 'bigint')\n                date.setTime(Number(d));\n            else\n                throw new BSONRuntimeError(`Unrecognized type for EJSON date: ${typeof d}`);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        const copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return Code.fromExtendedJSON(value);\n    }\n    if (isDBRefLike(value) || value.$dbPointer) {\n        const v = value.$ref ? value : value.$dbPointer;\n        if (v instanceof DBRef)\n            return v;\n        const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n        let valid = true;\n        dollarKeys.forEach(k => {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid = false;\n        });\n        if (valid)\n            return DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\nfunction serializeArray(array, options) {\n    return array.map((v, index) => {\n        options.seenObjects.push({ propertyName: `index ${index}`, obj: null });\n        try {\n            return serializeValue(v, options);\n        }\n        finally {\n            options.seenObjects.pop();\n        }\n    });\n}\nfunction getISOString(date) {\n    const isoStr = date.toISOString();\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\nfunction serializeValue(value, options) {\n    if ((typeof value === 'object' || typeof value === 'function') && value !== null) {\n        const index = options.seenObjects.findIndex(entry => entry.obj === value);\n        if (index !== -1) {\n            const props = options.seenObjects.map(entry => entry.propertyName);\n            const leadingPart = props\n                .slice(0, index)\n                .map(prop => `${prop} -> `)\n                .join('');\n            const alreadySeen = props[index];\n            const circularPart = ' -> ' +\n                props\n                    .slice(index + 1, props.length - 1)\n                    .map(prop => `${prop} -> `)\n                    .join('');\n            const current = props[props.length - 1];\n            const leadingSpace = ' '.repeat(leadingPart.length + alreadySeen.length / 2);\n            const dashes = '-'.repeat(circularPart.length + (alreadySeen.length + current.length) / 2 - 1);\n            throw new BSONError('Converting circular structure to EJSON:\\n' +\n                `    ${leadingPart}${alreadySeen}${circularPart}${current}\\n` +\n                `    ${leadingSpace}\\\\${dashes}/`);\n        }\n        options.seenObjects[options.seenObjects.length - 1].obj = value;\n    }\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date || isDate(value)) {\n        const dateNum = value.getTime(), inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && (!options.relaxed || !isFinite(value))) {\n        if (Number.isInteger(value) && !Object.is(value, -0)) {\n            if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX) {\n                return { $numberInt: value.toString() };\n            }\n            if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX) {\n                return { $numberLong: value.toString() };\n            }\n        }\n        return { $numberDouble: Object.is(value, -0) ? '-0.0' : value.toString() };\n    }\n    if (typeof value === 'bigint') {\n        if (!options.relaxed) {\n            return { $numberLong: BigInt.asIntN(64, value).toString() };\n        }\n        return Number(BigInt.asIntN(64, value));\n    }\n    if (value instanceof RegExp || isRegExp(value)) {\n        let flags = value.flags;\n        if (flags === undefined) {\n            const match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        const rx = new BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nconst BSON_TYPE_MAPPINGS = {\n    Binary: (o) => new Binary(o.value(), o.sub_type),\n    Code: (o) => new Code(o.code, o.scope),\n    DBRef: (o) => new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: (o) => new Decimal128(o.bytes),\n    Double: (o) => new Double(o.value),\n    Int32: (o) => new Int32(o.value),\n    Long: (o) => Long.fromBits(o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new MaxKey(),\n    MinKey: () => new MinKey(),\n    ObjectId: (o) => new ObjectId(o),\n    BSONRegExp: (o) => new BSONRegExp(o.pattern, o.options),\n    BSONSymbol: (o) => new BSONSymbol(o.value),\n    Timestamp: (o) => Timestamp.fromBits(o.low, o.high)\n};\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new BSONError('not an object instance');\n    const bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        const _doc = {};\n        for (const name of Object.keys(doc)) {\n            options.seenObjects.push({ propertyName: name, obj: null });\n            try {\n                const value = serializeValue(doc[name], options);\n                if (name === '__proto__') {\n                    Object.defineProperty(_doc, name, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                }\n                else {\n                    _doc[name] = value;\n                }\n            }\n            finally {\n                options.seenObjects.pop();\n            }\n        }\n        return _doc;\n    }\n    else if (doc != null &&\n        typeof doc === 'object' &&\n        typeof doc._bsontype === 'string' &&\n        doc[Symbol.for('@@mdb.bson.version')] !== BSON_MAJOR_VERSION) {\n        throw new BSONVersionError();\n    }\n    else if (isBSONType(doc)) {\n        let outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new BSONError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new DBRef(serializeValue(outDoc.collection, options), serializeValue(outDoc.oid, options), serializeValue(outDoc.db, options), serializeValue(outDoc.fields, options));\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new BSONError('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\nfunction parse(text, options) {\n    const ejsonOptions = {\n        useBigInt64: options?.useBigInt64 ?? false,\n        relaxed: options?.relaxed ?? true,\n        legacy: options?.legacy ?? false\n    };\n    return JSON.parse(text, (key, value) => {\n        if (key.indexOf('\\x00') !== -1) {\n            throw new BSONError(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(key)}`);\n        }\n        return deserializeValue(value, ejsonOptions);\n    });\n}\nfunction stringify(value, replacer, space, options) {\n    if (space != null && typeof space === 'object') {\n        options = space;\n        space = 0;\n    }\n    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n        options = replacer;\n        replacer = undefined;\n        space = 0;\n    }\n    const serializeOptions = Object.assign({ relaxed: true, legacy: false }, options, {\n        seenObjects: [{ propertyName: '(root)', obj: null }]\n    });\n    const doc = serializeValue(value, serializeOptions);\n    return JSON.stringify(doc, replacer, space);\n}\nfunction EJSONserialize(value, options) {\n    options = options || {};\n    return JSON.parse(stringify(value, options));\n}\nfunction EJSONdeserialize(ejson, options) {\n    options = options || {};\n    return parse(JSON.stringify(ejson), options);\n}\nconst EJSON = Object.create(null);\nEJSON.parse = parse;\nEJSON.stringify = stringify;\nEJSON.serialize = EJSONserialize;\nEJSON.deserialize = EJSONdeserialize;\nObject.freeze(EJSON);\n\nconst MAXSIZE = 1024 * 1024 * 17;\nlet buffer = ByteUtils.allocate(MAXSIZE);\nfunction setInternalBufferSize(size) {\n    if (buffer.length < size) {\n        buffer = ByteUtils.allocate(size);\n    }\n}\nfunction serialize(object, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    if (buffer.length < minInternalBufferSize) {\n        buffer = ByteUtils.allocate(minInternalBufferSize);\n    }\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    const finishedBuffer = ByteUtils.allocate(serializationIndex);\n    finishedBuffer.set(buffer.subarray(0, serializationIndex), 0);\n    return finishedBuffer;\n}\nfunction serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0;\n    const serializationIndex = serializeInto(buffer, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, null);\n    finalBuffer.set(buffer.subarray(0, serializationIndex), startIndex);\n    return startIndex + serializationIndex - 1;\n}\nfunction deserialize(buffer, options = {}) {\n    return internalDeserialize(ByteUtils.toLocalBufferType(buffer), options);\n}\nfunction calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return internalCalculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    const bufferData = ByteUtils.toLocalBufferType(data);\n    let index = startIndex;\n    for (let i = 0; i < numberOfDocuments; i++) {\n        const size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        internalOptions.index = index;\n        documents[docStartIndex + i] = internalDeserialize(bufferData, internalOptions);\n        index = index + size;\n    }\n    return index;\n}\n\nvar bson = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Code: Code,\n    BSONSymbol: BSONSymbol,\n    DBRef: DBRef,\n    Binary: Binary,\n    ObjectId: ObjectId,\n    UUID: UUID,\n    Long: Long,\n    Timestamp: Timestamp,\n    Double: Double,\n    Int32: Int32,\n    MinKey: MinKey,\n    MaxKey: MaxKey,\n    BSONRegExp: BSONRegExp,\n    Decimal128: Decimal128,\n    setInternalBufferSize: setInternalBufferSize,\n    serialize: serialize,\n    serializeWithBufferAndIndex: serializeWithBufferAndIndex,\n    deserialize: deserialize,\n    calculateObjectSize: calculateObjectSize,\n    deserializeStream: deserializeStream,\n    BSONValue: BSONValue,\n    BSONError: BSONError,\n    BSONVersionError: BSONVersionError,\n    BSONRuntimeError: BSONRuntimeError,\n    BSONType: BSONType,\n    EJSON: EJSON\n});\n\nexport { bson as BSON, BSONError, BSONRegExp, BSONRuntimeError, BSONSymbol, BSONType, BSONValue, BSONVersionError, Binary, Code, DBRef, Decimal128, Double, EJSON, Int32, Long, MaxKey, MinKey, ObjectId, Timestamp, UUID, calculateObjectSize, deserialize, deserializeStream, serialize, serializeWithBufferAndIndex, setInternalBufferSize };\n//# sourceMappingURL=bson.mjs.map\n","//\n// filter.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { StructuredQuery_FieldFilter_Operator } from '../proto/db3_database'\n// The operator of a FieldFilter\nexport const enum Operator {\n    LESS_THAN = '<',\n    LESS_THAN_OR_EQUAL = '<=',\n    EQUAL = '==',\n    NOT_EQUAL = '!=',\n    GREATER_THAN = '>',\n    GREATER_THAN_OR_EQUAL = '>=',\n    ARRAY_CONTAINS = 'array-contains',\n    IN = 'in',\n    NOT_IN = 'not-in',\n    ARRAY_CONTAINS_ANY = 'array-contains-any',\n}\n\nexport function parseOperator(\n    op: Operator\n): StructuredQuery_FieldFilter_Operator {\n    switch (op) {\n        case Operator.EQUAL: {\n            return StructuredQuery_FieldFilter_Operator.EQUAL\n        }\n        default: {\n            throw new Error('the op is not supported')\n        }\n    }\n}\n","//@ts-nocheck\n//\n// client.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport {\n    PayloadType,\n    DatabaseMutation,\n    DatabaseAction,\n    CollectionMutation,\n    DocumentMutation,\n    DocumentMask,\n} from '../proto/db3_mutation'\nimport { BroadcastMeta, ChainId, ChainRole } from '../proto/db3_base'\nimport { StorageProvider } from '../provider/storage_provider'\nimport { Wallet } from '../wallet/wallet'\nimport { DbId } from '../crypto/id'\nimport { toB64, fromHEX, toHEX } from '../crypto/crypto_utils'\nimport { Database, Index, StructuredQuery } from '../proto/db3_database'\nimport { QuerySessionInfo } from '../proto/db3_session'\nimport * as log from 'loglevel'\nimport { BSON } from 'bson'\n\nexport interface DocumentData {\n    [field: string]: any\n}\n\nexport interface DocumentEntry<T> {\n    id: string\n    owner: string\n    tx: string\n    doc: T\n}\n\n//\n//\n// the db3 client for developers\n//\n//\nexport class DB3Client {\n    readonly provider: StorageProvider\n    querySessionInfo: QuerySessionInfo | undefined\n    sessionToken: string | undefined\n    wallet: Wallet\n\n    /**\n     * new a db3 client with db3 node url and wallet\n     *\n     */\n    constructor(url: string, wallet: Wallet) {\n        this.provider = new StorageProvider(url, wallet)\n        this.wallet = wallet\n    }\n\n    /**\n     * create a database and return the address of it\n     *\n     */\n    async createDatabase(): Promise<[string, string]> {\n        const meta: BroadcastMeta = {\n            nonce: this.provider.getNonce().toString(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n        }\n        const dm: DatabaseMutation = {\n            meta,\n            collectionMutations: [],\n            documentMutations: [],\n            dbAddress: new Uint8Array(),\n            action: DatabaseAction.CreateDB,\n        }\n        const payload = DatabaseMutation.toBinary(dm)\n        const txId = await this.provider.sendMutation(\n            payload,\n            PayloadType.DatabasePayload\n        )\n        const dbId = new DbId(this.wallet.getAddress(), +meta.nonce)\n        return [dbId.getHexAddr(), txId.getB64()]\n    }\n\n    /**\n     * get a database information\n     *\n     */\n    async getDatabase(addr: string) {\n        const token = await this.keepSessionAlive()\n        const response = await this.provider.getDatabase(addr, token)\n        this.querySessionInfo!.queryCount += 1\n        return response.db\n    }\n\n    async listCollection(databaseAddress: string) {\n        const db = await this.getDatabase(databaseAddress)\n        return db?.collections\n    }\n\n    /**\n     * create a collection\n     *\n     */\n    async createCollection(\n        databaseAddress: string,\n        name: string,\n        index: Index[]\n    ) {\n        const meta: BroadcastMeta = {\n            nonce: this.provider.getNonce().toString(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n        }\n        const collection: CollectionMutation = {\n            index,\n            collectionName: name,\n        }\n        const dm: DatabaseMutation = {\n            meta,\n            collectionMutations: [collection],\n            documentMutations: [],\n            dbAddress: fromHEX(databaseAddress),\n            action: DatabaseAction.AddCollection,\n        }\n        const payload = DatabaseMutation.toBinary(dm)\n        const txId = await this.provider.sendMutation(\n            payload,\n            PayloadType.DatabasePayload\n        )\n        return txId.getB64()\n    }\n\n    async getState() {\n        return await this.provider.getState()\n    }\n    async getAccount(address: string) {\n        const binaryAddr = fromHEX(address)\n        return await this.provider.getAccount(binaryAddr)\n    }\n\n    /**\n     * create a document\n     *\n     */\n    async createDocument(\n        databaseAddress: string,\n        collectionName: string,\n        document: DocumentData\n    ) {\n        const documentMutation: DocumentMutation = {\n            collectionName,\n            documents: [BSON.serialize(document)],\n            ids: [],\n            masks: [],\n        }\n\n        const meta: BroadcastMeta = {\n            nonce: this.provider.getNonce().toString(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n        }\n\n        const dm: DatabaseMutation = {\n            meta,\n            action: DatabaseAction.AddDocument,\n            dbAddress: fromHEX(databaseAddress),\n            collectionMutations: [],\n            documentMutations: [documentMutation],\n        }\n        const payload = DatabaseMutation.toBinary(dm)\n        const txId = await this.provider.sendMutation(\n            payload,\n            PayloadType.DatabasePayload\n        )\n        return txId.getB64()\n    }\n\n    async getDocument(id: string) {\n        const token = await this.keepSessionAlive()\n        const response = await this.provider.getDocument(token, id)\n        return {\n            id: toB64(response.document.id),\n            doc: BSON.deserialize(response.document.doc),\n            owner: '0x' + toHEX(response.document.owner),\n            tx: toB64(response.document.txId),\n        }\n    }\n\n    async runQuery<T>(dbAddress: string, query: StructuredQuery) {\n        const token = await this.keepSessionAlive()\n        const response = await this.provider.runQuery(token, dbAddress, query)\n        return response.documents.map(\n            (item) =>\n                ({\n                    doc: BSON.deserialize(item.doc) as T,\n                    id: toB64(item.id),\n                    owner: '0x' + toHEX(item.owner),\n                    tx: toB64(item.txId),\n                } as DocumentEntry<T>)\n        )\n    }\n\n    async deleteDocument(\n        databaseAddress: string,\n        collectionName: string,\n        ids: string[]\n    ) {\n        const meta: BroadcastMeta = {\n            nonce: this.provider.getNonce().toString(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n        }\n\n        const documentMutation: DocumentMutation = {\n            collectionName,\n            documents: [],\n            ids,\n            masks: [],\n        }\n        const dm: DatabaseMutation = {\n            meta,\n            collectionMutations: [],\n            documentMutations: [documentMutation],\n            dbAddress: fromHEX(databaseAddress),\n            action: DatabaseAction.DeleteDocument,\n        }\n        const payload = DatabaseMutation.toBinary(dm)\n        return this.provider.sendMutation(payload, PayloadType.DatabasePayload)\n    }\n\n    //\n    //\n    // update document with a mask\n    //\n    //\n    async updateDocument(\n        databaseAddress: string,\n        collectionName: string,\n        document: Record<string, any>,\n        id: string,\n        masks: string[]\n    ) {\n        const meta: BroadcastMeta = {\n            nonce: this.provider.getNonce().toString(),\n            chainId: ChainId.MainNet,\n            chainRole: ChainRole.StorageShardChain,\n        }\n        const documentMask: DocumentMask = {\n            fields: masks,\n        }\n        //TODO add mask\n        const documentMutation: DocumentMutation = {\n            collectionName,\n            documents: [BSON.serialize(document)],\n            ids: [id],\n            masks: [documentMask],\n        }\n        const dm: DatabaseMutation = {\n            meta,\n            collectionMutations: [],\n            documentMutations: [documentMutation],\n            dbAddress: fromHEX(databaseAddress),\n            action: DatabaseAction.UpdateDocument,\n        }\n        const payload = DatabaseMutation.toBinary(dm)\n        return this.provider.sendMutation(payload, PayloadType.DatabasePayload)\n    }\n\n    async keepSessionAlive() {\n        if (!this.querySessionInfo || !this.sessionToken) {\n            const response = await this.provider.openSession()\n            this.sessionToken = response.sessionToken\n            this.querySessionInfo = response.querySessionInfo\n            log.info('create a new session token ', response.sessionToken)\n            return this.sessionToken\n        }\n        // TODO\n        if (this.querySessionInfo.queryCount > 1000) {\n            log.info(\n                'submit query session with count ',\n                this.querySessionInfo.queryCount\n            )\n            await this.provider.closeSession(\n                this.sessionToken,\n                this.querySessionInfo\n            )\n            const response = await this.provider.openSession()\n            this.sessionToken = response.sessionToken\n            this.querySessionInfo = response.querySessionInfo\n            log.info('create a new session token ', response.sessionToken)\n            return this.sessionToken\n        }\n        if (!this.sessionToken) {\n            log.warn('no session token')\n            throw new Error('sessioToken is not found')\n        }\n        return this.sessionToken\n    }\n}\n","//\n// database.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { DB3Client } from '../client/client'\nimport { Collection, Database } from '../proto/db3_database'\n\nexport class DB3Store {\n    readonly address: string\n    readonly client: DB3Client\n    _database: Database | undefined\n    _collections: Record<string, Collection> | undefined\n    constructor(address: string, client: DB3Client) {\n        this.address = address\n        this.client = client\n        this._database = undefined\n        this._collections = undefined\n    }\n\n    async getCollections(name: string) {\n        if (this._database && this._collections && this._collections[name]) {\n            return this._collections[name]\n        }\n        const database = await this.client.getDatabase(this.address)\n        this._database = database\n        this._collections = database?.collections\n        if (this._collections && this._collections[name]) {\n            return this._collections[name]\n        }\n        return undefined\n    }\n\n    async getDatabase() {\n        if (!this._database) {\n            const database = await this.client.getDatabase(this.address)\n            this._database = database\n            this._collections = database?.collections\n        }\n        return this._database\n    }\n}\n","//\n// account.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { DB3Client } from '../client/client'\n\nexport class DB3Account {\n    readonly address: string\n    readonly client: DB3Client\n    constructor(address: string, client: DB3Client) {\n        this.address = address\n        this.client = client\n    }\n\n    async getAccount() {\n        await this.client.getAccount(this.address)\n    }\n}\n\nexport function bytesToReadableNum(bytes_size: number): string {\n    const STORAGE_LABELS: string[] = [' ', 'K', 'M', 'G', 'T', 'P', 'E']\n    const max_shift = 7\n    var shift = 0\n    var local_bytes_size = bytes_size\n    var value = bytes_size\n    local_bytes_size >>= 10\n    while (local_bytes_size > 0 && shift < max_shift) {\n        value /= 1024.0\n        shift += 1\n        local_bytes_size >>= 10\n    }\n    return value.toFixed(2) + STORAGE_LABELS[shift]\n}\n\nexport function unitsToReadableNum(units: number): string {\n    return (units / 1000_000_000.0).toFixed(6)\n}\n","//\n// network.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { DB3Client } from '../client/client'\nexport class DB3Network {\n    readonly client: DB3Client\n    constructor(client: DB3Client) {\n        this.client = client\n    }\n\n    async getState() {\n        return await this.client.getState()\n    }\n}\n","import { DB3Store } from './database'\nimport type { DocumentReference } from './document'\nimport type { CollectionReference } from './collection'\nimport type { DocumentData } from '../client/client'\nimport {\n    StructuredQuery_FieldFilter,\n    StructuredQuery_Filter,\n} from '../proto/db3_database'\nimport {\n    Query as InternalQuery,\n    parseQueryValue,\n    queryWithAddedFilter,\n    queryWithLimit,\n} from '../core/query'\nimport { Operator, parseOperator } from '../core/filter'\n\nexport class Query<T = DocumentData> {\n    /** The type of this Firestore reference. */\n    readonly type: 'query' | 'collection'\n    /**\n     * The `Firestore` instance for the Firestore database (useful for performing\n     * transactions, etc.).\n     */\n    readonly db: DB3Store\n\n    readonly _query: InternalQuery<T>\n\n    // This is the lite version of the Query class in the main SDK.\n\n    /** @hideconstructor protected */\n    constructor(db3store: DB3Store, _query: InternalQuery<T>) {\n        this.db = db3store\n        this.type = 'query'\n        this._query = _query\n    }\n}\n\nexport type QueryConstraintType =\n    | 'where'\n    | 'orderBy'\n    | 'limit'\n    | 'limitToLast'\n    | 'startAt'\n    | 'startAfter'\n    | 'endAt'\n    | 'endBefore'\n\nexport abstract class AppliableConstraint {\n    /**\n     * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n     * {@link AppliableConstraint} applied.\n     */\n    abstract _apply<T>(query: Query<T>): Query<T>\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint extends AppliableConstraint {\n    /** The type of this query constraint */\n    abstract readonly type: QueryConstraintType\n\n    /**\n     * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n     * {@link AppliableConstraint} applied.\n     */\n    abstract _apply<T>(query: Query<T>): Query<T>\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nexport class QueryFieldFilterConstraint extends QueryConstraint {\n    /** The type of this query constraint */\n    readonly type = 'where'\n\n    /**\n     * @internal\n     */\n    protected constructor(\n        private readonly _field: string,\n        private _op: Operator,\n        private _value: unknown\n    ) {\n        super()\n    }\n\n    static _create(\n        _field: string,\n        _op: Operator,\n        _value: unknown\n    ): QueryFieldFilterConstraint {\n        return new QueryFieldFilterConstraint(_field, _op, _value)\n    }\n\n    _apply<T>(query: Query<T>): Query<T> {\n        const filter = this._parse()\n        if (query.type == 'collection') {\n            const internalQuery: InternalQuery<T> = {\n                filters: [filter],\n                limit: null,\n                collection: query as CollectionReference<T>,\n            }\n            return new Query(query.db, internalQuery)\n        } else {\n            return new Query(\n                query.db,\n                queryWithAddedFilter(query._query, filter)\n            )\n        }\n    }\n\n    _parse(): StructuredQuery_Filter {\n        const filter = newQueryFilter(this._field, this._op, this._value)\n        return filter\n    }\n}\n\n/**\n * Filter conditions in a {@link where} clause are specified using the\n * strings '&lt;', '&lt;=', '==', '!=', '&gt;=', '&gt;', 'array-contains', 'in',\n * 'array-contains-any', and 'not-in'.\n */\nexport type WhereFilterOp =\n    | '<'\n    | '<='\n    | '=='\n    | '!='\n    | '>='\n    | '>'\n    | 'array-contains'\n    | 'in'\n    | 'array-contains-any'\n    | 'not-in'\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nexport function where(\n    field: string,\n    opStr: WhereFilterOp,\n    value: unknown\n): QueryFieldFilterConstraint {\n    const op = opStr as Operator\n    return QueryFieldFilterConstraint._create(field, op, value)\n}\n\nexport function query<T>(\n    query: Query<T>,\n    ...queryConstraints: QueryConstraint[]\n): Query<T> {\n    if (queryConstraints.length == 0) {\n        throw new Error('bad query constraint len')\n    }\n    for (const constraint of queryConstraints) {\n        query = constraint._apply(query)\n    }\n    return query\n}\n\nexport class QueryResult<T = DocumentData> {\n    readonly docs: Array<DocumentReference<T>>\n    readonly db: DB3Store\n    constructor(db3store: DB3Store, docs: Array<DocumentReference<T>>) {\n        this.db = db3store\n        this.docs = docs\n    }\n    get empty(): boolean {\n        return this.docs.length == 0\n    }\n    get size(): number {\n        return this.docs.length\n    }\n}\n\nfunction newQueryFilter(\n    field: string,\n    op: Operator,\n    value: unknown\n): StructuredQuery_Filter {\n    const queryOp = parseOperator(op)\n    const queryValue = parseQueryValue(value)\n    const filter: StructuredQuery_FieldFilter = {\n        field,\n        op: queryOp,\n        value: queryValue,\n    }\n    return {\n        filterType: {\n            oneofKind: 'fieldFilter',\n            fieldFilter: filter,\n        },\n    }\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nexport class QueryLimitConstraint extends QueryConstraint {\n    /**\n     * @internal\n     */\n    protected constructor(\n        /** The type of this query constraint */\n        readonly type: 'limit',\n        private readonly _limit: number\n    ) {\n        super()\n    }\n\n    static _create(type: 'limit', _limit: number): QueryLimitConstraint {\n        return new QueryLimitConstraint(type, _limit)\n    }\n\n    _apply<T>(query: Query<T>): Query<T> {\n        if (query.type == 'collection') {\n            const internalQuery: InternalQuery<T> = {\n                filters: [],\n                limit: null,\n                collection: query as CollectionReference<T>,\n            }\n            return new Query(\n                query.db,\n                queryWithLimit(internalQuery, this._limit)\n            )\n        } else {\n            return new Query(\n                query.db,\n                queryWithLimit(query._query, this._limit)\n            )\n        }\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nexport function limit(limit: number): QueryLimitConstraint {\n    return QueryLimitConstraint._create('limit', limit)\n}\n","//\n// query.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport {\n    StructuredQuery_Filter,\n    StructuredQuery_Value,\n    StructuredQuery_Limit,\n} from '../proto/db3_database'\n\nimport type { CollectionReference } from '../store/collection'\n\n/**\n * The Query interface defines all external properties of a query.\n *\n * QueryImpl implements this interface to provide memoization for `queryOrderBy`\n * and `queryToTarget`.\n */\nexport interface Query<T> {\n    readonly filters: StructuredQuery_Filter[]\n    readonly limit: StructuredQuery_Limit | null\n    readonly collection: CollectionReference<T>\n}\n\nexport function parseQueryValue(value: unknown): StructuredQuery_Value {\n    if (typeof value === 'string') {\n        return {\n            valueType: {\n                oneofKind: 'stringValue',\n                stringValue: value,\n            },\n        }\n    }\n\n    if (typeof value === 'boolean') {\n        return {\n            valueType: {\n                oneofKind: 'booleanValue',\n                booleanValue: value,\n            },\n        }\n    }\n    //TODO add other types\n    return {\n        valueType: {\n            oneofKind: undefined,\n        },\n    }\n}\n\nexport function queryWithAddedFilter<T>(\n    query: Query<T>,\n    filter: StructuredQuery_Filter\n): Query<T> {\n    const newFilters = query.filters.concat([filter])\n    return {\n        ...query,\n        filters: newFilters,\n    }\n}\nexport function queryWithLimit<T>(query: Query<T>, limit: number): Query<T> {\n    const slimit: StructuredQuery_Limit = {\n        limit,\n    }\n    return {\n        ...query,\n        limit: slimit,\n    }\n}\n","//\n// collection.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// @ts-nocheck\n\nimport { Index } from '../proto/db3_database'\nimport { DB3Store } from './database'\nimport { DocumentReference } from './document'\nimport type { DocumentData } from '../client/client'\nimport { Query } from './query'\n\nexport class CollectionReference<T = DocumentData> extends Query<T> {\n    readonly type = 'collection'\n    readonly db: DB3Store\n    readonly name: string\n    constructor(db: DB3Store, name: string) {\n        super(db)\n        this.name = name\n        this.db = db\n    }\n}\nexport function collection<T = DocumentData>(\n    db: DB3Store,\n    name: string,\n    index?: Index[]\n): Promise<CollectionReference<T>>\n\nexport function collection<T = DocumentData>(\n    db: DB3Store,\n    name: string,\n    index?: Index[]\n): Promise<CollectionReference<T>> {\n    return new Promise((resolve, reject) => {\n        db.getCollections(name).then((collection) => {\n            if (!collection) {\n                db.client\n                    .createCollection(db.address, name, index)\n                    .then((txid) => {\n                        resolve(new CollectionReference<T>(db, name))\n                    })\n            } else {\n                resolve(new CollectionReference<T>(db, name))\n            }\n        })\n    })\n}\n","import { CollectionReference, collection } from './collection'\nimport { DB3Store } from './database'\nimport { Query, QueryResult } from './query'\nimport { StructuredQuery } from '../proto/db3_database'\nimport { DocumentEntry, DocumentData } from '../client/client'\n\nexport class DocumentReference<T = DocumentData> {\n    /** The type of this Firestore reference. */\n    readonly type = 'document'\n    /**\n     * The {@link Firestore} instance the document is in.\n     * This is useful for performing transactions, for example.\n     */\n    readonly collection: CollectionReference<T>\n    readonly entry: DocumentEntry<T>\n\n    /** @hideconstructor */\n    constructor(collection: CollectionReference<T>, entry: DocumentEntry<T>) {\n        this.collection = collection\n        this.entry = entry\n    }\n}\n\n//\n// add a document with collection reference\n//\nexport function addDoc<T = DocumentData>(\n    reference: CollectionReference<T>,\n    data: T\n): Promise<any> {\n    return new Promise((resolve, reject) => {\n        const db = reference.db\n        db.client\n            .createDocument(db.address, reference.name, data as DocumentData)\n            .then((result) => {\n                resolve(result)\n            })\n    })\n}\n\n//export async function doc<T>(\n//    reference: CollectionReference<T>,\n//    id: string\n//): Promise<DocumentReference<T>> {\n//    const db = reference.db\n//}\n\nexport function getDocs<T = DocumentData>(\n    query: Query\n): Promise<QueryResult<T>> {\n    return new Promise((resolve, reject) => {\n        const db = query.db\n        if (query.type == 'collection') {\n            const colref = query as CollectionReference\n            const squery: StructuredQuery = {\n                collectionName: colref.name,\n            }\n            db.client.runQuery<T>(db.address, squery).then((docs) => {\n                const new_docs = docs.map(\n                    (item) => new DocumentReference<T>(colref, item)\n                )\n                resolve(new QueryResult<T>(db, new_docs))\n            })\n        } else {\n            const internalQuery = query._query\n            const colref = internalQuery.collection\n            const squery: StructuredQuery = {\n                collectionName: internalQuery.collection.name,\n            }\n            if (internalQuery.filters.length > 0) {\n                squery.where = internalQuery.filters[0]\n            }\n            if (internalQuery.limit != null) {\n                squery.limit = internalQuery.limit\n            }\n            db.client.runQuery<T>(db.address, squery).then((docs) => {\n                const new_docs = docs.map(\n                    (item) => new DocumentReference<T>(colref, item)\n                )\n                resolve(new QueryResult<T>(db, new_docs))\n            })\n        }\n    })\n}\n\nexport function deleteDoc<T = DocumentData>(\n    reference: DocumentReference<T>\n): Promise<void> {\n    const db = reference.collection.db\n    const id = reference.entry.id\n    return new Promise((resolve, reject) => {\n        db.client\n            .deleteDocument(db.address, reference.collection.name, [id])\n            .then(() => {\n                resolve()\n            })\n    })\n}\n\nexport function updateDoc<T = DocumentData>(\n    reference: DocumentReference<T>,\n    data: any\n): Promise<void> {\n    const db = reference.collection.db\n    const masks = Object.keys(data)\n    const doc = reference.entry.doc as DocumentData\n    const id = reference.entry.id\n    for (const key in data) {\n        doc[key] = data[key]\n    }\n    return new Promise((resolve, reject) => {\n        db.client\n            .updateDocument(\n                db.address,\n                reference.collection.name,\n                doc,\n                id,\n                masks\n            )\n            .then(() => {\n                resolve()\n            })\n    })\n}\n","//\n// metamask.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\nimport { Buffer } from 'buffer'\nimport type { Wallet, WalletType } from './wallet'\nimport { SIGNATURE_SCHEME_TO_FLAG } from '../crypto/publickey'\nimport {\n    TypedDataUtils,\n    TypedMessage,\n    MessageTypes,\n    SignTypedDataVersion,\n} from '@metamask/eth-sig-util'\nimport { fromRpcSig, setLengthLeft } from '@ethereumjs/util'\nimport { toHEX } from '../crypto/crypto_utils'\nimport { Secp256k1PublicKey } from '../crypto/secp256k1_publickey'\nimport { recoverPublicKey } from '@noble/secp256k1'\n\ninterface Window {\n    ethereum: any\n}\n\nconst SECP256K1_SIGNATURE_LEN = 65\nconst SECP256K1_PUBLIC_LEN = 33\nconst DB3_SECP256K1_SIGNATURE_LEN =\n    SECP256K1_SIGNATURE_LEN + SECP256K1_PUBLIC_LEN + 1\n\nexport interface TypedData {\n    [field: string]: any\n}\n\nexport class MetamaskWallet implements Wallet<TypedData, Promise<Uint8Array>> {\n    readonly window: Window\n    private addr: string\n    private publicKey: Secp256k1PublicKey | undefined\n\n    constructor(window: Window) {\n        this.window = window\n        this.addr = ''\n        this.publicKey = undefined\n    }\n\n    async connect() {\n        if (this.addr.length == 0) {\n            const response = await this.window.ethereum.request({\n                method: 'eth_requestAccounts',\n            })\n            this.addr = response[0]\n            await this.generateAddr()\n        }\n    }\n\n    getAddress(): string {\n        return this.publicKey!.toAddress()\n    }\n\n    getEvmAddress(): string {\n        return this.addr\n    }\n\n    getType(): WalletType {\n        return 'MetaMask'\n    }\n\n    private async generateAddr() {\n        const message = {\n            types: {\n                EIP712Domain: [],\n                Message: [{ name: 'action', type: 'string' }],\n            },\n            domain: {},\n            primaryType: 'Message',\n            message: {\n                action: 'generate db3 addr',\n            },\n        }\n        const msgParams = JSON.stringify(message)\n        const from = this.addr\n        const sig = await this.window.ethereum.request({\n            method: 'eth_signTypedData_v3',\n            params: [from, msgParams],\n        })\n        const hashedmsg = TypedDataUtils.eip712Hash(\n            message as TypedMessage<MessageTypes>,\n            SignTypedDataVersion.V3\n        )\n        const { v, r, s } = fromRpcSig(sig)\n        const rid = this.calculateSigRecovery(v)\n        const signatureBuffer = new Uint8Array(64)\n        signatureBuffer.set(r, 0)\n        signatureBuffer.set(s, 32)\n        const publicKey = recoverPublicKey(\n            hashedmsg,\n            signatureBuffer,\n            Number(rid),\n            true\n        )\n        this.publicKey = new Secp256k1PublicKey(publicKey)\n        return this.publicKey.toAddress()\n    }\n\n    async sign(message: TypedData): Promise<Uint8Array> {\n        const msgParams = JSON.stringify(message)\n        const from = this.addr\n        const sig = await this.window.ethereum.request({\n            method: 'eth_signTypedData_v3',\n            params: [from, msgParams],\n        })\n        const hashedmsg = TypedDataUtils.eip712Hash(\n            message as TypedMessage<MessageTypes>,\n            SignTypedDataVersion.V3\n        )\n        const { v, r, s } = fromRpcSig(sig)\n        const rid = this.calculateSigRecovery(v)\n        const signatureBuffer = new Uint8Array(64)\n        signatureBuffer.set(r, 0)\n        signatureBuffer.set(s, 32)\n        const publicKey = recoverPublicKey(\n            hashedmsg,\n            signatureBuffer,\n            Number(rid),\n            true\n        )\n        const buf = new Uint8Array(DB3_SECP256K1_SIGNATURE_LEN)\n        buf[0] = SIGNATURE_SCHEME_TO_FLAG['Secp256k1']\n        buf.set(signatureBuffer, 1)\n        buf.set([Number(rid)], 65)\n        buf.set(publicKey, 66)\n        return buf\n    }\n\n    calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n        if (v === BigInt(0) || v === BigInt(1)) return v\n\n        if (chainId === undefined) {\n            return v - BigInt(27)\n        }\n        return v - (chainId * BigInt(2) + BigInt(35))\n    }\n}\n","//\n// app.ts\n// Copyright (C) 2023 db3.network Author imotai <codego.me@gmail.com>\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// @ts-nocheck\n\nimport { DB3Client } from '../client/client'\nimport { Wallet } from '../wallet/wallet'\nimport { DB3Store } from './database'\nimport { DB3Account } from './account'\nimport { DB3Network } from './network'\n\nexport interface DB3SdkRuntime {\n    db: DB3Store\n    db3Account: DB3Account\n    DB3Network: DB3Network\n}\n\nexport function initializeDB3(\n    node: string,\n    dbAddress: string,\n    wallet: Wallet\n): DB3SdkRuntime {\n    const dbClient = new DB3Client(node, wallet)\n    const db = new DB3Store(dbAddress, dbClient)\n    const db3Account = new DB3Account(wallet.getAddress(), dbClient)\n    const db3Network = new DB3Network(dbClient)\n    const runtime: DB3SdkRuntime = {\n        db,\n        db3Account,\n        db3Network,\n    }\n    return runtime\n}\n"],"names":["typeofJsonValue","value","t","Array","isArray","encTable","split","decTable","i","length","charCodeAt","base64decode","base64Str","es","b","bytes","Uint8Array","bytePos","groupPos","p","undefined","Error","subarray","base64encode","base64","UnknownFieldHandler","WireType","varint64read","lowBits","highBits","shift","this","buf","pos","assertBounds","middleByte","varint64write","lo","hi","hasNext","push","splitBits","hasMoreBits","indexOf","symbol","Symbol","for","onRead","typeName","message","fieldNo","wireType","data","is","no","onWrite","writer","list","tag","raw","all","filter","uf","last","slice","TWO_PWR_32_DBL","int64fromString","dec","minus","base","add1e6digit","begin","end","digit1e6","Number","int64toString","bitsLow","bitsHigh","mid","high","digitA","digitB","digitC","decimalFrom1e7","digit1e7","needLeadingZeros","partial","String","Math","floor","varint32write","varint32read","result","readBytes","BI","dv","DataView","ArrayBuffer","globalThis","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","MIN","MAX","UMIN","UMAX","C","V","detectBi","assertBi","bi","RE_DECIMAL_STR","SharedPbLong","constructor","isZero","toNumber","isSafeInteger","PbULong","static","ZERO","getInt32","trim","test","toString","toBigInt","setInt32","PbLong","pbl","negate","isNegative","n","defaultsRead","readUnknownField","readerFactory","BinaryReader","textDecoder","varint64","uint32","len","view","buffer","byteOffset","byteLength","TextDecoder","fatal","ignoreBOM","skip","start","Varint","Bit64","Bit32","LengthDelimited","StartGroup","EndGroup","RangeError","int32","sint32","zze","int64","uint64","sint64","s","bool","fixed32","getUint32","sfixed32","fixed64","sfixed64","float","getFloat32","double","getFloat64","string","decode","assert","condition","msg","assertInt32","arg","isInteger","assertUInt32","assertFloat32","isFinite","defaultsWrite","writeUnknownFields","writerFactory","BinaryWriter","textEncoder","stack","TextEncoder","chunks","finish","offset","set","fork","join","chunk","prev","pop","type","encode","setFloat32","setFloat64","setUint32","long","from","sign","emitDefaultValues","enumAsInteger","useProtoFieldName","prettySpaces","ignoreUnknownFields","mergeJsonOptions","a","_a","_b","c","Object","assign","typeRegistry","MESSAGE_TYPE","lowerCamelCase","snakeCase","capNext","sb","next","charAt","toUpperCase","toLowerCase","ScalarType","LongType","RepeatType","normalizeFieldInfo","field","_c","_d","localName","name","jsonName","repeat","NO","opt","oneof","kind","isOneofGroup","any","hasOwnProperty","oneofKind","keys","ReflectionTypeCheck","info","fields","prepare","req","known","oneofs","includes","values","depth","allowExcessProperties","some","k","group","find","f","repeated","scalars","T","L","scalar","INT32","messages","mapKeys","K","isAssignable","longType","argType","UINT64","FIXED64","INT64","SFIXED64","SINT64","BIGINT","NUMBER","isNaN","BOOL","STRING","BYTES","DOUBLE","FLOAT","map","FIXED32","SFIXED32","SINT32","UINT32","parseInt","reflectionLongConvert","ReflectionJsonReader","fMap","fieldsInput","fieldName","jsonValue","what","read","input","options","oneofsHandled","jsonKey","entries","target","fieldObj","jsonObjKey","jsonObjValue","val","internalJsonRead","enum","key","fieldArr","jsonItem","json","localEnumName","substring","enumNumber","e","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","encodeURIComponent","error","ReflectionJsonWriter","write","source","jsonObj","entryKey","entryValue","messageType","enumInfo","jsonArr","optional","internalJsonWrite","ed","ulong","reflectionScalarDefault","ReflectionBinaryReader","fieldNoToField","Map","reader","get","u","d","arr","internalBinaryRead","mapKey","mapVal","mapEntry","keyRaw","create","ReflectionBinaryWriter","concat","sort","emitDefault","PACKED","packed","item","keyValue","handler","internalBinaryWrite","method","isDefault","scalarInfo","m","reflectionMergePartial","fieldValue","output","mergePartial","objectValues","primitiveEq","ba","bb","repeatedPrimitiveEq","repeatedMsgEq","equals","MessageType","defaultCheckDepth","refTypeCheck","refJsonReader","refJsonWriter","refBinReader","refBinWriter","defineProperty","enumerable","reflectionCreate","clone","copy","val_a","val_b","reflectionEquals","fromBinary","binaryReadOptions","fromJson","jsonReadOptions","fromJsonString","JSON","parse","toJson","jsonWriteOptions","toJsonString","stringify","toBinary","binaryWriteOptions","Account","super","Index_IndexField_Order","Index_IndexField_ArrayConfig","Index_State","StructuredQuery_FieldFilter_Operator","Database","Collection","Index","Document","Index_IndexField","StructuredQuery","StructuredQuery_Projection","StructuredQuery_Filter","StructuredQuery_Limit","StructuredQuery_FieldFilter","StructuredQuery_Value","nacl","gf","init","r","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","l","vn","xi","y","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","o","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","v","sel25519","q","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","prototype","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","g","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","hh","hl","bh1","bh2","bh4","bh5","bh6","bh7","bl1","bl2","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","num","den","den2","den4","den6","unpackneg","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","TypeError","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","publicKey","secretKey","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","fn","crypto","self","msCrypto","getRandomValues","min","require","require$$0","module","exports","INPUT_ERROR","WINDOW","window","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","obj","call","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","bits","padding","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","w","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","reset","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","code","index","lastByteIndex","right","unshift","encodeString","str","strs","zeros","finalize","hex","arrayBuffer","array","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","number","lengths","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","createView","rotr","word","hexes","padStart","utf8ToBytes","toBytes","concatBytes","arrays","every","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","SHA2","padOffset","isLE","take","dataView","roundClean","digestInto","fill","_32n","_u32_max","oview","outLen","state","res","destroy","to","U32_MASK64","fromBig","le","u64","Ah","Al","Bh","Bl","Cl","low","Ch","Dl","Dh","Eh","El","SHA512_Kh","SHA512_Kl","lst","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","HMAC","_key","iHash","oHash","getPrototypeOf","hmac","pathRegex","RegExp","replaceDerive","replace","fromHEX","hexStr","intArr","match","byte","toHEX","fromB64","sBase64","nBlocksSize","nMod3","nMod4","nChr","sB64Enc","nInLen","nOutLen","ceil","taBytes","nUint24","nOutIdx","nInIdx","uint6ToB64","nUint6","toB64","aBytes","nLen","nIdx","fromCodePoint","bytesEqual","toBase64","toAddress","PUBLIC_KEY_SIZE","sha3","sha3_256","default","web","checkOpts","asyncLoop","nextTick","hexToBytes","bytesToHex","u8","u32","uint8a","hexByte","async","iters","tick","cb","ts","Date","now","diff","defaults","opts","wrapConstructorWithOpts","hashCons","bytesLength","crypto_1","utils_js_1","_assert_js_1","pbkdf2Init","_password","_salt","_opts","dkLen","asyncTick","password","salt","DK","PRF","hmac_js_1","PRFSalt","pbkdf2Output","prfW","pbkdf2Async","pbkdf2","ti","Ti","ui","sha224","sha256","Maj","SHA256_K","IV","SHA256_W","SHA256","_sha2_js_1","B","E","F","G","H","W15","W2","s0","s1","T1","T2","SHA224","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","add3H","add4L","add4H","add5H","add5L","sha384","sha512_224","_u64_js_1","sha512_256","assertNumber","chain","args","wrap","reverse","acc","alphabet","digits","letter","separator","chr","normalize","convertRadix","forEach","done","digit","digitBase","stringToBytes","bytesToString","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base64url","base32hex","base32","utils","gcd","radix2carry","convertRadix2","radix","radix2","revPadding","unsafeWrapper","apply","checksum","payload","newChecksum","oldChecksum","base16","base32crockford","genBase58","abc","base58","XMR_BLOCK_LEN","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","bechChecksum","prefix","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","utf8","CODERS","coderTypeError","nfkd","norm","assertEntropy","entropy","_assert_1","mnemonicToSeedSync","validateMnemonic","entropyToMnemonic","generateMnemonic","wordlist","strength","utils_1","calcChecksum","bitsLeft","sha256_1","getCoder","base_1","mnemonicToEntropy","mnemonic","isJapanese","passphrase","mnemonicToSeed","pbkdf2_1","sha512_1","mnemonics","bip39MnemonicToSeedSync","Ed25519Keypair","keypair","getKeyScheme","signData","ED25519_SIGNATURE_LEN","signature","path","isValidHardenedPath","isValidPath","chainCode","getMasterKeyFromSeed","el","parentKeys","segment","_ref","indexBuffer","CKDPriv","derivePath","mnemonicToSeedHex","pubkey","privateKey","withZeroByte","signPk","newArr","getPublicKey","fullPrivateKey","Ed25519PublicKey","export","schema","_0n","_1n","_2n","_3n","_8n","CURVE","freeze","P","Gx","Gy","beta","weistrass","mod","USE_ENDOMORPHISM","ShaError","JacobianPoint","Point","points","toInv","nums","scratch","lastMultiplied","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","X3","Y3","Z3","HH","HHH","subtract","multiplyUnsafe","P0","normalizeScalar","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","windowSize","maxNumber","shiftBy","wbits","pr","cached","abs","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","hasEvenY","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","pow2","b88","b176","b220","b223","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","recovery","delta","truncateHash","Signature","fromDER","fromCompact","normalizeSignature","R","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","left","aP","bQ","sliceDER","parseDERInt","hexToNumber","sBytes","rBytesLeft","parseDERSignature","isWithinCurveOrder","hasHighS","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","POW_2_256","numTo32b","power","modulo","divNearest","ENDO","a1","a2","POW_2_128","_sha256Sync","_hmacSha256Sync","HmacDrbg","counter","hmacSha256","hmacSync","checkSync","incr","reseedSync","generateSync","kmdToSig","kBytes","fromPrivateKey","recoverPublicKey","fromSignature","bits2int","bits2octets","z1","z2","int2octets","nodeCrypto","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","randomPrivateKey","subtle","createHash","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","precompute","defineProperties","configurable","Secp256k1PublicKey","SECP256K1_PUBLIC_KEY_SIZE","Rho","Id","_","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","BUF","RIPEMD160","al","ar","bl","br","cl","cr","dl","dr","er","rGroup","hbl","hbr","rl","rr","sl","sr","tr","ripemd160","endo","splitScalar","weierstrass","assertJacPoint","offset1","offset2","cond2","constTimeNegate","is0","zz","neg","rt","fieldLen","radj","sHexL","rHexL","truncateOnly","groupLen","bits2int_2","hashLen","qByteLen","lowS","kinv","vopts","strict","_JacobianPoint","secp.utils","msgs","base58checker","MASTER_SECRET","BITCOIN_VERSIONS","private","public","HARDENED_OFFSET","toU32","HDKey","parentFingerprint","privKey","privKeyBytes","pubKey","secp.getPublicKey","secp.Point","pubHash","fingerprint","identifier","pubKeyHash","privateExtendedKey","priv","serialize","publicExtendedKey","assertBytes","base58key","keyBuffer","keyView","version","isPriv","fromExtendedKey","xpriv","derive","parts","child","exec","deriveChild","childTweak","added","secp.CURVE","err","extraEntropy","seedArgs","initSigArgs","drbg","canonical","recSig","der","recovered","hashed","finalizeSig","secp.signSync","secp.Signature","normalizePublicKey","sinv","secp.verify","wipePrivateData","toJSON","xpub","secp","Secp256k1Keypair","rec_id","SECP256K1_SIGNATURE_LEN","isValidBIP32Path","fromMasterSeed","WALLET_KEY","WALLET_ADDRESS","DB3BrowserWallet","walletType","getAddress","_localStorage$getItem","localStorage","getItem","getType","_localStorage$getItem2","generate","wallet","setItem","deriveKeypair","lookup","revLookup","Arr","encodeChunk","uint8","ReflectOwnKeys","mLen","nBytes","eLen","eMax","eBias","nBits","Infinity","pow","log","LN2","customInspectSymbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","allocUnsafe","isEncoding","actual","fromString","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","size","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","maxChunkLength","len2","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","poolSize","allocUnsafeSlow","_isBuffer","compare","swap16","swap32","swap64","toLocaleString","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","sym","getMessage","Base","writable","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","b64","lens","validLen","getLens","placeHoldersLen","_byteLength","curByte","base64clean","src","dst","table","i16","BufferBigIntNotDefined","schnorr","signSync","getSharedSecret","isProbPub","compressedLen","uncompressedLen","privateA","publicB","reseed","schnorrChallengeFinalize","ch","SchnorrSignature","InternalSchnorrSignature","auxRand","getScalar","px","rand","initNonce","t0h","finalizeNonce","k0h","k0","rx","TAGS","aux","challenge","schnorrVerify","calcSync","schnorrVerifySync","initSchnorrVerify","finalizeSchnorrVerify","calc","verifySync","secp256k1_2","secp256k1_1","hmac_1","MAX_WITHDRAWALS_PER_PAYLOAD","RLP_EMPTY_STRING","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","SECP256K1_ORDER_DIV_2","MAX_INTEGER_BIGINT","MAX_INTEGER","MAX_UINT64","SECP256K1_ORDER","buffer_1","KECCAK256_RLP_ARRAY_S","GWEI_TO_WEI","outputLength","encoded","encodeLength","inputBuf","safeSlice","decodeLength","parseHexByte","hexLength","numberToHex","stream","decoded","_decode","remainder","llength","innerRemainder","totalLength","RLP","cachedHexes","_v","utf","integer","isHexPrefixed","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_224","keccakP","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","gen","genShake","__importDefault","__esModule","wrapHash","equalsBytes","bytesToUtf8","assertBool","utils_2","sliced","startsWith","webCrypto","nodeRequire","module.require","bind","keccak512","keccak384","keccak256","keccak224","sha3_1","padToEven","isHexString","getKeys","fromAscii","fromUtf8","toAscii","arrayContainsArray","getBinarySize","stripHexPrefix","superset","subset","stringValue","params","allowEmpty","assertIsString","assertIsArray","assertIsBuffer","assertIsHexString","internal_1","intToUnpaddedBuffer","bigIntToUnpaddedBuffer","bigIntToHex","bufArrToArr","arrToBufArr","validateNoLeadingZeroes","baToJSON","toUtf8","short","addHexPrefix","toUnsigned","fromSigned","bufferToInt","bigIntToBuffer","bufferToHex","toBuffer","unpadHexString","unpadArray","unpadBuffer","setLengthRight","setLengthLeft","intToBuffer","intToHex","setLength","helpers_1","stripZeros","bufferToBigInt","toArray","asIntN","asUintN","maxLength","bufferStr","accountBodyToRLP","accountBodyFromSlim","isZeroAddress","importPublic","privateToAddress","publicToAddress","pubToAddress","isValidPrivate","generateAddress2","isValidChecksumAddress","toChecksumAddress","balance","storageRoot","constants_1","codeHash","_validate","accountData","bytes_1","serialized","rlp_1","fromValuesArray","isContract","isEmpty","body","isValidAddress","hexAddress","eip1191ChainId","address","keccak_1","generateAddress","initCode","isValidPublic","sanitize","privateToPublic","zeroAddress","addr","emptyUint8Arr","accountBodyToSlim","couldBeSlim","accountBody","Address","account_1","zero","isPrecompileOrSystemAddress","rangeMin","rangeMax","TypeOutput","toType","bigInt","MAX_SAFE_INTEGER","PrefixedHexString","Withdrawal","validatorIndex","amount","withdrawalData","indexData","validatorIndexData","addressData","amountData","types_1","address_1","withdrawalArray","fromWithdrawalData","withdrawal","validatorIndexBuffer","addressBuffer","toBufferArray","toValue","calculateSigRecovery","chainId","isValidSigRecovery","hashPersonalMessage","isValidSignature","toCompactSig","toRpcSig","ecsign","ecrecover","senderPubKey","ss","fromRpcSig","homesteadOrLater","rBigInt","sBigInt","toGindex","anchor","gindexChild","gindexParent","gindexSibling","concatGindices","getGindexBits","getGindicesAtDepth","iterateAtDepth","countToDepth","convertGindexToBitstring","toGindexBitstring","bitIndexBigInt","gindex","ERR_INVALID_GINDEX","count","startIndex","iterator","gindices","gindexIterator","bitstring","bit","remainingBitLength","rightChild","wasmCode","newInstance","_module","WebAssembly","Module","wasmCode_1","importObj","env","abort","file","line","col","Instance","byteArrayToHashObject","hashObjectToByteArray","byteArr","ctx","wasm_1","wasmInputValue","wasmOutputValue","uint8InputArray","memory","INPUT_LENGTH","uint8OutputArray","final","digest64HashObjects","digest2Bytes32","hashObject_1","inputUint8Array","outputUint8Array","inputUint32Array","digest64","bytes1","bytes2","obj1","obj2","isHashObject","hashObjectToUint8Array","hashTwoObjects","as_sha256_1","uint8ArrayToHashObject","bitwiseOrNodeH","setNodeH","compose","identity","BranchNode","Node","TWO_POWER_32","applyHash","_left","_right","rootHashObject","hash_1","isLeaf","LeafNode","fromHashObject","ho","writeToBytes","getUint","uintBytes","offsetBytes","clipInfinity","hIndex","bitIndex","getNodeH","getUintBigint","hRange","setUint","setUintBigint","valueBN","hEnd","bitwiseOrUint","inner","outer","zeroNode","zeroes","node_1","fromZero","height","subtreeFillToDepth","bottom","subtreeFillToContents","subtreeFillToLength","zeroNode_1","pivot","nodes","countRemainder","countEven","packedRootsBytesToLeafNodes","fullNodeCount","leafNodes","remainderBytes","fullHCount","remainderUint32","getUint8","packedNodeRootsToBytes","packedRootsBytesToNode","subtree_1","setUint8","createNodeFromSingleProof","createSingleProof","ERR_INVALID_NAV","rootNode","witnesses","gindex_1","leaf","fromRoot","sibling","treeZeroAfterIndex","iterateNodesAtDepth","getNodesAtDepth","setNodesAtDepth","setNodeAtDepth","getNodeAtDepth","setNodeWithFn","setNode","getNode","Tree","hook","_rootNode","WeakRef","proof","proof_1","createNodeFromProof","newRootNode","hookVar","deref","getSubtree","getRoot","getNewNode","setRoot","getSingleProof","single_1","getProof","createProof","gindexBitstring","rebindNodeToRoot","getParentNodes","parentNodes","lastParentNode","newNode","isLeftNode","nodesDepth","nodeChanged","indexes","parentNodeStack","leftParentNodeStack","depthiRoot","depthi","isLastIndex","diffDepthi","log2","depthiParent","leftNode","isLeftStack","isLeft","endIndex","computeProofBitstrings","Set","branch","lastBit","parent","sortInOrderBitstrings","bitLength","padEnd","sortDecreasingBitstrings","aPos0","bPos0","filterParentBitstrings","sortedBitstrings","filtered","bsA","SortOrder","computeMultiProofBitstrings","computeProofGindices","includeLeaves","sortOrder","InOrder","leaves","paths","branches","maxBitLength","Decreasing","Unsorted","createNodeFromMultiProof","createMultiProof","tree","tree_1","witnessGindices","util_1","leafGindices","leafBitstrings","witnessBitstrings","maxLevel","levels","fromEntries","leafBitstring","witnessBitstring","level","parentLevel","parentBitstring","siblingBitstring","siblingNode","parentNode","nodeToTreeOffsetProof","proofGindices","leftOffsets","leftLeaves","rightOffsets","rightLeaves","treeOffsetProofToNode","offsets","deserializeTreeOffsetProof","serializeTreeOffsetProof","createNodeFromTreeOffsetProof","createTreeOffsetProof","computeTreeOffsetProofSerializedLength","setUint16","offsetsStartIndex","leavesStartIndex","leafCount","getUint16","ProofType","deserializeProof","ProofTypeSerialized","single","treeOffset","multi","treeOffset_1","multi_1","serializeProof","proofType","__createBinding","__exportStar","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","zeroHash","zeroHashes","hash64","bytes32A","bytes32B","nextPowerOf2","maxChunksToDepth","mixInLength","splitIntoRootChunks","merkleize","padFor","layerCount","zeros_1","chunkCount","padCount","paddedChunkCount","longChunk","lengthBuf","namedClass","superClass","className","Function","addLengthNode","chunksNode","persistent_merkle_tree_1","fromUint32","assertValidArrayLength","arrayProps","checkNonDecimalLength","isList","value_defaultValueArray","value_equals","value_cloneArray","value_toJsonArray","tree_deserializeFromBytesArrayBasic","tree_serializeToBytesArrayBasic","value_deserializeFromBytesArrayBasic","value_serializeToBytesArrayBasic","getChunksNodeFromRootNode","getLengthFromRootNode","setChunksNode","newLength","lengthNode","elementType","elSize","value_serializeToBytes","value_deserializeFromBytes","chunkDepth","value_fromJsonArray","newValue","defaultValue","getUint8ByteToBitBooleanArray","BitArray","uint8ByteToBitBooleanArrays","uint8Array","bitLen","bitArray","fromBitLen","bitBoolArr","byteIdx","mergeOrWith","bitArray2","intersectValues","yes","fullByteLen","remainderBits","iByte","booleansInByte","iBit","getTrueBitIndexes","byteLen","getSingleTrueBit","toBoolArray","binaryStr","binaryLength","computeUint8ByteToBitBooleanArray","byteArrayEquals","fromHexString","toHexString","hexByByte","isCompositeType","isBasic","bitstringToIndex","treePostProcessFromProofNode","currentDepth","nodePost","tree_fromProofNode","atTypeDepth","jsonPathProp","getIndexProperty","childType","getPropertyType","maxChunkCount","rightNode","Type","value_toTree","value_serializedSize","tree_deserializeFromBytes","tree_toValue","tree_serializedSize","tree_serializeToBytes","deserialize","CompositeType","LENGTH_GINDEX","symbolCachedPermanentRoot","abstract_1","cachePermanentRootStruct","defaultView","toView","defaultViewDU","toViewDU","deserializeToView","getView","deserializeToViewDU","getViewDU","toValueFromView","commitView","toValueFromViewDU","commitViewDU","toViewFromViewDU","toViewDUFromView","hashTreeRoot","cachedRoot","merkleize_1","getRoots","getCachedPermanentRoot","createFromProof","rootNodeFromProof","treePostProcessFromProofNode_1","byteArray_1","tree_createProof","jsonPaths","gindexes","tree_createProofGindexes","jsonPath","getPathInfo","leafGindexes","tree_getLeafGindices","fixedSize","prop","getPropertyGindex","TreeView","BitArrayTreeView","TreeViewDU","commit","dontTransferCache","cache","clearCache","BitArrayTreeViewDU","_bitArray","BitArrayType","composite_1","isViewMutable","bitArray_1","bitArray_2","cacheOfViewDU","rootGindex","tree_getByteLen","BitListType","limitBits","minSize","maxSize","named_1","bitLenToSerializedLength","applyPaddingBit","deserializeUint8ArrayBitListFromBytes","arrayBasic_1","chunkLen","lastByte","lastByteBitLength","newOffset","BitVectorType","lengthBits","zeroBitsMask","assertValidLength","isBasicType","BasicType","assertValidSize","BooleanType","basic_1","itemsPerChunk","tree_getFromNode","leafNode","tree_setToNode","tree_getFromPackedNode","tree_setToPackedNode","ByteArrayType","ByteListType","limitBytes","ByteVectorType","lengthBytes","unicodes","basicSymbols","baseLowerCase","baseUpperCase","regexps","symbols","lowers","uppers","impropers","capitalize","pascal","sentence","improper","relax","upper","hole","apostrophe","room","re","types","up","cap","decap","deapostrophe","prep","holey","acronym","caps","Case","of","flip","random","lower","snake","constant","camel","kebab","capital","border","title","small","names","abbreviations","prelude","abbr","abbrAndSpace","squish","define","getContainerTreeViewClass","ContainerTreeView","CustomContainerTreeView","fieldsEntries","fieldType","getContainerTreeViewDUClass","ContainerTreeViewDU","nodesChanged","viewsChanged","caches","nodesPopulated","nodesChangedSorted","entry","clear","CustomContainerTreeViewDU","has","viewChanged","renderContainerTypeName","precomputeJsonKey","ContainerType","case_1","casingMap","jsonCase","fieldsGindex","jsonKeyToFieldName","minLen","maxLen","precomputeSizes","isFixedLen","fieldRangesFixedLen","variableOffsetsPosition","fixedEnd","pointerFixed","precomputeSerdesData","container_1","container_2","totalSize","fixedIndex","variableIndex","fieldRanges","getFieldRanges","fieldRange","struct","roots","fieldGindex","fieldGindexFromRoot","compositeType","readVariableOffsets","variableIdx","fixedIdx","keyFromCaseMap","BranchNodeStruct","valueToNode","newNodeValue","branchNodeStruct_1","valueChanged","ContainerNodeStructType","containerNodeStruct_1","containerNodeStruct_2","valueToTree","ArrayBasicTreeView","tree_getLength","chunkIndex","getAll","tree_getChunksNode","lenFullNodes","ListBasicTreeView","tree_setLength","ArrayBasicTreeViewDU","dirtyLength","_length","nodesPrev","newChunksNode","tree_setChunksNode","ListBasicTreeViewDU","ArrayType","defaultLen","chunkIdx","endGindex","extendedStartIndex","extendedGindex","ListBasicType","array_1","listBasic_1","listBasic_2","readOffsetsArrayComposite","elementFixedSize","firstOffset","offsetDataLength","offsetCount","offsetIdx","readVariableOffsetsArrayComposite","value_getRootsArrayComposite","tree_deserializeFromBytesArrayComposite","tree_serializeToBytesArrayComposite","tree_serializedSizeArrayComposite","value_deserializeFromBytesArrayComposite","value_serializeToBytesArrayComposite","maxSizeArrayComposite","minSizeArrayComposite","minCount","maxCount","value_serializedSizeArrayComposite","ArrayCompositeTreeView","subtree","getReadonly","getAllReadonly","views","getAllReadonlyValues","ListCompositeTreeView","arrayComposite_1","ArrayCompositeTreeViewDU","populateAllNodes","ListCompositeTreeViewDU","sliceTo","ListCompositeType","listComposite_1","listComposite_2","NoneType","UintBigintType","UintNumberType","uintBigintByteLens","uintNumberByteLens","MAX_SAFE_INTEGER_BN","BIGINT_2_POW_64","BIGINT_2_POW_128","BIGINT_2_POW_192","NUMBER_2_POW_32","NUMBER_32_MAX","setBitwiseOR","maxDecimalStr","setInt8","UnionType","VALUE_GINDEX","SELECTOR_GINDEX","none_1","minLens","maxLens","_type","maxSelector","selector","valueNode","extendedFieldGindex","union","VectorBasicType","arrayBasic_2","arrayBasic_3","VectorCompositeType","arrayComposite_2","arrayComposite_3","bitList_1","bitVector_1","boolean_1","byteList_1","byteVector_1","uint_1","union_1","vectorBasic_1","vectorComposite_1","abstract_2","abstract_3","byteArray_2","Withdrawals","Bytes20","UintBigInt64","UintNum64","ssz_1","Reflect","ReflectApply","receiver","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","events","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","existing","newListener","emit","warned","emitter","warn","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","eventTargetAgnosticAddListener","flags","on","once","addEventListener","wrapListener","removeEventListener","setMaxListeners","getMaxListeners","doError","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","spliceOne","off","removeAllListeners","rawListeners","eventNames","Promise","resolve","reject","errorListener","resolver","addErrorHandlerIfEventEmitter","ChainRole","ChainId","AsyncEventEmitter","events_1","event","callback","tasks","task","runInSeries","then","catch","beforeOrAfter","splice","maxListeners","Lock","permits","promiseResolverQueue","release","nextResolver","desc","getOwnPropertyDescriptor","ssz","require$$8","require$$9","require$$10","lib","padWithZeroes","hexString","targetLength","numberToBuffer","concatSig","legacyToBuffer","isNullish","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","messageHash","sigParams","hexVal","getPublicKeyFor","extractPublicKey","recoverPersonalSignature","personalSign","sender","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","red","_init","wordSize","parseHex4Bits","lowerBound","parseBase","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","limbLen","limbPow","total","imuln","_iaddn","dest","_expand","_normSign","groupSizes","groupBases","smallMulTo","ncarry","rword","maxJ","groupSize","groupBase","modn","idivn","toArrayLike","reqLength","andln","iushrn","_countBits","clz32","_zeroBits","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","setn","wbit","iadd","isub","comb10MulTo","a0","a3","a4","a5","a6","a7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl3","bh3","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","ie","ro","io","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","div","divmod","positive","divn","umod","divRound","dm","half","egcd","isEven","yp","xp","im","isOdd","jm","_invmp","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","_strip","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","rawEncode","parseNumber","solidityPack","bn_js_1","parseTypeArray","parseTypeN","solidityHexValue","bitsize","subType","arraySize","arrayValues","bytesize","elementaryName","encodeSingle","parseTypeNxM","isDynamic","headLength","cur","SignTypedDataVersion","validateVersion","allowedVersions","encodeField","V3","V4","encodeData","parsedType","typeValuePairs","ethereumjs_abi_utils_1","primaryType","encodedTypes","encodedValues","hashType","encodeType","unsortedDeps","findTypeDependencies","deps","results","hashStruct","encodedHashType","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","EIP712Domain","_typedSignatureHash","typedData","recoverTypedSignature","typedSignatureHash","TypedDataUtils","additionalProperties","items","required","domain","eip712Hash","hashBuffer","signTypedData","V1","util","validateBase64","decodeUTF8","unescape","encodeUTF8","decodeURIComponent","escape","atob","encodeBase64","decodeBase64","btoa","__setModuleDefault","__importStar","getEncryptionPublicKey","decrypt","encryptSafely","encrypt","naclUtil","ephemeralKeyPair","pubKeyUInt8Array","msgParamsUInt8Array","encryptedMessage","ephemPublicKey","ciphertext","encryptedData","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","decryptedMessage","msgHex","msgBase64","dataWithPadding","modVal","padLength","decryptSafely","privateKeyUint8Array","encryptionPublicKey","BroadcastMeta","DatabaseAction","PayloadType","CollectionMutation","DocumentMutation","DocumentMask","WriteRequest","RpcError","meta","serviceName","into","getTime","DeferredState","GrpcStatusCode","GrpcWebFrame","Deferred","preventUnhandledRejectionWarning","_state","PENDING","_promise","_resolve","_reject","promise","RESOLVED","reason","REJECTED","resolvePending","rejectPending","RpcOutputStreamController","_lis","nxt","_closed","onNext","addLis","onMessage","onError","onComplete","clearLis","closed","notifyNext","complete","notifyMessage","notifyError","notifyComplete","pushIt","asyncIterator","_itState","UnaryCall","requestHeaders","request","headers","response","status","trailers","onfulfilled","onrejected","promiseFinished","thisArg","generator","fulfilled","step","rejected","ServerStreamingCall","responses","stackIntercept","transport","tail","mtd","unary","curr","interceptors","interceptUnary","serverStreaming","interceptServerStreaming","clientStreaming","interceptClientStreaming","duplex","interceptDuplex","assertNever","createGrpcWebRequestHeader","format","timeout","userAgent","append","DEADLINE_EXCEEDED","deadline","createGrpcWebRequestBody","DATA","msgLen","readGrpcWebResponseHeader","headersOrFetchResponse","httpStatus","httpStatusText","responseType","fetchResponse","UNKNOWN","fetchHeadersToHttp","statusText","httpOk","responseMeta","parseMetadata","statusCode","statusDetail","parseStatus","OK","httpStatusToGrpc","readGrpcWebResponseTrailer","trailerData","parseTrailer","detail","readGrpcWebResponseBody","contentType","onFrame","streamReader","base64queue","byteQueue","INTERNAL","parseFormat","isReadableStream","whatWgReadableStream","getReader","safeLen","TRAILER","DATA_LOSS","fetchHeaders","INVALID_ARGUMENT","UNAUTHENTICATED","PERMISSION_DENIED","NOT_FOUND","ABORTED","FAILED_PRECONDITION","RESOURCE_EXHAUSTED","CANCELLED","UNIMPLEMENTED","UNAVAILABLE","GrpcWebFetchTransport","defaultOptions","mergeOptions","jsonOptions","binaryOptions","mergeRpcOptions","makeUrl","baseUrl","service","maybeStatus","maybeTrailer","fetchInit","url","inputBytes","defHeader","responseStream","responseEmptyBody","defStatus","defTrailer","fetch","Headers","signal","O","maybeMessage","defMessage","MutationEvent_MutationEventStatus","MutationEvent_ToAddressType","EventType","BlockEvent","EventMessage","MutationEvent","MutationEventFilter","BlockEventFilter","EventFilter","Subscribution","QuerySessionInfo","OpenSessionPayload","BillType","Bill","NetworkStatus","QueryBillKey","QueryBillRequest","GetAccountRequest","SessionIdentifier","OpenSessionRequest","CloseSessionRequest","CloseSessionResponse","BroadcastRequest","BroadcastResponse","ShowDatabaseRequest","ShowDatabaseResponse","RunQueryRequest","GetDocumentRequest","GetDocumentResponse","ShowNetworkStatusRequest","StorageNode","idempotency","normalizeMethodInfo","QueryBillResponse","OpenSessionResponse","GetAccountResponse","GetSessionInfoRequest","GetSessionInfoResponse","RunQueryResponse","SubscribeRequest","StorageNodeClient","_transport","queryBill","openQuerySession","closeQuerySession","getAccount","getSessionInfo","broadcast","showDatabase","runQuery","getDocument","showNetworkStatus","subscribe","storage","UNDEFINED","BUFFER","UINT8ARRAY","ARRAYBUFFER","BIT32","factory","bigendian","unsigned","posH","posL","pos0","pos1","pos2","pos3","fromPositive","fromPositiveBE","fromPositiveLE","fromNegative","fromNegativeBE","fromNegativeLE","Int64","isName","_isInt64","readInt32","toArrayBuffer","raddix","isValidBuffer","_storage","writeInt32","fromArray","newArray","arrbuf","destbuf","destoff","srcbuf","srcoff","nodeName","inputDataLength","TxId","getB64","binary_addr","nonceBuf","Uint64BE","DB_ID_LENGTH","getHexAddr","StorageProvider","client","useTypedFormat","sendMutation","mutation","payloadType","_this","wrapTypedWriteRequest","writeRequest","broadcastRequest","wrapProtoWriteRequest","_ref2","_this3","Message","msgParams","TypedDataPayload","openSession","startTime","_this4","wrapTypedSession","_ref3","wrapProtoSession","_ref4","_this5","payloadBinary","QuerySessionPayload","_this6","binaryMsg","wrapProtoCloseSession","token","sessionInfo","_this7","sessionToke","wrapTypedCloseSession","_this8","closeSession","_this9","_temp2","closeRequest","_ref5","_temp","_this9$wrapTypedClose","_this9$wrapTypedClose2","_ref6","getState","_ref7","getDatabase","sessionToken","_ref8","getNonce","query","_ref9","id","getDoument","_ref10","definition","noop","undefinedType","isIE","navigator","logMethods","bindMethod","traceForIE","trace","realMethod","replaceLoggingMethods","loggerName","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","ignore","cookie","document","location","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","resetLevel","removeItem","clearPersistedLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","BSON_DATA_INT","BSONType","object","binData","objectId","date","null","regex","dbPointer","javascript","javascriptWithScope","int","timestamp","decimal","minKey","maxKey","BSONError","bsonError","BSONVersionError","BSONRuntimeError","nodeJsByteUtils","toLocalBufferType","potentialBuffer","stringTag","toStringTag","allocate","fromNumberArray","fromBase64","fromISO88591","toISO88591","fromUTF8","text","toUTF8","utf8ByteLength","encodeUTF8Into","webMathRandomBytes","webByteUtils","webRandomBytes","product","isReactNative","HEX_DIGIT","potentialUint8array","uint8array","evenLengthHex","firstDigit","secondDigit","hexDigit","ByteUtils","BSONDataView","VALIDATION_REGEX","uuidValidateString","uuidHexStringToBuffer","sanitizedHexString","bufferToUuidHexString","includeDashes","isAnyArrayBuffer","isUint8Array","isRegExp","isDate","BSONValue","Binary","_bsontype","sub_type","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","put","byteValue","decodedByte","newSpace","sequence","asRaw","toExtendedJSON","base64String","legacy","$binary","$type","toUUID","SUBTYPE_UUID","UUID","doc","$uuid","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_MD5","SUBTYPE_ENCRYPTED","SUBTYPE_COLUMN","SUBTYPE_USER_DEFINED","__id","cacheHexString","uuidHexString","otherId","Code","scope","$code","$scope","codeJson","isDBRefLike","$id","$ref","$db","DBRef","collection","oid","db","namespace","wasm","TWO_PWR_16_DBL","TWO_PWR_64_DBL","TWO_PWR_63_DBL","INT_CACHE","UINT_CACHE","DECIMAL_REG_EX","Long","__isLong__","fromBigInt","cachedObj","fromBits","UZERO","MAX_UNSIGNED_VALUE","MIN_VALUE","MAX_VALUE","fromNumber","radixToPower","fromBytesLE","fromBytesBE","addend","isLong","fromValue","c48","c32","c16","c00","thisNeg","otherNeg","comp","divide","divisor","div_u","div_s","get_high","approx","rem","shru","UONE","ONE","NEG_ONE","shr","approxRes","approxRem","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","greaterThan","greaterThanOrEqual","ge","isPositive","lessThan","lessThanOrEqual","rem_u","rem_s","multiplier","TWO_PWR_24","a32","a16","a00","b00","not","notEquals","neq","ne","shiftLeft","numBits","toInt","shiftRight","shiftRightUnsigned","shr_u","subtrahend","toBytesLE","toBytesBE","toSigned","radixLong","rem1","remDiv","eqz","relaxed","$numberLong","useBigInt64","bigIntResult","longResult","fromInt","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_MAX","EXPONENT_MIN","NAN_BUFFER","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","divideu128","DIVISOR","_rem","quotient","invalidErr","Decimal128","representation","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","lastDigit","exponent","significandHigh","significandLow","biasedExponent","stringMatch","infMatch","nanMatch","unsignedNumber","expSign","expNumber","endOfString","roundDigit","roundBit","dIdx","significand","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","multiply64x2","uhleft","uhright","biased_exponent","significand_digits","significand_msb","is_zero","significand128","midl","midh","combination","least_digits","scientific_exponent","radix_position","$numberDecimal","Double","$numberDouble","toFixed","doubleValue","parseFloat","Int32","$numberInt","MaxKey","$maxKey","MinKey","$minKey","checkForHexRegExp","PROCESS_UNIQUE","kId","ObjectId","inputId","workingId","time","inc","getInc","fromUint8Array","isValid","otherIdString","thisIdString","getTimestamp","setTime","$oid","internalCalculateObjectSize","serializeFunctions","ignoreUndefined","calculateElement","toBSON","binary","ordered_values","ignoreCase","multiline","pattern","BSONRegExp","$regex","$options","$regularExpression","parseOptions","BSONSymbol","$symbol","LongWithoutOverridesClass","Timestamp","$timestamp","optRadix","validateUtf8","continuation","JS_INT_MAX_LONG","JS_INT_MIN_LONG","internalDeserialize","allowObjectSmallerThanBufferSize","deserializeObject","allowedDBRefKeys","fieldsAsRaw","bsonRegExp","promoteBuffers","promoteLongs","promoteValues","validation","validationSetting","globalUTFValidation","utf8KeysSet","utf8ValidatedKeys","utf8ValidationValues","arrayIndex","isPossibleDBRef","dataview","shouldValidateKey","stringSize","getValidatedString","_index","objectSize","objectOptions","arrayOptions","stopIndex","binarySize","totalBinarySize","_buffer","regExpOptions","optionsArray","functionString","scopeObject","oidBuffer","shouldValidateUtf8","regexp","ignoreKeys","serializeString","NUMBER_SPACE","FOUR_BYTE_VIEW_ON_NUMBER","EIGHT_BYTE_VIEW_ON_NUMBER","serializeNumber","serializeBigInt","serializeNull","serializeBoolean","serializeDate","dateInMilis","serializeRegExp","serializeBSONRegExp","sortedOptions","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","checkKeys","serializeInto","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","keysToCodecs","deserializeValue","in32BitRange","in64BitRange","$undefined","fromExtendedJSON","$date","$dbPointer","dollarKeys","valid","getISOString","isoStr","toISOString","getUTCMilliseconds","serializeValue","seenObjects","findIndex","props","propertyName","leadingPart","alreadySeen","circularPart","leadingSpace","dashes","serializeArray","dateNum","inRange","bsontype","_doc","isBSONType","outDoc","mapper","BSON_TYPE_MAPPINGS","serializeDocument","low_","high_","unsigned_","ejsonOptions","replacer","space","EJSON","ejson","MAXSIZE","Operator","bson","__proto__","setInternalBufferSize","minInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","calculateObjectSize","deserializeStream","numberOfDocuments","documents","docStartIndex","internalOptions","bufferData","DB3Client","provider","querySessionInfo","createDatabase","MainNet","chainRole","StorageShardChain","collectionMutations","documentMutations","dbAddress","action","CreateDB","DatabaseMutation","DatabasePayload","txId","DbId","_this2","keepSessionAlive","queryCount","listCollection","databaseAddress","collections","createCollection","collectionName","AddCollection","binaryAddr","createDocument","documentMutation","BSON","ids","masks","AddDocument","owner","deleteDocument","_this10","DeleteDocument","updateDocument","_this11","documentMask","UpdateDocument","_exit","_this12","_temp4","_result","_exit2","_result2","_temp3","DB3Store","_database","_collections","getCollections","database","DB3Account","DB3Network","Query","db3store","_query","AppliableConstraint","QueryConstraint","QueryFieldFilterConstraint","_field","_op","_value","_apply","_parse","filters","queryWithAddedFilter","newFilters","op","queryOp","EQUAL","parseOperator","queryValue","valueType","booleanValue","parseQueryValue","filterType","fieldFilter","newQueryFilter","QueryResult","docs","empty","QueryLimitConstraint","_limit","queryWithLimit","CollectionReference","DocumentReference","connect","ethereum","generateAddr","getEvmAddress","hashedmsg","signatureBuffer","rid","addDoc","reference","bytesToReadableNum","bytes_size","local_bytes_size","txid","deleteDoc","colref","new_docs","internalQuery","squery","where","initializeDB3","dbClient","db3Account","db3Network","_create","queryConstraints","constraint","unitsToReadableNum","opStr"],"mappings":"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G,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,IAAK,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,EAAG,GAAI,GAAI,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,EAAG,4BCL5+WY,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsB4yC,iBAAA,EAEtB,MAAMC,EAAU,IAAIC,YAAYC,OAAOC,GAAWL,UAC5CM,EAAY,CACdC,IAAK,CAEDC,MAAO,SAAUp3D,EAAKq3D,EAAMC,EAAMC,GAC9B,MAAMphE,MAAM,UAAU6J,KAAOq3D,KAAQC,KAAQC,IAChD,IAMTtzC,EAAA4yC,YAHA,WACI,OAAO,IAAIE,YAAYS,SAASV,EAASI,GAAWjzC,OACxD,wBCdAxhB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAgCwzC,sBAAAxzC,EAAAyzC,2BAAgC,EAwEhEzzC,EAAAyzC,sBAlEA,SAA+BjyC,EAAKkyC,EAAS32D,GACzC,IAAI4hB,EAAM6C,EAAItL,GACdw9C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,EAAM6C,EAAIrL,GACVu9C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,EAAM6C,EAAIpL,GACVs9C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,EAAI32D,GAAgB,IAAN4hB,EACtBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,EAAM6C,EAAInL,GACVq9C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,EAAM6C,EAAIlL,GACVo9C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,EAAM6C,EAAIjL,GACVm9C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,EAAM6C,EAAIhL,GACVk9C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,EAAM6C,EAAI/K,GACVi9C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,EACvBA,IAAa,EACb+0C,EAAQ,GAAK32D,GAAgB,IAAN4hB,CAC3B,EA4FAqB,EAAAwzC,sBApFA,SAA+BE,GAC3B,IAAI/0C,EAAM,EACVA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf,MAAMx9C,EAAKyI,EACXA,EAAM,EACNA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf,MAAMv9C,EAAKwI,EACXA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf/0C,IAAa,EACbA,GAAoB,IAAb+0C,EAAQ,GACf,MAAMt9C,EAAKuI,EACXA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf,MAAMr9C,EAAKsI,EACXA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf,MAAMp9C,EAAKqI,EACXA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf,MAAMn9C,EAAKoI,EACXA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf,MAAMl9C,EAAKmI,EAUX,OATAA,EAAM,EACNA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IACf/0C,IAAa,EACbA,GAAqB,IAAd+0C,EAAQ,IAER,CACHx9C,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,GATOkI,EAWf,mDC9JA,MACI3mB,cACIpF,KAAK+gE,IAAMC,GAAOhB,cAClBhgE,KAAKihE,eAAiBjhE,KAAK+gE,IAAI5vD,MAAMjT,MACrC8B,KAAKkhE,gBAAkBlhE,KAAK+gE,IAAIvrD,OAAOtX,MACvC8B,KAAKmhE,gBAAkB,IAAIliE,WAAWe,KAAK+gE,IAAIK,OAAOr6D,OAAQ/G,KAAKihE,eAAgBjhE,KAAK+gE,IAAIM,cAC5FrhE,KAAKshE,iBAAmB,IAAIriE,WAAWe,KAAK+gE,IAAIK,OAAOr6D,OAAQ/G,KAAKkhE,gBAAiB,GACxF,CACDloD,OAEI,OADAhZ,KAAK+gE,IAAI/nD,OACFhZ,IACV,CACDue,OAAOld,GACH,MAAMggE,EAAerhE,KAAK+gE,IAAIM,aAC9B,GAAIhgE,EAAK3C,OAAS2iE,EACd,IAAK,IAAI5iE,EAAI,EAAGA,EAAI4C,EAAK3C,OAAQD,GAAK4iE,EAAc,CAChD,MAAM/L,EAASj0D,EAAKY,MAAMxD,EAAGA,EAAI4iE,GACjCrhE,KAAKmhE,gBAAgB/2D,IAAIkrD,GACzBt1D,KAAK+gE,IAAIxiD,OAAOve,KAAKihE,eAAgB3L,EAAO52D,OAC/C,MAGDsB,KAAKmhE,gBAAgB/2D,IAAI/I,GACzBrB,KAAK+gE,IAAIxiD,OAAOve,KAAKihE,eAAgB5/D,EAAK3C,QAE9C,OAAOsB,IACV,CACDuhE,QACIvhE,KAAK+gE,IAAIQ,MAAMvhE,KAAKkhE,iBACpB,MAAM1rD,EAAS,IAAIvW,WAAW,IAE9B,OADAuW,EAAOpL,IAAIpK,KAAKshE,kBACT9rD,CACV,iDCrCL,IAAIu/C,EAAmB/0D,IAAQA,GAAK+0D,iBAAoB,SAAU3pB,GAC9D,OAAQA,GAAOA,EAAI4pB,WAAc5pB,EAAM,CAAEtO,QAAWsO,EACxD,EACAx/B,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA8Bo0C,oBAAAp0C,EAAAq0C,eAAyBr0C,WAAmBA,EAAiBsE,OAAAtE,EAAA8S,OAAiB9S,wBAAgCA,EAAgCwzC,2BAAA,EAG5Kh1D,OAAO4K,eAAe4W,EAAS,wBAAyB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4tD,GAAad,qBAAsB,IACzIh1D,OAAO4K,eAAe4W,EAAS,wBAAyB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4tD,GAAab,qBAAsB,IACzI,MAAM94B,EAAWgtB,EAAgB7nC,IACjCE,EAAiB8S,OAAA6H,EAASjL,QAC1B,MAAMikC,EAAMC,GAAOhB,cACbiB,EAAiBF,EAAI5vD,MAAMjT,MAC3BgjE,EAAkBH,EAAIvrD,OAAOtX,MAC7ByjE,EAAkB,IAAI1iE,WAAW8hE,EAAIK,OAAOr6D,OAAQk6D,EAAgBF,EAAIM,cACxEO,EAAmB,IAAI3iE,WAAW8hE,EAAIK,OAAOr6D,OAAQm6D,EAAiB,IACtEW,EAAmB,IAAIpwC,YAAYsvC,EAAIK,OAAOr6D,OAAQk6D,EAAgBF,EAAIM,cAiBhF,SAASS,EAASzgE,GACd,GAAoB,KAAhBA,EAAK3C,OAAe,CACpBijE,EAAgBv3D,IAAI/I,GACpB0/D,EAAIe,SAASb,EAAgBC,GAC7B,MAAM1rD,EAAS,IAAIvW,WAAW,IAE9B,OADAuW,EAAOpL,IAAIw3D,GACJpsD,CACV,CACD,MAAM,IAAIlW,MAAM,2BACpB,CAVA8tB,EAAAsE,OAfA,SAAgBrwB,GACZ,GAAoB,KAAhBA,EAAK3C,OACL,OAAOojE,EAASzgE,GAEpB,GAAIA,EAAK3C,QAAUqiE,EAAIM,aAAc,CACjCM,EAAgBv3D,IAAI/I,GACpB0/D,EAAIrvC,OAAOrwB,EAAK3C,QAChB,MAAM8W,EAAS,IAAIvW,WAAW,IAE9B,OADAuW,EAAOpL,IAAIw3D,GACJpsD,CACV,CAGD,OAFAurD,EAAI/nD,OAyDR,SAAgB3X,GACZ,MAAMggE,EAAeN,EAAIM,aACzB,GAAIhgE,EAAK3C,OAAS2iE,EACd,IAAK,IAAI5iE,EAAI,EAAGA,EAAI4C,EAAK3C,OAAQD,GAAK4iE,EAAc,CAChD,MAAM/L,EAASj0D,EAAKY,MAAMxD,EAAGA,EAAI4iE,GACjCM,EAAgBv3D,IAAIkrD,GACpByL,EAAIxiD,OAAO0iD,EAAgB3L,EAAO52D,OACrC,MAGDijE,EAAgBv3D,IAAI/I,GACpB0/D,EAAIxiD,OAAO0iD,EAAgB5/D,EAAK3C,OAExC,CArEI6f,CAAOld,GAsEX,WACI0/D,EAAIQ,MAAML,GACV,MAAM1rD,EAAS,IAAIvW,WAAW,IAE9B,OADAuW,EAAOpL,IAAIw3D,GACJpsD,CACX,CA1EW+rD,EACX,EAYAn0C,EAAA00C,SAAmBA,EAYnB10C,EAAAq0C,eAXA,SAAwBM,EAAQC,GAC5B,GAAsB,KAAlBD,EAAOrjE,QAAmC,KAAlBsjE,EAAOtjE,OAAe,CAC9CijE,EAAgBv3D,IAAI23D,GACpBJ,EAAgBv3D,IAAI43D,EAAQ,IAC5BjB,EAAIe,SAASb,EAAgBC,GAC7B,MAAM1rD,EAAS,IAAIvW,WAAW,IAE9B,OADAuW,EAAOpL,IAAIw3D,GACJpsD,CACV,CACD,MAAM,IAAIlW,MAAM,2BACpB,EA8BA8tB,EAAAo0C,oBAtBA,SAA6BS,EAAMC,GAoB/B,OAlBAL,EAAiB,GAAKI,EAAK3+C,GAC3Bu+C,EAAiB,GAAKI,EAAK1+C,GAC3Bs+C,EAAiB,GAAKI,EAAKz+C,GAC3Bq+C,EAAiB,GAAKI,EAAKx+C,GAC3Bo+C,EAAiB,GAAKI,EAAKv+C,GAC3Bm+C,EAAiB,GAAKI,EAAKt+C,GAC3Bk+C,EAAiB,GAAKI,EAAKr+C,GAC3Bi+C,EAAiB,GAAKI,EAAKp+C,GAC3Bg+C,EAAiB,GAAKK,EAAK5+C,GAC3Bu+C,EAAiB,GAAKK,EAAK3+C,GAC3Bs+C,EAAiB,IAAMK,EAAK1+C,GAC5Bq+C,EAAiB,IAAMK,EAAKz+C,GAC5Bo+C,EAAiB,IAAMK,EAAKx+C,GAC5Bm+C,EAAiB,IAAMK,EAAKv+C,GAC5Bk+C,EAAiB,IAAMK,EAAKt+C,GAC5Bi+C,EAAiB,IAAMK,EAAKr+C,GAC5Bk9C,EAAIe,SAASb,EAAgBC,GAEtBQ,GAAad,sBAAsBgB,EAC9C,wBCnFAh2D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA+0C,aAAuB/0C,yBAAiCA,EAAiCg1C,uBAAAh1C,EAAAi1C,eAAyBj1C,EAAeZ,UAAA,EAEjI,MAAMrb,EAAQ,IAAIlS,WAAW,IAS7BmuB,EAAAZ,KALA,SAAchhB,EAAGzM,GAGb,OAFAoS,EAAM/G,IAAIoB,EAAG,GACb2F,EAAM/G,IAAIrL,EAAG,IACNujE,GAAYR,SAAS3wD,EAChC,EAQAic,EAAAi1C,eAHA,SAAwB72D,EAAGzM,GACvB,OAAOujE,GAAYd,oBAAoBh2D,EAAGzM,EAC9C,EAOAquB,EAAAg1C,uBALA,SAAgCxzC,GAC5B,MAAMkyC,EAAU,IAAI7hE,WAAW,IAE/B,OADAqjE,GAAYzB,sBAAsBjyC,EAAKkyC,EAAS,GACzCA,CACX,EAKA1zC,EAAAm1C,uBAHA,SAAgCzB,GAC5B,OAAOwB,GAAY1B,sBAAsBE,EAC7C,EAMA1zC,EAAA+0C,aAJA,SAAsB31C,GAElB,YAAuBntB,IAAhBmtB,EAAK9tB,MAChB,wBCjCAkN,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAyBo1C,eAAAp1C,EAAAq1C,SAAmBr1C,WAAmBA,EAAkBs1C,QAAAt1C,EAAAu1C,SAAmBv1C,WAAmBA,EAAqBw1C,WAAAx1C,EAAAy1C,UAAe,EAE3J,MAAMC,EAAe,GAAK,GAI1B,MAAMD,EACFz9D,YAAYke,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACpC7jB,KAAKsjB,GAAKA,EACVtjB,KAAKujB,GAAKA,EACVvjB,KAAKwjB,GAAKA,EACVxjB,KAAKyjB,GAAKA,EACVzjB,KAAK0jB,GAAKA,EACV1jB,KAAK2jB,GAAKA,EACV3jB,KAAK4jB,GAAKA,EACV5jB,KAAK6jB,GAAKA,CACb,CACDk/C,UAAUv1C,GACNxtB,KAAKsjB,GAAKkK,EAAKlK,GACftjB,KAAKujB,GAAKiK,EAAKjK,GACfvjB,KAAKwjB,GAAKgK,EAAKhK,GACfxjB,KAAKyjB,GAAK+J,EAAK/J,GACfzjB,KAAK0jB,GAAK8J,EAAK9J,GACf1jB,KAAK2jB,GAAK6J,EAAK7J,GACf3jB,KAAK4jB,GAAK4J,EAAK5J,GACf5jB,KAAK6jB,GAAK2J,EAAK3J,EAClB,EAELuJ,EAAAy1C,KAAeA,EAoCfz1C,EAAAw1C,WAhCA,cAAyBC,EACrBz9D,YAAY49D,EAAOC,GAKf,GAHAnrD,MAAM,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B9X,KAAKgjE,MAAQA,EACbhjE,KAAKijE,OAASA,GACTD,EACD,MAAM,IAAI1jE,MAAM,0BAEpB,IAAK2jE,EACD,MAAM,IAAI3jE,MAAM,0BAEvB,CACG4jE,qBAIA,OAHgB,OAAZljE,KAAKsjB,IACLxL,MAAMirD,UAAUI,GAAOd,eAAeriE,KAAK8yC,KAAKowB,eAAgBljE,KAAK+wB,MAAMmyC,iBAExEljE,IACV,CACGwtB,WACA,OAAO21C,GAAOf,uBAAuBpiE,KAAKkjE,eAC7C,CACDE,SACI,OAAO,CACV,CACGtwB,WACA,OAAO9yC,KAAKgjE,KACf,CACGjyC,YACA,OAAO/wB,KAAKijE,MACf,GAML,MAAMI,UAAiBR,EACnBp9D,gBAAgB+nB,GACZ,OAAOxtB,KAAKsjE,eAAeH,GAAOZ,uBAAuB/0C,GAC5D,CAID/nB,sBAAsB89D,GAClB,OAAO,IAAIF,EAASE,EAAGjgD,GAAIigD,EAAGhgD,GAAIggD,EAAG//C,GAAI+/C,EAAG9/C,GAAI8/C,EAAG7/C,GAAI6/C,EAAG5/C,GAAI4/C,EAAG3/C,GAAI2/C,EAAG1/C,GAC3E,CAIDpe,kBACI,OAAO,IAAI49D,EAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC5C,CAID59D,kBAAkBmB,GACd,OAAO,IAAIy8D,EAASz8D,EAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACjD,CAID+P,QACI,OAAO0sD,EAASC,eAAetjE,KAClC,CACGkjE,qBACA,OAAOljE,IACV,CACGwtB,WACA,OAAO21C,GAAOf,uBAAuBpiE,KACxC,CACDojE,SACI,OAAO,CACV,CACGtwB,WACA,MAAMxzC,MAAM,4BACf,CACGyxB,YACA,MAAMzxB,MAAM,6BACf,CACDkkE,aAAaniE,EAAMiG,EAAOq7C,GAEtBthD,EAAK+I,IAAIpK,KAAKwtB,KAAKvrB,MAAM,EAAG0gD,GAAOr7C,EACtC,CACDm8D,QAAQC,EAAWC,EAAaC,GAC5B,MAAMC,EAASpgE,KAAKC,MAAMigE,EAAc,GAExC,GAAID,EAAY,EAAG,CACf,MAAMI,EAAYH,EAAc,EAAK,EAC/B3pD,EAAI+pD,EAAS/jE,KAAM6jE,GACzB,OAAkB,IAAdH,EACO,IAAQ1pD,GAAK8pD,EAGb,MAAU9pD,GAAK8pD,CAE7B,CAEI,GAAkB,IAAdJ,EACL,OAAOK,EAAS/jE,KAAM6jE,KAAY,EAGjC,GAAkB,IAAdH,EAAiB,CACtB,MAAMlsC,EAAMusC,EAAS/jE,KAAM6jE,GACrB7gE,EAAO+gE,EAAS/jE,KAAM6jE,EAAS,GACrC,OAAa,IAAT7gE,EACOw0B,IAAQ,GAEA,IAAVx0B,IAAwB,IAATw0B,GAAcosC,EAE3B/iB,UAGCrpB,IAAQ,IAAMx0B,IAAS,GAAK8/D,CAE3C,CAGG,MAAMxjE,MAAM,gBAEnB,CACD0kE,cAAcN,EAAWC,GACrB,MAAME,EAASpgE,KAAKC,MAAMigE,EAAc,GAExC,GAAID,EAAY,EAAG,CACf,MAAMI,EAAYH,EAAc,EAAK,EAC/B3pD,EAAI+pD,EAAS/jE,KAAM6jE,GACzB,OAAkB,IAAdH,EACOt/D,OAAO,IAAQ4V,GAAK8pD,GAGpB1/D,OAAO,MAAU4V,GAAK8pD,EAEpC,CAEI,GAAkB,IAAdJ,EACL,OAAOt/D,OAAO2/D,EAAS/jE,KAAM6jE,KAAY,GAGxC,CACD,MAAMI,EAASxgE,KAAKm4B,KAAK8nC,EAAY,GACrC,IAAI5kD,EAAI1a,OAAO,GACf,IAAK,IAAI3F,EAAI,EAAGA,EAAIwlE,EAAQxlE,IACxBqgB,GAAK1a,OAAO2/D,EAAS/jE,KAAM6jE,EAASplE,KAAO,IAAM2F,OAAO,GAAK3F,GAEjE,OAAOqgB,CACV,CACJ,CACDolD,QAAQR,EAAWC,EAAazlE,EAAO0lE,GACnC,MAAMC,EAASpgE,KAAKC,MAAMigE,EAAc,GAExC,GAAID,EAAY,EAAG,CACf,MAAMI,EAAYH,EAAc,EAAK,EACrC,IAAI3pD,EAAI+pD,EAAS/jE,KAAM6jE,GACL,IAAdH,GACA1pD,KAAO,KAAQ8pD,GACf9pD,GAAK,GAAmB8pD,IAGxB9pD,KAAO,OAAU8pD,GACjB9pD,GAAK,GAAqB8pD,GAE9BrB,EAASziE,KAAM6jE,EAAQ7pD,EAC1B,MAEI,GAAkB,IAAd0pD,EACLjB,EAASziE,KAAM6jE,EAAQ3lE,OAGtB,IAAkB,IAAdwlE,EAYL,MAAMpkE,MAAM,iBAXEuhD,WAAV3iD,GAAsB0lE,GACtBnB,EAASziE,KAAM6jE,GAAS,GACxBpB,EAASziE,KAAM6jE,EAAS,GAAI,KAG5BpB,EAASziE,KAAM6jE,EAAgB,WAAR3lE,GACvBukE,EAASziE,KAAM6jE,EAAS,EAAI3lE,EAAQ4kE,EAAgB,YAM3D,CACJ,CACDqB,cAAcT,EAAWC,EAAaS,GAClC,MAAMP,EAASpgE,KAAKC,MAAMigE,EAAc,GAExC,GAAID,EAAY,EAAG,CACf,MAAMxlE,EAAQyE,OAAOyhE,GACfN,EAAYH,EAAc,EAAK,EACrC,IAAI3pD,EAAI+pD,EAAS/jE,KAAM6jE,GACL,IAAdH,GACA1pD,KAAO,KAAQ8pD,GACf9pD,GAAK,GAAmB8pD,IAGxB9pD,KAAO,OAAU8pD,GACjB9pD,GAAK,GAAqB8pD,GAE9BrB,EAASziE,KAAM6jE,EAAQ7pD,EAC1B,MAEI,GAAkB,IAAd0pD,EACLjB,EAASziE,KAAM6jE,EAAQlhE,OAAOyhE,QAG7B,CACD,MAAMC,EAAOR,EAASpgE,KAAKm4B,KAAK8nC,EAAY,GAC5C,IAAK,IAAIjlE,EAAIolE,EAAQplE,EAAI4lE,EAAM5lE,IAC3BgkE,EAASziE,KAAMvB,EAAGkE,OAAOyhE,EAAUhgE,OAAO,cAC1CggE,IAAqBhgE,OAAO,GAEnC,CACJ,CACDkgE,cAAcZ,EAAWC,EAAazlE,GAClC,MAAM2lE,EAASpgE,KAAKC,MAAMigE,EAAc,GAExC,GAAID,EAAY,EAEZlB,EAAexiE,KAAM6jE,EAAQ3lE,GADXylE,EAAc,EAAK,QAIpC,GAAkB,IAAdD,EACLlB,EAAexiE,KAAM6jE,EAAQ3lE,OAG5B,CACD,MAAMmmE,EAAOR,EAASpgE,KAAKm4B,KAAK8nC,EAAY,GAC5C,IAAK,IAAIjlE,EAAIolE,EAAQplE,EAAI4lE,EAAM5lE,IAC3B+jE,EAAexiE,KAAMvB,EAAW,WAARP,GACxBA,IAAU,EAEjB,CACJ,EAaL,SAAS6lE,EAASj2C,EAAM+1C,GACpB,GAAe,IAAXA,EACA,OAAO/1C,EAAKxK,GACX,GAAe,IAAXugD,EACL,OAAO/1C,EAAKvK,GACX,GAAe,IAAXsgD,EACL,OAAO/1C,EAAKtK,GACX,GAAe,IAAXqgD,EACL,OAAO/1C,EAAKrK,GACX,GAAe,IAAXogD,EACL,OAAO/1C,EAAKpK,GACX,GAAe,IAAXmgD,EACL,OAAO/1C,EAAKnK,GACX,GAAe,IAAXkgD,EACL,OAAO/1C,EAAKlK,GACX,GAAe,IAAXigD,EACL,OAAO/1C,EAAKjK,GAEZ,MAAMvkB,MAAM,aACpB,CAEA,SAASmjE,EAAS30C,EAAM+1C,EAAQ3lE,GAC5B,GAAe,IAAX2lE,EACA/1C,EAAKxK,GAAKplB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKvK,GAAKrlB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKtK,GAAKtlB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKrK,GAAKvlB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKpK,GAAKxlB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKnK,GAAKzlB,OACT,GAAe,IAAX2lE,EACL/1C,EAAKlK,GAAK1lB,MACT,IAAe,IAAX2lE,EAGL,MAAMvkE,MAAM,cAFZwuB,EAAKjK,GAAK3lB,CAEe,CACjC,CAEA,SAASskE,EAAe10C,EAAM+1C,EAAQ3lE,GAClC,GAAe,IAAX2lE,EACA/1C,EAAKxK,IAAMplB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKvK,IAAMrlB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKtK,IAAMtlB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKrK,IAAMvlB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKpK,IAAMxlB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKnK,IAAMzlB,OACV,GAAe,IAAX2lE,EACL/1C,EAAKlK,IAAM1lB,MACV,IAAe,IAAX2lE,EAGL,MAAMvkE,MAAM,cAFZwuB,EAAKjK,IAAM3lB,CAEc,CACjC,CAxEAkvB,EAAAi2C,SAAmBA,EAInBj2C,EAAAu1C,SAHA,SAAkBt8D,GACd,OAAOA,CACX,EAOA+mB,EAAAs1C,QALA,SAAiB6B,EAAOC,GACpB,OAAO,SAAUn+D,GACb,OAAOm+D,EAAMD,EAAMl+D,GAC3B,CACA,EAsBA+mB,EAAA22C,SAAmBA,EAqBnB32C,EAAAq1C,SAAmBA,EAqBnBr1C,EAAAo1C,eAAyBA,wBCpVzB52D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmBq3C,cAAA,EAEnB,MAAMC,EAAS,CAACC,GAAOtB,SAASuB,YAqBhCx3C,EAAAq3C,SARA,SAAkBI,GACd,GAAIA,GAAUH,EAAOhmE,OACjB,IAAK,IAAID,EAAIimE,EAAOhmE,OAAQD,GAAKomE,EAAQpmE,IACrCimE,EAAOjmE,GAAK,IAAIkmE,GAAO/B,WAAW8B,EAAOjmE,EAAI,GAAIimE,EAAOjmE,EAAI,IAGpE,OAAOimE,EAAOG,EAClB,wBCnBA,SAASC,EAAmBC,EAAQ12D,GAChC,IAAIyf,EAAOi3C,EACX,KAAO12D,EAAQ,GACXyf,EAAO,IAAI62C,GAAO/B,WAAW90C,EAAMA,GACnCzf,IAEJ,OAAOyf,CACX,CAXAliB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA43C,sBAAgC53C,EAA8B63C,oBAAA73C,EAAA03C,wBAA6B,EAW3F13C,EAAA03C,mBAA6BA,EAwB7B13C,EAAA63C,oBAvBA,SAASA,EAAoBF,EAAQ12D,EAAO3P,GACxC,MAAMw6D,EAAY,GAAK7qD,EACvB,GAAI3P,EAASw6D,EACT,MAAM,IAAI55D,MAAM,sBACpB,GAAIZ,IAAWw6D,EACX,OAAO4L,EAAmBC,EAAQ12D,GACtC,GAAc,IAAVA,EAAa,CACb,GAAe,IAAX3P,EACA,OAAOqmE,EAEP,MAAM,IAAIzlE,MAAM,iBACvB,CACD,GAAc,IAAV+O,EACA,OAAO,IAAIs2D,GAAO/B,WAAWmC,EAAQrmE,EAAS,EAAIqmE,EAASG,GAAWT,SAAS,IAEnF,MAAMU,EAAQjM,GAAa,EAC3B,OAAIx6D,GAAUymE,EACH,IAAIR,GAAO/B,WAAWqC,EAAoBF,EAAQ12D,EAAQ,EAAG3P,GAASwmE,GAAWT,SAASp2D,EAAQ,IAGlG,IAAIs2D,GAAO/B,WAAWkC,EAAmBC,EAAQ12D,EAAQ,GAAI42D,EAAoBF,EAAQ12D,EAAQ,EAAG3P,EAASymE,GAE5H,EAwCA/3C,EAAA43C,sBAlCA,SAA+BI,EAAO/2D,GAElC,GAAI+2D,EAAM1mE,OADQ,GAAK2P,EAEnB,MAAM,IAAI/O,MAAM,gBAAgB8lE,EAAM1mE,iCAAiC2P,KAE3E,GAAqB,IAAjB+2D,EAAM1mE,OACN,OAAOwmE,GAAWT,SAASp2D,GAE/B,GAAc,IAAVA,EACA,OAAO+2D,EAAM,GAEjB,GAAc,IAAV/2D,EACA,OAEQ,IAAIs2D,GAAO/B,WAAWwC,EAAM,GAF7BA,EAAM1mE,OAAS,EAEkB0mE,EAAM,GAENF,GAAWT,SAAS,IAEhE,IAAInF,EAAQ8F,EAAM1mE,OAClB,IAAK,IAAIsV,EAAI3F,EAAO2F,EAAI,EAAGA,IAAK,CAC5B,MAAMqxD,EAAiB/F,EAAQ,EACzBgG,EAAYhG,EAAQ+F,EAE1B,IAAK,IAAI5mE,EAAI,EAAGA,EAAI6mE,EAAW7mE,GAAK,EAChC2mE,EAAM3mE,EAAI,GAAK,IAAIkmE,GAAO/B,WAAWwC,EAAM3mE,GAAI2mE,EAAM3mE,EAAI,IAEzD4mE,EAAiB,IACjBD,EAAME,EAAY,GAAK,IAAIX,GAAO/B,WAAWwC,EAAME,GAAYJ,GAAWT,SAASp2D,EAAQ2F,KAG/FsrD,EAAQgG,EAAY,EAAID,CAC3B,CACD,OAAOD,EAAM,EACjB,wBC9DA,SAASG,EAA4BpvC,EAAU7uB,EAAO7E,GAClD,MAAMkgD,EAAOlgD,EAAM6E,EAIbk+D,EAAgB/hE,KAAKC,MAAMi/C,EAAO,IAClC8iB,EAAY,IAAIrnE,MAAMqF,KAAKm4B,KAAK+mB,EAAO,KAG7C,IAAK,IAAIlkD,EAAI,EAAGA,EAAI+mE,EAAe/mE,IAAK,CACpC,MAAM0L,EAAS7C,EAAY,GAAJ7I,EACvBgnE,EAAUhnE,GAAK,IAAIkmE,GAAOtB,SAASltC,EAASxwB,SAASwE,EAAS,GAAG,GAAOgsB,EAASxwB,SAASwE,EAAS,GAAG,GAAOgsB,EAASxwB,SAASwE,EAAS,GAAG,GAAOgsB,EAASxwB,SAASwE,EAAS,IAAI,GAAOgsB,EAASxwB,SAASwE,EAAS,IAAI,GAAOgsB,EAASxwB,SAASwE,EAAS,IAAI,GAAOgsB,EAASxwB,SAASwE,EAAS,IAAI,GAAOgsB,EAASxwB,SAASwE,EAAS,IAAI,GAC5U,CAED,MAAMu7D,EAAiB/iB,EAAO,GAE9B,GAAI+iB,EAAiB,EAAG,CACpB,MAAM53C,EAAO,IAAI62C,GAAOtB,SAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtDoC,EAAUD,GAAiB13C,EAE3B,MAAM63C,EAAaliE,KAAKC,MAAMgiE,EAAiB,GAC/C,IAAK,IAAI1rD,EAAI,EAAGA,EAAI2rD,EAAY3rD,IAC5B2qD,GAAOlC,SAAS30C,EAAM9T,EAAGmc,EAASxwB,SAAS2B,EAAwB,GAAhBk+D,EAAyB,EAAJxrD,GAAO,IAEnF,MAAM4rD,EAAkBjjB,EAAO,EAC/B,GAAIijB,EAAkB,EAAG,CACrB,IAAI5rD,EAAI,EACR,IAAK,IAAIvb,EAAI,EAAGA,EAAImnE,EAAiBnnE,IACjCub,GAAKmc,EAAS0vC,SAASv+D,EAAQq7C,EAAOijB,EAAkBnnE,IAAW,EAAJA,EAEnEkmE,GAAOlC,SAAS30C,EAAM63C,EAAY3rD,EACrC,CACJ,CACD,OAAOyrD,CACX,CA9CA75D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA04C,uBAAiC14C,EAAsCm4C,4BAAAn4C,EAAA24C,4BAAiC,EAOxG34C,EAAA24C,uBAJA,SAAgC13D,EAAO8nB,EAAU7uB,EAAO7E,GACpD,MAAMgjE,EAAYF,EAA4BpvC,EAAU7uB,EAAO7E,GAC/D,OAAOujE,GAAUhB,sBAAsBS,EAAWp3D,EACtD,EAwCA+e,EAAAm4C,4BAAsCA,EA0CtCn4C,EAAA04C,uBAtCA,SAAgC3vC,EAAU7uB,EAAOq7C,EAAMyiB,GAKnD,MAAMM,EAAiB/iB,EAAO,GAGxB6iB,EAAgB/hE,KAAKC,MAAMi/C,EAAO,IACxC,IAAK,IAAIlkD,EAAI,EAAGA,EAAI+mE,EAAe/mE,IAAK,CACpC,MAAMqvB,EAAOs3C,EAAM3mE,GACb0L,EAAS7C,EAAY,GAAJ7I,EACvB03B,EAASnwB,SAASmE,EAAS,EAAG2jB,EAAKxK,IAAI,GACvC6S,EAASnwB,SAASmE,EAAS,EAAG2jB,EAAKvK,IAAI,GACvC4S,EAASnwB,SAASmE,EAAS,EAAG2jB,EAAKtK,IAAI,GACvC2S,EAASnwB,SAASmE,EAAS,GAAI2jB,EAAKrK,IAAI,GACxC0S,EAASnwB,SAASmE,EAAS,GAAI2jB,EAAKpK,IAAI,GACxCyS,EAASnwB,SAASmE,EAAS,GAAI2jB,EAAKnK,IAAI,GACxCwS,EAASnwB,SAASmE,EAAS,GAAI2jB,EAAKlK,IAAI,GACxCuS,EAASnwB,SAASmE,EAAS,GAAI2jB,EAAKjK,IAAI,EAC3C,CAED,GAAI6hD,EAAiB,EAAG,CACpB,MAAM53C,EAAOs3C,EAAMI,GAEbG,EAAaliE,KAAKC,MAAMgiE,EAAiB,GAC/C,IAAK,IAAI1rD,EAAI,EAAGA,EAAI2rD,EAAY3rD,IAC5Bmc,EAASnwB,SAASsB,EAAwB,GAAhBk+D,EAAyB,EAAJxrD,EAAO2qD,GAAOZ,SAASj2C,EAAM9T,IAAI,GAEpF,MAAM4rD,EAAkBjjB,EAAO,EAC/B,GAAIijB,EAAkB,EAAG,CACrB,MAAM5rD,EAAI2qD,GAAOZ,SAASj2C,EAAM63C,GAChC,IAAK,IAAIlnE,EAAI,EAAGA,EAAImnE,EAAiBnnE,IACjC03B,EAAS8vC,SAAS3+D,EAAQq7C,EAAOijB,EAAkBnnE,EAAIub,GAAU,EAAJvb,EAAU,IAE9E,CACJ,CACL,wBCxFAmN,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA84C,0BAAoC94C,EAA4B+4C,kBAAA/4C,EAAAg5C,qBAA0B,EAG1Fh5C,EAAAg5C,gBAA0B,0BAoB1Bh5C,EAAA+4C,kBAnBA,SAA2BE,EAAUx1C,GACjC,MAAMy1C,EAAY,GAClB,IAAIx4C,EAAOu4C,EACX,IAAK,MAAM5nE,KAAK8nE,GAAS7G,eAAe7uC,GACpC,GAAIpyB,EAAG,CACH,GAAIqvB,EAAKs1C,SACL,MAAM,IAAI9jE,MAAM8tB,EAAQg5C,iBAC5BE,EAAU7lE,KAAKqtB,EAAKglB,KAAKtlB,MACzBM,EAAOA,EAAKiD,KACf,KACI,CACD,GAAIjD,EAAKs1C,SACL,MAAM,IAAI9jE,MAAM8tB,EAAQg5C,iBAC5BE,EAAU7lE,KAAKqtB,EAAKiD,MAAMvD,MAC1BM,EAAOA,EAAKglB,IACf,CAEL,MAAO,CAAChlB,EAAKN,KAAM84C,EAAU3jC,UACjC,EAiBAvV,EAAA84C,0BAfA,SAAmC9G,EAAQoH,EAAMF,GAC7C,IAAIx4C,EAAO62C,GAAOtB,SAASoD,SAASD,GACpC,MAAM32C,EAAIy2C,EAAUrkE,QAAQ0gC,UAC5B,KAAOy8B,EAAS,GAAG,CACf,MAAMsH,EAAU/B,GAAOtB,SAASoD,SAAS52C,EAAEplB,OAEvCqjB,EADAsxC,EAASh7D,OAAO,KAAOA,OAAO,GACvB,IAAIugE,GAAO/B,WAAW90C,EAAM44C,GAG5B,IAAI/B,GAAO/B,WAAW8D,EAAS54C,GAE1CsxC,GAAkBh7D,OAAO,EAC5B,CACD,OAAO0pB,CACX,8BCvCAliB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA6Bu5C,mBAAAv5C,EAAAw5C,oBAA8Bx5C,EAA0By5C,gBAAAz5C,EAAA05C,gBAA0B15C,EAAyB25C,eAAA35C,EAAA45C,eAAyB55C,EAAwB65C,cAAA75C,EAAA85C,QAAkB95C,EAAkB+5C,QAAA/5C,EAAAg6C,UAAe,EAa5O,MAAMA,EACFhiE,YAAY0oB,EAAMu5C,GACdrnE,KAAKsnE,UAAYx5C,EACbu5C,IAEIrnE,KAAKqnE,KADc,oBAAZE,QACKF,EAGA,IAAIE,QAAQF,GAGnC,CAID5hE,uBAAuB+hE,GACnB,OAAO,IAAIJ,EAAKK,GAAQC,oBAAoBF,GAC/C,CAIGnB,eACA,OAAOrmE,KAAKsnE,SACf,CAKGjB,aAASsB,GAET,GADA3nE,KAAKsnE,UAAYK,EACb3nE,KAAKqnE,KAIL,GAAuB,oBAAZE,QACPvnE,KAAKqnE,KAAKM,OAET,CACD,MAAMC,EAAU5nE,KAAKqnE,KAAKQ,QACtBD,EACAA,EAAQD,GAIR3nE,KAAKqnE,UAAOhoE,CAEnB,CAER,CAIGmuB,WACA,OAAOxtB,KAAKqmE,SAAS74C,IACxB,CAID7W,QACI,OAAO,IAAIywD,EAAKpnE,KAAKqmE,SACxB,CAODyB,WAAWj3C,GACP,OAAO,IAAIu2C,EAAKpnE,KAAKmnE,QAAQt2C,GAAS/C,GAAS9tB,KAAKknE,QAAQr2C,EAAO/C,GACtE,CAIDq5C,QAAQ/H,GACJ,OAAO+H,EAAQnnE,KAAKqmE,SAAUjH,EACjC,CAMD4H,eAAe34D,EAAOwiB,GAClB,OAAOm2C,EAAehnE,KAAKqmE,SAAUh4D,EAAOwiB,EAC/C,CAIDk3C,QAAQl3C,GACJ,OAAO7wB,KAAKmnE,QAAQt2C,GAAOrD,IAC9B,CAID05C,QAAQ9H,EAAQ/4D,GACZrG,KAAKqmE,SAAWa,EAAQlnE,KAAKqmE,SAAUjH,EAAQ/4D,EAClD,CAQD4gE,cAAc7H,EAAQ4I,GAClBhoE,KAAKqmE,SAAWY,EAAcjnE,KAAKqmE,SAAUjH,EAAQ4I,EACxD,CAMDjB,eAAe14D,EAAOwiB,EAAO/C,GACzB9tB,KAAKqmE,SAAWU,EAAe/mE,KAAKqmE,SAAUh4D,EAAOwiB,EAAO/C,EAC/D,CAMDm6C,QAAQp3C,EAAOrD,GACXxtB,KAAKknE,QAAQr2C,EAAO8zC,GAAOtB,SAASoD,SAASj5C,GAChD,CASDq5C,gBAAgBx4D,EAAOkxD,EAAYD,GAC/B,OAAOuH,EAAgB7mE,KAAKqmE,SAAUh4D,EAAOkxD,EAAYD,EAC5D,CASDsH,oBAAoBv4D,EAAOkxD,EAAYD,GACnC,OAAOsH,EAAoB5mE,KAAKqmE,SAAUh4D,EAAOkxD,EAAYD,EAChE,CAID4I,eAAer3C,GACX,OAAOs3C,GAAShC,kBAAkBnmE,KAAKqmE,SAAUx1C,GAAO,EAC3D,CAMDu3C,SAASj3D,GACL,OAAOs2D,GAAQY,YAAYroE,KAAKqmE,SAAUl1D,EAC7C,EAML,SAASg2D,EAAQd,EAAUjH,GACvB,MAAMkJ,EAAkB/B,GAAStH,yBAAyBG,GAC1D,IAAItxC,EAAOu4C,EACX,IAAK,IAAI5nE,EAAI,EAAGA,EAAI6pE,EAAgB5pE,OAAQD,IAAK,CAC7C,GAAIqvB,EAAKs1C,SACL,MAAM,IAAI9jE,MAAM,sCAAsCb,KAG1DqvB,EAA8B,MAAvBw6C,EAAgB7pE,GAAaqvB,EAAKiD,MAAQjD,EAAKglB,IACzD,CACD,OAAOhlB,CACX,CAMA,SAASo5C,EAAQb,EAAUjH,EAAQ/4D,GAE/B,MAAMiiE,EAAkB/B,GAAStH,yBAAyBG,GAE1D,OAAOmJ,EAAiBD,EADJE,EAAenC,EAAUiC,GACSjiE,EAC1D,CAWA,SAAS4gE,EAAcZ,EAAUjH,EAAQ4I,GAErC,MAAMM,EAAkB/B,GAAStH,yBAAyBG,GACpDqJ,EAAcD,EAAenC,EAAUiC,GACvCI,EAAiBD,EAAYA,EAAY/pE,OAAS,GAIxD,OAAO6pE,EAAiBD,EAAiBG,EADzBT,EADY,MADZM,EAAgBA,EAAgB5pE,OAAS,GACvBgqE,EAAe33C,MAAQ23C,EAAe51B,MAG5E,CAMA,SAAS01B,EAAenC,EAAU1G,GAC9B,IAAI7xC,EAAOu4C,EAGX,MAAMoC,EAAc,CAACpC,GAGrB,IAAK,IAAI5nE,EAAI,EAAGA,EAAIkhE,EAAUjhE,OAAS,EAAGD,IAGlCqvB,EADiB,MAAjB6xC,EAAUlhE,GACHqvB,EAAKiD,MAGLjD,EAAKglB,KAEhB21B,EAAYhoE,KAAKqtB,GAErB,OAAO26C,CACX,CAKA,SAASF,EAAiB5I,EAAW8I,EAAaE,GAC9C,IAAI76C,EAAO66C,EAIX,IAAK,IAAIlqE,EAAIkhE,EAAUjhE,OAAS,EAAGD,GAAK,EAAGA,IAEnCqvB,EADiB,MAAjB6xC,EAAUlhE,GACH,IAAIkmE,GAAO/B,WAAW6F,EAAYhqE,EAAI,GAAGq0C,KAAMhlB,GAG/C,IAAI62C,GAAO/B,WAAW90C,EAAM26C,EAAYhqE,EAAI,GAAGsyB,OAG9D,OAAOjD,CACX,CAIA,SAASk5C,EAAeX,EAAUh4D,EAAOwiB,GACrC,GAAc,IAAVxiB,EACA,OAAOg4D,EAEX,GAAc,IAAVh4D,EACA,OAAiB,IAAVwiB,EAAcw1C,EAASvzB,KAAOuzB,EAASt1C,MAKlD,IAAIjD,EAAOu4C,EACX,IAAK,IAAIryD,EAHU3F,EAAQ,EAGF2F,GAFJ,EAEuBA,IACxC8Z,EAAO86C,EAAW50D,EAAG6c,GAAS/C,EAAKglB,KAAOhlB,EAAKiD,MAEnD,OAAOjD,CACX,CAKA,SAASi5C,EAAeV,EAAUwC,EAAYh4C,EAAOi4C,GAEjD,OAAOhC,EAAgBT,EAAUwC,EAAY,CAACh4C,GAAQ,CAACi4C,GAC3D,CAeA,SAAShC,EAAgBT,EAAUwC,EAAYE,EAAS3D,GAcpD,GAAmB,IAAfyD,EACA,OAAOzD,EAAM1mE,OAAS,EAAI0mE,EAAM,GAAKiB,EAMzC,MAAM2C,EAAkB,IAAI5qE,MAAMyqE,GAQ5BI,EAAsB,IAAI7qE,MAAMyqE,GAEhCK,EAAaL,EAAa,EAEhC,IAAIM,EAASD,EACTp7C,EAAOu4C,EAEX2C,EAAgBE,GAAc7C,EAK9B,IAAK,IAAI5nE,EAAI,EAAGA,EAAIsqE,EAAQrqE,OAAQD,IAAK,CACrC,MAAMoyB,EAAQk4C,EAAQtqE,GAOtB,IAAK,IAAIuV,EAAIm1D,EAAQn1D,EAjBJ,EAiBsBA,IACnC8Z,EAAO86C,EAAW50D,EAAG6c,GAAS/C,EAAKglB,KAAOhlB,EAAKiD,MAC/Ci4C,EAAgBh1D,EAAI,GAAK8Z,EAE7Bq7C,EArBiB,EAoCsB,IAAP,EAARt4C,GAGhBA,EAAQ,IAAMk4C,EAAQtqE,EAAI,IAC1BqvB,EAAO,IAAI62C,GAAO/B,WAAWwC,EAAM3mE,GAAI2mE,EAAM3mE,EAAI,IAEjDA,KAGAqvB,EAAO,IAAI62C,GAAO/B,WAAWwC,EAAM3mE,GAAIqvB,EAAKiD,OAIhDjD,EAAO,IAAI62C,GAAO/B,WAAW90C,EAAKglB,KAAMsyB,EAAM3mE,IAKlD,MAAM2qE,EAAc3qE,GAAKsqE,EAAQrqE,OAAS,EACpC2qE,EAAaD,EAAcF,EAsQrCzlE,KAAKm4B,KAAKn4B,KAAK6lE,QAtQkDz4C,EAAOk4C,EAAQtqE,EAAI,MAwQhF,EAvPA,IAAK,IAAIuV,EAAIu1D,EAAkBv1D,GAAKq1D,EAAYr1D,IAG5C,GAAI40D,EAAW50D,EAAG6c,GACVu4C,GAAep1D,IAAMq1D,EAGrBv7C,EAAO,IAAI62C,GAAO/B,WAAW90C,EAAMk7C,EAAgBh1D,GAAG+c,QAItDk4C,EAAoBj1D,GAAK8Z,EACzBA,EAAOk7C,EAAgBh1D,QAG1B,CACD,MAAMw1D,EAAWP,EAAoBj1D,QACpB3U,IAAbmqE,GACA17C,EAAO,IAAI62C,GAAO/B,WAAW4G,EAAU17C,GACvCm7C,EAAoBj1D,QAAK3U,GAGzByuB,EAAO,IAAI62C,GAAO/B,WAAWoG,EAAgBh1D,GAAG8+B,KAAMhlB,EAE7D,CAILq7C,EAASE,CACZ,CAED,OAAOv7C,CACX,CAcA,SAAS+4C,EAAgBR,EAAUh4D,EAAOkxD,EAAYD,GAElD,GAAc,IAAVjxD,EACA,OAAsB,IAAfkxD,GAAoBD,EAAQ,EAAI,CAAC+G,GAAY,GAEnD,GAAc,IAAVh4D,EACL,OAAc,IAAVixD,EACO,GAEQ,IAAVA,EACiB,IAAfC,EAAmB,CAAC8G,EAASvzB,MAAQ,CAACuzB,EAASt1C,OAG/C,CAACs1C,EAASvzB,KAAMuzB,EAASt1C,OAIxC,MAAMm4C,EAAa76D,EAAQ,EAE3B,IAAI86D,EAASD,EACTp7C,EAAOu4C,EAGX,MAAM2C,EAAkB,IAAI5qE,MAAMiQ,GAC5Bo7D,EAAc,IAAIrrE,MAAMiQ,GACxB+2D,EAAQ,IAAIhnE,MAAMkhE,GAExB0J,EAAgBE,GAAc7C,EAC9B,IAAK,IAAI5nE,EAAI,EAAGA,EAAI6gE,EAAO7gE,IAAK,CAC5B,IAAK,IAAIuV,EAAIm1D,EAAQn1D,GAXJ,EAWuBA,IAAK,CACrCA,IAAMm1D,IACNH,EAAgBh1D,GAAK8Z,GAEzB,MAAM47C,EAASd,EAAW50D,EAAGurD,EAAa9gE,GAC1CgrE,EAAYz1D,GAAK01D,EACjB57C,EAAO47C,EAAS57C,EAAKglB,KAAOhlB,EAAKiD,KACpC,CACDq0C,EAAM3mE,GAAKqvB,EAGX,IAAK,IAAI9Z,EAtBQ,EAsBUA,GAAKk1D,EAAYl1D,IACxC,IAAuB,IAAnBy1D,EAAYz1D,GAAa,CACzBm1D,EAASn1D,EACT,KACH,CAEL8Z,EAAOk7C,EAAgBG,EAC1B,CACD,OAAO/D,CACX,CAKA,SAAUwB,EAAoBP,EAAUh4D,EAAOkxD,EAAYD,GACvD,MAAMqK,EAAWpK,EAAaD,EAExB4J,EAAa76D,EAAQ,EAE3B,IAAI86D,EAASD,EACTp7C,EAAOu4C,EAGX,MAAM2C,EAAkB,IAAI5qE,MAAMiQ,GAC5Bo7D,EAAc,IAAIrrE,MAAMiQ,GAE9B26D,EAAgBE,GAAc7C,EAC9B,IAAK,IAAIx1C,EAAQ0uC,EAAY1uC,EAAQ84C,EAAU94C,IAAS,CACpD,IAAK,IAAI7c,EAAIm1D,EAAQn1D,GAVJ,EAUuBA,IAAK,CACrCA,IAAMm1D,IACNH,EAAgBh1D,GAAK8Z,GAEzB,MAAM47C,EAASd,EAAW50D,EAAG6c,GAC7B44C,EAAYz1D,GAAK01D,EACjB57C,EAAO47C,EAAS57C,EAAKglB,KAAOhlB,EAAKiD,KACpC,OACKjD,EAGN,IAAK,IAAI9Z,EArBQ,EAqBUA,GAAKk1D,EAAYl1D,IACxC,IAAuB,IAAnBy1D,EAAYz1D,GAAa,CACzBm1D,EAASn1D,EACT,KACH,CAEL8Z,EAAOk7C,EAAgBG,EAC1B,CACL,CAqFA,SAASP,EAAWO,EAAQt4C,GACxB,GAAIs4C,EAAS,GAAI,CAIb,MACMvkD,EAAO,GAAMukD,EAAS,GAC5B,OAFiBt4C,EAAQ,GAAK,KAAQ,EAEpBjM,KAAUA,CAC/B,CACD,MAAMA,EAAO,GAAKukD,EAClB,OAAQt4C,EAAQjM,KAAUA,CAC9B,CAhdAwI,EAAAg6C,KAAeA,EAgBfh6C,EAAA+5C,QAAkBA,EAWlB/5C,EAAA85C,QAAkBA,EAoBlB95C,EAAA65C,cAAwBA,EA8DxB75C,EAAA45C,eAAyBA,EAQzB55C,EAAA25C,eAAyBA,EAuJzB35C,EAAA05C,gBAA0BA,EA+D1B15C,EAAAy5C,gBAA0BA,EAsC1Bz5C,EAAAw5C,oBAA8BA,EA6E9Bx5C,EAAAu5C,mBArDA,SAA4BN,EAAUwC,EAAYh4C,GAc9C,GAAIA,EAAQ,EACR,OAAOq0C,GAAWT,SAASoE,GAM/B,MAAMG,EAAkB,IAAI5qE,MAAMyqE,GAE5BK,EAAaL,EAAa,EAEhC,IAAIM,EAASD,EACTp7C,EAAOu4C,EAEX2C,EAAgBE,GAAc7C,EAI9B,IAAK,IAAIryD,EAAIm1D,EAAQn1D,GARA,EAQmBA,IACpC8Z,EAAO86C,EAAW50D,EAAG6c,GAAS/C,EAAKglB,KAAOhlB,EAAKiD,MAC/Ci4C,EAAgBh1D,EAAI,GAAK8Z,EAE7Bq7C,EAZqB,EAcrB,IAAK,IAAIn1D,EAdY,EAcMA,GAAKk1D,EAAYl1D,IAIpC8Z,EAHA86C,EAAW50D,EAAG6c,GAGP,IAAI8zC,GAAO/B,WAAW90C,EAAMo3C,GAAWT,SAASzwD,IAKhD,IAAI2wD,GAAO/B,WAAWoG,EAAgBh1D,GAAG8+B,KAAMhlB,GAI9D,OAAOA,CACX,wBC9kBA,SAAS87C,EAAuBxK,GAC5B,MAAMn2B,EAAO,IAAI4gC,IACXC,EAAS,IAAID,IACnB,IAAIhlD,EAAIu6C,EACR,KAAOv6C,EAAEnmB,OAAS,GAAG,CACjBuqC,EAAK3hB,IAAIzC,GACT,MAAMklD,EAAUllD,EAAEA,EAAEnmB,OAAS,GACvBsrE,EAASnlD,EAAEzS,UAAU,EAAGyS,EAAEnmB,OAAS,GACzCorE,EAAOxiD,IAAI0iD,GAA4B,EAAlBrnE,OAAOonE,KAC5BllD,EAAImlD,CACP,CACD,MAAO,CAAE/gC,OAAM6gC,SACnB,CAMA,SAASG,EAAsBxK,EAAUyK,GACrC,OAAKzK,EAAS/gE,OAGP+gE,EACFpvD,IAAKwU,GAAMA,EAAEslD,OAAOD,IACpBx1D,OACArE,IAAKwU,GAAMA,EAAEjf,QALP,EAMf,CAKA,SAASwkE,EAAyB3K,GAC9B,OAAKA,EAAS/gE,OAGP+gE,EAAS/qD,KAAK,CAAClJ,EAAGzM,KACrB,GAAIyM,EAAE9M,OAASK,EAAEL,OACb,OAAO,EAEN,GAAIK,EAAEL,OAAS8M,EAAE9M,OAClB,OAAQ,EAEZ,IAAI2rE,EAAQ7+D,EAAE5K,QAAQ,KAClB0pE,EAAQvrE,EAAE6B,QAAQ,KAEtB,OAAa,CACT,IAAe,IAAXypE,EACA,OAAQ,EAEP,IAAe,IAAXC,EACL,OAAO,EAEX,GAAID,EAAQC,EACR,OAAO,EAEN,GAAIA,EAAQD,EACb,OAAQ,EAEZA,EAAQ7+D,EAAE5K,QAAQ,IAAKypE,EAAQ,GAC/BC,EAAQvrE,EAAE6B,QAAQ,IAAK0pE,EAAQ,EAClC,IA3BM,EA6Bf,CAKA,SAASC,EAAuB9K,GAC5B,MAAM+K,EAAmB/K,EAASx9D,QAAQyS,KAAK,CAAClJ,EAAGzM,IAAMyM,EAAE9M,OAASK,EAAEL,QAChE+rE,EAAW,GACjBjG,EAAO,IAAK,IAAI/lE,EAAI,EAAGA,EAAI+rE,EAAiB9rE,OAAQD,IAAK,CACrD,MAAMisE,EAAMF,EAAiB/rE,GAC7B,IAAK,IAAIygB,EAAIzgB,EAAI,EAAGygB,EAAIsrD,EAAiB9rE,OAAQwgB,IAE7C,GADYsrD,EAAiBtrD,GACrBq2C,WAAWmV,GACf,SAASlG,EAGjBiG,EAAShqE,KAAKiqE,EACjB,CACD,OAAOD,CACX,CAEA,IAAIE,EA/GJ/+D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsCw9C,4BAAAx9C,EAAAu9C,UAAoBv9C,yBAAiCA,EAAmCg9C,yBAAAh9C,EAAA68C,sBAAgC78C,yBAAiCA,EAA+By9C,0BAAA,EAoB9Nz9C,EAAAy9C,qBAXA,SAA8BzL,GAC1B,MAAMn2B,EAAO,IAAI4gC,IACXC,EAAS,IAAID,IACnB,IAAIhlD,EAAIu6C,EACR,KAAOv6C,EAAI,GACPokB,EAAK3hB,IAAIzC,GACTilD,EAAOxiD,IAAIi/C,GAAS5H,cAAc95C,IAClCA,EAAI0hD,GAAS7H,aAAa75C,GAE9B,MAAO,CAAEokB,OAAM6gC,SACnB,EAqBA18C,EAAAw8C,uBAAiCA,EAcjCx8C,EAAA68C,sBAAgCA,EAoChC78C,EAAAg9C,yBAAmCA,EAmBnCh9C,EAAAm9C,uBAAiCA,EAEjC,SAAWI,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAsB,WAAI,GAAK,aACzCA,EAAUA,EAAoB,SAAI,GAAK,UAC1C,CAJD,CAIGA,EAAYv9C,EAAQu9C,YAAcv9C,EAAoBu9C,UAAA,CAAE,IAmC3Dv9C,EAAAw9C,4BA5BA,SAAqCnL,EAAUqL,GAAgB,EAAMC,EAAYJ,EAAUK,SACvF,MAAMC,EAASV,EAAuB9K,GAEhC+H,EAAQ,IAAIqC,IAAIiB,EAAgBG,EAAS,IACzCC,EAAQ,IAAIrB,IACZsB,EAAW,IAAItB,IAErB,IAAIuB,EAAe,EACnB,IAAK,MAAMhM,KAAU6L,EAAQ,CACrB7L,EAAO1gE,OAAS0sE,IAChBA,EAAehM,EAAO1gE,QAC1B,MAAMuqC,KAAEA,EAAI6gC,OAAEA,GAAWF,EAAuBxK,GAChDn2B,EAAK7F,QAASve,GAAMqmD,EAAM5jD,IAAIzC,IAC9BilD,EAAO1mC,QAASve,GAAMsmD,EAAS7jD,IAAIzC,GACtC,CAKD,OAHAqmD,EAAM9nC,QAASve,GAAMsmD,EAASl7B,OAAOprB,IAErCsmD,EAAS/nC,QAASve,GAAM2iD,EAAMlgD,IAAIzC,IAC1BkmD,GACJ,KAAKJ,EAAUK,QACX,OAAOf,EAAsB7rE,MAAM4M,KAAKw8D,GAAQ4D,GACpD,KAAKT,EAAUU,WACX,OAAOjB,EAAyBhsE,MAAM4M,KAAKw8D,IAC/C,KAAKmD,EAAUW,SACX,OAAOltE,MAAM4M,KAAKw8D,GAE9B,wBCtJA57D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmCm+C,yBAAAn+C,EAAAo+C,sBAA2B,EAoB9Dp+C,EAAAo+C,iBARA,SAA0BnF,EAAU5G,GAChC,MAAMgM,EAAO,IAAIC,GAAOtE,KAAKf,GACvBsF,EAAkBC,GAAOhB,4BAA4BnL,EAASpvD,IAAK+uD,GAAWA,EAAOt5D,SAAS,KAAK,EAAO8lE,GAAOjB,UAAUU,YAC3HQ,EAAepM,EAASx9D,QAAQyS,KAAK,CAAClJ,EAAGzM,IAAOyM,EAAIzM,EAAI,GAAK,GAC7DksE,EAASY,EAAax7D,IAAK+uD,GAAWqM,EAAK1D,QAAQ3I,IACnDkH,EAAYqF,EAAgBt7D,IAAK+uD,GAAWqM,EAAK1D,QAAQ3I,IAC/D,MAAO,CAAC6L,EAAQ3E,EAAWuF,EAC/B,EAqEAz+C,EAAAm+C,yBA1DA,SAAkCN,EAAQ3E,EAAW7G,GACjD,GAAIwL,EAAOvsE,SAAW+gE,EAAS/gE,OAC3B,MAAM,IAAIY,MAAM,8CAEpB,MAAMwsE,EAAiBrM,EAASpvD,IAAK+uD,GAAWA,EAAOt5D,SAAS,IAC1DimE,EAAoBH,GAAOhB,4BAA4BkB,GAAgB,EAAOF,GAAOjB,UAAUU,YACrG,GAAIU,EAAkBrtE,SAAW4nE,EAAU5nE,OACvC,MAAM,IAAIY,MAAM,2DAQpB,MAAM0sE,EAAWvoE,KAAKijD,IAAIolB,EAAe,IAAIptE,QAAU,EAAGqtE,EAAkB,IAAIrtE,QAAU,GACpFutE,EAASrgE,OAAOsgE,YAAY9tE,MAAM4M,KAAK,CAAEtM,OAAQstE,GAAY,CAACv0B,EAAGh5C,IAAM,CAACA,EAAI,EAAG,CAAA,KAErF,IAAK,IAAIA,EAAI,EAAGA,EAAIqtE,EAAeptE,OAAQD,IAAK,CAC5C,MAAM0tE,EAAgBL,EAAertE,GAErCwtE,EAAOE,EAAcztE,QAAQytE,GAAiBxH,GAAOtB,SAASoD,SADjDwE,EAAOxsE,GAEvB,CACD,IAAK,IAAIA,EAAI,EAAGA,EAAIstE,EAAkBrtE,OAAQD,IAAK,CAC/C,MAAM2tE,EAAmBL,EAAkBttE,GAE3CwtE,EAAOG,EAAiB1tE,QAAQ0tE,GAAoBzH,GAAOtB,SAASoD,SADpDH,EAAU7nE,GAE7B,CACD,IAAK,IAAIA,EAAIutE,EAAUvtE,EAAI,EAAGA,IAAK,CAC/B,MAAM4tE,EAAQJ,EAAOxtE,GACf6tE,EAAcL,EAAOxtE,EAAI,GAC/B,IAAK,MAAMkhE,KAAa/zD,OAAO+B,KAAK0+D,GAAQ,CACxC,MAAMv+C,EAAOu+C,EAAM1M,GAEnB,IAAK7xC,EACD,SAEJ,MAAM47C,EAA6C,MAApC/J,EAAUA,EAAUjhE,OAAS,GACtC6tE,EAAkB5M,EAAUvtD,UAAU,EAAGutD,EAAUjhE,OAAS,GAC5D8tE,EAAmBD,GAAmB7C,EAAS,IAAM,KACrD+C,EAAcJ,EAAMG,GAC1B,IAAKC,EACD,MAAM,IAAIntE,MAAM,sBAAsBktE,KAG1C,MAAME,EAAahD,EAAS,IAAI/E,GAAO/B,WAAW90C,EAAM2+C,GAAe,IAAI9H,GAAO/B,WAAW6J,EAAa3+C,GAC1Gw+C,EAAYC,GAAmBG,SAExBL,EAAM1M,UACN0M,EAAMG,EAChB,CACJ,CACD,MAAMh/C,EAAOy+C,EAAO,GAAG,GACvB,IAAKz+C,EACD,MAAM,IAAIluB,MAAM,6CAEpB,OAAOkuB,CACX,wBC1EA,SAASm/C,EAAsB7+C,EAAMsxC,EAAQwN,GACzC,GAAKA,EAAcluE,QAAWkuE,EAAc,GAAGrX,WAAW6J,GAIrD,IAAIA,IAAWwN,EAAc,GAG9B,OADAA,EAAc7sE,QACP,CAAC,GAAI,CAAC+tB,EAAKN,OAEjB,CAED,MAAOq/C,EAAaC,GAAcH,EAAsB7+C,EAAKglB,KAAMssB,EAAS,IAAKwN,IAC1EG,EAAcC,GAAeL,EAAsB7+C,EAAKiD,MAAOquC,EAAS,IAAKwN,GAGpF,MAAO,CAAC,CADME,EAAWpuE,QACT+V,OAAOo4D,EAAaE,GAAeD,EAAWr4D,OAAOu4D,GACxE,EAdG,MAAO,CAAC,GAAI,GAepB,CASA,SAASC,EAAsBC,EAASjC,GACpC,GAAKA,EAAOvsE,OAGP,IAAsB,IAAlBusE,EAAOvsE,OACZ,OAAOimE,GAAOtB,SAASoD,SAASwE,EAAO,IAEtC,CAED,MAAM9F,EAAQ+H,EAAQ,GACtB,OAAO,IAAIvI,GAAO/B,WAAWqK,EAAsBC,EAAQjrE,MAAM,EAAGkjE,GAAQ8F,EAAOhpE,MAAM,EAAGkjE,IAAS8H,EAAsBC,EAAQjrE,MAAMkjE,GAAQ8F,EAAOhpE,MAAMkjE,IACjK,EATG,MAAM,IAAI7lE,MAAM,iCAUxB,CArDAsM,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAqC+/C,2BAAA//C,EAAAggD,yBAAmChgD,yCAAiDA,EAAwCigD,8BAAAjgD,EAAAkgD,sBAAgClgD,wBAAgCA,EAAgCu/C,2BAAA,EAgCjQv/C,EAAAu/C,sBAAgCA,EAqBhCv/C,EAAA6/C,sBAAgCA,EAUhC7/C,EAAAkgD,sBAHA,SAA+BjH,EAAU5G,GACrC,OAAOkN,EAAsBtG,EAAU,IAAKuF,GAAOhB,4BAA4BnL,EAASpvD,IAAKwU,GAAMA,EAAE/e,SAAS,KAClH,EAYAsnB,EAAAigD,8BAJA,SAAuCH,EAASjC,GAE5C,OAAOgC,EAAsBC,EAASjC,EAC1C,EAMA79C,EAAAmgD,uCAJA,SAAgDL,EAASjC,GAErD,OAA8B,GAAtBiC,EAAQxuE,OAAS,GAAyB,GAAhBusE,EAAOvsE,MAC7C,EAqBA0uB,EAAAggD,yBAfA,SAAkC53D,EAAQxO,EAAYkmE,EAASjC,GAC3D,MAAMxpE,EAAS,IAAIwC,SAASuR,EAAOzO,OAAQyO,EAAOxO,WAAYwO,EAAOvO,YAErExF,EAAO+rE,UAAUxmE,EAAYikE,EAAOvsE,QAAQ,GAE5C,MAAM+uE,EAAoBzmE,EAAa,EACvC,IAAK,IAAIvI,EAAI,EAAGA,EAAIyuE,EAAQxuE,OAAQD,IAChCgD,EAAO+rE,UAAc,EAAJ/uE,EAAQgvE,EAAmBP,EAAQzuE,IAAI,GAG5D,MAAMivE,EAAmBD,EAAqC,EAAjBP,EAAQxuE,OACrD,IAAK,IAAID,EAAI,EAAGA,EAAIwsE,EAAOvsE,OAAQD,IAC/B+W,EAAOpL,IAAI6gE,EAAOxsE,GAAQ,GAAJA,EAASivE,EAEvC,EAiBAtgD,EAAA+/C,2BAfA,SAAoC9rE,EAAM2F,GACtC,MAAM6M,EAAS,IAAI5P,SAAS5C,EAAK0F,OAAQ1F,EAAK2F,WAAY3F,EAAK4F,YAEzD0mE,EAAY95D,EAAO+5D,UAAU5mE,GAAY,GAC/C,GAAI3F,EAAK3C,OAA2B,GAAjBivE,EAAY,GAAqB,GAAZA,EACpC,MAAM,IAAIruE,MAAM,6DAGpB,MAAMmuE,EAAoBzmE,EAAa,EACjCkmE,EAAU9uE,MAAM4M,KAAK,CAAEtM,OAAQivE,EAAY,GAAK,CAACl2B,EAAGh5C,IAAMoV,EAAO+5D,UAAc,EAAJnvE,EAAQgvE,GAAmB,IAEtGC,EAAmBD,EAAqC,EAAjBP,EAAQxuE,OAC/CusE,EAAS7sE,MAAM4M,KAAK,CAAEtM,OAAQivE,GAAa,CAACl2B,EAAGh5C,IAAM4C,EAAK9B,SAAa,GAAJd,EAASivE,EAA4B,IAATjvE,EAAI,GAAUivE,IACnH,MAAO,CAACR,EAASjC,EACrB,wBC9GA,IAAI4C,EALJjiE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA0gD,iBAA2B1gD,iBAAyBA,EAA8Bs6C,oBAAAt6C,EAAAi7C,YAAsBj7C,sBAA8BA,EAAoBygD,eAAA,EAK1J,SAAWA,GACPA,EAAkB,OAAI,SACtBA,EAAsB,WAAI,aAC1BA,EAAiB,MAAI,OACxB,CAJD,CAIGA,EAAYzgD,EAAQygD,YAAczgD,EAAoBygD,UAAA,CAAE,IAI3DzgD,EAA8B2gD,oBAAA,CAC1BF,EAAUG,OACVH,EAAUI,WACVJ,EAAUK,OAkCd9gD,EAAAi7C,YAhCA,SAAqBhC,EAAUl1D,GAC3B,OAAQA,EAAMzG,MACV,KAAKmjE,EAAUG,OAAQ,CACnB,MAAOxH,EAAMF,GAAa6B,GAAShC,kBAAkBE,EAAUl1D,EAAMiuD,QACrE,MAAO,CACH10D,KAAMmjE,EAAUG,OAChB5O,OAAQjuD,EAAMiuD,OACdoH,OACAF,YAEP,CACD,KAAKuH,EAAUI,WAAY,CACvB,MAAOf,EAASjC,GAAUkD,GAAab,sBAAsBjH,EAAUl1D,EAAMsuD,UAC7E,MAAO,CACH/0D,KAAMmjE,EAAUI,WAChBf,UACAjC,SAEP,CACD,KAAK4C,EAAUK,MAAO,CAClB,MAAOjD,EAAQ3E,EAAW7G,GAAY2O,GAAQ5C,iBAAiBnF,EAAUl1D,EAAMsuD,UAC/E,MAAO,CACH/0D,KAAMmjE,EAAUK,MAChBjD,SACA3E,YACA7G,WAEP,CACD,QACI,MAAM,IAAIngE,MAAM,sBAE5B,EAcA8tB,EAAAs6C,oBAZA,SAA6BF,GACzB,OAAQA,EAAM98D,MACV,KAAKmjE,EAAUG,OACX,OAAO7F,GAASjC,0BAA0BsB,EAAMpI,OAAQoI,EAAMhB,KAAMgB,EAAMlB,WAC9E,KAAKuH,EAAUI,WACX,OAAOE,GAAad,8BAA8B7F,EAAM0F,QAAS1F,EAAMyD,QAC3E,KAAK4C,EAAUK,MACX,OAAOE,GAAQ7C,yBAAyB/D,EAAMyD,OAAQzD,EAAMlB,UAAWkB,EAAM/H,UACjF,QACI,MAAM,IAAIngE,MAAM,sBAE5B,EAiBA8tB,EAAAihD,eAfA,SAAwB7G,GACpB,OAAQA,EAAM98D,MACV,KAAKmjE,EAAUG,OACf,KAAKH,EAAUK,MACX,MAAM,IAAI5uE,MAAM,mBACpB,KAAKuuE,EAAUI,WAAY,CACvB,MAAMz4D,EAAS,IAAIvW,WAAW,EAAIkvE,GAAaZ,uCAAuC/F,EAAM0F,QAAS1F,EAAMyD,SAG3G,OAFAz1D,EAAO,GAAK4X,EAAQ2gD,oBAAoBntE,QAAQitE,EAAUI,YAC1DE,GAAaf,yBAAyB53D,EAAQ,EAAGgyD,EAAM0F,QAAS1F,EAAMyD,QAC/Dz1D,CACV,CACD,QACI,MAAM,IAAIlW,MAAM,sBAE5B,EAuBA8tB,EAAA0gD,iBArBA,SAA0BzsE,GACtB,MAAMitE,EAAYlhD,EAAQ2gD,oBAAoB1sE,EAAK,IACnD,IAAKitE,EACD,MAAM,IAAIhvE,MAAM,sBAEpB,OAAQgvE,GACJ,KAAKT,EAAUG,OACf,KAAKH,EAAUK,MACX,MAAM,IAAI5uE,MAAM,mBACpB,KAAKuuE,EAAUI,WAAY,CACvB,MAAOf,EAASjC,GAAUkD,GAAahB,2BAA2B9rE,EAAM,GACxE,MAAO,CACHqJ,KAAMmjE,EAAUI,WAChBf,UACAjC,SAEP,CACD,QACI,MAAM,IAAI3rE,MAAM,sBAE5B,wBCrGA,IAAIivE,EAAmBvuE,IAAQA,GAAKuuE,kBAAqB3iE,OAAO2I,OAAM,SAAaoG,EAAGtF,EAAG7G,EAAGu/B,QAC7E1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3B5C,OAAO4K,eAAemE,EAAGozB,EAAI,CAAEt3B,YAAY,EAAM3C,IAAK,WAAa,OAAOuB,EAAE7G,EAAG,GAClF,EAAA,SAAcmM,EAAGtF,EAAG7G,EAAGu/B,QACT1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3BmM,EAAEozB,GAAM14B,EAAE7G,EACb,GACGggE,EAAgBxuE,IAAQA,GAAKwuE,cAAiB,SAASn5D,EAAG+X,GAC1D,IAAK,IAAIhuB,KAAKiW,EAAa,YAANjW,GAAoBwM,OAAO6W,UAAUhV,eAAeohB,KAAKzB,EAAShuB,IAAImvE,EAAgBnhD,EAAS/X,EAAGjW,EAC3H,EACAwM,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDswE,EAAathD,GAAqBE,GAClCohD,EAAaC,GAAmBrhD,GAChCohD,EAAaE,GAAmBthD,GAChCohD,EAAaG,GAAyBvhD,GACtCohD,EAAaI,GAAoBxhD,GACjCohD,EAAaK,GAAsBzhD,GACnCohD,EAAaM,GAAmB1hD,GAChCohD,EAAaO,GAAuB3hD,yBClBpCxhB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmB4hD,cAAA,EAGnB,MAAMC,EAAa,CAAC,IAAIhwE,WAAW,KASnCmuB,EAAA4hD,SARA,SAAkB3gE,GACd,GAAIA,GAAS4gE,EAAWvwE,OACpB,IAAK,IAAID,EAAIwwE,EAAWvwE,OAAQD,GAAK4P,EAAO5P,IACxCwwE,EAAWxwE,GAAK6jE,GAAYb,eAAewN,EAAWxwE,EAAI,GAAIwwE,EAAWxwE,EAAI,IAGrF,OAAOwwE,EAAW5gE,EACtB,wBCRA,SAAS6gE,EAAOC,EAAUC,GACtB,OAAO9M,GAAYb,eAAe0N,EAAUC,EAChD,CAgDA,SAASlF,EAAUzrE,GACf,OAAU,IAANA,EACO,EAEJgF,KAAKC,MAAMD,KAAK6lE,KAAK7qE,IAAM,CACtC,CAgBA,SAAS4wE,EAAahpE,GAClB,OAAOA,GAAK,EAAI,EAAI5C,KAAKq9C,IAAI,EAAGopB,EAAU7jE,EAAI,GAClD,CA7EAuF,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAuBiiD,aAAAjiD,EAAAkiD,iBAA2BliD,YAAoBA,EAAsBmiD,YAAAniD,EAAAoiD,oBAA8BpiD,YAAoBA,EAAiB8hD,YAAA,EAM/J9hD,EAAA8hD,OAAiBA,EAwBjB9hD,EAAAqiD,UAvBA,SAAmBxlE,EAAQylE,GACvB,MAAMC,EAAazF,EAAUmF,EAAaK,GAAU,GACpD,GAAqB,GAAjBzlE,EAAOvL,OACP,OAAOkxE,GAAQZ,SAASW,GAE5B,IAAIE,EAAa5lE,EAAOvL,OAGxB,IAAK,IAAIub,EAAI,EAAGA,EAAI01D,EAAY11D,IAAK,CACjC,MAAM61D,EAAWD,EAAa,EACxBE,EAAmBF,EAAaC,EAGtC,IAAK,IAAIrxE,EAAI,EAAGA,EAAIqxE,EAAUrxE,IAC1BwL,EAAO4lE,EAAapxE,GAAKmxE,GAAQZ,SAAS/0D,GAE9C,IAAK,IAAIxb,EAAI,EAAGA,EAAIsxE,EAAkBtxE,GAAK,EACvCwL,EAAOxL,EAAI,GAAKywE,EAAOjlE,EAAOxL,GAAIwL,EAAOxL,EAAI,IAEjDoxE,EAAaE,EAAmB,CACnC,CACD,OAAO9lE,EAAO,EAClB,EAeAmjB,EAAAoiD,oBAVA,SAA6BQ,GACzB,MAAMH,EAAapsE,KAAKm4B,KAAKo0C,EAAUtxE,OAAS,IAC1CuL,EAAS,IAAI7L,MAAMyxE,GACzB,IAAK,IAAIpxE,EAAI,EAAGA,EAAIoxE,EAAYpxE,IAAK,CACjC,MAAM8L,EAAQ,IAAItL,WAAW,IAC7BsL,EAAMH,IAAI4lE,EAAU/tE,MAAU,GAAJxD,EAAkB,IAATA,EAAI,KACvCwL,EAAOxL,GAAK8L,CACf,CACD,OAAON,CACX,EAQAmjB,EAAAmiD,YALA,SAAqB/hD,EAAM9uB,GACvB,MAAMuxE,EAAY/uB,OAAOE,MAAM,IAE/B,OADA6uB,EAAUhmB,YAAYvrD,EAAQ,EAAG,GAC1BwwE,EAAO1hD,EAAMyiD,EACxB,EASA7iD,EAAA88C,UAAoBA,EAapB98C,EAAAkiD,iBALA,SAA0BjpE,GACtB,OAAU,IAANA,EACO,EACJ5C,KAAKm4B,KAAKn4B,KAAK6lE,KAAKjjE,GAC/B,EAMA+mB,EAAAiiD,aAAuBA,wBC9EvBzjE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAqB8iD,gBAAA,EAIrB9iD,EAAA8iD,WAHA,SAAoBC,EAAYC,GAC5B,OAAO,IAAIC,SAAS,aAAc,gBAAgBD,0BAA3C,CAA8ED,EACzF,wBCyBA,SAASG,EAAcC,EAAY7xE,GAC/B,OAAO,IAAI8xE,GAAyB5N,WAAW2N,EAAYC,GAAyBnN,SAASoN,WAAW/xE,GAC5G,CA8HA,SAASgyE,EAAuBhyE,EAAQiyE,EAAYC,GAChD,GAAIA,GAAyBlyE,EAAS,GAAM,EACxC,MAAMY,MAAM,0CAGhB,GAAIqxE,EAAWE,QACX,GAAInyE,EAASiyE,EAAWtqC,MACpB,MAAM,IAAI/mC,MAAM,uBAAuBZ,gBAAqBiyE,EAAWtqC,cAI3E,GAAI3nC,IAAWiyE,EAAWjyE,OACtB,MAAM,IAAIY,MAAM,2BAA2BZ,cAAmBiyE,EAAWjyE,SAGrF,CA5KAkN,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAAsjD,uBAAiCtjD,EAAkC0jD,wBAAA1jD,EAAA2jD,aAAuB3jD,EAA2B4jD,iBAAA5jD,EAAA6jD,kBAA4B7jD,sBAA8BA,EAA8C8jD,oCAAA9jD,EAAA+jD,gCAA0C/jD,EAA+CgkD,qCAAAhkD,EAAAikD,iCAA2CjkD,gBAAwBA,EAAwBkjD,cAAAljD,EAAAkkD,0BAAoClkD,EAAgCmkD,2BAAA,EAuBrdnkD,EAAAmkD,sBANA,SAA+BzjD,GAI3B,OAAOA,EAAKiD,MAAM0yC,QAAQ,EAAG,EACjC,EAKAr2C,EAAAkkD,0BAHA,SAAmCxjD,GAC/B,OAAOA,EAAKglB,IAChB,EAKA1lB,EAAAkjD,cAAwBA,EASxBljD,EAAAokD,cARA,SAAuBnL,EAAUkK,EAAYkB,GACzC,MAAMC,OAA2BryE,IAAdoyE,EAEXjB,GAAyBnN,SAASoN,WAAWgB,GAE7CpL,EAASt1C,MACjB,OAAO,IAAIy/C,GAAyB5N,WAAW2N,EAAYmB,EAC/D,EAYAtkD,EAAAikD,iCAPA,SAA0CM,EAAajzE,EAAQ8W,EAAQrL,EAAQjM,GAC3E,MAAM0zE,EAASD,EAAY1qE,WAC3B,IAAK,IAAIxI,EAAI,EAAGA,EAAIC,EAAQD,IACxBkzE,EAAYE,uBAAuBr8D,EAAQrL,EAAS1L,EAAImzE,EAAQ1zE,EAAMO,IAE1E,OAAO0L,EAASzL,EAASkzE,CAC7B,EAcAxkD,EAAAgkD,qCAZA,SAA8CO,EAAatwE,EAAMiG,EAAO7E,EAAKkuE,GACzE,MAAMiB,EAASD,EAAY1qE,WAErBvI,GAAU+D,EAAM6E,GAASsqE,EAC/BlB,EAAuBhyE,EAAQiyE,GAAY,GAC3C,MAAMviE,EAAS,IAAIhQ,MAAMM,GACzB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAExB2P,EAAO3P,GAAKkzE,EAAYG,2BAA2BzwE,EAAMiG,EAAQ7I,EAAImzE,EAAQtqE,GAAS7I,EAAI,GAAKmzE,GAEnG,OAAOxjE,CACX,EAYAgf,EAAA+jD,gCAPA,SAAyCQ,EAAajzE,EAAQ2P,EAAOmH,EAAQrL,EAAQ2jB,GACjF,MAAM60B,EAAOgvB,EAAY1qE,WAAavI,EAChCmxE,EAAapsE,KAAKm4B,KAAK+mB,EAAO,IAC9ByiB,EAAQoL,GAAyB3J,gBAAgB/4C,EAAMzf,EAAO,EAAGwhE,GAEvE,OADAW,GAAyB1K,uBAAuBtwD,EAAO2gB,SAAUhsB,EAAQw4C,EAAMyiB,GACxEj7D,EAASw4C,CACpB,EAgBAv1B,EAAA8jD,oCAbA,SAA6CS,EAAaI,EAAY1wE,EAAMiG,EAAO7E,EAAKkuE,GAEpF,MAAMjyE,GAAU+D,EAAM6E,GAASqqE,EAAY1qE,WAC3CypE,EAAuBhyE,EAAQiyE,GAAY,GAE3C,MAAMJ,EAAaC,GAAyBzK,uBAAuBgM,EAAY1wE,EAAK80B,SAAU7uB,EAAO7E,GACrG,OAAIkuE,EAAWE,OACJP,EAAcC,EAAY7xE,GAG1B6xE,CAEf,EAgBAnjD,EAAA4kD,oBAXA,SAA6BL,EAAaz/D,EAAMy+D,GAC5C,IAAKvyE,MAAMC,QAAQ6T,GACf,MAAM5S,MAAM,wBAEhBoxE,EAAuBx+D,EAAKxT,OAAQiyE,GACpC,MAAMzyE,EAAQ,IAAIE,MAAM8T,EAAKxT,QAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIyT,EAAKxT,OAAQD,IAC7BP,EAAMO,GAAKkzE,EAAYz6D,SAAShF,EAAKzT,IAEzC,OAAOP,CACX,EAaAkvB,EAAA6jD,kBARA,SAA2BU,EAAazzE,EAAOyyE,GAC3C,MAAMjyE,EAASiyE,EAAWE,OAAS3yE,EAAMQ,OAASiyE,EAAWjyE,OACvDwT,EAAO,IAAI9T,MAAMM,GACvB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxByT,EAAKzT,GAAKkzE,EAAYp6D,OAAOrZ,EAAMO,IAEvC,OAAOyT,CACX,EAYAkb,EAAA4jD,iBAPA,SAA0BW,EAAazzE,GACnC,MAAM+zE,EAAW,IAAI7zE,MAAMF,EAAMQ,QACjC,IAAK,IAAID,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC9BwzE,EAASxzE,GAAKkzE,EAAYh7D,MAAMzY,EAAMO,IAE1C,OAAOwzE,CACX,EAgBA7kD,EAAA2jD,aAXA,SAAsBY,EAAanmE,EAAGzM,GAClC,GAAIyM,EAAE9M,SAAWK,EAAEL,OACf,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAI+M,EAAE9M,OAAQD,IAC1B,IAAKkzE,EAAY37D,OAAOxK,EAAE/M,GAAIM,EAAEN,IAC5B,OAAO,EAGf,OAAO,CACX,EASA2uB,EAAA0jD,wBAPA,SAAiCa,EAAajzE,GAC1C,MAAM0P,EAAS,IAAIhQ,MAAMM,GACzB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxB2P,EAAO3P,GAAKkzE,EAAYO,eAE5B,OAAO9jE,CACX,EAsBAgf,EAAAsjD,uBAAiCA,wBC7KjC9kE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAwC+kD,8BAAA/kD,EAAAglD,cAAmB,EAE3D,MAAMC,EAA8B,IAAIj0E,MAAM,KAe9C,MAAMg0E,EACFhtE,YAEAktE,EAEAC,GAGI,GAFAvyE,KAAKsyE,WAAaA,EAClBtyE,KAAKuyE,OAASA,EACVD,EAAW5zE,SAAW+E,KAAKm4B,KAAK22C,EAAS,GACzC,MAAMjzE,MAAM,mDAEnB,CAEDmG,kBAAkB8sE,GACd,OAAO,IAAIH,EAAS,IAAInzE,WAAWwE,KAAKm4B,KAAK22C,EAAS,IAAKA,EAC9D,CAED9sE,qBAAqB8sE,EAAQzO,GACzB,MAAM0O,EAAWJ,EAASK,WAAWF,GAErC,OADAC,EAASpoE,IAAI05D,GAAU,GAChB0O,CACV,CAED/sE,qBAAqBitE,GACjB,MAAMF,EAAWJ,EAASK,WAAWC,EAAWh0E,QAChD,IAAK,IAAID,EAAI,EAAGA,EAAIi0E,EAAWh0E,OAAQD,KACb,IAAlBi0E,EAAWj0E,IACX+zE,EAASpoE,IAAI3L,GAAG,GAGxB,OAAO+zE,CACV,CACD77D,QAGI,OAAO,IAAIy7D,EAASnzE,WAAWwjB,UAAUxgB,MAAM4sB,KAAK7uB,KAAKsyE,WAAY,GAAItyE,KAAKuyE,OACjF,CAIDz+D,IAAIgwD,GACA,MAAM6O,EAAUlvE,KAAKC,MAAMogE,EAAW,GAEhCl/C,EAAO,GADIk/C,EAAW,EAE5B,OAAQ9jE,KAAKsyE,WAAWK,GAAW/tD,KAAUA,CAChD,CAIDxa,IAAI05D,EAAUlE,GACV,GAAIkE,GAAY9jE,KAAKuyE,OACjB,MAAMjzE,MAAM,yBAAyBwkE,mBAA0B9jE,KAAKuyE,UAExE,MAAMI,EAAUlvE,KAAKC,MAAMogE,EAAW,GAEhCl/C,EAAO,GADIk/C,EAAW,EAE5B,IAAI7oC,EAAOj7B,KAAKsyE,WAAWK,GACvB/S,GAKA3kC,GAAQrW,EACR5kB,KAAKsyE,WAAWK,GAAW13C,IAItBA,EAAOrW,KAAUA,IAIlBqW,GAAQrW,EACR5kB,KAAKsyE,WAAWK,GAAW13C,EAMtC,CAED23C,YAAYC,GACR,GAAIA,EAAUN,SAAWvyE,KAAKuyE,OAC1B,MAAMjzE,MAAM,uCAGhB,IAAK,IAAIb,EAAI,EAAGA,EAAIuB,KAAKsyE,WAAW5zE,OAAQD,IACxCuB,KAAKsyE,WAAW7zE,GAAKuB,KAAKsyE,WAAW7zE,GAAKo0E,EAAUP,WAAW7zE,EAEtE,CAIDq0E,gBAAgB1kE,GACZ,MAAM2kE,EAAM,GACZ,GAAI3kE,EAAO1P,SAAWsB,KAAKuyE,OACvB,MAAMjzE,MAAM,uCAAuC8O,EAAO1P,oBAAoBsB,KAAKuyE,UAEvF,MAAMS,EAAcvvE,KAAKC,MAAM1D,KAAKuyE,OAAS,GACvCU,EAAgBjzE,KAAKuyE,OAAS,EAE9BvzE,EAAQgB,KAAKsyE,WACnB,IAAK,IAAIY,EAAQ,EAAGA,EAAQF,EAAaE,IAAS,CAE9C,MAAMC,EAAiBhB,EAA8BnzE,EAAMk0E,IAE3D,IAAK,IAAIE,EAAO,EAAGA,EAAO,EAAGA,IACrBD,EAAeC,IACfL,EAAItyE,KAAK2N,EAAe,EAAR8kE,EAAYE,GAGvC,CACD,GAAIH,EAAgB,EAAG,CAEnB,MAAME,EAAiBhB,EAA8BnzE,EAAMg0E,IAE3D,IAAK,IAAII,EAAO,EAAGA,EAAOH,EAAeG,IACjCD,EAAeC,IACfL,EAAItyE,KAAK2N,EAAqB,EAAd4kE,EAAkBI,GAG7C,CACD,OAAOL,CACV,CAIDM,oBACI,MAAMtK,EAAU,GAEV/pE,EAAQgB,KAAKsyE,WACnB,IAAK,IAAIY,EAAQ,EAAGI,EAAUt0E,EAAMN,OAAQw0E,EAAQI,EAASJ,IAAS,CAElE,MAAMC,EAAiBhB,EAA8BnzE,EAAMk0E,IAE3D,IAAK,IAAIE,EAAO,EAAGA,EAAO,EAAGA,IACrBD,EAAeC,IACfrK,EAAQtoE,KAAa,EAARyyE,EAAYE,EAGpC,CACD,OAAOrK,CACV,CAUDwK,mBACI,IAAI1iD,EAAQ,KACZ,MAAM7xB,EAAQgB,KAAKsyE,WAEnB,IAAK,IAAIY,EAAQ,EAAGI,EAAUt0E,EAAMN,OAAQw0E,EAAQI,EAASJ,IAAS,CAElE,GAAqB,IAAjBl0E,EAAMk0E,GACN,SAGJ,MAAMC,EAAiBhB,EAA8BnzE,EAAMk0E,IAE3D,IAAK,IAAIE,EAAO,EAAGA,EAAO,EAAGA,IACzB,IAA6B,IAAzBD,EAAeC,GAAgB,CAC/B,GAAc,OAAVviD,EAEA,OAAO,KAEXA,EAAgB,EAARqiD,EAAYE,CACvB,CAER,CACD,OAAc,OAAVviD,EAEO,KAGAA,CAEd,CACD2iD,cACI,MAAMd,EAAa,IAAIt0E,MAAM4B,KAAKuyE,QAClC,IAAK,IAAI9zE,EAAI,EAAGA,EAAIuB,KAAKuyE,OAAQ9zE,IAC7Bi0E,EAAWj0E,GAAKuB,KAAK8T,IAAIrV,GAE7B,OAAOi0E,CACV,EAQL,SAASP,EAA8Bl3C,GAInC,OAHKo3C,EAA4Bp3C,KAC7Bo3C,EAA4Bp3C,GAMpC,SAA2CA,GAEvC,MAAMw4C,EAAYx4C,EAAKn1B,SAAS,GAC1B4tE,EAAeD,EAAU/0E,OACzBuwB,EAAO,IAAI7wB,MAAM,GACvB,IAAK,IAAIK,EAAI,EAAGA,EAAI,EAAGA,IACnBwwB,EAAKxwB,GACDA,EAAIi1E,GAEwC,MAApCD,EAAUC,EAAej1E,EAAI,GAG7C,OAAOwwB,CACX,CAnB4C0kD,CAAkC14C,IAEnEo3C,EAA4Bp3C,EACvC,CAXA7N,EAAAglD,SAAmBA,EAYnBhlD,EAAA+kD,8BAAwCA,wBC3NxCvmE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAAwmD,gBAA0BxmD,EAAwBymD,cAAAzmD,EAAA0mD,iBAAsB,EAExE,MAAMC,EAAY,IAAI31E,MAAM,KAW5BgvB,EAAA0mD,YAVA,SAAqB90E,GACjB,IAAIsyB,EAAM,KACV,IAAK,MAAM2J,KAAQj8B,EACV+0E,EAAU94C,KACX84C,EAAU94C,GAAQA,EAAO,GAAK,IAAMA,EAAKn1B,SAAS,IAAMm1B,EAAKn1B,SAAS,KAE1EwrB,GAAOyiD,EAAU94C,GAErB,OAAO3J,CACX,EAoBAlE,EAAAymD,cAlBA,SAAuBviD,GACnB,GAAmB,iBAARA,EACP,MAAM,IAAIhyB,MAAM,4BAA4BgyB,4BAKhD,GAHIA,EAAIikC,WAAW,QACfjkC,EAAMA,EAAIrvB,MAAM,IAEhBqvB,EAAI5yB,OAAS,GAAM,EACnB,MAAM,IAAIY,MAAM,qBAAqBgyB,EAAI5yB,gCAE7C,MAAM40E,EAAUhiD,EAAI5yB,OAAS,EACvBM,EAAQ,IAAIC,WAAWq0E,GAC7B,IAAK,IAAI70E,EAAI,EAAGA,EAAI60E,EAAS70E,IAAK,CAC9B,MAAMw8B,EAAOvqB,SAAS4gB,EAAIrvB,MAAU,EAAJxD,EAAiB,GAATA,EAAI,IAAS,IACrDO,EAAMP,GAAKw8B,CACd,CACD,OAAOj8B,CACX,EAYAouB,EAAAwmD,gBAVA,SAAyBpoE,EAAGzM,GACxB,GAAIyM,EAAE9M,SAAWK,EAAEL,OACf,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAI+M,EAAE9M,OAAQD,IAC1B,GAAI+M,EAAE/M,KAAOM,EAAEN,GACX,OAAO,EAEf,OAAO,CACX,wBCvCA,SAASu1E,EAAgBtpE,GACrB,OAAQA,EAAKupE,OACjB,CA+EA,SAASC,EAAiBvU,GACtB,MAAkB,KAAdA,EACO,EACJjvD,SAASivD,EAAW,EAC/B,CAzFA/zD,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAuC+mD,kCAAA,EAkFvC/mD,EAAA+mD,6BAnEA,SAASA,EAA6BrmD,EAAMpjB,EAAMi1D,EAAY,GAAIyU,EAAe,GAE7E,GAAqB,IAAjBA,EAAoB,CACpB,MAAMC,EAAW3pE,EAAK4pE,mBAAmBxmD,GACzC,GAAIumD,EAAShxC,KACT,OAAOgxC,EAASvmD,KAGhBA,EAAOumD,EAASvmD,IAEvB,CACD,MAAMymD,EAAc7pE,EAAK2D,QAAU+lE,EACnC,GAAItmD,EAAKs1C,SAAU,CACf,GAAImR,EAAa,CACb,MAAMC,EAAe9pE,EAAK+pE,iBAAiBP,EAAiBvU,IAC5D,GAAqB,OAAjB6U,EAEA,OAAO1mD,EAEX,MAAM4mD,EAAYhqE,EAAKiqE,gBAAgBH,GAEvC,OAAgC,IAA5BE,EAAUE,eAAuBZ,EAAgBU,GAC1CA,EAAUJ,mBAAmBxmD,GAAMA,KAInCA,CAEd,CAGG,OAAOA,CAEd,CAEG,GAAIymD,EAAa,CACb,MAAMC,EAAe9pE,EAAK+pE,iBAAiBP,EAAiBvU,IAC5D,GAAqB,OAAjB6U,EAEA,OAAO1mD,EAEX,MAAM4mD,EAAYhqE,EAAKiqE,gBAAgBH,GACvC,IAAKR,EAAgBU,GACjB,MAAMp1E,MAAM,4CAEhB,MAAM+0E,EAAWK,EAAUJ,mBAAmBxmD,GAE9C,OAAIumD,EAAShxC,KACFgxC,EAASvmD,KAGTqmD,EAA6BE,EAASvmD,KAAM4mD,EAE1D,CAEI,CACD,MAAMlL,EAAW2K,EAA6BrmD,EAAKglB,KAAMpoC,EAAMi1D,EAAY,IAAKyU,EAAe,GACzFS,EAAYV,EAA6BrmD,EAAKiD,MAAOrmB,EAAMi1D,EAAY,IAAKyU,EAAe,GACjG,OAAI5K,IAAa17C,EAAKglB,MAAQ+hC,IAAc/mD,EAAKiD,MACtCjD,EAGA,IAAI0iD,GAAyB5N,WAAW4G,EAAUqL,EAEhE,CAET,wBClFAjpE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAe0nD,UAAA,EA6Cf1nD,EAAA0nD,KApCA,MAEIC,aAAa72E,GAET,MAAMo0E,EAAa,IAAIrzE,WAAWe,KAAKg1E,qBAAqB92E,IACtDi4B,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAK6xE,uBAAuB,CAAES,aAAYn8C,YAAY,EAAGj4B,GAClD8B,KAAKi1E,0BAA0B,CAAE3C,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OACjF,CAEDw2E,aAAapnD,GAET,MAAMwkD,EAAa,IAAIrzE,WAAWe,KAAKm1E,oBAAoBrnD,IACrDqI,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAKo1E,sBAAsB,CAAE9C,aAAYn8C,YAAY,EAAGrI,GACjD9tB,KAAK8xE,2BAA2B,CAAEQ,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OAClF,CAED89C,UAAUt+C,GACN,MAAMo0E,EAAa,IAAIrzE,WAAWe,KAAKg1E,qBAAqB92E,IACtDi4B,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAK6xE,uBAAuB,CAAES,aAAYn8C,YAAY,EAAGj4B,GAClDo0E,CACV,CAED+C,YAAY/C,GAOR,MAAMn8C,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YACnF,OAAOjH,KAAK8xE,2BAA2B,CAAEQ,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OAClF,yBC5CLkN,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA4mD,gBAA0B5mD,EAAwBkoD,cAAAloD,EAAAmoD,mBAAwB,EAM1EnoD,EAAAmoD,cAAwBnxE,OAAO,GAE/B,MAAMoxE,EAA4B10E,OAAO,6BAsLzC,SAASkzE,EAAgBtpE,GACrB,OAAQA,EAAKupE,OACjB,CAHA7mD,EAAAkoD,cA/KA,cAA4BG,GAAWX,KACnC1vE,YAMAswE,GACI59D,QACA9X,KAAK01E,yBAA2BA,EAChC11E,KAAKi0E,SAAU,CAClB,CAED0B,cACI,OAAO31E,KAAK41E,OAAO51E,KAAKkyE,eAC3B,CAED2D,gBACI,OAAO71E,KAAK81E,SAAS91E,KAAKkyE,eAC7B,CAKD6D,kBAAkB10E,GACd,MAAM80B,EAAW,IAAIlyB,SAAS5C,EAAK0F,OAAQ1F,EAAK2F,WAAY3F,EAAK4F,YAC3D6mB,EAAO9tB,KAAKi1E,0BAA0B,CAAE3C,WAAYjxE,EAAM80B,YAAY,EAAG90B,EAAK3C,QACpF,OAAOsB,KAAKg2E,QAAQ,IAAIxF,GAAyBpJ,KAAKt5C,GACzD,CAKDmoD,oBAAoB50E,GAChB,MAAM80B,EAAW,IAAIlyB,SAAS5C,EAAK0F,OAAQ1F,EAAK2F,WAAY3F,EAAK4F,YAC3D6mB,EAAO9tB,KAAKi1E,0BAA0B,CAAE3C,WAAYjxE,EAAM80B,YAAY,EAAG90B,EAAK3C,QACpF,OAAOsB,KAAKk2E,UAAUpoD,EACzB,CAKD8nD,OAAO13E,GACH,MAAM4vB,EAAO9tB,KAAK+0E,aAAa72E,GAC/B,OAAO8B,KAAKg2E,QAAQ,IAAIxF,GAAyBpJ,KAAKt5C,GACzD,CAKDgoD,SAAS53E,GACL,MAAM4vB,EAAO9tB,KAAK+0E,aAAa72E,GAC/B,OAAO8B,KAAKk2E,UAAUpoD,EACzB,CAKDqoD,gBAAgBrvE,GACZ,MAAMgnB,EAAO9tB,KAAKo2E,WAAWtvE,GAC7B,OAAO9G,KAAKk1E,aAAapnD,EAC5B,CAKDuoD,kBAAkBvvE,GACd,MAAMgnB,EAAO9tB,KAAKs2E,aAAaxvE,GAC/B,OAAO9G,KAAKk1E,aAAapnD,EAC5B,CAKDyoD,iBAAiBzvE,GACb,MAAMgnB,EAAO9tB,KAAKs2E,aAAaxvE,GAC/B,OAAO9G,KAAKg2E,QAAQ,IAAIxF,GAAyBpJ,KAAKt5C,GACzD,CAKD0oD,iBAAiB1vE,GACb,MAAMgnB,EAAO9tB,KAAKo2E,WAAWtvE,GAC7B,OAAO9G,KAAKk2E,UAAUpoD,EACzB,CAED2oD,aAAav4E,GAET,GAAI8B,KAAK01E,yBAA0B,CAC/B,MAAMgB,EAAax4E,EAAMs3E,GACzB,GAAIkB,EACA,OAAOA,CAEd,CACD,MAAMlpD,EAAOmpD,GAAYlH,UAAUzvE,KAAK42E,SAAS14E,GAAQ8B,KAAK40E,eAI9D,OAHI50E,KAAK01E,2BACLx3E,EAAMs3E,GAA6BhoD,GAEhCA,CACV,CAEDqpD,uBAAuB34E,GACnB,OAAOA,EAAMs3E,EAChB,CAMDsB,gBAAgBtP,EAAOh6C,GACnB,MAAMupD,EAAoBvG,GAAyBpJ,KAAK0P,gBAAgBtP,GAAOnB,SACzEA,EAAW2Q,GAA+B7C,6BAA6B4C,EAAmB/2E,MAChG,QAAaX,IAATmuB,IAAuBypD,GAAYrD,gBAAgBvN,EAAS74C,KAAMA,GAClE,MAAM,IAAIluB,MAAM,qCAEpB,OAAOU,KAAKg2E,QAAQ,IAAIxF,GAAyBpJ,KAAKf,GACzD,CAED6Q,iBAAiBppD,EAAMqpD,GACnB,MAAMC,EAAWp3E,KAAKq3E,yBAAyBvpD,EAAMqpD,GACrD,OAAO3G,GAAyBnI,YAAYv6C,EAAM,CAC9CpjB,KAAM8lE,GAAyB3C,UAAUI,WACzCxO,SAAU2X,GAEjB,CAEDC,yBAAyBvpD,EAAMqpD,GAC3B,MAAMC,EAAW,GACjB,IAAK,MAAME,KAAYH,EAAW,CAC9B,MAAMzsE,KAAEA,EAAI00D,OAAEA,GAAWp/D,KAAKu3E,YAAYD,GAC1C,GAAKtD,EAAgBtpE,GAGhB,CAED,MAAM8sE,EAAe9sE,EAAK+sE,qBAAqBrY,EAA2B,OAAnB10D,EAAKgtE,UAAqBlH,GAAyBrJ,QAAQr5C,EAAMsxC,QAAU//D,GAClI,IAAK,MAAM+/D,KAAUoY,EACjBJ,EAAS32E,KAAK2+D,EAErB,MARGgY,EAAS32E,KAAK2+D,EASrB,CACD,OAAOgY,CACV,CAIDG,YAAYtuC,GACR,MAAMw2B,EAAW,GACjB,IAAI/0D,EAAO1K,KACX,IAAK,MAAM23E,KAAQ1uC,EAAM,CACrB,GAAIv+B,EAAKupE,QACL,MAAM,IAAI30E,MAAM,qDAEpB,MAAM8/D,EAAS10D,EAAKktE,kBAAkBD,GAEvB,OAAXvY,IACAK,EAASh/D,KAAK2+D,GACd10D,EAAOA,EAAKiqE,gBAAgBgD,GAEnC,CACD,MAAO,CACHjtE,OACA00D,OAAQoR,GAAyB5R,eAAea,GAEvD,CAMD6U,mBAAmBxmD,GACf,MAAO,CAAEA,OAAMuV,MAAM,EACxB,GAMLjW,EAAA4mD,gBAA0BA,wBClM1BpoE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmByqD,cAAA,EA2DnBzqD,EAAAyqD,SA9CA,MAEIr7B,YACI,MAAMhnC,EAAS,IAAIvW,WAAWe,KAAK0K,KAAKyqE,oBAAoBn1E,KAAK8tB,OAC3DqI,EAAW,IAAIlyB,SAASuR,EAAOzO,OAAQyO,EAAOxO,WAAYwO,EAAOvO,YAEvE,OADAjH,KAAK0K,KAAK0qE,sBAAsB,CAAE9C,WAAY98D,EAAQ2gB,YAAY,EAAGn2B,KAAK8tB,MACnEtY,CACV,CAODihE,eACI,OAAOz2E,KAAK8tB,KAAKN,IACpB,CAeD66C,YAAY6C,GACR,OAAOlrE,KAAK0K,KAAKwsE,iBAAiBl3E,KAAK8tB,KAAMo9C,EAChD,CAKD3N,UACI,OAAOv9D,KAAK0K,KAAKwqE,aAAal1E,KAAK8tB,KACtC,CAEDnX,QACI,OAAO3W,KAAK0K,KAAKsrE,QAAQ,IAAIxF,GAAyBpJ,KAAKpnE,KAAK8tB,MACnE,yBC1DLliB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA2B0qD,sBAAA,EAuD3B1qD,EAAA0qD,iBAlDA,cAA+BrC,GAAWoC,SACtCzyE,YAAYsF,EAAM+gE,GACd3zD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,EACZzrE,KAAKwyE,SAAW9nE,EAAKwqE,aAAazJ,EAAKpF,SAC1C,CACGv4C,WACA,OAAO9tB,KAAKyrE,KAAKpF,QACpB,CAGGiM,iBACA,OAAOtyE,KAAKwyE,SAASF,UACxB,CAEGC,aACA,OAAOvyE,KAAKwyE,SAASD,MACxB,CAEDz+D,IAAIgwD,GACA,OAAO9jE,KAAKwyE,SAAS1+D,IAAIgwD,EAC5B,CAED15D,IAAI05D,EAAUlE,GACV5/D,KAAKwyE,SAASpoE,IAAI05D,EAAUlE,GAE5B5/D,KAAKyrE,KAAKpF,SAAWrmE,KAAK0K,KAAKqqE,aAAa/0E,KAAKwyE,SACpD,CAEDI,YAAYC,GACR7yE,KAAKwyE,SAASI,YAAYC,EAC7B,CAEDC,gBAAgB1kE,GACZ,OAAOpO,KAAKwyE,SAASM,gBAAgB1kE,EACxC,CAEDilE,oBACI,OAAOrzE,KAAKwyE,SAASa,mBACxB,CAEDE,mBACI,OAAOvzE,KAAKwyE,SAASe,kBACxB,CAEDC,cACI,OAAOxzE,KAAKwyE,SAASgB,aACxB,yBCtDL5nE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAqB2qD,gBAAA,EAoDrB3qD,EAAA2qD,WArCA,cAAyBtC,GAAWoC,SAQhCpB,eAEI,OADAz2E,KAAKg4E,SACElgE,MAAM2+D,cAChB,CAKDj6B,YAEI,OADAx8C,KAAKg4E,SACElgE,MAAM0kC,WAChB,CAOD7lC,MAAMshE,GACF,GAAIA,EACA,OAAOj4E,KAAK0K,KAAKwrE,UAAUl2E,KAAK8tB,MAE/B,CACD,MAAMoqD,EAAQl4E,KAAKk4E,MAEnB,OADAl4E,KAAKm4E,aACEn4E,KAAK0K,KAAKwrE,UAAUl2E,KAAK8tB,KAAMoqD,EACzC,CACJ,yBCnDLtsE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA6BgrD,wBAAA,EAwE7BhrD,EAAAgrD,mBAnEA,cAAiC3C,GAAWsC,WACxC3yE,YAAYsF,EAAM48D,GACdxvD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,EAEjBtnE,KAAKq4E,UAAY,IACpB,CACGvqD,WACA,OAAO9tB,KAAKsnE,SACf,CACG4Q,YAEH,CACDF,SAC2B,OAAnBh4E,KAAKq4E,YACLr4E,KAAKsnE,UAAYtnE,KAAK0K,KAAKqqE,aAAa/0E,KAAKq4E,WAEpD,CAGG/F,iBACA,OAAOtyE,KAAKwyE,SAASF,UACxB,CAEGC,aACA,OAAOvyE,KAAKwyE,SAASD,MACxB,CAEDz+D,IAAIgwD,GACA,OAAO9jE,KAAKwyE,SAAS1+D,IAAIgwD,EAC5B,CAED15D,IAAI05D,EAAUlE,GACV5/D,KAAKwyE,SAASpoE,IAAI05D,EAAUlE,EAC/B,CAEDgT,YAAYC,GACR7yE,KAAKwyE,SAASI,YAAYC,EAC7B,CAEDC,gBAAgB1kE,GACZ,OAAOpO,KAAKwyE,SAASM,gBAAgB1kE,EACxC,CAEDilE,oBACI,OAAOrzE,KAAKwyE,SAASa,mBACxB,CAEDE,mBACI,OAAOvzE,KAAKwyE,SAASe,kBACxB,CAEDC,cACI,OAAOxzE,KAAKwyE,SAASgB,aACxB,CAEGhB,eAIA,OAHuB,OAAnBxyE,KAAKq4E,YACLr4E,KAAKq4E,UAAYr4E,KAAK0K,KAAKwqE,aAAal1E,KAAKsnE,YAE1CtnE,KAAKq4E,SACf,CACDF,aACIn4E,KAAKq4E,UAAY,IACpB,yBCvELzsE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAuBkrD,kBAAA,EAsFvBlrD,EAAAkrD,aAxEA,cAA2BC,GAAYjD,cACnClwE,cACI0S,SAASuR,WACTrpB,KAAKw4E,eAAgB,CACxB,CACDxC,QAAQvK,GACJ,OAAO,IAAIgN,GAAWX,iBAAiB93E,KAAMyrE,EAChD,CACDyK,UAAUpoD,GACN,OAAO,IAAI4qD,GAAWN,mBAAmBp4E,KAAM8tB,EAClD,CACDsoD,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CACD6qD,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CAEDtB,SAAS14E,GACL,OAAOy4E,GAAYnH,oBAAoBtxE,EAAMo0E,WAChD,CAEDsF,oBAEI,OAAO,IACV,CACDjD,kBAEI,MAAMr1E,MAAM,2CACf,CACDm1E,mBAEI,MAAMn1E,MAAM,2CACf,CACDg1E,mBAAmBxmD,GACf,MAAO,CAAEA,OAAMuV,MAAM,EACxB,CACDo0C,qBAAqBmB,EAAYvS,GAC7B,MAAMiN,EAAUtzE,KAAK64E,gBAAgBxS,GAC/BwJ,EAAapsE,KAAKm4B,KAAK03C,EAAU,IACjC/T,EAAaiR,GAAyB5R,eAAe,CAACga,EAAYpI,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAO,MACvHq7D,EAAW,IAAIrhE,MAAMyxE,GAC3B,IAAK,IAAIpxE,EAAI,EAAG2gE,EAASG,EAAY9gE,EAAIoxE,EAAYpxE,IAAK2gE,IACtDK,EAAShhE,GAAK2gE,EAMlB,OAHIp/D,KAAK6wE,QACLpR,EAASh/D,KAAK+vE,GAAyB5R,eAAe,CAACga,EAAYL,GAAYhD,iBAE5E9V,CACV,CAEDvoD,SAAShF,GACL,MAAMogE,EAAa2E,GAAYpD,cAAc3hE,GACvCikB,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OAAOjH,KAAK8xE,2BAA2B,CAAEQ,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OAClF,CACD6Y,OAAOrZ,GACH,OAAO+4E,GAAYnD,YAAY9zE,KAAKw8C,UAAUt+C,GACjD,CACDyY,MAAMzY,GACF,OAAOA,EAAMyY,OAChB,CACDX,OAAOxK,EAAGzM,GACN,OAAOyM,EAAE+mE,SAAWxzE,EAAEwzE,QAAU0E,GAAYrD,gBAAgBpoE,EAAE8mE,WAAYvzE,EAAEuzE,WAC/E,yBCrFL1mE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsB0rD,iBAAA,EActB,MAAMA,UAAoBJ,GAAWJ,aACjClzE,YAAY2zE,EAAW76C,GAMnB,GALApmB,QACA9X,KAAK+4E,UAAYA,EACjB/4E,KAAK03E,UAAY,KACjB13E,KAAKg5E,QAAU,EACfh5E,KAAK6wE,QAAS,EACI,IAAdkI,EACA,MAAMz5E,MAAM,0BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,WAAW83E,KAE7C/4E,KAAK40E,cAAgBnxE,KAAKm4B,KAAK57B,KAAK+4E,UAAY,EAAI,IACpD/4E,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eAEpD50E,KAAKqO,MAAQ,EAAIrO,KAAK+xE,WACtB/xE,KAAKi5E,QAAUx1E,KAAKm4B,KAAKm9C,EAAY,GAAK,CAC7C,CACDtzE,aAAaszE,EAAW76C,GACpB,OAAO,IAAKg7C,GAAQhJ,WAAW4I,EAAa56C,EAAKj9B,UAA1C,CAAqD83E,EAAW76C,EAC1E,CACDg0C,eACI,OAAOuG,GAAWrG,SAASK,WAAW,EACzC,CAGDuC,qBAAqB92E,GACjB,OAAOi7E,EAAyBj7E,EAAMq0E,OACzC,CACDV,uBAAuBr8D,EAAQrL,EAAQjM,GAEnC,OADAsX,EAAO88D,WAAWloE,IAAIlM,EAAMo0E,WAAYnoE,GACjCivE,EAAgB5jE,EAAO88D,WAAYnoE,EAAQjM,EAAMq0E,OAC3D,CACDT,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,MAAM6vE,WAAEA,EAAUC,OAAEA,GAAWvyE,KAAKq5E,sCAAsCh4E,EAAKixE,WAAYhrE,EAAO7E,GAClG,OAAO,IAAIg2E,GAAWrG,SAASE,EAAYC,EAC9C,CACD4C,oBAAoBrnD,GAChB,OAAOqrD,EAAyBG,GAAa/H,sBAAsBzjD,GACtE,CACDsnD,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMyiD,EAAa+I,GAAahI,0BAA0BxjD,GACpDykD,EAAS+G,GAAa/H,sBAAsBzjD,GAC5CwlD,EAAU7vE,KAAKm4B,KAAK22C,EAAS,GAC7BgH,EAAW91E,KAAKm4B,KAAK03C,EAAU,IAC/BlO,EAAQoL,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK+xE,WAAY,EAAGwH,GAEvF,OADA/I,GAAyB1K,uBAAuBtwD,EAAO2gB,SAAUhsB,EAAQmpE,EAASlO,GAC3EgU,EAAgB5jE,EAAO88D,WAAYnoE,EAAQooE,EACrD,CACD0C,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,MAAM6vE,WAAEA,EAAUC,OAAEA,GAAWvyE,KAAKq5E,sCAAsCh4E,EAAKixE,WAAYhrE,EAAO7E,GAC5F0zB,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAC7EspE,EAAaC,GAAyBzK,uBAAuB/lE,KAAK+xE,WAAY57C,EAAU,EAAGm8C,EAAW5zE,QAC5G,OAAO46E,GAAahJ,cAAcC,EAAYgC,EACjD,CACDsG,gBAAgB/qD,GACZ,IAAKA,EACD,MAAM,IAAIxuB,MAAM,6CACpB,OAAOmE,KAAKm4B,KAAK09C,GAAa/H,sBAAsBzjD,GAAQ,EAC/D,CAED2oD,aAAav4E,GACT,OAAOy4E,GAAYpH,YAAYz3D,MAAM2+D,aAAav4E,GAAQA,EAAMq0E,OACnE,CAID8G,sCAAsCh4E,EAAMiG,EAAO7E,GAC/C,MAAM6vE,WAAEA,EAAUC,OAAEA,GAQ5B,SAA+ClxE,EAAMiG,EAAO7E,GACxD,GAAIA,EAAMpB,EAAK3C,OACX,MAAMY,MAAM,mCAAmCmD,oBAAsBpB,EAAK3C,UAE9E,MAAM86E,EAAWn4E,EAAKoB,EAAM,GACtBkgD,EAAOlgD,EAAM6E,EACnB,GAAiB,IAAbkyE,EACA,MAAM,IAAIl6E,MAAM,sDAEpB,GAAiB,IAAbk6E,EAIA,MAAO,CAAElH,WAFUrzE,WAAWwjB,UAAUxgB,MAAM4sB,KAAKxtB,EAAMiG,EAAO7E,EAAM,GAEjD8vE,OADO,GAAZ5vB,EAAO,IAK3B,MAAM2vB,EAAarzE,WAAWwjB,UAAUxgB,MAAM4sB,KAAKxtB,EAAMiG,EAAO7E,GAE1Dg3E,EAAoBD,EAAS1zE,SAAS,GAAGpH,OAAS,EAClD6zE,EAAsB,GAAZ5vB,EAAO,GAAS82B,EAGhC,OADAnH,EAAW3vB,EAAO,IADL,KAAS,EAAI82B,EAEnB,CAAEnH,aAAYC,SACzB,CAhCuC8G,CAAsCh4E,EAAMiG,EAAO7E,GAClF,GAAI8vE,EAASvyE,KAAK+4E,UACd,MAAMz5E,MAAM,qBAAqBizE,OAAYvyE,KAAK+4E,aAEtD,MAAO,CAAEzG,aAAYC,SACxB,EA4BL,SAAS4G,EAAyB5G,GAC9B,MAAMvzE,EAAQyE,KAAKm4B,KAAK22C,EAAS,GAEjC,OAAOA,EAAS,GAAM,EAAIvzE,EAAQ,EAAIA,CAC1C,CAKA,SAASo6E,EAAgB5jE,EAAQrL,EAAQooE,GACrC,MACMmH,EAAYvvE,EADF1G,KAAKm4B,KAAK22C,EAAS,GAEnC,OAAIA,EAAS,GAAM,GACf/8D,EAAOkkE,GAAa,EACbA,EAAY,IAGnBlkE,EAAOkkE,EAAY,IAAM,GAAKnH,EAAS,EAChCmH,EAEf,CA9CAtsD,EAAA0rD,YAAsBA,wBCzFtBltE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAwBusD,mBAAA,EAaxB,MAAMA,UAAsBjB,GAAWJ,aACnClzE,YAAYw0E,EAAY17C,GAIpB,GAHApmB,QACA9X,KAAK45E,WAAaA,EAClB55E,KAAK6wE,QAAS,EACK,IAAf+I,EACA,MAAMt6E,MAAM,6BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,aAAa24E,KAC/C55E,KAAK6vE,WAAapsE,KAAKm4B,KAAK57B,KAAK45E,WAAa,EAAI,IAClD55E,KAAK40E,cAAgB50E,KAAK6vE,WAC1B7vE,KAAKqO,MAAQsoE,GAAYrH,iBAAiBtvE,KAAK6vE,YAC/C7vE,KAAK03E,UAAYj0E,KAAKm4B,KAAK57B,KAAK45E,WAAa,GAC7C55E,KAAKg5E,QAAUh5E,KAAK03E,UACpB13E,KAAKi5E,QAAUj5E,KAAK03E,UAEpB13E,KAAK65E,aAAeD,EAAa,GAAM,EAAI,EAAI,IAAQ,KAAQA,EAAa,CAC/E,CACDn0E,aAAaszE,EAAW76C,GACpB,OAAO,IAAKg7C,GAAQhJ,WAAWyJ,EAAez7C,EAAKj9B,UAA5C,CAAuD83E,EAAW76C,EAC5E,CACDg0C,eACI,OAAOuG,GAAWrG,SAASK,WAAWzyE,KAAK45E,WAC9C,CAGD5E,uBACI,OAAOh1E,KAAK03E,SACf,CACD7F,uBAAuBr8D,EAAQrL,EAAQjM,GAEnC,OADAsX,EAAO88D,WAAWloE,IAAIlM,EAAMo0E,WAAYnoE,GACjCA,EAASnK,KAAK03E,SACxB,CACD5F,2BAA2BzwE,EAAMiG,EAAO7E,GAGpC,OAFAzC,KAAK85E,kBAAkBz4E,EAAKixE,WAAYhrE,EAAO7E,GAExC,IAAIg2E,GAAWrG,SAASnzE,WAAWwjB,UAAUxgB,MAAM4sB,KAAKxtB,EAAKixE,WAAYhrE,EAAO7E,GAAMzC,KAAK45E,WACrG,CACDzE,sBACI,OAAOn1E,KAAK03E,SACf,CACDtC,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMs3C,EAAQoL,GAAyB3J,gBAAgB/4C,EAAM9tB,KAAKqO,MAAO,EAAGrO,KAAK6vE,YAEjF,OADAW,GAAyB1K,uBAAuBtwD,EAAO2gB,SAAUhsB,EAAQnK,KAAK03E,UAAWtS,GAClFj7D,EAASnK,KAAK03E,SACxB,CACDzC,0BAA0B5zE,EAAMiG,EAAO7E,GAEnC,OADAzC,KAAK85E,kBAAkBz4E,EAAKixE,WAAYhrE,EAAO7E,GACxC+tE,GAAyBzK,uBAAuB/lE,KAAKqO,MAAOhN,EAAK80B,SAAU7uB,EAAO7E,EAC5F,CACDo2E,kBACI,OAAO74E,KAAK03E,SACf,CAKDoC,kBAAkBz4E,EAAMiG,EAAO7E,GAE3B,GAAIA,EAAM6E,IAAUtH,KAAK03E,UACrB,MAAMp4E,MAAM,0BAFHmD,EAAM6E,QAEkCtH,KAAK03E,aAG1D,GAEA13E,KAAK65E,aAAe,IAEfx4E,EAAKoB,EAAM,GAAKzC,KAAK65E,cAAgB,EACtC,MAAMv6E,MAAM,sCAEnB,EAEL8tB,EAAAusD,cAAwBA,wBCrFxB/tE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsB2sD,YAAA3sD,EAAA4sD,eAAoB,EA2C1C5sD,EAAA4sD,UApCA,cAAwBvE,GAAWX,KAC/B1vE,cACI0S,SAASuR,WACTrpB,KAAKi0E,SAAU,EAEfj0E,KAAKqO,MAAQ,EAEbrO,KAAK40E,cAAgB,CACxB,CACDI,uBACI,OAAOh1E,KAAKiH,UACf,CACDkuE,sBACI,OAAOn1E,KAAKiH,UACf,CACDgzE,gBAAgBt3B,GACZ,GAAIA,IAAS3iD,KAAKiH,WACd,MAAM3H,MAAM,0BAA0BqjD,cAAiB3iD,KAAKiH,aAEnE,CACDwvE,aAAav4E,GAET,MAAMo0E,EAAa,IAAIrzE,WAAW,IAC5Bk3B,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAK6xE,uBAAuB,CAAES,aAAYn8C,YAAY,EAAGj4B,GAClDo0E,CACV,CACD37D,MAAMzY,GAEF,OAAOA,CACV,CACD8X,OAAOxK,EAAGzM,GAEN,OAAOyM,IAAMzM,CAChB,GAMLquB,EAAA2sD,YAHA,SAAqBrvE,GACjB,OAAOA,EAAKupE,OAChB,wBC/CAroE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsB8sD,iBAAA,EAQtB,MAAMA,UAAoBC,GAAQH,UAC9B50E,YAAY84B,GACRpmB,QACA9X,KAAKiH,WAAa,EAClBjH,KAAKo6E,cAAgB,GACrBp6E,KAAK03E,UAAY,EACjB13E,KAAKg5E,QAAU,EACfh5E,KAAKi5E,QAAU,EACfj5E,KAAKiB,SAAWi9B,GAAMj9B,UAAY,SACrC,CACDwE,aAAay4B,GACT,OAAO,IAAKg7C,GAAQhJ,WAAWgK,EAAah8C,EAAKj9B,UAA1C,CAAqDi9B,EAC/D,CACDg0C,eACI,OAAO,CACV,CAEDL,uBAAuBr8D,EAAQrL,EAAQjM,GAEnC,OADAsX,EAAO88D,WAAWnoE,GAAUjM,EAAQ,EAAI,EACjCiM,EAAS,CACnB,CACD2nE,2BAA2BzwE,EAAMiG,EAAO7E,GAEpC,OADAzC,KAAKi6E,gBAAgBx3E,EAAM6E,GACnBjG,EAAKixE,WAAWhrE,IACpB,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,QACI,MAAM,IAAIhI,MAAM,2BAA2B+B,EAAKixE,WAAWhrE,MAEtE,CACD8tE,sBAAsB5/D,EAAQrL,EAAQ2jB,GAGlC,OADAtY,EAAO88D,WAAWnoE,GAAU2jB,EAAK21C,QAAQ,EAAG,GACrCt5D,EAAS,CACnB,CACD8qE,0BAA0B5zE,EAAMiG,EAAO7E,GACnCzC,KAAKi6E,gBAAgBx3E,EAAM6E,GAC3B,MAAMpJ,EAAQmD,EAAKixE,WAAWhrE,GAC9B,GAAIpJ,EAAQ,EACR,MAAMoB,MAAM,0BAA0BpB,KAE1C,OAAOsyE,GAAyBnN,SAASoN,WAAWvyE,EACvD,CAEDm8E,iBAAiBC,GACb,OAAkC,IAA3BA,EAAS7W,QAAQ,EAAG,EAC9B,CACD8W,eAAeD,EAAUp8E,GACrBo8E,EAASpW,QAAQ,EAAG,EAAGhmE,EAAQ,EAAI,EACtC,CACDs8E,uBAAuBF,EAAUzpD,GAE7B,OAA4C,IAArCypD,EAAS7W,QAAQ,EADJ5yC,EAAQ7wB,KAAKo6E,cAEpC,CACDK,qBAAqBH,EAAUzpD,EAAO3yB,GAElCo8E,EAASpW,QAAQ,EADGrzC,EAAQ7wB,KAAKo6E,cACAl8E,EAAQ,EAAI,EAChD,CAEDgZ,SAAShF,GACL,GAAoB,kBAATA,EACP,MAAM5S,MAAM,4BAA4B4S,sBAE5C,OAAOA,CACV,CACDqF,OAAOrZ,GACH,OAAOA,CACV,EAELkvB,EAAA8sD,YAAsBA,wBChFtBtuE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAwBstD,mBAAA,EA2GxBttD,EAAAstD,cA5FA,cAA4BnC,GAAYjD,cACpClwE,cACI0S,SAASuR,WACTrpB,KAAKw4E,eAAgB,CACxB,CACDtG,eAEI,OAAO,IAAIjzE,WAAWe,KAAKg5E,QAC9B,CACDhD,QAAQvK,GACJ,OAAOzrE,KAAKk2E,UAAUzK,EAAKpF,SAC9B,CACD6P,UAAUpoD,GACN,OAAO9tB,KAAKk1E,aAAapnD,EAC5B,CACDsoD,WAAWtvE,GACP,OAAO9G,KAAKs2E,aAAaxvE,EAC5B,CACDwvE,aAAaxvE,GACT,MAAMwrE,EAAa,IAAIrzE,WAAWe,KAAKg1E,qBAAqBluE,IACtDqvB,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAK6xE,uBAAuB,CAAES,aAAYn8C,YAAY,EAAGrvB,GAClD9G,KAAKi1E,0BAA0B,CAAE3C,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OACjF,CACDi6E,gBAEC,CAED/C,OAAO13E,GACH,OAAOA,CACV,CACD43E,SAAS53E,GACL,OAAOA,CACV,CAED2zE,uBAAuBr8D,EAAQrL,EAAQjM,GAEnC,OADAsX,EAAO88D,WAAWloE,IAAIlM,EAAOiM,GACtBA,EAASjM,EAAMQ,MACzB,CACDozE,2BAA2BzwE,EAAMiG,EAAO7E,GAEpC,OADAzC,KAAKi6E,gBAAgBx3E,EAAM6E,GACpBrI,WAAWwjB,UAAUxgB,MAAM4sB,KAAKxtB,EAAKixE,WAAYhrE,EAAO7E,EAClE,CAEDm0E,SAAS14E,GACL,OAAOy4E,GAAYnH,oBAAoBtxE,EAC1C,CAED05E,oBAEI,OAAO,IACV,CACDjD,kBACI,MAAMr1E,MAAM,4CACf,CACDm1E,mBACI,MAAMn1E,MAAM,4CACf,CACDg1E,mBAAmBxmD,GACf,MAAO,CAAEA,OAAMuV,MAAM,EACxB,CACDo0C,qBAAqBmB,EAAYvS,GAC7B,MAAMiN,EAAUtzE,KAAK64E,gBAAgBxS,GAC/BwJ,EAAapsE,KAAKm4B,KAAK03C,EAAU,IACjC/T,EAAaiR,GAAyB5R,eAAe,CAACga,EAAYpI,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAO,MACvHq7D,EAAW,IAAIrhE,MAAMyxE,GAC3B,IAAK,IAAIpxE,EAAI,EAAG2gE,EAASG,EAAY9gE,EAAIoxE,EAAYpxE,IAAK2gE,IACtDK,EAAShhE,GAAK2gE,EAMlB,OAHIp/D,KAAK6wE,QACLpR,EAASh/D,KAAK+vE,GAAyB5R,eAAe,CAACga,EAAYL,GAAYhD,iBAE5E9V,CACV,CAEDvoD,SAAShF,GACL,MAAMhU,EAAQ+4E,GAAYpD,cAAc3hE,GAExC,OADAlS,KAAKi6E,gBAAgB/7E,EAAMQ,QACpBR,CACV,CACDqZ,OAAOrZ,GACH,OAAO+4E,GAAYnD,YAAY51E,EAClC,CAEDyY,MAAMzY,GACF,OAAOA,CACV,CACD8X,OAAOxK,EAAGzM,GACN,OAAOk4E,GAAYrD,gBAAgBpoE,EAAGzM,EACzC,yBC1GL6M,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAuButD,kBAAA,EAkBvB,MAAMA,UAAqB1D,GAAYyD,cACnCt1E,YAAYw1E,EAAY18C,GAKpB,GAJApmB,QACA9X,KAAK46E,WAAaA,EAClB56E,KAAK03E,UAAY,KACjB13E,KAAK6wE,QAAS,EACK,IAAf+J,EACA,MAAMt7E,MAAM,0BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,YAAY25E,KAC9C56E,KAAK40E,cAAgBnxE,KAAKm4B,KAAK57B,KAAK46E,WAAa,IACjD56E,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eACpD50E,KAAKqO,MAAQ,EAAIrO,KAAK+xE,WACtB/xE,KAAKg5E,QAAU,EACfh5E,KAAKi5E,QAAUj5E,KAAK46E,UACvB,CACDn1E,aAAaszE,EAAW76C,GACpB,OAAO,IAAKg7C,GAAQhJ,WAAWyK,EAAcz8C,EAAKj9B,UAA3C,CAAsD83E,EAAW76C,EAC3E,CAGD82C,qBAAqB92E,GACjB,OAAOA,EAAMQ,MAChB,CAEDy2E,oBAAoBrnD,GAChB,OAAOwrD,GAAa/H,sBAAsBzjD,EAC7C,CACDsnD,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMyiD,EAAa+I,GAAahI,0BAA0BxjD,GACpDwlD,EAAUgG,GAAa/H,sBAAsBzjD,GAC7CyrD,EAAW91E,KAAKm4B,KAAK03C,EAAU,IAC/BlO,EAAQoL,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK+xE,WAAY,EAAGwH,GAEvF,OADA/I,GAAyB1K,uBAAuBtwD,EAAO2gB,SAAUhsB,EAAQmpE,EAASlO,GAC3Ej7D,EAASmpE,CACnB,CACD2B,0BAA0B5zE,EAAMiG,EAAO7E,GACnCzC,KAAKi6E,gBAAgBx3E,EAAM6E,GAC3B,MAAMipE,EAAaC,GAAyBzK,uBAAuB/lE,KAAK+xE,WAAY1wE,EAAK80B,SAAU7uB,EAAO7E,GAC1G,OAAO62E,GAAahJ,cAAcC,EAAY9tE,EAAM6E,EACvD,CACDuxE,gBAAgB/qD,GACZ,IAAKA,EACD,MAAM,IAAIxuB,MAAM,8CACpB,OAAOg6E,GAAa/H,sBAAsBzjD,EAC7C,CAED2oD,aAAav4E,GACT,OAAOy4E,GAAYpH,YAAYz3D,MAAM2+D,aAAav4E,GAAQA,EAAMQ,OACnE,CAGDu7E,gBAAgBt3B,GACZ,GAAIA,EAAO3iD,KAAK46E,WACZ,MAAMt7E,MAAM,yBAAyBqjD,WAAc3iD,KAAK46E,aAE/D,EAELxtD,EAAAutD,aAAuBA,wBC5EvB/uE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAyBytD,oBAAA,EAkBzB,MAAMA,UAAuB5D,GAAYyD,cACrCt1E,YAAY01E,EAAa58C,GAIrB,GAHApmB,QACA9X,KAAK86E,YAAcA,EACnB96E,KAAK6wE,QAAS,EACM,IAAhBiK,EACA,MAAMx7E,MAAM,6BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,cAAc65E,KAChD96E,KAAK40E,cAAgBnxE,KAAKm4B,KAAK57B,KAAK86E,YAAc,IAClD96E,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eACpD50E,KAAKqO,MAAQrO,KAAK+xE,WAClB/xE,KAAK03E,UAAY13E,KAAK86E,YACtB96E,KAAKg5E,QAAUh5E,KAAK03E,UACpB13E,KAAKi5E,QAAUj5E,KAAK03E,SACvB,CACDjyE,aAAaszE,EAAW76C,GACpB,OAAO,IAAKg7C,GAAQhJ,WAAW2K,EAAgB38C,EAAKj9B,UAA7C,CAAwD83E,EAAW76C,EAC7E,CAGD82C,uBACI,OAAOh1E,KAAK03E,SACf,CAEDvC,sBACI,OAAOn1E,KAAK03E,SACf,CACDtC,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMs3C,EAAQoL,GAAyB3J,gBAAgB/4C,EAAM9tB,KAAK+xE,WAAY,EAAG/xE,KAAK40E,eAEtF,OADApE,GAAyB1K,uBAAuBtwD,EAAO2gB,SAAUhsB,EAAQnK,KAAK03E,UAAWtS,GAClFj7D,EAASnK,KAAK03E,SACxB,CACDzC,0BAA0B5zE,EAAMiG,EAAO7E,GAEnC,OADAzC,KAAKi6E,gBAAgBx3E,EAAM6E,GACpBkpE,GAAyBzK,uBAAuB/lE,KAAK+xE,WAAY1wE,EAAK80B,SAAU7uB,EAAO7E,EACjG,CACDo2E,kBACI,OAAO74E,KAAK86E,WACf,CAIDb,gBAAgBt3B,GACZ,GAAIA,IAAS3iD,KAAK86E,YACd,MAAMx7E,MAAM,2BAA2BqjD,cAAiB3iD,KAAK86E,cAEpE,EAEL1tD,EAAAytD,eAAyBA,uBClEzB,WAEI,IAAIE,EAAW,SAAS3yE,EAAGu9B,GAEvB,OAAOv9B,EAAEwyB,QAAQ,SAAU,SAD3B+K,EAASA,GAAU,KACwB/K,QAAQ,KAAM,MAAM+K,EAClE,EACDq1C,EAAeD,EAAS,4CAA6C,MACrEE,EAAgB,MAAMF,EAAS,cAAe,MAC9CG,EAAgB,MAAMH,EAAS,cAAe,MAE9CI,EAAU,SAASC,EAASC,EAAQC,EAAQC,GAKxC,OAJAH,EAAUA,GAAWJ,EACrBK,EAASA,GAAUJ,EACnBK,EAASA,GAAUJ,EACnBK,EAAYA,GALE,iEAMP,CACHC,WAAY,IAAI9gD,OAAO,OAAO0gD,EAAQ,OAAOC,EAAO,KAAM,KAC1DI,OAAQ,IAAI/gD,OAAO,OAAO0gD,EAAQ,QAAQC,EAAOC,EAAO,KAAM,KAC9DhlD,KAAM,IAAIoE,OAAO,IAAI0gD,EAAQ,UAAU,KACvCM,SAAU,IAAIhhD,OAAO,wCAAwC2gD,EAAO,KAAM,KAC1EM,SAAU,IAAIjhD,OAAO,OAAO6gD,EAAU,OAAQ,KAC9CK,MAAO,IAAIlhD,OAAO,MAAM4gD,EAAO,OAAOA,EAAO,QAAQA,EAAO,UAAUA,EAAO,OAAQ,KACrFO,MAAO,IAAInhD,OAAO,MAAM2gD,EAAO,OAC/BS,KAAM,eACNC,WAAY,KACZC,KAAM,IAAIthD,OAAO,IAAI0gD,EAAQ,KAEpC,EACDa,EAAKd,IACL1jC,EAAI,CACAwkC,GAAIA,EACJlB,SAAUA,EACVI,QAASA,EACTe,MAAO,GACPC,GAAI34E,OAAOif,UAAUnW,YACrBkrB,IAAKh0B,OAAOif,UAAUlW,YACtB6vE,IAAK,SAASh0E,GACV,OAAOqvC,EAAE0kC,GAAGttD,KAAKzmB,EAAEiE,OAAO,IAAIjE,EAAEnG,MAAM,EACzC,EACDo6E,MAAO,SAASj0E,GACZ,OAAOqvC,EAAEjgB,IAAI3I,KAAKzmB,EAAEiE,OAAO,IAAIjE,EAAEnG,MAAM,EAC1C,EACDq6E,aAAc,SAASl0E,GACnB,OAAOA,EAAEwyB,QAAQqhD,EAAGF,WAAY,GACnC,EACDzlD,KAAM,SAASluB,EAAGkuB,EAAMgmD,GASpB,OARY,MAARhmD,IACAluB,EAAIA,EAAEwyB,QAAQqhD,EAAG3lD,KAAM,SAASjhB,EAAGjJ,GAC/B,OAAOA,EAAOkqB,EAAOlqB,EAAO,EAChD,IAEgBkwE,IACAl0E,EAAIqvC,EAAE6kC,aAAal0E,IAEhBA,CACV,EACDm0E,KAAM,SAASn0E,EAAGkuB,EAAMmlD,EAAQI,GAK5B,GAJAzzE,EAAS,MAALA,EAAY,GAAKA,EAAI,IACpByzE,GAASI,EAAGJ,MAAMh2E,KAAKuC,KACxBA,EAAIqvC,EAAEjgB,IAAI3I,KAAKzmB,KAEdkuB,IAAS2lD,EAAGH,KAAKj2E,KAAKuC,GAAI,CAC3B,IAAIo0E,EAAQ/kC,EAAEnhB,KAAKluB,EAAG,KAClB6zE,EAAGH,KAAKj2E,KAAK22E,KACbp0E,EAAIo0E,EAEX,CAID,OAHKf,GAAWQ,EAAGD,KAAKn2E,KAAKuC,KACzBA,EAAIA,EAAEwyB,QAAQqhD,EAAGL,MAAOnkC,EAAEmkC,QAEvBxzE,CACV,EACDwzE,MAAO,SAASvmE,EAAGiW,EAAQmxD,EAASC,GAChC,OAAOpxD,EAAS,KAAOmxD,EAAUA,EAAQ,IAAM,IAAMC,CACxD,GAELC,EAAO,CACHllC,EAAGA,EACHmlC,GAAI,SAASx0E,GACT,IAAK,IAAI3J,EAAE,EAAE4W,EAAEoiC,EAAEykC,MAAMx9E,OAAQD,EAAE4W,EAAG5W,IAChC,GAAIk+E,EAAKllC,EAAEykC,MAAMz9E,IAAIkmC,MAAMg4C,EAAMtzD,aAAejhB,EAAI,OAAOqvC,EAAEykC,MAAMz9E,EAE1E,EACDo+E,KAAM,SAASz0E,GACX,OAAOA,EAAEwyB,QAAQ,MAAO,SAAS3gB,GAC7B,OAAQA,GAAKw9B,EAAE0kC,GAAGttD,KAAK5U,GAAKw9B,EAAEjgB,IAAMigB,EAAE0kC,IAAIttD,KAAK5U,EAC/D,EACS,EACD6iE,OAAQ,SAAS10E,GACb,OAAOA,EAAEwyB,QAAQ,MAAO,SAAS3gB,GAC7B,OAAQxW,KAAK4vD,MAAM5vD,KAAKq5E,UAAYrlC,EAAE0kC,GAAK1kC,EAAEjgB,KAAK3I,KAAK5U,EACvE,EACS,EACDvP,KAAM,SAASA,EAAMiiB,GACjBgwD,EAAKjyE,GAAQiiB,EACb8qB,EAAEykC,MAAMz7E,KAAKiK,EAChB,GAELwxE,EAAQ,CACJa,MAAO,SAAS30E,EAAGkuB,EAAMgmD,GACrB,OAAO7kC,EAAEnhB,KAAKmhB,EAAEjgB,IAAI3I,KAAK4oB,EAAE8kC,KAAKn0E,EAAGkuB,IAAQA,EAAMgmD,EACpD,EACDU,MAAO,SAAS50E,GACZ,OAAOu0E,EAAKI,MAAM30E,EAAG,KAAK,EAC7B,EACD60E,SAAU,SAAS70E,GACf,OAAOu0E,EAAKd,MAAMzzE,EAAG,KAAK,EAC7B,EACD80E,MAAO,SAAS90E,GACZ,OAAOqvC,EAAE4kC,MAAMM,EAAKlB,OAAOrzE,GAC9B,EACD+0E,MAAO,SAAS/0E,GACZ,OAAOu0E,EAAKI,MAAM30E,EAAG,KAAK,EAC7B,EACDyzE,MAAO,SAASzzE,EAAGkuB,EAAMgmD,GACrB,OAAO7kC,EAAEnhB,KAAKmhB,EAAE0kC,GAAGttD,KAAK4oB,EAAE8kC,KAAKn0E,EAAGkuB,GAAM,GAAO,IAAQA,EAAMgmD,EAChE,EACDc,QAAS,SAASh1E,EAAGkuB,EAAMgmD,GACvB,OAAO7kC,EAAEnhB,KAAKmhB,EAAE8kC,KAAKn0E,GAAGwyB,QAAQqhD,EAAGT,WAAY,SAASnmE,EAAGgoE,EAAQt6C,GAC/D,OAAOs6C,EAAO5lC,EAAE0kC,GAAGttD,KAAKkU,EACxC,GAAgBzM,EAAMgmD,EACb,EACDjrC,OAAQ,SAASjpC,GACb,OAAOu0E,EAAKS,QAAQh1E,EAAG,KAAK,EAC/B,EACDqzE,OAAQ,SAASrzE,GACb,OAAOqvC,EAAEnhB,KAAKmhB,EAAE8kC,KAAKn0E,GAAG,GAAO,GAAMwyB,QAAQqhD,EAAGR,OAAQ,SAASpmE,EAAGgoE,EAAQt6C,GACxE,OAAO0U,EAAE0kC,GAAGttD,KAAKkU,EACjC,GAAgB,IAAI,EACX,EACDu6C,MAAO,SAASl1E,GACZ,OAAOu0E,EAAKS,QAAQh1E,GAAGwyB,QAAQqhD,EAAGN,SAAU,SAAS4B,EAAOn+E,EAAGX,EAAG2J,GAC9D,OAAO3J,EAAI,GAAKA,EAAI2J,EAAEo+B,YAAY,KAAOiR,EAAEjgB,IAAI3I,KAAK0uD,GAASA,CAC7E,EACS,EACD7B,SAAU,SAAStzE,EAAGo1E,EAAOC,GAgBzB,OAfAr1E,EAAIu0E,EAAKI,MAAM30E,GAAGwyB,QAAQqhD,EAAGP,SAAU,SAASrmE,EAAGqoE,EAAS36C,GACxD,OAAO26C,EAAUjmC,EAAE0kC,GAAGttD,KAAKkU,EAC3C,GACgBy6C,GACAA,EAAMp6C,QAAQ,SAASp2B,GACnB5E,EAAIA,EAAEwyB,QAAQ,IAAIF,OAAO,MAAMiiD,EAAKI,MAAM/vE,GAAM,MAAO,KAAMyqC,EAAE2kC,IACnF,GAEgBqB,GACAA,EAAcr6C,QAAQ,SAASu6C,GAC3Bv1E,EAAIA,EAAEwyB,QAAQ,IAAIF,OAAO,OAAOiiD,EAAKI,MAAMY,GAAM,eAAgB,SAAStoE,EAAGuoE,EAAc76C,GACvF,OAAO66C,EAAenmC,EAAEjgB,IAAI3I,KAAKkU,EACzD,EACA,GAEmB36B,CACV,GASL,IAAK,IAAIsC,KALTwxE,EAAM2B,OAAS3B,EAAMT,OAGrBkB,EAAK7/C,QAAU6/C,EAEET,EACbS,EAAKjyE,KAAKA,EAAMwxE,EAAMxxE,IAG1B,IAAIozE,EAA2B,mBAAXA,EAAwBA,EAAS,WAAU,EAC/DA,EAAqC3wD,EAAOC,QAAUD,EAAiBC,QAAAuvD,EAAO38E,KAAK28E,KAAOA,EAE7F,GAAE9tD,KAAK7uB,0BCzKR4L,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAoC2wD,+BAAA,EAoBpC,MAAMC,UAA0BvI,GAAWoC,SACvCzyE,YAAYsF,EAAM+gE,GACd3zD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CACG39C,WACA,OAAO9tB,KAAKyrE,KAAKpF,QACpB,EAyDLj5C,EAAA2wD,0BAvDA,SAAmCrzE,GAC/B,MAAMuzE,UAAgCD,GAGtC,IAAK,IAAIntD,EAAQ,EAAGA,EAAQnmB,EAAKwzE,cAAcx/E,OAAQmyB,IAAS,CAC5D,MAAM9f,UAAEA,EAASotE,UAAEA,GAAczzE,EAAKwzE,cAAcrtD,GAIpD,GAAIspD,GAAQJ,YAAYoE,GACpBvyE,OAAO4K,eAAeynE,EAAwBx7D,UAAW1R,EAAW,CAChEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WACD,MAAMwmE,EAAW9J,GAAyBxJ,eAAehnE,KAAK8tB,KAAM9tB,KAAK0K,KAAK2D,MAAOwiB,GACrF,OAAOstD,EAAU9D,iBAAiBC,EACrC,EACDlwE,IAAK,SAAUlM,GACX,MACMo8E,EADe9J,GAAyBxJ,eAAehnE,KAAK8tB,KAAM9tB,KAAK0K,KAAK2D,MAAOwiB,GAC3Dla,QAC9BwnE,EAAU5D,eAAeD,EAAUp8E,GACnC8B,KAAKyrE,KAAK1E,eAAe/mE,KAAK0K,KAAK2D,MAAOwiB,EAAOypD,EACpD,QAMJ,KAAI/B,GAAYvE,gBAAgBmK,GAmBjC,MAAM7+E,MAAM,qBAAqB6+E,EAAUl9E,0BAA0B8P,KAlBrEnF,OAAO4K,eAAeynE,EAAwBx7D,UAAW1R,EAAW,CAChEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WACD,MAAMsrD,EAASoR,GAAyBtR,kBAAkBl/D,KAAK0K,KAAK2D,MAAOwiB,GAC3E,OAAOstD,EAAUnI,QAAQh2E,KAAKyrE,KAAK3D,WAAW1I,GACjD,EAEDh1D,IAAK,SAAUlM,GACX,MAAM4vB,EAAOqwD,EAAU/H,WAAWl4E,GAClC8B,KAAKyrE,KAAK1E,eAAe/mE,KAAK0K,KAAK2D,MAAOwiB,EAAO/C,EACpD,GAOR,CACJ,CAGD,OADAliB,OAAO4K,eAAeynE,EAAyB,OAAQ,CAAE//E,MAAOwM,EAAKzJ,SAAUmrD,UAAU,IAClF6xB,CACX,wBCrFAryE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsCgxD,iCAAA,EAKtC,MAAMC,UAA4B5I,GAAWsC,WACzC3yE,YAAYsF,EAAM48D,EAAW4Q,GACzBpgE,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,EACjBtnE,KAAKolE,MAAQ,GACbplE,KAAKs+E,aAAe,IAAIzU,IACxB7pE,KAAKu+E,aAAe,IAAI3qE,IACpBskE,GACAl4E,KAAKolE,MAAQ8S,EAAM9S,MACnBplE,KAAKw+E,OAAStG,EAAMsG,OACpBx+E,KAAKy+E,eAAiBvG,EAAMuG,iBAG5Bz+E,KAAKolE,MAAQ,GACbplE,KAAKw+E,OAAS,GACdx+E,KAAKy+E,gBAAiB,EAE7B,CACG3wD,WACA,OAAO9tB,KAAKsnE,SACf,CACG4Q,YACA,MAAO,CACH9S,MAAOplE,KAAKolE,MACZoZ,OAAQx+E,KAAKw+E,OACbC,eAAgBz+E,KAAKy+E,eAE5B,CACDzG,SACI,GAA+B,IAA3Bh4E,KAAKs+E,aAAa37B,MAAyC,IAA3B3iD,KAAKu+E,aAAa57B,KAClD,OAEJ,MAAM27B,EAAe,GACrB,IAAK,MAAOztD,EAAO/pB,KAAS9G,KAAKu+E,aAAc,CAC3C,MAAMJ,EAAYn+E,KAAK0K,KAAKwzE,cAAcrtD,GAAOstD,UAC3CrwD,EAAOqwD,EAAU7H,aAAaxvE,GAEpC9G,KAAKolE,MAAMv0C,GAAS/C,EACpBwwD,EAAa79E,KAAK,CAAEowB,QAAO/C,SAE3B,MAAMoqD,EAAQiG,EAAUxF,cAAc7xE,GAClCoxE,IACAl4E,KAAKw+E,OAAO3tD,GAASqnD,EAC5B,CACD,IAAK,MAAMrnD,KAAS7wB,KAAKs+E,aACrBA,EAAa79E,KAAK,CAAEowB,QAAO/C,KAAM9tB,KAAKolE,MAAMv0C,KAGhD,MAAM6tD,EAAqBJ,EAAa5pE,KAAK,CAAClJ,EAAGzM,IAAMyM,EAAEqlB,MAAQ9xB,EAAE8xB,OAC7Dk4C,EAAU2V,EAAmBruE,IAAKsuE,GAAUA,EAAM9tD,OAClDu0C,EAAQsZ,EAAmBruE,IAAKsuE,GAAUA,EAAM7wD,MACtD9tB,KAAKsnE,UAAYkJ,GAAyB1J,gBAAgB9mE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAO06D,EAAS3D,GACpGplE,KAAKs+E,aAAaM,QAClB5+E,KAAKu+E,aAAaK,OACrB,CACDzG,aACIn4E,KAAKolE,MAAQ,GACbplE,KAAKw+E,OAAS,GACdx+E,KAAKy+E,gBAAiB,EAEtBz+E,KAAKs+E,aAAaM,QAGlB5+E,KAAKu+E,aAAaK,OACrB,EA4FLxxD,EAAAgxD,4BA1FA,SAAqC1zE,GACjC,MAAMm0E,UAAkCR,GAGxC,IAAK,IAAIxtD,EAAQ,EAAGA,EAAQnmB,EAAKwzE,cAAcx/E,OAAQmyB,IAAS,CAC5D,MAAM9f,UAAEA,EAASotE,UAAEA,GAAczzE,EAAKwzE,cAAcrtD,GAIpD,GAAIspD,GAAQJ,YAAYoE,GACpBvyE,OAAO4K,eAAeqoE,EAA0Bp8D,UAAW1R,EAAW,CAClEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WAED,IAAIga,EAAO9tB,KAAKolE,MAAMv0C,GAKtB,YAJaxxB,IAATyuB,IACAA,EAAO0iD,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwiB,GAChF7wB,KAAKolE,MAAMv0C,GAAS/C,GAEjBqwD,EAAU9D,iBAAiBvsD,EACrC,EACD1jB,IAAK,SAAUlM,GAEX,IAAI4qE,EACA9oE,KAAKs+E,aAAaQ,IAAIjuD,GAEtBi4C,EAAc9oE,KAAKolE,MAAMv0C,IAIzBi4C,GADkB9oE,KAAKolE,MAAMv0C,IAAU2/C,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwiB,IACzFla,QAEvB3W,KAAKolE,MAAMv0C,GAASi4C,EACpB9oE,KAAKs+E,aAAah3D,IAAIuJ,IAE1BstD,EAAU5D,eAAezR,EAAa5qE,EACzC,QAMJ,KAAIq6E,GAAYvE,gBAAgBmK,GAuCjC,MAAM7+E,MAAM,qBAAqB6+E,EAAUl9E,0BAA0B8P,KAtCrEnF,OAAO4K,eAAeqoE,EAA0Bp8D,UAAW1R,EAAW,CAClEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WACD,MAAMirE,EAAc/+E,KAAKu+E,aAAazqE,IAAI+c,GAC1C,GAAIkuD,EAEA,OAAOA,EAEX,IAAIjxD,EAAO9tB,KAAKolE,MAAMv0C,QACTxxB,IAATyuB,IACAA,EAAO0iD,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwiB,GAChF7wB,KAAKolE,MAAMv0C,GAAS/C,GAGxB,MAAMhnB,EAAOq3E,EAAUjI,UAAUpoD,EAAM9tB,KAAKw+E,OAAO3tD,IAOnD,OANIstD,EAAU3F,eACVx4E,KAAKu+E,aAAan0E,IAAIymB,EAAO/pB,GAK1BA,CACV,EAEDsD,IAAK,SAAUtD,GAKX9G,KAAKu+E,aAAan0E,IAAIymB,EAAO/pB,EAChC,GAOR,CACJ,CAGD,OADA8E,OAAO4K,eAAeqoE,EAA2B,OAAQ,CAAE3gF,MAAOwM,EAAKzJ,SAAUmrD,UAAU,IACpFyyB,CACX,wBClKA,IAAI9pB,EAAmB/0D,IAAQA,GAAK+0D,iBAAoB,SAAU3pB,GAC9D,OAAQA,GAAOA,EAAI4pB,WAAc5pB,EAAM,CAAEtO,QAAWsO,EACxD,EACAx/B,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA4xD,wBAAkC5xD,EAA4B6xD,kBAAA7xD,EAAA8xD,mBAAwB,EAEtF,MAAMC,EAASpqB,EAAgB7nC,IAU/B,MAAMgyD,UAAsB3G,GAAYjD,cACpClwE,YAAY0I,EAAQowB,GAChBpmB,MAAMomB,GAAMw3C,0BACZ11E,KAAK8N,OAASA,EACd9N,KAAKk+B,KAAOA,EACZl+B,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,EAErBx4E,KAAKiB,SAAWi9B,GAAMj9B,UAAY+9E,EAAwBlxE,GAC1D9N,KAAK40E,cAAgBhpE,OAAO+B,KAAKG,GAAQpP,OACzCsB,KAAKqO,MAAQsoE,GAAYrH,iBAAiBtvE,KAAK40E,eAE/C50E,KAAKk+E,cAAgB,GACrB,IAAK,MAAMntE,KAAanF,OAAO+B,KAAKG,GAChC9N,KAAKk+E,cAAcz9E,KAAK,CACpBsQ,YACAotE,UAAWn+E,KAAK8N,OAAOiD,GACvBO,QAAS2tE,EAAkBluE,EAAWmtB,GAAMkhD,UAAWlhD,GAAMmhD,UAC7DjgB,OAAQoR,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAOpE,KAAKk+E,cAAcx/E,WAGxF,GAAkC,IAA9BsB,KAAKk+E,cAAcx/E,OACnB,MAAMY,MAAM,kCAGhBU,KAAKs/E,aAAe,GACpB,IAAK,IAAI7gF,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAC3CuB,KAAKs/E,aAAat/E,KAAKk+E,cAAcz/E,GAAGsS,WAAay/D,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAO3F,IAG9GuB,KAAKu/E,mBAAqB,GAC1B,IAAK,MAAMxuE,UAAEA,EAASO,QAAEA,KAAatR,KAAKk+E,cACtCl+E,KAAKu/E,mBAAmBjuE,GAAWP,EAEvC,MAAMyuE,OAAEA,EAAMC,OAAEA,EAAM/H,UAAEA,GAwUhC,SAAyB5pE,GACrB,IAAI0xE,EAAS,EACTC,EAAS,EACT/H,EAAY,EAChB,IAAK,MAAMyG,KAAavyE,OAAOwC,OAAON,GAClC0xE,GAAUrB,EAAUnF,QACpByG,GAAUtB,EAAUlF,QACQ,OAAxBkF,EAAUzG,WAEV8H,GAAU,EACVC,GAAU,EACV/H,EAAY,MAEO,OAAdA,IACLA,GAAayG,EAAUzG,WAG/B,MAAO,CAAE8H,SAAQC,SAAQ/H,YAC7B,CA1V8CgI,CAAgB5xE,GACtD9N,KAAKg5E,QAAUwG,EACfx/E,KAAKi5E,QAAUwG,EACfz/E,KAAK03E,UAAYA,EACjB,MAAMiI,WAAEA,EAAUC,oBAAEA,EAAmBC,wBAAEA,EAAuBC,SAAEA,GAyS1E,SAA8BhyE,GAC1B,MAAM6xE,EAAa,GACbC,EAAsB,GACtBC,EAA0B,GAChC,IAAIE,EAAe,EACnB,IAAK,MAAM5B,KAAavyE,OAAOwC,OAAON,GAClC6xE,EAAWl/E,KAA6B,OAAxB09E,EAAUzG,WACE,OAAxByG,EAAUzG,WAEVmI,EAAwBp/E,KAAKs/E,GAC7BA,GAAgB,IAGhBH,EAAoBn/E,KAAK,CAAE6G,MAAOy4E,EAAct9E,IAAKs9E,EAAe5B,EAAUzG,YAC9EqI,GAAgB5B,EAAUzG,WAGlC,MAAO,CACHiI,aACAC,sBACAC,0BACAC,SAAUC,EAElB,CAhUuFC,CAAqBlyE,GACpG9N,KAAK2/E,WAAaA,EAClB3/E,KAAK4/E,oBAAsBA,EAC3B5/E,KAAK6/E,wBAA0BA,EAC/B7/E,KAAK8/E,SAAWA,EAGhB9/E,KAAK63E,SAAW35C,GAAM6/C,4BAA4B/9E,OAASigF,GAAYlC,0BAA0B/9E,MACjGA,KAAK+3E,WAAa75C,GAAMkgD,8BAA8Bp+E,OAASkgF,GAAY9B,4BAA4Bp+E,KAC1G,CACDyF,aAAaqI,EAAQowB,GACjB,OAAO,IAAKg7C,GAAQhJ,WAAWgP,EAAehhD,EAAKj9B,UAA5C,CAAuD6M,EAAQowB,EACzE,CACDg0C,eACI,MAAMh0E,EAAQ,CAAA,EACd,IAAK,MAAM6S,UAAEA,EAASotE,UAAEA,KAAen+E,KAAKk+E,cACxChgF,EAAM6S,GAAaotE,EAAUjM,eAEjC,OAAOh0E,CACV,CACD83E,QAAQvK,GACJ,OAAO,IAAIzrE,KAAK63E,SAAS73E,KAAMyrE,EAClC,CACDyK,UAAUpoD,EAAMoqD,GACZ,OAAO,IAAIl4E,KAAK+3E,WAAW/3E,KAAM8tB,EAAMoqD,EAC1C,CACDS,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CACD9B,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CAQDknD,qBAAqB92E,GACjB,IAAIiiF,EAAY,EAChB,IAAK,IAAI1hF,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GAEpD0hF,GAC4B,OAAxBhC,EAAUzG,UAAqB,EAAIyG,EAAUnJ,qBAAqB92E,EAAM6S,IAAcotE,EAAUzG,SACvG,CACD,OAAOyI,CACV,CACDtO,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,IAAIkiF,EAAaj2E,EACbk2E,EAAgBl2E,EAASnK,KAAK8/E,SAClC,IAAK,IAAIrhF,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACxB,OAAxB0/E,EAAUzG,WAEVliE,EAAO2gB,SAASrrB,UAAUs1E,EAAYC,EAAgBl2E,GAAQ,GAC9Di2E,GAAc,EAEdC,EAAgBlC,EAAUtM,uBAAuBr8D,EAAQ6qE,EAAeniF,EAAM6S,KAG9EqvE,EAAajC,EAAUtM,uBAAuBr8D,EAAQ4qE,EAAYliF,EAAM6S,GAE/E,CACD,OAAOsvE,CACV,CACDvO,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,MAAM69E,EAActgF,KAAKugF,eAAel/E,EAAK80B,SAAU7uB,EAAO7E,GACxDvE,EAAQ,CAAA,EACd,IAAK,IAAIO,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GAC9C+hF,EAAaF,EAAY7hF,GAC/BP,EAAM6S,GAAaotE,EAAUrM,2BAA2BzwE,EAAMiG,EAAQk5E,EAAWl5E,MAAOA,EAAQk5E,EAAW/9E,IAC9G,CACD,OAAOvE,CACV,CACDi3E,oBAAoBrnD,GAChB,IAAIqyD,EAAY,EAChB,MAAM/a,EAAQoL,GAAyB3J,gBAAgB/4C,EAAM9tB,KAAKqO,MAAO,EAAGrO,KAAKk+E,cAAcx/E,QAC/F,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAM0/E,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GAGzC0hF,GAAqC,OAAxBhC,EAAUzG,UAAqB,EAAIyG,EAAUhJ,oBAF7C/P,EAAM3mE,IAEmE0/E,EAAUzG,SACnG,CACD,OAAOyI,CACV,CACD/K,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,IAAIsyD,EAAaj2E,EACbk2E,EAAgBl2E,EAASnK,KAAK8/E,SAClC,MAAM1a,EAAQoL,GAAyB3J,gBAAgB/4C,EAAM9tB,KAAKqO,MAAO,EAAGrO,KAAKk+E,cAAcx/E,QAC/F,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAM0/E,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACnCqvB,EAAOs3C,EAAM3mE,GACS,OAAxB0/E,EAAUzG,WAEVliE,EAAO2gB,SAASrrB,UAAUs1E,EAAYC,EAAgBl2E,GAAQ,GAC9Di2E,GAAc,EAEdC,EAAgBlC,EAAU/I,sBAAsB5/D,EAAQ6qE,EAAevyD,IAGvEsyD,EAAajC,EAAU/I,sBAAsB5/D,EAAQ4qE,EAAYtyD,EAExE,CACD,OAAOuyD,CACV,CACDpL,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,MAAM69E,EAActgF,KAAKugF,eAAel/E,EAAK80B,SAAU7uB,EAAO7E,GACxD2iE,EAAQ,IAAIhnE,MAAM4B,KAAKk+E,cAAcx/E,QAC3C,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAM0/E,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACnC+hF,EAAaF,EAAY7hF,GAC/B2mE,EAAM3mE,GAAK0/E,EAAUlJ,0BAA0B5zE,EAAMiG,EAAQk5E,EAAWl5E,MAAOA,EAAQk5E,EAAW/9E,IACrG,CACD,OAAO+tE,GAAyBxL,sBAAsBI,EAAOplE,KAAKqO,MACrE,CAEDuoE,SAAS6J,GACL,MAAMC,EAAQ,IAAItiF,MAAM4B,KAAKk+E,cAAcx/E,QAC3C,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACpDiiF,EAAMjiF,GAAK0/E,EAAU1H,aAAagK,EAAO1vE,GAC5C,CACD,OAAO2vE,CACV,CAKD9I,kBAAkBD,GACd,MAAMvY,EAASp/D,KAAKs/E,aAAa3H,IAAS33E,KAAKs/E,aAAat/E,KAAKu/E,mBAAmB5H,IACpF,QAAet4E,IAAX+/D,EACA,MAAM9/D,MAAM,8BAA8Bq4E,KAC9C,OAAOvY,CACV,CACDuV,gBAAgBgD,GACZ,MAAMjtE,EAAO1K,KAAK8N,OAAO6pE,IAAS33E,KAAK8N,OAAO9N,KAAKu/E,mBAAmB5H,IACtE,QAAat4E,IAATqL,EACA,MAAMpL,MAAM,8BAA8Bq4E,KAC9C,OAAOjtE,CACV,CACD+pE,iBAAiB5jD,GACb,OAAIA,GAAS7wB,KAAKk+E,cAAcx/E,OACrB,KAEJsB,KAAKk+E,cAAcrtD,GAAO9f,SACpC,CACD0mE,qBAAqBmB,EAAYvS,GAC7B,MAAM5G,EAAW,GACjB,IAAK,IAAIhhE,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GAC9CkiF,EAAc3gF,KAAKs/E,aAAavuE,GAChC6vE,EAAsBpQ,GAAyB5R,eAAe,CAACga,EAAY+H,IACjF,GAAIxC,EAAUlK,QACVxU,EAASh/D,KAAKmgF,OAEb,CACD,MAAMC,EAAgB1C,EACtB,GAA4B,OAAxBA,EAAUzG,UAAoB,CAC9B,IAAKrR,EACD,MAAM,IAAI/mE,MAAM,sDAEpBmgE,EAASh/D,QAAQogF,EAAcpJ,qBAAqBmJ,EAAqBpQ,GAAyBrJ,QAAQd,EAAUsa,IACvH,MAEGlhB,EAASh/D,QAAQogF,EAAcpJ,qBAAqBmJ,GAE3D,CACJ,CACD,OAAOnhB,CACV,CAEDvoD,SAAShF,GACL,GAAoB,iBAATA,EACP,MAAM5S,MAAM,+BAEhB,GAAa,OAAT4S,EACA,MAAM5S,MAAM,yBAEhB,MAAMpB,EAAQ,CAAA,EACd,IAAK,IAAIO,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,EAAS7sE,QAAEA,GAAYtR,KAAKk+E,cAAcz/E,GACvDuS,EAAYkB,EAAKZ,GACvB,QAAkBjS,IAAd2R,EACA,MAAM1R,MAAM,qBAAqBgS,kBAErCpT,EAAM6S,GAAaotE,EAAUjnE,SAASlG,EACzC,CACD,OAAO9S,CACV,CACDqZ,OAAOrZ,GACH,MAAMgU,EAAO,CAAA,EACb,IAAK,IAAIzT,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,EAAS7sE,QAAEA,GAAYtR,KAAKk+E,cAAcz/E,GAC7DyT,EAAKZ,GAAW6sE,EAAU5mE,OAAOrZ,EAAM6S,GAC1C,CACD,OAAOmB,CACV,CACDyE,MAAMzY,GACF,MAAM+zE,EAAW,CAAA,EACjB,IAAK,IAAIxzE,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACpDwzE,EAASlhE,GAAaotE,EAAUxnE,MAAMzY,EAAM6S,GAC/C,CACD,OAAOkhE,CACV,CACDj8D,OAAOxK,EAAGzM,GACN,IAAK,IAAIN,EAAI,EAAGA,EAAIuB,KAAKk+E,cAAcx/E,OAAQD,IAAK,CAChD,MAAMsS,UAAEA,EAASotE,UAAEA,GAAcn+E,KAAKk+E,cAAcz/E,GACpD,IAAK0/E,EAAUnoE,OAAOxK,EAAEuF,GAAYhS,EAAEgS,IAClC,OAAO,CAEd,CACD,OAAO,CACV,CAODwvE,eAAel/E,EAAMiG,EAAO7E,GACxB,GAA4C,IAAxCzC,KAAK6/E,wBAAwBnhF,OAAc,CAE3C,MAAMikD,EAAOlgD,EAAM6E,EACnB,GAAIq7C,IAAS3iD,KAAK8/E,SACd,MAAMxgF,MAAM,GAAGU,KAAKiB,iBAAiB0hD,0BAA6B3iD,KAAK8/E,YAE3E,OAAO9/E,KAAK4/E,mBACf,CAED,MAAM1S,EAwBd,SAA6B7rE,EAAMiG,EAAO7E,EAAKq9E,EAAUD,GAIrD,MAAMl9B,EAAOlgD,EAAM6E,EAEb4lE,EAAU,IAAI9uE,MAAMyhF,EAAwBnhF,QAClD,IAAK,IAAID,EAAI,EAAGA,EAAIohF,EAAwBnhF,OAAQD,IAAK,CACrD,MAAM0L,EAAS9I,EAAKkH,UAAUjB,EAAQu4E,EAAwBphF,IAAI,GAElE,GAAI0L,EAASw4C,EACT,MAAM,IAAIrjD,MAAM,wBAAwB6K,OAAYw4C,KAExD,GAAU,IAANlkD,GACA,GAAI0L,IAAW21E,EACX,MAAM,IAAIxgF,MAAM,uCAAuC6K,QAAa21E,UAIxE,GAAI31E,EAAS+iE,EAAQzuE,EAAI,GACrB,MAAM,IAAIa,MAAM,8BAA8B6K,OAAY+iE,EAAQzuE,EAAI,MAG9EyuE,EAAQzuE,GAAK0L,CAChB,CACD,OAAO+iE,CACX,CAlDwB4T,CAAoBz/E,EAAMiG,EAAO7E,EAAKzC,KAAK8/E,SAAU9/E,KAAK6/E,yBAC1E3S,EAAQzsE,KAAKgC,EAAM6E,GAEnB,IAAIy5E,EAAc,EACdC,EAAW,EACf,MAAMV,EAAc,IAAIliF,MAAM4B,KAAK2/E,WAAWjhF,QAC9C,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAK2/E,WAAWjhF,OAAQD,IACpCuB,KAAK2/E,WAAWlhF,GAEhB6hF,EAAY7hF,GAAKuB,KAAK4/E,oBAAoBoB,MAI1CV,EAAY7hF,GAAK,CAAE6I,MAAO4lE,EAAQ6T,GAAct+E,IAAKyqE,EAAQ6T,EAAc,IAC3EA,KAGR,OAAOT,CACV,EA4FL,SAASrB,EAAkBluE,EAAWquE,EAAWC,GAC7C,GAAID,EAAW,CACX,MAAM6B,EAAiB7B,EAAUruE,GACjC,QAAuB1R,IAAnB4hF,EACA,MAAM3hF,MAAM,aAAayR,kBAE7B,OAAOkwE,CACV,CACI,OAAI5B,EACY,SAAbA,EACcF,EAAOriD,QAAQkgD,MAAMjsE,GACtB6pB,QAAQ,QAAS,OAGvBukD,EAAOriD,QAAQuiD,GAAUtuE,GAI7BA,CAEf,CAKA,SAASiuE,EAAwBlxE,EAAQ63B,EAAS,aAG9C,MAAO,GAAGA,MAFS/5B,OAAO+B,KAAKG,GACGuC,IAAKU,GAAc,GAAGA,MAAcjD,EAAOiD,GAAW9P,YAAYqJ,KAAK,SAE7G,CAvHA8iB,EAAA8xD,cAAwBA,EA+GxB9xD,EAAA6xD,kBAA4BA,EAS5B7xD,EAAA4xD,wBAAkCA,wBC/alCpzE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA2B8zD,sBAAA,EAoC3B9zD,EAAA8zD,iBA3BA,cAA+B1Q,GAAyB3N,KACpDz9D,YAAY+7E,EAAajjF,GAErB4Z,MAAM,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B9X,KAAKmhF,YAAcA,EACnBnhF,KAAK9B,MAAQA,CAChB,CACGglE,qBACA,GAAgB,OAAZljE,KAAKsjB,GAAa,CAClB,MAAMwK,EAAO9tB,KAAKmhF,YAAYnhF,KAAK9B,OACnC4Z,MAAMirD,UAAUj1C,EAAKo1C,eACxB,CACD,OAAOljE,IACV,CACGwtB,WACA,OAAOgjD,GAAyBpO,uBAAuBpiE,KAAKkjE,eAC/D,CACDE,SACI,OAAO,CACV,CACGtwB,WACA,OAAO9yC,KAAKmhF,YAAYnhF,KAAK9B,OAAO40C,IACvC,CACG/hB,YACA,OAAO/wB,KAAKmhF,YAAYnhF,KAAK9B,OAAO6yB,KACvC,yBCnCLnlB,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAoC2wD,+BAAA,EAoBpC,MAAMC,UAA0BvI,GAAWoC,SACvCzyE,YAAYsF,EAAM+gE,GACd3zD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CACG39C,WACA,OAAO9tB,KAAKyrE,KAAKpF,QACpB,EA4DLj5C,EAAA2wD,0BA1DA,SAAmCrzE,GAC/B,MAAMuzE,UAAgCD,GAGtC,IAAK,IAAIntD,EAAQ,EAAGA,EAAQnmB,EAAKwzE,cAAcx/E,OAAQmyB,IAAS,CAC5D,MAAM9f,UAAEA,EAASotE,UAAEA,GAAczzE,EAAKwzE,cAAcrtD,GAIpD,GAAIstD,EAAUlK,QACVroE,OAAO4K,eAAeynE,EAAwBx7D,UAAW1R,EAAW,CAChEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WACD,OAAO9T,KAAKyrE,KAAKpF,SAASnoE,MAAM6S,EACnC,EACD3G,IAAK,SAAUlM,GACX,MAAM4vB,EAAO9tB,KAAKyrE,KAAKpF,SACjB+a,EAAephF,KAAK0K,KAAKiM,MAAMmX,EAAK5vB,OAE1CkjF,EAAarwE,GAAa7S,EAC1B8B,KAAKyrE,KAAKpF,SAAW,IAAIgb,GAAmBH,iBAAiBpzD,EAAkB,YAAGszD,EACrF,QAMJ,KAAI7I,GAAYvE,gBAAgBmK,GAsBjC,MAAM7+E,MAAM,qBAAqB6+E,EAAUl9E,0BAA0B8P,KArBrEnF,OAAO4K,eAAeynE,EAAwBx7D,UAAW1R,EAAW,CAChEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WACD,MAAM5V,MAAEA,GAAU8B,KAAKyrE,KAAKpF,SAC5B,OAAO8X,EAAUvI,OAAO13E,EAAM6S,GACjC,EAED3G,IAAK,SAAUtD,GACX,MAAMgnB,EAAO9tB,KAAKyrE,KAAKpF,SACjB+a,EAAephF,KAAK0K,KAAKiM,MAAMmX,EAAK5vB,OAE1CkjF,EAAarwE,GAAaotE,EAAUhI,gBAAgBrvE,GACpD9G,KAAKyrE,KAAKpF,SAAW,IAAIgb,GAAmBH,iBAAiBpzD,EAAkB,YAAGszD,EACrF,GAOR,CACJ,CAGD,OADAx1E,OAAO4K,eAAeynE,EAAyB,OAAQ,CAAE//E,MAAOwM,EAAKzJ,SAAUmrD,UAAU,IAClF6xB,CACX,wBCxFAryE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAsCgxD,iCAAA,EAItC,MAAMC,UAA4B5I,GAAWsC,WACzC3yE,YAAYsF,EAAMojB,GACdhW,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKshF,aAAe,KACpBthF,KAAKsnE,UAAYx5C,CACpB,CACGA,WACA,OAAO9tB,KAAKsnE,SACf,CACG4Q,YAEH,CACDF,SACI,GAA0B,OAAtBh4E,KAAKshF,aACL,OAEJ,MAAMpjF,EAAQ8B,KAAKshF,aACnBthF,KAAKshF,aAAe,KACpBthF,KAAKsnE,UAAYtnE,KAAK0K,KAAKqqE,aAAa72E,EAC3C,CACDi6E,aACIn4E,KAAKshF,aAAe,IACvB,EA4DLl0D,EAAAgxD,4BA1DA,SAAqC1zE,GACjC,MAAMm0E,UAAkCR,GAGxC,IAAK,IAAIxtD,EAAQ,EAAGA,EAAQnmB,EAAKwzE,cAAcx/E,OAAQmyB,IAAS,CAC5D,MAAM9f,UAAEA,EAASotE,UAAEA,GAAczzE,EAAKwzE,cAAcrtD,GAIpD,GAAIstD,EAAUlK,QACVroE,OAAO4K,eAAeqoE,EAA0Bp8D,UAAW1R,EAAW,CAClEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WAED,OAAQ9T,KAAKshF,cAAgBthF,KAAKsnE,UAAUppE,OAAO6S,EACtD,EACD3G,IAAK,SAAUlM,GACe,OAAtB8B,KAAKshF,eACLthF,KAAKshF,aAAethF,KAAK0K,KAAKiM,MAAM3W,KAAKsnE,UAAUppE,QAEvD8B,KAAKshF,aAAavwE,GAAa7S,CAClC,QAMJ,KAAIq6E,GAAYvE,gBAAgBmK,GAsBjC,MAAM7+E,MAAM,qBAAqB6+E,EAAUl9E,0BAA0B8P,KArBrEnF,OAAO4K,eAAeqoE,EAA0Bp8D,UAAW1R,EAAW,CAClEqmC,cAAc,EACd3gC,YAAY,EAEZ3C,IAAK,WAED,OAAOqqE,EAAUrI,UADH91E,KAAKshF,cAAgBthF,KAAKsnE,UAAUppE,OAClB6S,GACnC,EAED3G,IAAK,SAAUtD,GACe,OAAtB9G,KAAKshF,eACLthF,KAAKshF,aAAethF,KAAK0K,KAAKiM,MAAM3W,KAAKsnE,UAAUppE,QAEvD,MAAMA,EAAQigF,EAAU9H,kBAAkBvvE,GAC1C9G,KAAKshF,aAAavwE,GAAa7S,CAClC,GAOR,CACJ,CAGD,OADA0N,OAAO4K,eAAeqoE,EAA2B,OAAQ,CAAE3gF,MAAOwM,EAAKzJ,SAAUmrD,UAAU,IACpFyyB,CACX,wBCvFAjzE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAkCm0D,6BAAA,EAkGlCn0D,EAAAm0D,wBA7EA,cAAsCtB,GAAYf,cAC9C95E,YAAY0I,EAAQowB,GAChBpmB,MAAMhK,EAAQ,CAGV7M,SAAUi9B,GAAMj9B,UAAYg/E,GAAYjB,wBAAwBlxE,EAAQ,0BACrEowB,EACH6/C,0BAA2ByD,GAAsBzD,0BACjDK,4BAA6BqD,GAAsBrD,8BAEvDp+E,KAAK8N,OAASA,EAYd,IAAK,MAAMiD,UAAEA,EAASotE,UAAEA,KAAen+E,KAAKk+E,cACxC,GAAI3F,GAAYvE,gBAAgBmK,IAAcA,EAAU3F,cACpD,MAAMl5E,MAAM,kCAAkCyR,MAAcotE,EAAUl9E,2BAGjF,CACDwE,aAAaqI,EAAQowB,GACjB,OAAO,IAAKg7C,GAAQhJ,WAAW+P,GAAYf,cAAehhD,EAAKj9B,UAAxD,CAAmE6M,EAAQowB,EACrF,CACDi3C,oBAAoBrnD,GAChB,OAAO9tB,KAAKg1E,qBAAqBlnD,EAAK5vB,MACzC,CACDk3E,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAM5vB,MAAEA,GAAU4vB,EAClB,OAAO9tB,KAAK6xE,uBAAuBr8D,EAAQrL,EAAQjM,EACtD,CACD+2E,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,MAAMvE,EAAQ8B,KAAK8xE,2BAA2BzwE,EAAMiG,EAAO7E,GAC3D,OAAO,IAAI4+E,GAAmBH,iBAAiBlhF,KAAK0hF,YAAY/rB,KAAK31D,MAAO9B,EAC/E,CAID05E,oBACI,OAAO,IACV,CAGDtD,mBAAmBxmD,GAGf,MAAMwkD,EAAa,IAAIrzE,WAAW6Y,MAAMq9D,oBAAoBrnD,IACtDqI,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YACnF6Q,MAAMs9D,sBAAsB,CAAE9C,aAAYn8C,YAAY,EAAGrI,GACzD,MAAM5vB,EAAQ8B,KAAK8xE,2BAA2B,CAAEQ,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,QACtF,MAAO,CACHovB,KAAM,IAAIuzD,GAAmBH,iBAAiBlhF,KAAK0hF,YAAY/rB,KAAK31D,MAAO9B,GAC3EmlC,MAAM,EAEb,CAED6xC,aAAapnD,GACT,OAAOA,EAAK5vB,KACf,CACD62E,aAAa72E,GACT,OAAO,IAAImjF,GAAmBH,iBAAiBlhF,KAAK0hF,YAAY/rB,KAAK31D,MAAO9B,EAC/E,CAEDwjF,YAAYxjF,GACR,MAAMo0E,EAAa,IAAIrzE,WAAWe,KAAKg1E,qBAAqB92E,IACtDi4B,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAjH,KAAK6xE,uBAAuB,CAAES,aAAYn8C,YAAY,EAAGj4B,GAClD4Z,MAAMm9D,0BAA0B,CAAE3C,aAAYn8C,YAAY,EAAGm8C,EAAW5zE,OAClF,yBCjGLkN,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA6Bu0D,wBAAA,EA4E7Bv0D,EAAAu0D,mBAzEA,cAAiClM,GAAWoC,SACxCzyE,YAAYsF,EAAM+gE,GACd3zD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CAIG/sE,aACA,OAAOsB,KAAK0K,KAAKk3E,eAAe5hF,KAAKyrE,KAAKpF,SAC7C,CACGv4C,WACA,OAAO9tB,KAAKyrE,KAAKpF,QACpB,CAIDvyD,IAAI+c,GAEA,MAAMgxD,EAAap+E,KAAKC,MAAMmtB,EAAQ7wB,KAAK0K,KAAK0vE,eAC1CE,EAAWt6E,KAAKyrE,KAAKzE,eAAehnE,KAAK0K,KAAK2D,MAAOwzE,GAE3D,OAAO7hF,KAAK0K,KAAKinE,YAAY6I,uBAAuBF,EAAUzpD,EACjE,CAIDzmB,IAAIymB,EAAO3yB,GACP,MAAMQ,EAASsB,KAAKtB,OACpB,GAAImyB,GAASnyB,EACT,MAAMY,MAAM,mCAAmCuxB,OAAWnyB,KAE9D,MAAMmjF,EAAap+E,KAAKC,MAAMmtB,EAAQ7wB,KAAK0K,KAAK0vE,eAG1CE,EAFet6E,KAAKyrE,KAAKzE,eAAehnE,KAAK0K,KAAK2D,MAAOwzE,GAEjClrE,QAC9B3W,KAAK0K,KAAKinE,YAAY8I,qBAAqBH,EAAUzpD,EAAO3yB,GAE5D8B,KAAKyrE,KAAK1E,eAAe/mE,KAAK0K,KAAK2D,MAAOwzE,EAAYvH,EACzD,CAIDwH,SACI,MAAMpjF,EAASsB,KAAKtB,OACd6xE,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAK8tB,MAC/C+hD,EAAapsE,KAAKm4B,KAAKl9B,EAASsB,KAAK0K,KAAK0vE,eAC1C3U,EAAY+K,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK0K,KAAKqnE,WAAY,EAAGlC,GAC1FzhE,EAAS,IAAIhQ,MAAMM,GACnB07E,EAAgBp6E,KAAK0K,KAAK0vE,cAC1B4H,EAAev+E,KAAKC,MAAMhF,EAAS07E,GACnCzoB,EAAYjzD,EAAS07E,EAC3B,IAAK,IAAI/zE,EAAI,EAAGA,EAAI27E,EAAc37E,IAAK,CACnC,MAAMi0E,EAAW7U,EAAUp/D,GAM3B,IAAK,IAAI5H,EAAI,EAAGA,EAAI27E,EAAe37E,IAC/B2P,EAAO/H,EAAI+zE,EAAgB37E,GAAKuB,KAAK0K,KAAKinE,YAAY6I,uBAAuBF,EAAU77E,EAE9F,CACD,GAAIkzD,EAAY,EAAG,CACf,MAAM2oB,EAAW7U,EAAUuc,GAC3B,IAAK,IAAIvjF,EAAI,EAAGA,EAAIkzD,EAAWlzD,IAC3B2P,EAAO4zE,EAAe5H,EAAgB37E,GAAKuB,KAAK0K,KAAKinE,YAAY6I,uBAAuBF,EAAU77E,EAEzG,CACD,OAAO2P,CACV,yBC3ELxC,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA4B60D,uBAAA,EAmC5B70D,EAAA60D,kBAhCA,cAAgC3I,GAAaqI,mBACzCv8E,YAAYsF,EAAM+gE,GACd3zD,MAAMpN,EAAM+gE,GACZzrE,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CAIDhrE,KAAKvC,GACD,MAAMQ,EAASsB,KAAKtB,OACpB,GAAIA,GAAUsB,KAAK0K,KAAK27B,MACpB,MAAM/mC,MAAM,4BAIhB,GAFAU,KAAK0K,KAAKw3E,eAAeliF,KAAKyrE,KAAM/sE,EAAS,GAEzCA,EAASsB,KAAK0K,KAAK0vE,eAAkB,EAAG,CAIxC,MAAME,EAAW9J,GAAyBnN,SAASuB,WACnD5kE,KAAK0K,KAAKinE,YAAY8I,qBAAqBH,EAAU57E,EAAQR,GAE7D,MAAM2jF,EAAap+E,KAAKC,MAAMhF,EAASsB,KAAK0K,KAAK0vE,eACjDp6E,KAAKyrE,KAAK1E,eAAe/mE,KAAK0K,KAAK2D,MAAOwzE,EAAYvH,EACzD,MAGGt6E,KAAKoK,IAAI1L,EAAQR,EAExB,yBClCL0N,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA+B+0D,0BAAA,EA8I/B/0D,EAAA+0D,qBA3IA,cAAmC1M,GAAWsC,WAC1C3yE,YAAYsF,EAAM48D,EAAW4Q,GACzBpgE,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,EACjBtnE,KAAKs+E,aAAe,IAAIzU,IACxB7pE,KAAKoiF,aAAc,EACflK,GACAl4E,KAAKolE,MAAQ8S,EAAM9S,MACnBplE,KAAKqiF,QAAUnK,EAAMx5E,OACrBsB,KAAKy+E,eAAiBvG,EAAMuG,iBAG5Bz+E,KAAKolE,MAAQ,GACbplE,KAAKqiF,QAAUriF,KAAK0K,KAAKk3E,eAAeta,GACxCtnE,KAAKy+E,gBAAiB,EAE7B,CAIG//E,aACA,OAAOsB,KAAKqiF,OACf,CACGv0D,WACA,OAAO9tB,KAAKsnE,SACf,CACG4Q,YACA,MAAO,CACH9S,MAAOplE,KAAKolE,MACZ1mE,OAAQsB,KAAKqiF,QACb5D,eAAgBz+E,KAAKy+E,eAE5B,CAID3qE,IAAI+c,GAEA,MAAMgxD,EAAap+E,KAAKC,MAAMmtB,EAAQ7wB,KAAK0K,KAAK0vE,eAChD,IAAItsD,EAAO9tB,KAAKolE,MAAMyc,GAKtB,YAJaxiF,IAATyuB,IACAA,EAAO0iD,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwzE,GAChF7hF,KAAKolE,MAAMyc,GAAc/zD,GAEtB9tB,KAAK0K,KAAKinE,YAAY6I,uBAAuB1sD,EAAM+C,EAC7D,CAIDzmB,IAAIymB,EAAO3yB,GACP,GAAI2yB,GAAS7wB,KAAKqiF,QACd,MAAM/iF,MAAM,mCAAmCuxB,OAAW7wB,KAAKqiF,WAEnE,MAAMR,EAAap+E,KAAKC,MAAMmtB,EAAQ7wB,KAAK0K,KAAK0vE,eAEhD,IAAItR,EACA9oE,KAAKs+E,aAAaQ,IAAI+C,GAEtB/Y,EAAc9oE,KAAKolE,MAAMyc,IAKzB/Y,GAFkB9oE,KAAKolE,MAAMyc,IACzBrR,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwzE,IACtDlrE,QAEvB3W,KAAKolE,MAAMyc,GAAc/Y,EACzB9oE,KAAKs+E,aAAah3D,IAAIu6D,IAE1B7hF,KAAK0K,KAAKinE,YAAY8I,qBAAqB3R,EAAaj4C,EAAO3yB,EAClE,CAID4jF,SACI,IAAK9hF,KAAKy+E,eAAgB,CACtB,MAAM6D,EAAYtiF,KAAKolE,MACjBmL,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAK8tB,MAC/C+hD,EAAapsE,KAAKm4B,KAAK57B,KAAKqiF,QAAUriF,KAAK0K,KAAK0vE,eACtDp6E,KAAKolE,MAAQoL,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK0K,KAAKqnE,WAAY,EAAGlC,GAE3F,IAAK,MAAMh/C,KAAS7wB,KAAKs+E,aACrBt+E,KAAKolE,MAAMv0C,GAASyxD,EAAUzxD,GAElC7wB,KAAKy+E,gBAAiB,CACzB,CACD,MAAMrwE,EAAS,IAAIhQ,MAAM4B,KAAKqiF,SACxBjI,EAAgBp6E,KAAK0K,KAAK0vE,cAC1B4H,EAAev+E,KAAKC,MAAM1D,KAAKqiF,QAAUjI,GACzCzoB,EAAY3xD,KAAKqiF,QAAUjI,EAEjC,IAAK,IAAI/zE,EAAI,EAAGA,EAAI27E,EAAc37E,IAAK,CACnC,MAAMi0E,EAAWt6E,KAAKolE,MAAM/+D,GAM5B,IAAK,IAAI5H,EAAI,EAAGA,EAAI27E,EAAe37E,IAC/B2P,EAAO/H,EAAI+zE,EAAgB37E,GAAKuB,KAAK0K,KAAKinE,YAAY6I,uBAAuBF,EAAU77E,EAE9F,CACD,GAAIkzD,EAAY,EAAG,CACf,MAAM2oB,EAAWt6E,KAAKolE,MAAM4c,GAC5B,IAAK,IAAIvjF,EAAI,EAAGA,EAAIkzD,EAAWlzD,IAC3B2P,EAAO4zE,EAAe5H,EAAgB37E,GAAKuB,KAAK0K,KAAKinE,YAAY6I,uBAAuBF,EAAU77E,EAEzG,CACD,OAAO2P,CACV,CACD4pE,SACI,GAA+B,IAA3Bh4E,KAAKs+E,aAAa37B,KAClB,OAGJ,MAAMomB,EAAU3qE,MAAM4M,KAAKhL,KAAKs+E,aAAa3wE,QAAQ+G,KAAK,CAAClJ,EAAGzM,IAAMyM,EAAIzM,GAClEqmE,EAAQ,IAAIhnE,MAAM2qE,EAAQrqE,QAChC,IAAK,IAAID,EAAI,EAAGA,EAAIsqE,EAAQrqE,OAAQD,IAChC2mE,EAAM3mE,GAAKuB,KAAKolE,MAAM2D,EAAQtqE,IAElC,MAAM8xE,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAKsnE,WAE/Cib,EAAgB/R,GAAyB1J,gBAAgByJ,EAAYvwE,KAAK0K,KAAKqnE,WAAYhJ,EAAS3D,GAC1GplE,KAAKsnE,UAAYtnE,KAAK0K,KAAK83E,mBAAmBxiF,KAAKsnE,UAAWib,EAAeviF,KAAKoiF,YAAcpiF,KAAKqiF,aAAUhjF,GAC/GW,KAAKs+E,aAAaM,QAClB5+E,KAAKoiF,aAAc,CACtB,CACDjK,aACIn4E,KAAKolE,MAAQ,GACbplE,KAAKy+E,gBAAiB,EAEtBz+E,KAAKs+E,aAAaM,QAEd5+E,KAAKoiF,cACLpiF,KAAKqiF,QAAUriF,KAAK0K,KAAKk3E,eAAe5hF,KAAKsnE,WAC7CtnE,KAAKoiF,aAAc,EAE1B,yBC7ILx2E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA8Bq1D,yBAAA,EA4B9Br1D,EAAAq1D,oBAzBA,cAAkCnJ,GAAa6I,qBAC3C/8E,YAAYsF,EAAM48D,EAAW4Q,GACzBpgE,MAAMpN,EAAM48D,EAAW4Q,GACvBl4E,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,CACpB,CAID7mE,KAAKvC,GACD,GAAI8B,KAAKqiF,SAAWriF,KAAK0K,KAAK27B,MAC1B,MAAM/mC,MAAM,4BAGhBU,KAAKoiF,aAAc,EACnB,MAAMvxD,EAAQ7wB,KAAKqiF,UAEnB,GAAIxxD,EAAQ7wB,KAAK0K,KAAK0vE,eAAkB,EAAG,CAEvC,MAAMyH,EAAap+E,KAAKC,MAAMmtB,EAAQ7wB,KAAK0K,KAAK0vE,eAChDp6E,KAAKolE,MAAMyc,GAAcrR,GAAyB/L,SAAS,EAC9D,CACDzkE,KAAKoK,IAAIymB,EAAO3yB,EACnB,yBC3BL0N,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAoBs1D,eAAA,EAgGpBt1D,EAAAs1D,UAxFA,cAAwBnK,GAAYjD,cAChClwE,YAAYusE,GACR75D,QACA9X,KAAK2xE,YAAcA,CACtB,CACDO,eACI,OAAOoH,GAAaxI,wBAAwB9wE,KAAK2xE,YAAa3xE,KAAK2iF,WACtE,CAEDhO,kBACI,OAAO30E,KAAK2xE,WACf,CACDiG,kBAAkBD,GACd,GAAoB,iBAATA,EACP,MAAMr4E,MAAM,wBAAwBq4E,KAExC,MAAMiL,EAAWn/E,KAAKC,MAAMi0E,EAAO33E,KAAKo6E,eACxC,OAAO5J,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAOw+E,GAC/D,CACDnO,iBAAiB5jD,GACb,OAAOA,CACV,CACD4mD,qBAAqBmB,EAAYvS,GAC7B,IAAI3nE,EACJ,GAAIsB,KAAK6wE,OAAQ,CACb,IAAKxK,EACD,MAAM,IAAI/mE,MAAM,kDAEpBZ,EAASsB,KAAK4hF,eAAevb,EAChC,MAGG3nE,EAASsB,KAAK4hF,eAAe,MAEjC,MAAMniB,EAAW,GACjB,GAAI8Y,GAAYvE,gBAAgBh0E,KAAK2xE,aAAc,CAG/C,MAAMpS,EAAaiR,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAO,IAClEy+E,EAAYtjB,EAAan7D,OAAO1F,GAChCokF,EAAqBtS,GAAyB5R,eAAe,CAACga,EAAYrZ,IAChF,GAAmC,OAA/Bv/D,KAAK2xE,YAAY+F,UAAoB,CACrC,IAAKrR,EAED,MAAM,IAAI/mE,MAAM,+DAGpB,IAAK,IAAI8/D,EAASG,EAAYwjB,EAAiBD,EAAoB1jB,EAASyjB,EAAWzjB,IAAU2jB,IAC7FtjB,EAASh/D,QAAQT,KAAK2xE,YAAY8F,qBAAqBsL,EAAgBvS,GAAyBrJ,QAAQd,EAAUjH,IAEzH,MAEG,IAAK,IAAI3gE,EAAI,EAAGskF,EAAiBD,EAAoBrkF,EAAIC,EAAQD,IAAKskF,IAClEtjB,EAASh/D,QAAQT,KAAK2xE,YAAY8F,qBAAqBsL,GAGlE,KAEI,CACD,MAAMlT,EAAapsE,KAAKm4B,KAAKl9B,EAASsB,KAAKo6E,eACrC7a,EAAaiR,GAAyB5R,eAAe,CAACga,EAAYpI,GAAyBjS,SAASv+D,KAAKqO,MAAOjK,OAAO,MACvHy+E,EAAYtjB,EAAan7D,OAAOyrE,GACtC,IAAK,IAAIzQ,EAASG,EAAYH,EAASyjB,EAAWzjB,IAC9CK,EAASh/D,KAAK2+D,EAErB,CAKD,OAHIp/D,KAAK6wE,QACLpR,EAASh/D,KAAK+vE,GAAyB5R,eAAe,CAACga,EAAYL,GAAYhD,iBAE5E9V,CACV,CAEDvoD,SAAShF,GAGL,OAAOonE,GAAatH,oBAAoBhyE,KAAK2xE,YAAaz/D,EAAMlS,KACnE,CACDuX,OAAOrZ,GACH,OAAOo7E,GAAarI,kBAAkBjxE,KAAK2xE,YAAazzE,EAAO8B,KAClE,CACD2W,MAAMzY,GACF,OAAOo7E,GAAatI,iBAAiBhxE,KAAK2xE,YAAazzE,EAC1D,CACD8X,OAAOxK,EAAGzM,GACN,OAAOu6E,GAAavI,aAAa/wE,KAAK2xE,YAAanmE,EAAGzM,EACzD,yBC/FL6M,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAwB41D,mBAAA,EAcxB,MAAMA,UAAsBC,GAAQP,UAChCt9E,YAAYusE,EAAatrC,EAAOnI,GAQ5B,GAPApmB,MAAM65D,GACN3xE,KAAK2xE,YAAcA,EACnB3xE,KAAKqmC,MAAQA,EACbrmC,KAAK03E,UAAY,KACjB13E,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,EACrBx4E,KAAK2iF,WAAa,GACbhR,EAAYsC,QACb,MAAM30E,MAAM,6BAChB,GAAc,IAAV+mC,EACA,MAAM/mC,MAAM,0BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,QAAQ0wE,EAAY1wE,aAAaolC,KAEnErmC,KAAKo6E,cAAgB,GAAKzI,EAAY1qE,WACtCjH,KAAK40E,cAAgBnxE,KAAKm4B,KAAM57B,KAAKqmC,MAAQsrC,EAAY1qE,WAAc,IACvEjH,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eAEpD50E,KAAKqO,MAAQrO,KAAK+xE,WAAa,EAC/B/xE,KAAKg5E,QAAU,EACfh5E,KAAKi5E,QAAUj5E,KAAKqmC,MAAQsrC,EAAYsH,OAC3C,CACDxzE,aAAaksE,EAAatrC,EAAOnI,GAC7B,OAAO,IAAKg7C,GAAQhJ,WAAW8S,EAAe9kD,EAAKj9B,UAA5C,CAAuD0wE,EAAatrC,EAAOnI,EACrF,CACD83C,QAAQvK,GACJ,OAAO,IAAIyX,GAAYjB,kBAAkBjiF,KAAMyrE,EAClD,CACDyK,UAAUpoD,EAAMoqD,GAGZ,OAAO,IAAIiL,GAAYV,oBAAoBziF,KAAM8tB,EAAMoqD,EAC1D,CACD9B,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CACD6qD,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CAEDlD,qBAAqB92E,GACjB,OAAOA,EAAMQ,OAASsB,KAAK2xE,YAAY1qE,UAC1C,CACD4qE,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,OAAOo7E,GAAajI,iCAAiCrxE,KAAK2xE,YAAazzE,EAAMQ,OAAQ8W,EAAQrL,EAAQjM,EACxG,CACD4zE,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,OAAO62E,GAAalI,qCAAqCpxE,KAAK2xE,YAAatwE,EAAMiG,EAAO7E,EAAKzC,KAChG,CACDm1E,oBAAoBrnD,GAChB,OAAO9tB,KAAK4hF,eAAe9zD,GAAQ9tB,KAAK2xE,YAAY1qE,UACvD,CACDmuE,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMyiD,EAAavwE,KAAK+hF,mBAAmBj0D,GACrCpvB,EAASsB,KAAK4hF,eAAe9zD,GACnC,OAAOwrD,GAAanI,gCAAgCnxE,KAAK2xE,YAAajzE,EAAQsB,KAAK+xE,WAAYv8D,EAAQrL,EAAQomE,EAClH,CACD0E,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,OAAO62E,GAAapI,oCAAoClxE,KAAK2xE,YAAa3xE,KAAK+xE,WAAY1wE,EAAMiG,EAAO7E,EAAKzC,KAChH,CAED4hF,eAAe9zD,GACX,OAAOA,EAAKiD,MAAM0yC,QAAQ,EAAG,EAChC,CACDye,eAAezW,EAAM/sE,GACjB+sE,EAAKpF,SAAWiT,GAAahJ,cAAc7E,EAAKpF,SAASvzB,KAAMp0C,EAClE,CACDqjF,mBAAmBj0D,GACf,OAAOA,EAAKglB,IACf,CACD0vC,mBAAmBnc,EAAUkK,EAAYkB,GACrC,OAAO6H,GAAa9H,cAAcnL,EAAUkK,EAAYkB,EAC3D,CAEDgF,aAAav4E,GACT,OAAOy4E,GAAYpH,YAAYz3D,MAAM2+D,aAAav4E,GAAQA,EAAMQ,OACnE,CACDk4E,SAAS14E,GACL,MAAMo0E,EAAa,IAAIrzE,WAAWe,KAAKg1E,qBAAqB92E,IACtDi4B,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAqyE,GAAajI,iCAAiCrxE,KAAK2xE,YAAazzE,EAAMQ,OAAQ,CAAE4zE,aAAYn8C,YAAY,EAAGj4B,GACpGy4E,GAAYnH,oBAAoB8C,EAC1C,EAELllD,EAAA41D,cAAwBA,wBCsDxB,SAASI,EAA0BC,EAAkBhiF,EAAMiG,EAAO7E,EAAKkuE,GACnE,MAAMhuB,EAAOlgD,EAAM6E,EACnB,IAAI4lE,EAGJ,GAAyB,OAArBmW,EACAnW,EA0BR,SAA2C/2C,EAAU7uB,EAAOq7C,GACxD,GAAa,IAATA,EACA,OAAO,IAAIlxB,YAAY,GAK3B,MAAM6xD,EAAcntD,EAAS5tB,UAAUjB,GAAO,GAGxCi8E,EAAmBD,EACzB,GAAoB,IAAhBA,EACA,MAAMhkF,MAAM,4BAEhB,GAAIikF,EAAmB,GAAM,EACzB,MAAMjkF,MAAM,wCAEhB,MAAMkkF,EAAcD,EAAmB,EACjCrW,EAAU,IAAIz7C,YAAY+xD,GAChCtW,EAAQ,GAAKoW,EAYb,IAAK,IAAIG,EAAY,EAAGA,EAAYD,EAAaC,IAAa,CAC1D,MAAMt5E,EAASgsB,EAAS5tB,UAAUjB,EAAoB,EAAZm8E,GAAe,GAGzD,GAFAvW,EAAQuW,GAAat5E,EAEjBA,EAASw4C,EACT,MAAM,IAAIrjD,MAAM,wBAAwB6K,OAAYw4C,KAExD,GAAIx4C,EAAS+iE,EAAQuW,EAAY,GAC7B,MAAM,IAAInkF,MAAM,8BAA8B6K,OAAY+iE,EAAQuW,EAAY,KAErF,CACD,OAAOvW,CACX,CArEkBwW,CAAkCriF,EAAMiG,EAAOq7C,OAGxD,CAGD,GAAyB,IAArB0gC,EACA,MAAM/jF,MAAM,6BAEhB,GAAIqjD,EAAO0gC,GAAqB,EAC5B,MAAM/jF,MAAM,QAAQqjD,0CAA6C0gC,KAErE,MAAM3kF,EAASikD,EAAO0gC,EACtBnW,EAAU,IAAIz7C,YAAY/yB,GAC1B,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxByuE,EAAQzuE,GAAKA,EAAI4kF,CAExB,CAGD,OADA/J,GAAa5I,uBAAuBxD,EAAQxuE,OAAQiyE,GAC7CzD,CACX,CAzLAthE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAuCu2D,6BAAAv2D,EAAAw2D,wCAAkDx2D,EAA8Cy2D,oCAAAz2D,EAAA02D,kCAA4C12D,EAAmD22D,yCAAA32D,EAAA42D,qCAA+C52D,qCAA6CA,EAAgC62D,sBAAA72D,EAAA82D,2BAAgC,EAalY92D,EAAA82D,sBAVA,SAA+BvS,EAAawS,GAExC,OAA8B,OAA1BxS,EAAY+F,UACLyM,GAAY,EAAIxS,EAAYqH,SAI5BmL,EAAWxS,EAAYqH,OAEtC,EAYA5rD,EAAA62D,sBAVA,SAA+BtS,EAAayS,GAExC,OAA8B,OAA1BzS,EAAY+F,UACL0M,GAAY,EAAIzS,EAAYsH,SAI5BmL,EAAWzS,EAAYsH,OAEtC,EAgBA7rD,EAAAi3D,mCAdA,SAA4C1S,EAAajzE,EAAQR,GAE7D,GAA8B,OAA1ByzE,EAAY+F,UAAoB,CAChC,IAAI/0B,EAAO,EACX,IAAK,IAAIlkD,EAAI,EAAGA,EAAIC,EAAQD,IACxBkkD,GAAQ,EAAIgvB,EAAYqD,qBAAqB92E,EAAMO,IAEvD,OAAOkkD,CACV,CAGG,OAAOjkD,EAASizE,EAAY+F,SAEpC,EAyBAtqD,EAAA42D,qCApBA,SAA8CrS,EAAajzE,EAAQ8W,EAAQrL,EAAQjM,GAE/E,GAA8B,OAA1ByzE,EAAY+F,UAAoB,CAChC,IAAI2I,EAAgBl2E,EAAkB,EAATzL,EAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAExB+W,EAAO2gB,SAASrrB,UAAUX,EAAa,EAAJ1L,EAAO4hF,EAAgBl2E,GAAQ,GAElEk2E,EAAgB1O,EAAYE,uBAAuBr8D,EAAQ6qE,EAAeniF,EAAMO,IAEpF,OAAO4hF,CACV,CAGG,IAAK,IAAI5hF,EAAI,EAAGA,EAAIC,EAAQD,IACxBkzE,EAAYE,uBAAuBr8D,EAAQrL,EAAS1L,EAAIkzE,EAAY+F,UAAWx5E,EAAMO,IAEzF,OAAO0L,EAASzL,EAASizE,EAAY+F,SAE7C,EAeAtqD,EAAA22D,yCAbA,SAAkDpS,EAAatwE,EAAMiG,EAAO7E,EAAKkuE,GAC7E,MAAMzD,EAAUkW,EAA0BzR,EAAY+F,UAAWr2E,EAAK80B,SAAU7uB,EAAO7E,EAAKkuE,GACtFjyE,EAASwuE,EAAQxuE,OACjB0P,EAAS,IAAIhQ,MAAMM,GAEzB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAIxB2P,EAAO3P,GAAKkzE,EAAYG,2BAA2BzwE,EAFnCiG,EAAQ4lE,EAAQzuE,GAClBA,IAAMC,EAAS,EAAI+D,EAAM6E,EAAQ4lE,EAAQzuE,EAAI,IAG/D,OAAO2P,CACX,EAoBAgf,EAAA02D,kCAfA,SAA2CnS,EAAajzE,EAAQ2P,EAAOyf,GAEnE,GAA8B,OAA1B6jD,EAAY+F,UAAoB,CAChC,MAAMtS,EAAQoL,GAAyB3J,gBAAgB/4C,EAAMzf,EAAO,EAAG3P,GACvE,IAAIikD,EAAO,EACX,IAAK,IAAIlkD,EAAI,EAAGA,EAAI2mE,EAAM1mE,OAAQD,IAC9BkkD,GAAQ,EAAIgvB,EAAYwD,oBAAoB/P,EAAM3mE,IAEtD,OAAOkkD,CACV,CAGG,OAAOjkD,EAASizE,EAAY+F,SAEpC,EA4BAtqD,EAAAy2D,oCAvBA,SAA6ClS,EAAajzE,EAAQ2P,EAAOyf,EAAMtY,EAAQrL,GACnF,MAAMi7D,EAAQoL,GAAyB3J,gBAAgB/4C,EAAMzf,EAAO,EAAG3P,GAGvE,GAA8B,OAA1BizE,EAAY+F,UAAoB,CAChC,IAAI2I,EAAgBl2E,EAAkB,EAATzL,EAC7B,MAAMy3B,SAAEA,GAAa3gB,EACrB,IAAK,IAAI/W,EAAI,EAAGA,EAAI2mE,EAAM1mE,OAAQD,IAE9B03B,EAASrrB,UAAUX,EAAa,EAAJ1L,EAAO4hF,EAAgBl2E,GAAQ,GAE3Dk2E,EAAgB1O,EAAYyD,sBAAsB5/D,EAAQ6qE,EAAejb,EAAM3mE,IAEnF,OAAO4hF,CACV,CAGG,IAAK,IAAI5hF,EAAI,EAAGA,EAAI2mE,EAAM1mE,OAAQD,IAC9B0L,EAASwnE,EAAYyD,sBAAsB5/D,EAAQrL,EAAQi7D,EAAM3mE,IAErE,OAAO0L,CAEf,EAuBAijB,EAAAw2D,wCArBA,SAAiDjS,EAAaI,EAAY1wE,EAAMiG,EAAO7E,EAAKkuE,GACxF,MAAMzD,EAAUkW,EAA0BzR,EAAY+F,UAAWr2E,EAAK80B,SAAU7uB,EAAO7E,EAAKkuE,GACtFjyE,EAASwuE,EAAQxuE,OACjB0mE,EAAQ,IAAIhnE,MAAMM,GAExB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAIxB2mE,EAAM3mE,GAAKkzE,EAAYsD,0BAA0B5zE,EAFjCiG,EAAQ4lE,EAAQzuE,GAClBA,IAAMC,EAAS,EAAI+D,EAAM6E,EAAQ4lE,EAAQzuE,EAAI,IAI/D,MAAM8xE,EAAaC,GAAyBxL,sBAAsBI,EAAO2M,GAEzE,OAAIpB,EAAWE,OACJyI,GAAahJ,cAAcC,EAAY7xE,GAGvC6xE,CAEf,EAYAnjD,EAAAu2D,6BAPA,SAAsChS,EAAajzE,EAAQR,GACvD,MAAMwiF,EAAQ,IAAItiF,MAAMM,GACxB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxBiiF,EAAMjiF,GAAKkzE,EAAY8E,aAAav4E,EAAMO,IAE9C,OAAOiiF,CACX,wBC5JA90E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAiCk3D,4BAAA,EAoFjCl3D,EAAAk3D,uBAjFA,cAAqC7O,GAAWoC,SAC5CzyE,YAAYsF,EAAM+gE,GACd3zD,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CAIG/sE,aACA,OAAOsB,KAAK0K,KAAKk3E,eAAe5hF,KAAKyrE,KAAKpF,SAC7C,CAIGv4C,WACA,OAAO9tB,KAAKyrE,KAAKpF,QACpB,CAIDvyD,IAAI+c,GAEA,MAAMuuC,EAASoR,GAAyBtR,kBAAkBl/D,KAAK0K,KAAK2D,MAAOwiB,GACrE0zD,EAAUvkF,KAAKyrE,KAAK3D,WAAW1I,GACrC,OAAOp/D,KAAK0K,KAAKinE,YAAYqE,QAAQuO,EACxC,CAKDC,YAAY3zD,GAER,MAAMuuC,EAASoR,GAAyBtR,kBAAkBl/D,KAAK0K,KAAK2D,MAAOwiB,GAErE0zD,EAAU,IAAI/T,GAAyBpJ,KAAKpnE,KAAKyrE,KAAKtE,QAAQ/H,IACpE,OAAOp/D,KAAK0K,KAAKinE,YAAYqE,QAAQuO,EACxC,CAIDn6E,IAAIymB,EAAO/pB,GACP,MAAMpI,EAASsB,KAAKtB,OACpB,GAAImyB,GAASnyB,EACT,MAAMY,MAAM,mCAAmCuxB,OAAWnyB,KAE9D,MAAMovB,EAAO9tB,KAAK0K,KAAKinE,YAAYyE,WAAWtvE,GAC9C9G,KAAKyrE,KAAK1E,eAAe/mE,KAAK0K,KAAK2D,MAAOwiB,EAAO/C,EACpD,CAMD22D,iBACI,MAAM/lF,EAASsB,KAAKtB,OACd6xE,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAK8tB,MAC/Cs3C,EAAQoL,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK0K,KAAKqnE,WAAY,EAAGrzE,GACtFgmF,EAAQ,IAAItmF,MAAMM,GACxB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IAExBimF,EAAMjmF,GAAKuB,KAAK0K,KAAKinE,YAAYqE,QAAQ,IAAIxF,GAAyBpJ,KAAKhC,EAAM3mE,KAErF,OAAOimF,CACV,CAMDC,uBACI,MAAMjmF,EAASsB,KAAKtB,OACd6xE,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAK8tB,MAC/Cs3C,EAAQoL,GAAyB3J,gBAAgB0J,EAAYvwE,KAAK0K,KAAKqnE,WAAY,EAAGrzE,GACtF0P,EAAS,IAAIhQ,MAAMM,GACzB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxB2P,EAAO3P,GAAKuB,KAAK0K,KAAKinE,YAAYuD,aAAa9P,EAAM3mE,IAEzD,OAAO2P,CACV,yBCnFLxC,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAgCw3D,2BAAA,EAqBhCx3D,EAAAw3D,sBAnBA,cAAoCC,GAAiBP,uBACjDl/E,YAAYsF,EAAM+gE,GACd3zD,MAAMpN,EAAM+gE,GACZzrE,KAAK0K,KAAOA,EACZ1K,KAAKyrE,KAAOA,CACf,CAIDhrE,KAAKqG,GACD,MAAMpI,EAASsB,KAAKtB,OACpB,GAAIA,GAAUsB,KAAK0K,KAAK27B,MACpB,MAAM/mC,MAAM,4BAEhBU,KAAK0K,KAAKw3E,eAAeliF,KAAKyrE,KAAM/sE,EAAS,GAE7CsB,KAAKoK,IAAI1L,EAAQoI,EACpB,yBCpBL8E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmC03D,8BAAA,EAkLnC13D,EAAA03D,yBA/KA,cAAuCrP,GAAWsC,WAC9C3yE,YAAYsF,EAAM48D,EAAW4Q,GACzBpgE,QACA9X,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,EACjBtnE,KAAKu+E,aAAe,IAAI3qE,IAIxB5T,KAAKoiF,aAAc,EACflK,GACAl4E,KAAKolE,MAAQ8S,EAAM9S,MACnBplE,KAAKw+E,OAAStG,EAAMsG,OACpBx+E,KAAKqiF,QAAUnK,EAAMx5E,OACrBsB,KAAKy+E,eAAiBvG,EAAMuG,iBAG5Bz+E,KAAKolE,MAAQ,GACbplE,KAAKw+E,OAAS,GACdx+E,KAAKqiF,QAAUriF,KAAK0K,KAAKk3E,eAAeta,GAExCtnE,KAAKy+E,eAAkC,IAAjBz+E,KAAKqiF,QAElC,CAIG3jF,aACA,OAAOsB,KAAKqiF,OACf,CACGv0D,WACA,OAAO9tB,KAAKsnE,SACf,CACG4Q,YACA,MAAO,CACH9S,MAAOplE,KAAKolE,MACZoZ,OAAQx+E,KAAKw+E,OACb9/E,OAAQsB,KAAKqiF,QACb5D,eAAgBz+E,KAAKy+E,eAE5B,CAQD3qE,IAAI+c,GACA,MAAMkuD,EAAc/+E,KAAKu+E,aAAazqE,IAAI+c,GAC1C,GAAIkuD,EACA,OAAOA,EAEX,IAAIjxD,EAAO9tB,KAAKolE,MAAMv0C,QACTxxB,IAATyuB,IACAA,EAAO0iD,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwiB,GAChF7wB,KAAKolE,MAAMv0C,GAAS/C,GAGxB,MAAMhnB,EAAO9G,KAAK0K,KAAKinE,YAAYuE,UAAUpoD,EAAM9tB,KAAKw+E,OAAO3tD,IAM/D,OALI7wB,KAAK0K,KAAKinE,YAAY6G,eACtBx4E,KAAKu+E,aAAan0E,IAAIymB,EAAO/pB,GAI1BA,CACV,CAKD09E,YAAY3zD,GACR,MAAMkuD,EAAc/+E,KAAKu+E,aAAazqE,IAAI+c,GAC1C,GAAIkuD,EACA,OAAOA,EAEX,IAAIjxD,EAAO9tB,KAAKolE,MAAMv0C,GAKtB,YAJaxxB,IAATyuB,IACAA,EAAO0iD,GAAyBxJ,eAAehnE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAOwiB,GAChF7wB,KAAKolE,MAAMv0C,GAAS/C,GAEjB9tB,KAAK0K,KAAKinE,YAAYuE,UAAUpoD,EAAM9tB,KAAKw+E,OAAO3tD,GAC5D,CAUDzmB,IAAIymB,EAAO/pB,GACP,GAAI+pB,GAAS7wB,KAAKqiF,QACd,MAAM/iF,MAAM,mCAAmCuxB,OAAW7wB,KAAKqiF,WAMnEriF,KAAKu+E,aAAan0E,IAAIymB,EAAO/pB,EAChC,CAID29E,iBACIzkF,KAAK+kF,mBACL,MAAML,EAAQ,IAAItmF,MAAM4B,KAAKqiF,SAC7B,IAAK,IAAI5jF,EAAI,EAAGA,EAAIuB,KAAKqiF,QAAS5jF,IAC9BimF,EAAMjmF,GAAKuB,KAAK0K,KAAKinE,YAAYuE,UAAUl2E,KAAKolE,MAAM3mE,GAAIuB,KAAKw+E,OAAO//E,IAE1E,OAAOimF,CACV,CAIDC,uBACI3kF,KAAK+kF,mBACL,MAAM32E,EAAS,IAAIhQ,MAAM4B,KAAKqiF,SAC9B,IAAK,IAAI5jF,EAAI,EAAGA,EAAIuB,KAAKqiF,QAAS5jF,IAC9B2P,EAAO3P,GAAKuB,KAAK0K,KAAKinE,YAAYuD,aAAal1E,KAAKolE,MAAM3mE,IAE9D,OAAO2P,CACV,CACD4pE,SACI,GAA+B,IAA3Bh4E,KAAKu+E,aAAa57B,KAClB,OAEJ,MAAM27B,EAAe,GACrB,IAAK,MAAOztD,EAAO/pB,KAAS9G,KAAKu+E,aAAc,CAC3C,MAAMzwD,EAAO9tB,KAAK0K,KAAKinE,YAAY2E,aAAaxvE,GAEhD9G,KAAKolE,MAAMv0C,GAAS/C,EACpBwwD,EAAa79E,KAAK,CAAEowB,QAAO/C,SAE3B,MAAMoqD,EAAQl4E,KAAK0K,KAAKinE,YAAYgH,cAAc7xE,GAC9CoxE,IACAl4E,KAAKw+E,OAAO3tD,GAASqnD,EAC5B,CAED,MAAMwG,EAAqBJ,EAAa5pE,KAAK,CAAClJ,EAAGzM,IAAMyM,EAAEqlB,MAAQ9xB,EAAE8xB,OAC7Dk4C,EAAU2V,EAAmBruE,IAAKsuE,GAAUA,EAAM9tD,OAClDu0C,EAAQsZ,EAAmBruE,IAAKsuE,GAAUA,EAAM7wD,MAChDyiD,EAAavwE,KAAK0K,KAAKq3E,mBAAmB/hF,KAAKsnE,WAE/Cib,EAAgB/R,GAAyB1J,gBAAgByJ,EAAYvwE,KAAK0K,KAAKqnE,WAAYhJ,EAAS3D,GAC1GplE,KAAKsnE,UAAYtnE,KAAK0K,KAAK83E,mBAAmBxiF,KAAKsnE,UAAWib,EAAeviF,KAAKoiF,YAAcpiF,KAAKqiF,aAAUhjF,GAC/GW,KAAKu+E,aAAaK,QAClB5+E,KAAKoiF,aAAc,CACtB,CACDjK,aACIn4E,KAAKolE,MAAQ,GACbplE,KAAKw+E,OAAS,GACdx+E,KAAKy+E,gBAAiB,EAGtBz+E,KAAKu+E,aAAaK,QAEd5+E,KAAKoiF,cACLpiF,KAAKqiF,QAAUriF,KAAK0K,KAAKk3E,eAAe5hF,KAAKsnE,WAC7CtnE,KAAKoiF,aAAc,EAE1B,CACD2C,mBAGI,GAAI/kF,KAAKu+E,aAAa57B,KAAO,EACzB,MAAMrjD,MAAM,gDAEXU,KAAKy+E,iBACNz+E,KAAKolE,MAAQoL,GAAyB3J,gBAAgB7mE,KAAKsnE,UAAWtnE,KAAK0K,KAAK2D,MAAO,EAAGrO,KAAKtB,QAC/FsB,KAAKy+E,gBAAiB,EAE7B,yBCjLL7yE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAkC43D,6BAAA,EAqDlC53D,EAAA43D,wBAlDA,cAAsCH,GAAiBC,yBACnD1/E,YAAYsF,EAAM48D,EAAW4Q,GACzBpgE,MAAMpN,EAAM48D,EAAW4Q,GACvBl4E,KAAK0K,KAAOA,EACZ1K,KAAKsnE,UAAYA,CACpB,CAID7mE,KAAKqG,GACD,GAAI9G,KAAKqiF,SAAWriF,KAAK0K,KAAK27B,MAC1B,MAAM/mC,MAAM,4BAEhBU,KAAKoiF,aAAc,EACnB,MAAMvxD,EAAQ7wB,KAAKqiF,UAEnBriF,KAAKoK,IAAIymB,EAAO/pB,EACnB,CAcDm+E,QAAQp0D,GAEJ7wB,KAAKg4E,SACL,MAAM3R,EAAWrmE,KAAKsnE,UAItB,GAAIz2C,GAHW7wB,KAAK0K,KAAKk3E,eAAevb,GAGlB,EAClB,OAAOrmE,KAGX,MAAMuwE,EAAavwE,KAAK0K,KAAKq3E,mBAAmB1b,GAC1Ckc,EAAgB/R,GAAyB7J,mBAAmB4J,EAAYvwE,KAAK0K,KAAKqnE,WAAYlhD,GAG9F82C,EAAc3nE,KAAK0K,KAAK83E,mBAAmBnc,EAAUkc,EADzC1xD,EAAQ,GAE1B,OAAO7wB,KAAK0K,KAAKwrE,UAAUvO,EAC9B,yBCpDL/7D,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA4B83D,uBAAA,EAe5B,MAAMA,UAA0BjC,GAAQP,UACpCt9E,YAAYusE,EAAatrC,EAAOnI,GAS5B,GARApmB,MAAM65D,GACN3xE,KAAK2xE,YAAcA,EACnB3xE,KAAKqmC,MAAQA,EACbrmC,KAAKo6E,cAAgB,EACrBp6E,KAAK03E,UAAY,KACjB13E,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,EACrBx4E,KAAK2iF,WAAa,EACdhR,EAAYsC,QACZ,MAAM30E,MAAM,iCAChB,GAAc,IAAV+mC,EACA,MAAM/mC,MAAM,0BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,QAAQ0wE,EAAY1wE,aAAaolC,KACnErmC,KAAK40E,cAAgB50E,KAAKqmC,MAC1BrmC,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eAEpD50E,KAAKqO,MAAQrO,KAAK+xE,WAAa,EAC/B/xE,KAAKg5E,QAAU,EACfh5E,KAAKi5E,QAAU4L,GAAiBZ,sBAAsBtS,EAAa3xE,KAAKqmC,MAC3E,CAED5gC,aAAaksE,EAAatrC,EAAOnI,GAC7B,OAAO,IAAKg7C,GAAQhJ,WAAWgV,EAAmBhnD,EAAKj9B,UAAhD,CAA2D0wE,EAAatrC,EAAOnI,EACzF,CACD83C,QAAQvK,GACJ,OAAO,IAAI0Z,GAAgBP,sBAAsB5kF,KAAMyrE,EAC1D,CACDyK,UAAUpoD,EAAMoqD,GAGZ,OAAO,IAAIkN,GAAgBJ,wBAAwBhlF,KAAM8tB,EAAMoqD,EAClE,CACD9B,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CACD6qD,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CAEDlD,qBAAqB92E,GACjB,OAAO2mF,GAAiBR,mCAAmCrkF,KAAK2xE,YAAazzE,EAAMQ,OAAQR,EAC9F,CACD2zE,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,OAAO2mF,GAAiBb,qCAAqChkF,KAAK2xE,YAAazzE,EAAMQ,OAAQ8W,EAAQrL,EAAQjM,EAChH,CACD4zE,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,OAAOoiF,GAAiBd,yCAAyC/jF,KAAK2xE,YAAatwE,EAAMiG,EAAO7E,EAAKzC,KACxG,CACDm1E,oBAAoBrnD,GAChB,MAAMyiD,EAAavwE,KAAK+hF,mBAAmBj0D,GACrCpvB,EAASsB,KAAK4hF,eAAe9zD,GACnC,OAAO+2D,GAAiBf,kCAAkC9jF,KAAK2xE,YAAajzE,EAAQsB,KAAK+xE,WAAYxB,EACxG,CACD6E,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAMyiD,EAAavwE,KAAK+hF,mBAAmBj0D,GACrCpvB,EAASsB,KAAK4hF,eAAe9zD,GACnC,OAAO+2D,GAAiBhB,oCAAoC7jF,KAAK2xE,YAAajzE,EAAQsB,KAAK+xE,WAAYxB,EAAY/6D,EAAQrL,EAC9H,CACD8qE,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,OAAOoiF,GAAiBjB,wCAAwC5jF,KAAK2xE,YAAa3xE,KAAK+xE,WAAY1wE,EAAMiG,EAAO7E,EAAKzC,KACxH,CAED4hF,eAAe9zD,GACX,OAAOwrD,GAAa/H,sBAAsBzjD,EAC7C,CACDo0D,eAAezW,EAAM/sE,GACjB+sE,EAAKpF,SAAWiT,GAAahJ,cAAc7E,EAAKpF,SAASvzB,KAAMp0C,EAClE,CACDqjF,mBAAmBj0D,GACf,OAAOA,EAAKglB,IACf,CACD0vC,mBAAmBnc,EAAUkK,EAAYkB,GACrC,OAAO6H,GAAa9H,cAAcnL,EAAUkK,EAAYkB,EAC3D,CAEDgF,aAAav4E,GACT,OAAOy4E,GAAYpH,YAAYz3D,MAAM2+D,aAAav4E,GAAQA,EAAMQ,OACnE,CACDk4E,SAAS14E,GACL,OAAO2mF,GAAiBlB,6BAA6B3jF,KAAK2xE,YAAazzE,EAAMQ,OAAQR,EACxF,EAELkvB,EAAA83D,kBAA4BA,wBCxG5Bt5E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAmBi4D,cAAA,EAuDnBj4D,EAAAi4D,SAlDA,cAAuBlL,GAAQH,UAC3B50E,cACI0S,SAASuR,WACTrpB,KAAKiB,SAAW,OAChBjB,KAAKiH,WAAa,EAClBjH,KAAKo6E,cAAgB,GACrBp6E,KAAK03E,UAAY,EACjB13E,KAAKg5E,QAAU,EACfh5E,KAAKi5E,QAAU,CAClB,CACD/G,eACI,OAAO,IACV,CAEDL,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,OAAOiM,CACV,CACD2nE,2BAA2BzwE,EAAMiG,GAC7B,OAAO,IACV,CACD8tE,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,OAAO3jB,CACV,CACD8qE,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,OAAO+tE,GAAyB/L,SAAS,EAC5C,CAED4V,iBAAiBC,GACb,OAAO,IACV,CACDC,eAAeD,EAAUp8E,GAExB,CACDs8E,uBAAuBF,EAAUzpD,GAC7B,OAAO,IACV,CACD4pD,qBAAqBH,EAAUzpD,EAAO3yB,GAErC,CAEDgZ,SAAShF,GACL,GAAa,OAATA,EACA,MAAM5S,MAAM,uCAEhB,OAAO,IACV,CACDiY,OAAOrZ,GACH,OAAO,IACV,yBCtDL0N,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAAk4D,eAAyBl4D,EAAyBm4D,eAAAn4D,EAAAo4D,mBAA6Bp4D,EAA6Bq4D,wBAAA,EAK5G,MAAMC,EAAsBthF,OAAOzB,OAAO05D,kBACpCspB,EAAkBvhF,OAAO,IAAMA,OAAO,IACtCwhF,EAAmBxhF,OAAO,IAAMA,OAAO,KACvCyhF,EAAmBzhF,OAAO,IAAMA,OAAO,KAEvC0hF,EAAkB,GAAK,GACvBC,EAAgB,WACtB34D,EAA6Bq4D,mBAAA,CAAC,EAAG,EAAG,EAAG,GACvCr4D,EAAAo4D,mBAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAc9C,MAAMD,UAAuBpL,GAAQH,UACjC50E,YAAY6B,EAAYi3B,GAGpB,GAFApmB,QACA9X,KAAKiH,WAAaA,EACdA,EAAa,EACb,MAAM3H,MAAM,oCAEhB,GAAImE,KAAK6lE,KAAKriE,GAAc,GAAM,EAC9B,MAAM3H,MAAM,mCAEhBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,OAAoB,EAAbgG,EACrCi3B,GAAM0lC,eACN5jE,KAAKiB,UAAY,OACjBi9B,GAAM8nD,eACNhmF,KAAKiB,UAAY,MACrBjB,KAAKo6E,cAAgB,GAAKp6E,KAAKiH,WAC/BjH,KAAK03E,UAAYzwE,EACjBjH,KAAKg5E,QAAU/xE,EACfjH,KAAKi5E,QAAUhyE,EACfjH,KAAKimF,eAAiB7hF,OAAO,IAAMA,OAAyB,EAAlBpE,KAAKiH,YAAkB7C,OAAO,IAAI0B,SAAS,IACrF9F,KAAK4jE,cAAsC,IAAvB1lC,GAAM0lC,aAC1B5jE,KAAKgmF,cAAsC,IAAvB9nD,GAAM8nD,YAC7B,CACDvgF,aAAawB,EAAYi3B,GACrB,OAAO,IAAKg7C,GAAQhJ,WAAWqV,EAAgBrnD,EAAKj9B,UAA7C,CAAwDgG,EAAYi3B,EAC9E,CACDg0C,eACI,OAAO,CACV,CAEDL,wBAAuB17C,SAAEA,GAAYhsB,EAAQjM,GACzC,OAAQ8B,KAAKiH,YACT,KAAK,EACDkvB,EAAS+vD,QAAQ/7E,EAAQjM,GACzB,MACJ,KAAK,EACDi4B,EAASq3C,UAAUrjE,EAAQjM,GAAO,GAClC,MACJ,KAAK,EACDi4B,EAASrrB,UAAUX,EAAQjM,GAAO,GAClC,MACJ,KAAK,EACa2iD,WAAV3iD,GAEAi4B,EAASrrB,UAAUX,EAAQ,YAC3BgsB,EAASrrB,UAAUX,EAAS,EAAG,cAG/BgsB,EAASrrB,UAAUX,EAAgB,WAARjM,GAAoB,GAC/Ci4B,EAASrrB,UAAUX,EAAS,EAAIjM,EAAQ4nF,EAAmB,YAAY,IAInF,OAAO37E,EAASnK,KAAKiH,UACxB,CACD6qE,4BAA2B37C,SAAEA,GAAY7uB,EAAO7E,GAE5C,OADAzC,KAAKi6E,gBAAgBx3E,EAAM6E,GACnBtH,KAAKiH,YACT,KAAK,EACD,OAAOkvB,EAAS0vC,SAASv+D,GAC7B,KAAK,EACD,OAAO6uB,EAASy3C,UAAUtmE,GAAO,GACrC,KAAK,EACD,OAAO6uB,EAAS5tB,UAAUjB,GAAO,GACrC,KAAK,EAAG,CACJ,MAAMkE,EAAI2qB,EAAS5tB,UAAUjB,GAAO,GAC9BvI,EAAIo3B,EAAS5tB,UAAUjB,EAAQ,GAAG,GACxC,OAAIvI,IAAMgnF,GAAiBv6E,IAAMu6E,GAAiB/lF,KAAK4jE,aAC5C/iB,SAGA9hD,EAAI+mF,EAAkBt6E,CAEpC,EAER,CACD4pE,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAM5vB,EAAQ4vB,EAAK21C,QAAQzjE,KAAKiH,WAAY,EAAGjH,KAAK4jE,cAEpD,OADA5jE,KAAK6xE,uBAAuBr8D,EAAQrL,EAAQjM,GACrCiM,EAASnK,KAAKiH,UACxB,CACDguE,0BAA0B5zE,EAAMiG,EAAO7E,GACnCzC,KAAKi6E,gBAAgBx3E,EAAM6E,GAC3B,MAAMpJ,EAAQ8B,KAAK8xE,2BAA2BzwE,EAAMiG,EAAO7E,GACrDqrB,EAAO0iD,GAAyBnN,SAASuB,WAE/C,OADA92C,EAAKo2C,QAAQlkE,KAAKiH,WAAY,EAAG/I,EAAO8B,KAAK4jE,cACtC91C,CACV,CAEDusD,iBAAiBC,GACb,OAAOA,EAAS7W,QAAQzjE,KAAKiH,WAAY,EAAGjH,KAAK4jE,aACpD,CACD2W,eAAeD,EAAUp8E,GACrB8B,KAAKy6E,qBAAqBH,EAAU,EAAGp8E,EAC1C,CACDs8E,uBAAuBF,EAAUzpD,GAE7B,OAAOypD,EAAS7W,QAAQzjE,KAAKiH,WADTjH,KAAKiH,YAAc4pB,EAAQ7wB,KAAKo6E,eACEp6E,KAAK4jE,aAC9D,CACD6W,qBAAqBH,EAAUzpD,EAAO3yB,GAClC,MAAMylE,EAAc3jE,KAAKiH,YAAc4pB,EAAQ7wB,KAAKo6E,eAEhDp6E,KAAKgmF,aACL1L,EAAShW,cAActkE,KAAKiH,WAAY08D,EAAazlE,GAGrDo8E,EAASpW,QAAQlkE,KAAKiH,WAAY08D,EAAazlE,EAAO8B,KAAK4jE,aAElE,CAED1sD,SAAShF,GACL,GAAoB,iBAATA,EACP,OAAOA,EAEN,GAAoB,iBAATA,EAAmB,CAC/B,GAAIlS,KAAK4jE,cAAgB1xD,IAASlS,KAAKimF,cAEnC,OAAOplC,SAEN,CACD,MAAMn4B,EAAMhY,SAASwB,EAAM,IAC3B,GAAInC,MAAM2Y,GACN,MAAMppB,MAAM,6BAEX,GAAIopB,EAAM/lB,OAAO05D,iBAElB,MAAM/8D,MAAM,0CAGZ,OAAOopB,CAEd,CACJ,CACI,GAAoB,iBAATxW,EAAmB,CAC/B,GAAIA,EAAOwzE,EAEP,MAAMpmF,MAAM,6CAGZ,OAAOqD,OAAOuP,EAErB,CAEG,MAAM5S,MAAM,4BAA4B4S,oBAE/C,CACDqF,OAAOrZ,GACH,OAAc2iD,WAAV3iD,EACO8B,KAAKimF,cAGL/nF,EAAM4H,SAAS,GAE7B,EAELsnB,EAAAm4D,eAAyBA,EAazB,MAAMD,UAAuBnL,GAAQH,UACjC50E,YAAY6B,EAAYi3B,GAGpB,GAFApmB,QACA9X,KAAKiH,WAAaA,EACdA,EAAa,GACb,MAAM3H,MAAM,qCAEhB,GAAImE,KAAK6lE,KAAKriE,GAAc,GAAM,EAC9B,MAAM3H,MAAM,mCAEhBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,aAA0B,EAAbgG,EAC/CjH,KAAKiH,WAAaA,EAClBjH,KAAKo6E,cAAgB,GAAKp6E,KAAKiH,WAC/BjH,KAAK03E,UAAYzwE,EACjBjH,KAAKg5E,QAAU/xE,EACfjH,KAAKi5E,QAAUhyE,CAClB,CACDxB,aAAawB,EAAYi3B,GACrB,OAAO,IAAKg7C,GAAQhJ,WAAWoV,EAAgBpnD,EAAKj9B,UAA7C,CAAwDgG,EAAYi3B,EAC9E,CACDg0C,eACI,OAAO9tE,OAAO,EACjB,CAEDytE,wBAAuB17C,SAAEA,GAAYhsB,EAAQjM,GACzC,OAAQ8B,KAAKiH,YACT,KAAK,EACDkvB,EAAS+vD,QAAQ/7E,EAAQxH,OAAOzE,IAChC,MACJ,KAAK,EACDi4B,EAASq3C,UAAUrjE,EAAQxH,OAAOzE,IAAQ,GAC1C,MACJ,KAAK,EACDi4B,EAASrrB,UAAUX,EAAQxH,OAAOzE,IAAQ,GAC1C,MACJ,KAAK,EACDi4B,EAAS3xB,aAAa2F,EAAQjM,GAAO,GACrC,MACJ,QACI,IAAK,IAAIO,EAAI,EAAGA,EAAIuB,KAAKiH,WAAYxI,GAAK,EAAG,CACrCA,EAAI,IACJP,GAAgBynF,GACpB,MAAMrlF,EAAK8D,OAAO60D,QAAQ,GAAI/6D,GAC9Bi4B,EAAS3xB,aAAa2F,EAAS1L,EAAG6B,GAAI,EACzC,EAGT,OAAO6J,EAASnK,KAAKiH,UACxB,CACD6qE,4BAA2B37C,SAAEA,GAAY7uB,EAAO7E,GAC5C,MAAMkgD,EAAOlgD,EAAM6E,EACnB,GAAIq7C,IAAS3iD,KAAKiH,WACd,MAAM3H,MAAM,gBAAgBqjD,cAAiB3iD,KAAKiH,cAGtD,OAAQjH,KAAKiH,YACT,KAAK,EACD,OAAO7C,OAAO+xB,EAAS0vC,SAASv+D,IACpC,KAAK,EACD,OAAOlD,OAAO+xB,EAASy3C,UAAUtmE,GAAO,IAC5C,KAAK,EACD,OAAOlD,OAAO+xB,EAAS5tB,UAAUjB,GAAO,IAC5C,KAAK,EACD,OAAO6uB,EAAS7xB,aAAagD,GAAO,GACxC,KAAK,GAAI,CACL,MAAMkE,EAAI2qB,EAAS7xB,aAAagD,GAAO,GAEvC,OADU6uB,EAAS7xB,aAAagD,EAAQ,GAAG,GAChCq+E,EAAkBn6E,CAChC,CACD,KAAK,GAAI,CACL,MAAMA,EAAI2qB,EAAS7xB,aAAagD,GAAO,GACjCvI,EAAIo3B,EAAS7xB,aAAagD,EAAQ,GAAG,GACrCqE,EAAIwqB,EAAS7xB,aAAagD,EAAQ,IAAI,GAE5C,OADU6uB,EAAS7xB,aAAagD,EAAQ,IAAI,GACjCu+E,EAAmBl6E,EAAIi6E,EAAmB7mF,EAAI4mF,EAAkBn6E,CAC9E,EAER,CACD4pE,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAM5vB,EAAQ4vB,EAAKk2C,cAAchkE,KAAKiH,WAAY,GAElD,OADAjH,KAAK6xE,uBAAuBr8D,EAAQrL,EAAQjM,GACrCiM,EAASnK,KAAKiH,UACxB,CACDguE,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,MAAMkgD,EAAOlgD,EAAM6E,EACnB,GAAIq7C,IAAS3iD,KAAKiH,WACd,MAAM3H,MAAM,gBAAgBqjD,cAAiB3iD,KAAKiH,cAEtD,MAAM/I,EAAQ8B,KAAK8xE,2BAA2BzwE,EAAMiG,EAAO7E,GACrDqrB,EAAO0iD,GAAyBnN,SAASuB,WAE/C,OADA92C,EAAKq2C,cAAcnkE,KAAKiH,WAAY,EAAG/I,GAChC4vB,CACV,CAEDusD,iBAAiBC,GACb,OAAOA,EAAStW,cAAchkE,KAAKiH,WAAY,EAClD,CAEDszE,eAAeD,EAAUp8E,GACrB8B,KAAKy6E,qBAAqBH,EAAU,EAAGp8E,EAC1C,CAEDs8E,uBAAuBF,EAAUzpD,GAE7B,OAAOypD,EAAStW,cAAchkE,KAAKiH,WADfjH,KAAKiH,YAAc4pB,EAAQ7wB,KAAKo6E,eAEvD,CAEDK,qBAAqBH,EAAUzpD,EAAO3yB,GAGlCo8E,EAASnW,cAAcnkE,KAAKiH,WAFRjH,KAAKiH,YAAc4pB,EAAQ7wB,KAAKo6E,eAECl8E,EACxD,CAEDgZ,SAAShF,GACL,GAAoB,iBAATA,EACP,OAAOA,EAEN,GAAoB,iBAATA,GAAqC,iBAATA,EACxC,OAAO9N,OAAO8N,GAGd,MAAM5S,MAAM,4BAA4B4S,oBAE/C,CACDqF,OAAOrZ,GACH,OAAOA,EAAM4H,SAAS,GACzB,EAELsnB,EAAAk4D,eAAyBA,wBCpUzB15E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAoB+4D,eAAA,EAOpB,MAAMC,EAAehiF,OAAO,GACtBiiF,EAAkBjiF,OAAO,GAK/B,MAAM+hF,UAAkB5N,GAAYjD,cAChClwE,YAAY82E,EAAOh+C,GAQf,GAPApmB,QACA9X,KAAKk8E,MAAQA,EACbl8E,KAAKqO,MAAQ,EACbrO,KAAK40E,cAAgB,EACrB50E,KAAK03E,UAAY,KACjB13E,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,EACjB0D,EAAMx9E,QAAU,IAChB,MAAMY,MAAM,iCAEhB,GAAqB,IAAjB48E,EAAMx9E,OACN,MAAMY,MAAM,oCAEhB,GAAI48E,EAAM,aAAcoK,GAAOjB,UAAYnJ,EAAMx9E,OAAS,EACtD,MAAMY,MAAM,0DAEhB,IAAK,IAAIb,EAAI,EAAGA,EAAIy9E,EAAMx9E,OAAQD,IAC9B,GAAIy9E,EAAMz9E,aAAc6nF,GAAOjB,SAC3B,MAAM/lF,MAAM,qCAGpBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,SAASi7E,EAAM7rE,IAAKlS,GAAMA,EAAE8C,UAAUqJ,KAAK,QAC7E,MAAMi8E,EAAU,GACVC,EAAU,GAChB,IAAK,MAAMC,KAASvK,EAChBqK,EAAQ9lF,KAAKgmF,EAAMzN,SACnBwN,EAAQ/lF,KAAKgmF,EAAMxN,SAEvBj5E,KAAKg5E,QAAU,EAAIv1E,KAAKupB,OAAOu5D,GAC/BvmF,KAAKi5E,QAAU,EAAIx1E,KAAKijD,OAAO8/B,GAC/BxmF,KAAK0mF,YAAc1mF,KAAKk8E,MAAMx9E,OAAS,CAC1C,CACD+G,aAAay2E,EAAOh+C,GAChB,OAAO,IAAKg7C,GAAQhJ,WAAWiW,EAAWjoD,EAAKj9B,UAAxC,CAAmDi7E,EAAOh+C,EACpE,CACDg0C,eACI,MAAO,CACHyU,SAAU,EACVzoF,MAAO8B,KAAKk8E,MAAM,GAAGhK,eAE5B,CACD8D,QAAQvK,GACJ,OAAOzrE,KAAKk1E,aAAazJ,EAAKpF,SACjC,CACD6P,UAAUpoD,GACN,OAAO9tB,KAAKk1E,aAAapnD,EAC5B,CACD6qD,gBAEC,CACDvC,WAAWtvE,GACP,OAAO9G,KAAK+0E,aAAajuE,EAC5B,CACDwvE,aAAaxvE,GACT,OAAO9G,KAAK+0E,aAAajuE,EAC5B,CACDkuE,qBAAqB92E,GACjB,OAAO,EAAI8B,KAAKk8E,MAAMh+E,EAAMyoF,UAAU3R,qBAAqB92E,EAAMA,MACpE,CACD2zE,uBAAuBr8D,EAAQrL,EAAQjM,GAEnC,OADAsX,EAAO88D,WAAWnoE,GAAUjM,EAAMyoF,SAC3B3mF,KAAKk8E,MAAMh+E,EAAMyoF,UAAU9U,uBAAuBr8D,EAAQrL,EAAS,EAAGjM,EAAMA,MACtF,CACD4zE,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,MAAMkkF,EAAWtlF,EAAKixE,WAAWhrE,GACjC,GAAIq/E,EAAW3mF,KAAK0mF,YAChB,MAAMpnF,MAAM,oBAAoBqnF,KAEpC,MAAO,CACHA,WACAzoF,MAAO8B,KAAKk8E,MAAMyK,GAAU7U,2BAA2BzwE,EAAMiG,EAAQ,EAAG7E,GAE/E,CACD0yE,oBAAoBrnD,GAChB,MAAM64D,EAAWrN,GAAa/H,sBAAsBzjD,GAEpD,OAAO,EAAI9tB,KAAKk8E,MAAMyK,GAAU3R,qBADdlnD,EAAKglB,KAE1B,CACDsiC,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,MAAM64D,EAAWrN,GAAa/H,sBAAsBzjD,GAC9C84D,EAAY94D,EAAKglB,KAEvB,OADAt9B,EAAO88D,WAAWnoE,GAAUw8E,EACrB3mF,KAAKk8E,MAAMyK,GAAUvR,sBAAsB5/D,EAAQrL,EAAS,EAAGy8E,EACzE,CACD3R,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,MAAMkkF,EAAWtlF,EAAKixE,WAAWhrE,GACjC,GAAIq/E,EAAW3mF,KAAK0mF,YAChB,MAAMpnF,MAAM,oBAAoBqnF,KAEpC,MAAMC,EAAY5mF,KAAKk8E,MAAMyK,GAAU1R,0BAA0B5zE,EAAMiG,EAAQ,EAAG7E,GAClF,OAAO62E,GAAahJ,cAAcsW,EAAWD,EAChD,CAEDlQ,aAAav4E,GACT,OAAOy4E,GAAYpH,YAAYz3D,MAAM2+D,aAAav4E,GAAQA,EAAMyoF,SACnE,CACD/P,SAAS14E,GAEL,MAAO,CADW8B,KAAKk8E,MAAMh+E,EAAMyoF,UAAUlQ,aAAav4E,EAAMA,OAEnE,CAED05E,kBAAkBD,GACd,OAAQA,GACJ,IAAK,QACD,OAAOyO,EACX,IAAK,WACD,OAAOC,EACX,QACI,MAAM,IAAI/mF,MAAM,+BAA+Bq4E,KAE1D,CACDhD,kBAEI,MAAM,IAAIr1E,MAAM,gCACnB,CACDm1E,iBAAiB5jD,GACb,GAAc,IAAVA,EACA,MAAO,QACX,GAAc,IAAVA,EACA,MAAO,WACX,MAAMvxB,MAAM,4BACf,CACDm4E,qBAAqBmB,EAAYvS,GAC7B,IAAKA,EACD,MAAM/mE,MAAM,qBAEhB,MAAMmgE,EAAW,CAAC+Q,GAAyB5R,eAAe,CAACga,EAAYyN,KACjEM,EAAWrN,GAAa/H,sBAAsBlL,GAC9C37D,EAAO1K,KAAKk8E,MAAMyK,GAClBE,EAAsBrW,GAAyB5R,eAAe,CAACga,EAAYwN,IAOjF,OANI7N,GAAYvE,gBAAgBtpE,GAC5B+0D,EAASh/D,QAAQiK,EAAK+sE,qBAAqBoP,EAAqBrW,GAAyBrJ,QAAQd,EAAU+f,KAG3G3mB,EAASh/D,KAAKomF,GAEXpnB,CACV,CAEDvoD,SAAShF,GACL,GAAoB,iBAATA,EACP,MAAM,IAAI5S,MAAM,+BAEpB,MAAMwnF,EAAQ50E,EACd,GAA8B,iBAAnB40E,EAAMH,SACb,MAAM,IAAIrnF,MAAM,8CAEpB,MAAMoL,EAAO1K,KAAKk8E,MAAM4K,EAAMH,UAC9B,IAAKj8E,EACD,MAAM,IAAIpL,MAAM,4CAEpB,MAAO,CACHqnF,SAAUG,EAAMH,SAChBzoF,MAAOwM,EAAK6M,OAAOuvE,EAAM5oF,OAEhC,CACDqZ,OAAOrZ,GACH,MAAO,CACHyoF,SAAUzoF,EAAMyoF,SAChBzoF,MAAO8B,KAAKk8E,MAAMh+E,EAAMyoF,UAAUpvE,OAAOrZ,EAAMA,OAEtD,CACDyY,MAAMzY,GACF,MAAO,CACHyoF,SAAUzoF,EAAMyoF,SAChBzoF,MAAO8B,KAAKk8E,MAAMh+E,EAAMyoF,UAAUhwE,MAAMzY,EAAMA,OAErD,CACD8X,OAAOxK,EAAGzM,GACN,OAAIyM,EAAEm7E,WAAa5nF,EAAE4nF,UAGd3mF,KAAKk8E,MAAM1wE,EAAEm7E,UAAU3wE,OAAOxK,EAAEtN,MAAOa,EAAEb,MACnD,EAELkvB,EAAA+4D,UAAoBA,wBC/LpBv6E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA0B25D,qBAAA,EAc1B,MAAMA,UAAwB9D,GAAQP,UAClCt9E,YAAYusE,EAAajzE,EAAQw/B,GAM7B,GALApmB,MAAM65D,GACN3xE,KAAK2xE,YAAcA,EACnB3xE,KAAKtB,OAASA,EACdsB,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,GAChB7G,EAAYsC,QACb,MAAM30E,MAAM,6BAChB,GAAe,IAAXZ,EACA,MAAMY,MAAM,6BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,UAAU0wE,EAAY1wE,aAAavC,KAErEsB,KAAKo6E,cAAgB,GAAKzI,EAAY1qE,WACtCjH,KAAK40E,cAAgBnxE,KAAKm4B,KAAMl9B,EAASizE,EAAY1qE,WAAc,IACnEjH,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eACpD50E,KAAKqO,MAAQrO,KAAK+xE,WAClB/xE,KAAK03E,UAAYh5E,EAASizE,EAAY1qE,WACtCjH,KAAKg5E,QAAUh5E,KAAK03E,UACpB13E,KAAKi5E,QAAUj5E,KAAK03E,UACpB13E,KAAK2iF,WAAajkF,CACrB,CACD+G,aAAaksE,EAAatrC,EAAOnI,GAC7B,OAAO,IAAKg7C,GAAQhJ,WAAW6W,EAAiB7oD,EAAKj9B,UAA9C,CAAyD0wE,EAAatrC,EAAOnI,EACvF,CACD83C,QAAQvK,GACJ,OAAO,IAAIub,GAAarF,mBAAmB3hF,KAAMyrE,EACpD,CACDyK,UAAUpoD,EAAMoqD,GAGZ,OAAO,IAAI+O,GAAa9E,qBAAqBniF,KAAM8tB,EAAMoqD,EAC5D,CACD9B,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CACD6qD,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CAEDlD,uBACI,OAAOh1E,KAAK03E,SACf,CACD7F,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,OAAOo7E,GAAajI,iCAAiCrxE,KAAK2xE,YAAa3xE,KAAKtB,OAAQ8W,EAAQrL,EAAQjM,EACvG,CACD4zE,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,OAAO62E,GAAalI,qCAAqCpxE,KAAK2xE,YAAatwE,EAAMiG,EAAO7E,EAAKzC,KAChG,CACDm1E,sBACI,OAAOn1E,KAAK03E,SACf,CACDtC,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,OAAOwrD,GAAanI,gCAAgCnxE,KAAK2xE,YAAa3xE,KAAKtB,OAAQsB,KAAKqO,MAAOmH,EAAQrL,EAAQ2jB,EAClH,CACDmnD,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,OAAO62E,GAAapI,oCAAoClxE,KAAK2xE,YAAa3xE,KAAKqO,MAAOhN,EAAMiG,EAAO7E,EAAKzC,KAC3G,CAED4hF,iBACI,OAAO5hF,KAAKtB,MACf,CACDwjF,iBAEC,CACDH,mBAAmBj0D,GACf,OAAOA,CACV,CACD00D,mBAAmBnc,EAAUkK,GACzB,OAAOA,CACV,CAEDqG,SAAS14E,GACL,MAAMo0E,EAAa,IAAIrzE,WAAWe,KAAK03E,WACjCvhD,EAAW,IAAIlyB,SAASquE,EAAWvrE,OAAQurE,EAAWtrE,WAAYsrE,EAAWrrE,YAEnF,OADAqyE,GAAajI,iCAAiCrxE,KAAK2xE,YAAa3xE,KAAKtB,OAAQ,CAAE4zE,aAAYn8C,YAAY,EAAGj4B,GACnGy4E,GAAYnH,oBAAoB8C,EAC1C,EAELllD,EAAA25D,gBAA0BA,wBClG1Bn7E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA8B85D,yBAAA,EAc9B,MAAMA,UAA4BjE,GAAQP,UACtCt9E,YAAYusE,EAAajzE,EAAQw/B,GAO7B,GANApmB,MAAM65D,GACN3xE,KAAK2xE,YAAcA,EACnB3xE,KAAKtB,OAASA,EACdsB,KAAKo6E,cAAgB,EACrBp6E,KAAK6wE,QAAS,EACd7wE,KAAKw4E,eAAgB,EACjB7G,EAAYsC,QACZ,MAAM30E,MAAM,iCAChB,GAAe,IAAXZ,EACA,MAAMY,MAAM,6BAChBU,KAAKiB,SAAWi9B,GAAMj9B,UAAY,UAAU0wE,EAAY1wE,aAAavC,KACrEsB,KAAK40E,cAAgBl2E,EACrBsB,KAAK+xE,WAAa4E,GAAYrH,iBAAiBtvE,KAAK40E,eACpD50E,KAAKqO,MAAQrO,KAAK+xE,WAClB/xE,KAAK03E,UAAsC,OAA1B/F,EAAY+F,UAAqB,KAAOh5E,EAASizE,EAAY+F,UAC9E13E,KAAKg5E,QAAU6L,GAAiBX,sBAAsBvS,EAAajzE,GACnEsB,KAAKi5E,QAAU4L,GAAiBZ,sBAAsBtS,EAAajzE,GACnEsB,KAAK2iF,WAAajkF,CACrB,CAED+G,aAAaksE,EAAatrC,EAAOnI,GAC7B,OAAO,IAAKg7C,GAAQhJ,WAAWgX,EAAqBhpD,EAAKj9B,UAAlD,CAA6D0wE,EAAatrC,EAAOnI,EAC3F,CACD83C,QAAQvK,GACJ,OAAO,IAAI0b,GAAiB7C,uBAAuBtkF,KAAMyrE,EAC5D,CACDyK,UAAUpoD,EAAMoqD,GAGZ,OAAO,IAAIkP,GAAiBtC,yBAAyB9kF,KAAM8tB,EAAMoqD,EACpE,CACD9B,WAAWtvE,GACP,OAAOA,EAAKgnB,IACf,CACDwoD,aAAaxvE,GAET,OADAA,EAAKkxE,SACElxE,EAAKgnB,IACf,CACD6qD,cAAc7xE,GACV,OAAOA,EAAKoxE,KACf,CAEDlD,qBAAqB92E,GACjB,OAAO2mF,GAAiBR,mCAAmCrkF,KAAK2xE,YAAa3xE,KAAKtB,OAAQR,EAC7F,CACD2zE,uBAAuBr8D,EAAQrL,EAAQjM,GACnC,OAAO2mF,GAAiBb,qCAAqChkF,KAAK2xE,YAAa3xE,KAAKtB,OAAQ8W,EAAQrL,EAAQjM,EAC/G,CACD4zE,2BAA2BzwE,EAAMiG,EAAO7E,GACpC,OAAOoiF,GAAiBd,yCAAyC/jF,KAAK2xE,YAAatwE,EAAMiG,EAAO7E,EAAKzC,KACxG,CACDm1E,oBAAoBrnD,GAChB,OAAO+2D,GAAiBf,kCAAkC9jF,KAAK2xE,YAAa3xE,KAAKtB,OAAQsB,KAAKqO,MAAOyf,EACxG,CACDsnD,sBAAsB5/D,EAAQrL,EAAQ2jB,GAClC,OAAO+2D,GAAiBhB,oCAAoC7jF,KAAK2xE,YAAa3xE,KAAKtB,OAAQsB,KAAKqO,MAAOyf,EAAMtY,EAAQrL,EACxH,CACD8qE,0BAA0B5zE,EAAMiG,EAAO7E,GACnC,OAAOoiF,GAAiBjB,wCAAwC5jF,KAAK2xE,YAAa3xE,KAAKqO,MAAOhN,EAAMiG,EAAO7E,EAAKzC,KACnH,CAED4hF,iBACI,OAAO5hF,KAAKtB,MACf,CACDwjF,iBAEC,CACDH,mBAAmBj0D,GACf,OAAOA,CACV,CACD00D,mBAAmBnc,EAAUkK,GACzB,OAAOA,CACV,CAEDqG,SAAS14E,GACL,OAAO2mF,GAAiBlB,6BAA6B3jF,KAAK2xE,YAAa3xE,KAAKtB,OAAQR,EACvF,EAELkvB,EAAA85D,oBAA8BA,wBC/F9Bt7E,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA8hD,OAAiB9hD,EAA0BwmD,gBAAAxmD,EAAA0mD,YAAsB1mD,EAAwBymD,cAAAzmD,EAAA+kD,8BAAwC/kD,WAAmBA,EAAqB2qD,WAAA3qD,EAAAyqD,SAAmBzqD,EAA0B4mD,gBAAA5mD,EAAAkoD,cAAwBloD,EAAsB2sD,YAAA3sD,EAAA4sD,UAAoB5sD,EAAe0nD,KAAA1nD,EAAAstD,cAAwBttD,eAAuBA,EAAoBs1D,UAAAt1D,EAAA85D,oBAA8B95D,EAA0B25D,gBAAA35D,EAAA+4D,UAAoB/4D,EAAyBm4D,eAAAn4D,EAAAk4D,eAAyBl4D,EAAmBi4D,SAAAj4D,EAAA83D,kBAA4B93D,gBAAwBA,EAAkCm0D,wBAAAn0D,EAAA8xD,cAAwB9xD,EAAyBytD,eAAAztD,EAAAutD,aAAuBvtD,EAAsB8sD,YAAA9sD,EAAAusD,cAAwBvsD,EAAsB0rD,iBAAA,EAG7tBltE,OAAO4K,eAAe4W,EAAS,cAAe,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOuzE,GAAUvO,WAAY,IAElHltE,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOwzE,GAAY3N,aAAc,IAExH/tE,OAAO4K,eAAe4W,EAAS,cAAe,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOyzE,GAAUrN,WAAY,IAElHtuE,OAAO4K,eAAe4W,EAAS,eAAgB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO0zE,GAAW7M,YAAa,IAErH/uE,OAAO4K,eAAe4W,EAAS,iBAAkB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO2zE,GAAa5M,cAAe,IAE3HjvE,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOmsE,GAAYf,aAAc,IAExHtzE,OAAO4K,eAAe4W,EAAS,0BAA2B,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO0tE,GAAsBD,uBAAwB,IAEtJ31E,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOovE,GAAYF,aAAc,IAExHp3E,OAAO4K,eAAe4W,EAAS,oBAAqB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqxE,GAAgBD,iBAAkB,IAEpIt5E,OAAO4K,eAAe4W,EAAS,WAAY,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOwyE,GAAOjB,QAAS,IAEzGz5E,OAAO4K,eAAe4W,EAAS,iBAAkB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4zE,GAAOpC,cAAe,IACrH15E,OAAO4K,eAAe4W,EAAS,iBAAkB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4zE,GAAOnC,cAAe,IAErH35E,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO6zE,GAAQxB,SAAU,IAE5Gv6E,OAAO4K,eAAe4W,EAAS,kBAAmB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO8zE,GAAcb,eAAgB,IAE9Hn7E,OAAO4K,eAAe4W,EAAS,sBAAuB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO+zE,GAAkBX,mBAAoB,IAG1It7E,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOmvE,GAAQP,SAAU,IAE5G92E,OAAO4K,eAAe4W,EAAS,eAAgB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO2kE,GAAWH,YAAa,IAErH1sE,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOmjE,GAAYyD,aAAc,IAGxH9uE,OAAO4K,eAAe4W,EAAS,OAAQ,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO2hE,GAAWX,IAAK,IAErGlpE,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqmE,GAAQH,SAAU,IAC5GpuE,OAAO4K,eAAe4W,EAAS,cAAe,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqmE,GAAQJ,WAAY,IAEhHnuE,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOykE,GAAYjD,aAAc,IACxH1pE,OAAO4K,eAAe4W,EAAS,kBAAmB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOykE,GAAYvE,eAAgB,IAE5HpoE,OAAO4K,eAAe4W,EAAS,WAAY,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOg0E,GAAWjQ,QAAS,IAE7GjsE,OAAO4K,eAAe4W,EAAS,aAAc,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOi0E,GAAWhQ,UAAW,IAGjHnsE,OAAO4K,eAAe4W,EAAS,WAAY,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4kE,GAAWtG,QAAS,IAC7GxmE,OAAO4K,eAAe4W,EAAS,gCAAiC,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO4kE,GAAWvG,6BAA8B,IAGvJvmE,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOk0E,GAAYnU,aAAc,IACxHjoE,OAAO4K,eAAe4W,EAAS,cAAe,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOk0E,GAAYlU,WAAY,IACpHloE,OAAO4K,eAAe4W,EAAS,kBAAmB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOk0E,GAAYpU,eAAgB,IAE5HhoE,OAAO4K,eAAe4W,EAAS,SAAU,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO6iE,GAAYzH,MAAO,0BC9D1GtjE,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA66D,YAAsB76D,aAAqBA,EAAkB86D,QAAA96D,EAAA+6D,aAAuB/6D,EAAoBg7D,eAAA,EAGxGh7D,EAAAg7D,UAAoB,IAAIC,GAAM9C,eAAe,GAC7Cn4D,EAAA+6D,aAAuB,IAAIE,GAAM/C,eAAe,GAChDl4D,EAAA86D,QAAkB,IAAIG,GAAMxN,eAAe,IAC3CztD,EAAAmvC,WAAqB,IAAI8rB,GAAMnJ,cAAc,CACzCruD,MAAOzD,EAAQ+6D,aACf3rB,eAAgBpvC,EAAQ+6D,aACxBptB,QAAS3tC,EAAQ86D,QACjBzrB,OAAQrvC,EAAQ+6D,cACjB,CAAElnF,SAAU,aAAco+E,SAAU,SACvCjyD,EAAA66D,YAAsB,IAAII,GAAMnD,kBAAkB93D,EAAQmvC,WAAYtC,GAAYlK,+BpFS9E9d,GAAuB,iBAAZq2C,QAAuBA,QAAU,KAC5CC,GAAet2C,IAAwB,mBAAZA,GAAEtN,MAC7BsN,GAAEtN,MACF,SAAsBnzB,EAAQg3E,EAAU/lD,GACxC,OAAO4tC,SAAS5tD,UAAUkiB,MAAM9V,KAAKrd,EAAQg3E,EAAU/lD,EACxD,EAID6d,GADErO,IAA0B,mBAAdA,GAAEw2C,QACCx2C,GAAEw2C,QACV78E,OAAO88E,sBACC,SAAwBl3E,GACvC,OAAO5F,OAAO+8E,oBAAoBn3E,GAC/BiD,OAAO7I,OAAO88E,sBAAsBl3E,GAC3C,EAEmB,SAAwBA,GACvC,OAAO5F,OAAO+8E,oBAAoBn3E,EACtC,EAOA,IAAIo3E,GAAcjmF,OAAOoN,OAAS,SAAqB7R,GACrD,OAAOA,GAAUA,CACnB,EAEA,SAAS2qF,KACPA,GAAa7vE,KAAK6V,KAAK7uB,KACzB,CACA,IAAc8oF,GAAGD,GAIjBA,GAAaA,aAAeA,GAE5BA,GAAapmE,UAAUsmE,aAAU1pF,EACjCwpF,GAAapmE,UAAUumE,aAAe,EACtCH,GAAapmE,UAAUwmE,mBAAgB5pF,EAIvC,IAAI6pF,GAAsB,GAE1B,SAASC,GAAcC,GACrB,GAAwB,mBAAbA,EACT,MAAM,IAAI9/D,UAAU,0EAA4E8/D,EAEpG,CAoCA,SAASC,GAAiBC,GACxB,YAA2BjqF,IAAvBiqF,EAAKL,cACAJ,GAAaK,oBACfI,EAAKL,aACd,CAkDA,SAASM,GAAa/3E,EAAQ9G,EAAM0+E,EAAUI,GAC5C,IAAIn0E,EACAyzE,EACAW,EAsBJ,GApBAN,GAAcC,QAGC/pF,KADfypF,EAASt3E,EAAOu3E,UAEdD,EAASt3E,EAAOu3E,QAAUn9E,OAAO2I,OAAO,MACxC/C,EAAOw3E,aAAe,SAIK3pF,IAAvBypF,EAAOY,cACTl4E,EAAOm4E,KAAK,cAAej/E,EACf0+E,EAASA,SAAWA,EAASA,SAAWA,GAIpDN,EAASt3E,EAAOu3E,SAElBU,EAAWX,EAAOp+E,SAGHrL,IAAboqF,EAEFA,EAAWX,EAAOp+E,GAAQ0+E,IACxB53E,EAAOw3E,kBAeT,GAbwB,mBAAbS,EAETA,EAAWX,EAAOp+E,GAChB8+E,EAAU,CAACJ,EAAUK,GAAY,CAACA,EAAUL,GAErCI,EACTC,EAASz4D,QAAQo4D,GAEjBK,EAAShpF,KAAK2oF,IAIhB/zE,EAAIg0E,GAAiB73E,IACb,GAAKi4E,EAAS/qF,OAAS2W,IAAMo0E,EAASG,OAAQ,CACpDH,EAASG,QAAS,EAGlB,IAAI/5D,EAAI,IAAIvwB,MAAM,+CACEmqF,EAAS/qF,OAAS,IAAM8E,OAAOkH,GADjC,qEAIlBmlB,EAAE7iB,KAAO,8BACT6iB,EAAEg6D,QAAUr4E,EACZqe,EAAEnlB,KAAOA,EACTmlB,EAAEyvC,MAAQmqB,EAAS/qF,OA5KnBsnD,SAAWA,QAAQ8jC,MAAM9jC,QAAQ8jC,KA6Kdj6D,EACpB,CAGH,OAAOre,CACT,CAaA,SAASu4E,KACP,IAAK/pF,KAAKgqF,MAGR,OAFAhqF,KAAKwR,OAAOy4E,eAAejqF,KAAK0K,KAAM1K,KAAKkqF,QAC3ClqF,KAAKgqF,OAAQ,EACY,IAArB3gE,UAAU3qB,OACLsB,KAAKopF,SAASv6D,KAAK7uB,KAAKwR,QAC1BxR,KAAKopF,SAASzkD,MAAM3kC,KAAKwR,OAAQ6X,UAE5C,CAEA,SAAS8gE,GAAU34E,EAAQ9G,EAAM0+E,GAC/B,IAAIzyD,EAAQ,CAAEqzD,OAAO,EAAOE,YAAQ7qF,EAAWmS,OAAQA,EAAQ9G,KAAMA,EAAM0+E,SAAUA,GACjFgB,EAAUL,GAAYp0B,KAAKh/B,GAG/B,OAFAyzD,EAAQhB,SAAWA,EACnBzyD,EAAMuzD,OAASE,EACRA,CACT,CAyHA,SAASC,GAAW74E,EAAQ9G,EAAM4/E,GAChC,IAAIxB,EAASt3E,EAAOu3E,QAEpB,QAAe1pF,IAAXypF,EACF,MAAO,GAET,IAAIyB,EAAazB,EAAOp+E,GACxB,YAAmBrL,IAAfkrF,EACK,GAEiB,mBAAfA,EACFD,EAAS,CAACC,EAAWnB,UAAYmB,GAAc,CAACA,GAElDD,EAsDT,SAAyBr2E,GAEvB,IADA,IAAI+yC,EAAM,IAAI5oD,MAAM6V,EAAIvV,QACfD,EAAI,EAAGA,EAAIuoD,EAAItoD,SAAUD,EAChCuoD,EAAIvoD,GAAKwV,EAAIxV,GAAG2qF,UAAYn1E,EAAIxV,GAElC,OAAOuoD,CACT,CA3DIwjC,CAAgBD,GAAcE,GAAWF,EAAYA,EAAW7rF,OACpE,CAmBA,SAASgsF,GAAchgF,GACrB,IAAIo+E,EAAS9oF,KAAK+oF,QAElB,QAAe1pF,IAAXypF,EAAsB,CACxB,IAAIyB,EAAazB,EAAOp+E,GAExB,GAA0B,mBAAf6/E,EACT,OAAO,EACF,QAAmBlrF,IAAfkrF,EACT,OAAOA,EAAW7rF,MAErB,CAED,OAAO,CACT,CAMA,SAAS+rF,GAAWx2E,EAAK5N,GAEvB,IADA,IAAIuQ,EAAO,IAAIxY,MAAMiI,GACZ5H,EAAI,EAAGA,EAAI4H,IAAK5H,EACvBmY,EAAKnY,GAAKwV,EAAIxV,GAChB,OAAOmY,CACT,CA2CA,SAAS+zE,GAA+Bd,EAAS78E,EAAMo8E,EAAUwB,GAC/D,GAA0B,mBAAff,EAAQgB,GACbD,EAAME,KACRjB,EAAQiB,KAAK99E,EAAMo8E,GAEnBS,EAAQgB,GAAG79E,EAAMo8E,OAEd,IAAwC,mBAA7BS,EAAQkB,iBAYxB,MAAM,IAAIzhE,UAAU,6EAA+EugE,GATnGA,EAAQkB,iBAAiB/9E,EAAM,SAASg+E,EAAa3hF,GAG/CuhF,EAAME,MACRjB,EAAQoB,oBAAoBj+E,EAAMg+E,GAEpC5B,EAAS//E,EACf,EAGG,CACH,CAraAuC,OAAO4K,eAAeqyE,GAAc,sBAAuB,CACzDpyE,YAAY,EACZ3C,IAAK,WACH,OAAOo1E,EACR,EACD9+E,IAAK,SAASf,GACZ,GAAmB,iBAARA,GAAoBA,EAAM,GAAKu/E,GAAYv/E,GACpD,MAAM,IAAIxB,WAAW,kGAAoGwB,EAAM,KAEjI6/E,GAAsB7/E,CACvB,IAGHw/E,GAAa7vE,KAAO,gBAEG3Z,IAAjBW,KAAK+oF,SACL/oF,KAAK+oF,UAAYn9E,OAAO2uB,eAAev6B,MAAM+oF,UAC/C/oF,KAAK+oF,QAAUn9E,OAAO2I,OAAO,MAC7BvU,KAAKgpF,aAAe,GAGtBhpF,KAAKipF,cAAgBjpF,KAAKipF,oBAAiB5pF,CAC7C,EAIAwpF,GAAapmE,UAAUyoE,gBAAkB,SAAyB7kF,GAChE,GAAiB,iBAANA,GAAkBA,EAAI,GAAKuiF,GAAYviF,GAChD,MAAM,IAAIwB,WAAW,gFAAkFxB,EAAI,KAG7G,OADArG,KAAKipF,cAAgB5iF,EACdrG,IACT,EAQA6oF,GAAapmE,UAAU0oE,gBAAkB,WACvC,OAAO9B,GAAiBrpF,KAC1B,EAEA6oF,GAAapmE,UAAUknE,KAAO,SAAcj/E,GAE1C,IADA,IAAI+3B,EAAO,GACFhkC,EAAI,EAAGA,EAAI4qB,UAAU3qB,OAAQD,IAAKgkC,EAAKhiC,KAAK4oB,UAAU5qB,IAC/D,IAAI2sF,EAAoB,UAAT1gF,EAEXo+E,EAAS9oF,KAAK+oF,QAClB,QAAe1pF,IAAXypF,EACFsC,EAAWA,QAA4B/rF,IAAjBypF,EAAOn2E,WAC1B,IAAKy4E,EACR,OAAO,EAGT,GAAIA,EAAS,CACX,IAAItyC,EAGJ,GAFIrW,EAAK/jC,OAAS,IAChBo6C,EAAKrW,EAAK,IACRqW,aAAcx5C,MAGhB,MAAMw5C,EAGR,IAAI4E,EAAM,IAAIp+C,MAAM,oBAAsBw5C,EAAK,KAAOA,EAAG53C,QAAU,IAAM,KAEzE,MADAw8C,EAAI2tC,QAAUvyC,EACR4E,CACP,CAED,IAAI1oC,EAAU8zE,EAAOp+E,GAErB,QAAgBrL,IAAZ2V,EACF,OAAO,EAET,GAAuB,mBAAZA,EACTuzE,GAAavzE,EAAShV,KAAMyiC,OAE5B,KAAI57B,EAAMmO,EAAQtW,OACd4sF,EAAYb,GAAWz1E,EAASnO,GACpC,IAASpI,EAAI,EAAGA,EAAIoI,IAAOpI,EACzB8pF,GAAa+C,EAAU7sF,GAAIuB,KAAMyiC,EAHX,CAM1B,OAAO,CACT,EAoEAomD,GAAapmE,UAAUooE,GAJvBhC,GAAapmE,UAAU8oE,YAAc,SAAqB7gF,EAAM0+E,GAC9D,OAAOG,GAAavpF,KAAM0K,EAAM0+E,GAAU,EAC5C,EAIAP,GAAapmE,UAAU+oE,gBACnB,SAAyB9gF,EAAM0+E,GAC7B,OAAOG,GAAavpF,KAAM0K,EAAM0+E,GAAU,EAChD,EAoBAP,GAAapmE,UAAUqoE,KAAO,SAAcpgF,EAAM0+E,GAGhD,OAFAD,GAAcC,GACdppF,KAAK6qF,GAAGngF,EAAMy/E,GAAUnqF,KAAM0K,EAAM0+E,IAC7BppF,IACT,EAEA6oF,GAAapmE,UAAUgpE,oBACnB,SAA6B/gF,EAAM0+E,GAGjC,OAFAD,GAAcC,GACdppF,KAAKwrF,gBAAgB9gF,EAAMy/E,GAAUnqF,KAAM0K,EAAM0+E,IAC1CppF,IACb,EAGA6oF,GAAapmE,UAAUwnE,eACnB,SAAwBv/E,EAAM0+E,GAC5B,IAAI1nF,EAAMonF,EAAQ4C,EAAUjtF,EAAGktF,EAK/B,GAHAxC,GAAcC,QAGC/pF,KADfypF,EAAS9oF,KAAK+oF,SAEZ,OAAO/oF,KAGT,QAAaX,KADbqC,EAAOonF,EAAOp+E,IAEZ,OAAO1K,KAET,GAAI0B,IAAS0nF,GAAY1nF,EAAK0nF,WAAaA,EACb,KAAtBppF,KAAKgpF,aACThpF,KAAK+oF,QAAUn9E,OAAO2I,OAAO,cAEtBu0E,EAAOp+E,GACVo+E,EAAOmB,gBACTjqF,KAAK2pF,KAAK,iBAAkBj/E,EAAMhJ,EAAK0nF,UAAYA,SAElD,GAAoB,mBAAT1nF,EAAqB,CAGrC,IAFAgqF,GAAY,EAEPjtF,EAAIiD,EAAKhD,OAAS,EAAGD,GAAK,EAAGA,IAChC,GAAIiD,EAAKjD,KAAO2qF,GAAY1nF,EAAKjD,GAAG2qF,WAAaA,EAAU,CACzDuC,EAAmBjqF,EAAKjD,GAAG2qF,SAC3BsC,EAAWjtF,EACX,KACD,CAGH,GAAIitF,EAAW,EACb,OAAO1rF,KAEQ,IAAb0rF,EACFhqF,EAAK3B,QAiIf,SAAmB2B,EAAMmvB,GACvB,KAAOA,EAAQ,EAAInvB,EAAKhD,OAAQmyB,IAC9BnvB,EAAKmvB,GAASnvB,EAAKmvB,EAAQ,GAC7BnvB,EAAK+I,KACP,CAnIUmhF,CAAUlqF,EAAMgqF,GAGE,IAAhBhqF,EAAKhD,SACPoqF,EAAOp+E,GAAQhJ,EAAK,SAEQrC,IAA1BypF,EAAOmB,gBACTjqF,KAAK2pF,KAAK,iBAAkBj/E,EAAMihF,GAAoBvC,EACzD,CAED,OAAOppF,IACb,EAEA6oF,GAAapmE,UAAUopE,IAAMhD,GAAapmE,UAAUwnE,eAEpDpB,GAAapmE,UAAUqpE,mBACnB,SAA4BphF,GAC1B,IAAI4gF,EAAWxC,EAAQrqF,EAGvB,QAAeY,KADfypF,EAAS9oF,KAAK+oF,SAEZ,OAAO/oF,KAGT,QAA8BX,IAA1BypF,EAAOmB,eAUT,OATyB,IAArB5gE,UAAU3qB,QACZsB,KAAK+oF,QAAUn9E,OAAO2I,OAAO,MAC7BvU,KAAKgpF,aAAe,QACM3pF,IAAjBypF,EAAOp+E,KACY,KAAtB1K,KAAKgpF,aACThpF,KAAK+oF,QAAUn9E,OAAO2I,OAAO,aAEtBu0E,EAAOp+E,IAEX1K,KAIT,GAAyB,IAArBqpB,UAAU3qB,OAAc,CAC1B,IACIqT,EADApE,EAAO/B,OAAO+B,KAAKm7E,GAEvB,IAAKrqF,EAAI,EAAGA,EAAIkP,EAAKjP,SAAUD,EAEjB,oBADZsT,EAAMpE,EAAKlP,KAEXuB,KAAK8rF,mBAAmB/5E,GAK1B,OAHA/R,KAAK8rF,mBAAmB,kBACxB9rF,KAAK+oF,QAAUn9E,OAAO2I,OAAO,MAC7BvU,KAAKgpF,aAAe,EACbhpF,IACR,CAID,GAAyB,mBAFzBsrF,EAAYxC,EAAOp+E,IAGjB1K,KAAKiqF,eAAev/E,EAAM4gF,QACrB,QAAkBjsF,IAAdisF,EAET,IAAK7sF,EAAI6sF,EAAU5sF,OAAS,EAAGD,GAAK,EAAGA,IACrCuB,KAAKiqF,eAAev/E,EAAM4gF,EAAU7sF,IAIxC,OAAOuB,IACb,EAmBA6oF,GAAapmE,UAAU6oE,UAAY,SAAmB5gF,GACpD,OAAO2/E,GAAWrqF,KAAM0K,GAAM,EAChC,EAEAm+E,GAAapmE,UAAUspE,aAAe,SAAsBrhF,GAC1D,OAAO2/E,GAAWrqF,KAAM0K,GAAM,EAChC,EAEAm+E,GAAa6B,cAAgB,SAASb,EAASn/E,GAC7C,MAAqC,mBAA1Bm/E,EAAQa,cACVb,EAAQa,cAAchgF,GAEtBggF,GAAc77D,KAAKg7D,EAASn/E,EAEvC,EAEAm+E,GAAapmE,UAAUioE,cAAgBA,GAiBvC7B,GAAapmE,UAAUupE,WAAa,WAClC,OAAOhsF,KAAKgpF,aAAe,EAAI1oC,GAAetgD,KAAK+oF,SAAW,EAChE,UAuBA,SAAcc,EAAS78E,GACrB,OAAO,IAAIi/E,QAAQ,SAAUC,EAASC,GACpC,SAASC,EAAc1uC,GACrBmsC,EAAQI,eAAej9E,EAAMq/E,GAC7BF,EAAOzuC,EACR,CAED,SAAS2uC,IAC+B,mBAA3BxC,EAAQI,gBACjBJ,EAAQI,eAAe,QAASmC,GAElCF,EAAQ,GAAGjqF,MAAM4sB,KAAKxF,WAE5B,CACIshE,GAA+Bd,EAAS78E,EAAMq/E,EAAU,CAAEvB,MAAM,IACnD,UAAT99E,GAMR,SAAuC68E,EAAS70E,EAAS41E,GAC7B,mBAAff,EAAQgB,IACjBF,GAA+Bd,EAAS,QAAS70E,EAPO,CAAE81E,MAAM,GASpE,CATMwB,CAA8BzC,EAASuC,EAE7C,EACA,MqFpaYG,GA8BXC,uBCpED5gF,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAA4Bq/D,uBAAA,EA6J5Br/D,EAAAq/D,kBA9HA,cAAgCC,GAAS7D,aACrCc,KAAKgD,KAAUlqD,GACX,IAAKphC,EAAMurF,GAAYnqD,EACvB,MAAM5V,EAAO7sB,KACb,IAAIsrF,EAAYz+D,EAAKk8D,QAAQ4D,IAAU,GAiBvC,YAfiBttF,IAAbutF,GAA0C,mBAATvrF,IACjCurF,EAAWvrF,EACXA,OAAOhC,GAGG,gBAAVstF,GAAqC,mBAAVA,IAC3BtrF,EAAO,CACHsrF,MAAOtrF,EACPsrB,GAAIigE,GAERA,OAAWvtF,GAGfisF,EAAYltF,MAAMC,QAAQitF,GAAaA,EAAY,CAACA,GAhD5D7tD,eAA2B4tD,EAASwB,EAAOxrF,GACvC,IAAIsR,EACJ,UAAW,MAAMm6E,KAAQD,EACrB,IACQC,EAAKpuF,OAAS,EAEdouF,EAAKj+D,KAAKw8D,EAAShqF,SAGb,IAAI4qF,QAAQ,CAACC,EAASC,KACxBW,EAAKj+D,KAAKw8D,EAAShqF,EAAOsR,IAClBA,EACAw5E,EAAOx5E,GAGPu5E,GACH,EACH,EAMb,CAFD,MAAO55E,GACHK,EAAQL,CACX,CAEL,GAAIK,EACA,MAAMA,CAEd,CAqBQo6E,CAAYlgE,EAAMy+D,EAAUrpF,QAASZ,GAAM2rF,KAAKJ,GAAUK,MAAML,GACzD//D,EAAK69D,cAAciC,GAAS,CACtC,CACD7B,KAAK6B,EAAOvD,GACR,MAAMv8D,EAAO7sB,KACb,IAAI6kB,EACJ,GAAwB,mBAAbukE,EACP,MAAM,IAAI9/D,UAAU,+BAgBxB,OAZIzE,EADAukE,EAAS1qF,QAAU,EACf,SAAU4T,EAAGlG,GACbygB,EAAKo9D,eAAe0C,EAAO9nE,GACtBukE,EAAS92E,EAAGlG,EACjC,EAGgB,SAAUkG,GACVua,EAAKo9D,eAAe0C,EAAO9nE,GACtBukE,EAAS92E,EAAGuS,EACjC,EAEQgI,EAAKg+D,GAAG8B,EAAO9nE,GACRgI,CACV,CACDm8B,MAAM2jC,EAAOvD,GACT,IAAIkC,EAAYtrF,KAAK+oF,QAAQ4D,IAAU,GAEvC,GAAwB,mBAAbvD,EACP,MAAM,IAAI9/D,UAAU,+BAQxB,OALKlrB,MAAMC,QAAQitF,KAEftrF,KAAK+oF,QAAQ4D,GAASrB,EAAY,CAACA,IAEvCA,EAAUt6D,QAAQo4D,GACXppF,IACV,CACDsrB,OAAOqhE,EAAOn7E,EAAQ43E,GAClB,OAAOppF,KAAKktF,cAAcP,EAAOn7E,EAAQ43E,EAC5C,CACD59D,MAAMmhE,EAAOn7E,EAAQ43E,GACjB,OAAOppF,KAAKktF,cAAcP,EAAOn7E,EAAQ43E,EAAU,QACtD,CACD8D,cAAcP,EAAOn7E,EAAQ43E,EAAU8D,GACnC,IACIzuF,EACAoyB,EAFAy6D,EAAYtrF,KAAK+oF,QAAQ4D,IAAU,GAGvC,MAAMrlE,EAAwB,UAAlB4lE,EAA4B,EAAI,EAE5C,GAAwB,mBAAb9D,EACP,MAAM,IAAI9/D,UAAU,+BAExB,GAAsB,mBAAX9X,EACP,MAAM,IAAI8X,UAAU,6BAQxB,IALKlrB,MAAMC,QAAQitF,KAEftrF,KAAK+oF,QAAQ4D,GAASrB,EAAY,CAACA,IAEvCz6D,EAAQy6D,EAAU5sF,OACbD,EAAI6sF,EAAU5sF,OAAQD,KACvB,GAAI6sF,EAAU7sF,KAAO+S,EAAQ,CACzBqf,EAAQpyB,EAAI6oB,EACZ,KACH,CAGL,OADAgkE,EAAU6B,OAAOt8D,EAAO,EAAGu4D,GACpBppF,IACV,CACD6qF,GAAG8B,EAAOvD,GACN,OAAOtxE,MAAM+yE,GAAG8B,EAAOvD,EAC1B,CACDmC,YAAYoB,EAAOvD,GACf,OAAOtxE,MAAMyzE,YAAYoB,EAAOvD,EACnC,CACDoC,gBAAgBmB,EAAOvD,GACnB,OAAOtxE,MAAM0zE,gBAAgBmB,EAAOvD,EACvC,CACDqC,oBAAoBkB,EAAOvD,GACvB,OAAOtxE,MAAM2zE,oBAAoBkB,EAAOvD,EAC3C,CACD0C,mBAAmBa,GACf,OAAO70E,MAAMg0E,mBAAmBa,EACnC,CACD1C,eAAe0C,EAAOvD,GAClB,OAAOtxE,MAAMmyE,eAAe0C,EAAOvD,EACtC,CACD4C,aACI,OAAOl0E,MAAMk0E,YAChB,CACDV,UAAUqB,GACN,OAAO70E,MAAMwzE,UAAUqB,EAC1B,CACDjC,cAAciC,GACV,OAAO70E,MAAM4yE,cAAciC,EAC9B,CACDxB,kBACI,OAAOrzE,MAAMqzE,iBAChB,CACDD,gBAAgBkC,GACZ,OAAOt1E,MAAMozE,gBAAgBkC,EAChC,yBCpKLxhF,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAeigE,UAAA,EAyCfjgE,EAAAigE,KAvCA,MACIjoF,cACIpF,KAAKstF,QAAU,EACfttF,KAAKutF,qBAAuB,EAC/B,CAKD9vD,gBACI,OAAIz9B,KAAKstF,QAAU,GACfttF,KAAKstF,SAAW,EACTrB,QAAQC,SAAQ,IAIpB,IAAID,QAASI,GAAarsF,KAAKutF,qBAAqB9sF,KAAK4rF,GACnE,CAKDmB,UAEI,GADAxtF,KAAKstF,SAAW,EACZttF,KAAKstF,QAAU,GAAKttF,KAAKutF,qBAAqB7uF,OAAS,EAEvDsnD,QAAQ8jC,KAAK,wEAEZ,GAAqB,IAAjB9pF,KAAKstF,SAAiBttF,KAAKutF,qBAAqB7uF,OAAS,EAAG,CAGjEsB,KAAKstF,SAAW,EAChB,MAAMG,EAAeztF,KAAKutF,qBAAqBxtF,QAC3C0tF,GACAA,GAAa,EAEpB,CACJ,yBCxCL,IAAIlf,EAAmBvuE,IAAQA,GAAKuuE,kBAAqB3iE,OAAO2I,OAAM,SAAaoG,EAAGtF,EAAG7G,EAAGu/B,QAC7E1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3B,IAAIk/E,EAAO9hF,OAAO+hF,yBAAyBt4E,EAAG7G,GACzCk/E,KAAS,QAASA,GAAQr4E,EAAE2/C,WAAa04B,EAAKthC,UAAYshC,EAAKt2C,gBAClEs2C,EAAO,CAAEj3E,YAAY,EAAM3C,IAAK,WAAa,OAAOuB,EAAE7G,EAAG,IAE3D5C,OAAO4K,eAAemE,EAAGozB,EAAI2/C,EAChC,EAAA,SAAc/yE,EAAGtF,EAAG7G,EAAGu/B,QACT1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3BmM,EAAEozB,GAAM14B,EAAE7G,EACb,GACGggE,EAAgBxuE,IAAQA,GAAKwuE,cAAiB,SAASn5D,EAAG+X,GAC1D,IAAK,IAAIhuB,KAAKiW,EAAa,YAANjW,GAAoBwM,OAAO6W,UAAUhV,eAAeohB,KAAKzB,EAAShuB,IAAImvE,EAAgBnhD,EAAS/X,EAAGjW,EAC3H,EACAwM,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAAkpC,QAAkBlpC,EAAyBqpC,eAAArpC,EAAA6oC,UAAoB7oC,EAAsB8oC,YAAA9oC,EAAAglC,cAAwBhlC,EAAkB+oC,QAAA/oC,EAAAopC,cAAwBppC,EAAmBipC,SAAAjpC,EAAAgpC,UAAoBhpC,EAA6BmpC,mBAAAnpC,EAAAwgE,SAAc,EAIzOpf,EAAathD,GAAwBE,GAIrCohD,EAAaC,GAAoBrhD,GAIjCohD,EAAaE,GAAsBthD,GAInCohD,EAAaG,GAAsBvhD,GAInCohD,EAAaI,GAAyBxhD,GAItCohD,EAAaK,GAAwBzhD,GAIrCohD,EAAaM,GAAoB1hD,GAIjCA,EAAAwgE,IAAc7e,GAIdP,EAAaqf,GAAoBzgE,GAIjCohD,EAAasf,GAAgC1gE,GAE7CxhB,OAAO4K,eAAe4W,EAAS,qBAAsB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWZ,kBAAmB,IACjI3qD,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWf,SAAU,IAC/GxqD,OAAO4K,eAAe4W,EAAS,WAAY,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWd,QAAS,IAC7GzqD,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWX,aAAc,IACvH5qD,OAAO4K,eAAe4W,EAAS,UAAW,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWhB,OAAQ,IAC3GvqD,OAAO4K,eAAe4W,EAAS,gBAAiB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAW/E,aAAc,IACvHxmD,OAAO4K,eAAe4W,EAAS,cAAe,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWjB,WAAY,IACnHtqD,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWlB,SAAU,IAC/GrqD,OAAO4K,eAAe4W,EAAS,iBAAkB,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWV,cAAe,IACzH7qD,OAAO4K,eAAe4W,EAAS,UAAW,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAOqjD,GAAWb,OAAQ,IAC3GkY,EAAauf,GAAmB3gE,KCyIhC4gE,GCtMiB,SAAwB98D,GACvC,MAAmB,iBAARA,EACFA,ECHM,SAAuBA,GACtC,GAAmB,iBAARA,EACT,MAAM,IAAI5xB,MAAM,2EAA8E4xB,EAAO,mCAGvG,MAA2B,OAApBA,EAAIjvB,MAAM,EAAG,EACtB,CDASmwD,CAAclhC,GAAOA,EAAIjvB,MAAM,GAAKivB,CAC7C,EDgMA88D,GAZA,SAAqB9vF,EAAOQ,GAC1B,QAAqB,iBAAVR,IAAuBA,EAAM88B,MAAM,qBAI1Ct8B,GAAUR,EAAMQ,SAAW,EAAI,EAAIA,EAKzC,sBGzLA,SAASuvF,EAAcC,EAAWC,GAC9B,GAAkB,KAAdD,IAAqB,gBAAgBroF,KAAKqoF,GAC1C,MAAM,IAAI5uF,MAAM,gDAAgD4uF,KAEpE,GAAIC,EAAe,EACf,MAAM,IAAI7uF,MAAM,4DAA4D6uF,KAEhF,OAAO3qF,OAAOif,UAAU2S,SAASvG,KAAKq/D,EAAWC,EAAc,IACnE,CAzBAviF,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAyBghE,eAAAhhE,EAAA8V,UAAoB9V,mBAA2BA,EAAoBihE,UAAAjhE,EAAAkhE,eAAyBlhE,YAAoBA,EAAwB6gE,mBAAA,EAyBjK7gE,EAAA6gE,cAAwBA,EAUxB7gE,EAAAmhE,UAHA,SAAmBrwF,GACf,OAAOA,OACX,EAcAkvB,EAAAkhE,eALA,SAAwBpwF,GACpB,MAAwB,iBAAVA,GAA2BswF,GAA0BtwF,IAE7D,EAAI0tE,GAAOzT,UAAUj6D,GADrBgjD,OAAOl2C,KAAK9M,EAEtB,EAmBAkvB,EAAAihE,UATA,SAAmBvvE,EAAG7F,EAAG7Q,GACrB,MAAMqmF,GAAO,EAAI7iB,GAAO7T,YAAY9+C,GAC9By1E,GAAO,EAAI9iB,GAAO7T,YAAY3vD,GAC9BumF,GAAO,EAAI/iB,GAAO5T,aAAal5C,GAC/B8vE,EAAOX,GAAc,EAAIriB,GAAO9T,YAAY22B,GAAM3oF,SAAS,OAAQ,IACnE+oF,EAAOZ,GAAc,EAAIriB,GAAO9T,YAAY42B,GAAM5oF,SAAS,OAAQ,IACnEgpF,EAAWN,GHpCrB,SAAkB/vF,GAGhB,MAAO,KAFGA,EAAEqH,SAAS,GAGvB,CGgCkD,CAA2B6oF,IACzE,OAAO,EAAI/iB,GAAO/T,cAAc+2B,EAAKn6E,OAAOo6E,EAAMC,GACtD,EAaA1hE,EAAAqoB,iBAJA,SAA0Bs5C,EAAa/lD,GACnC,MAAMgmD,GAAY,EAAIpjB,GAAOzN,YAAYn1B,GACzC,OAAO,EAAI4iC,GAAO5N,WAAW+wB,EAAaC,EAAUlwE,EAAGkwE,EAAU/1E,EAAG+1E,EAAU5mF,EAClF,EA0BAglB,EAAA8V,UAlBA,SAAmB/xB,GACf,GAAKA,EAAL,CAGA,GAAqB,iBAAVA,EAAoB,CAC3B,GAAIA,EAAQ,EACR,MAAO,KAEX,MAAMpK,GAAS,EAAI6kE,GAAOzT,UAAUhnD,GACpCA,GAAQ,EAAIy6D,GAAO1T,aAAanxD,EACnC,CACD,GAAqB,iBAAVoK,EAAoB,CAC3B,IAAIhI,EAAM,iEAEV,MADAA,GAAO,oBAAoBgI,MAAUA,IAC/B,IAAI7R,MAAM6J,EACnB,CACD,OAAO,EAAIyiE,GAAO/T,cAAc1mD,EAAM5E,cAbrC,CAcL,EAcA6gB,EAAAghE,eALA,SAAwB1lE,GACpB,MAAMumE,EAASvmE,EAAI5iB,SAAS,IAE5B,OAAOo7C,OAAOl2C,MADEikF,EAAOvwF,OAAS,EAAI,IAAM,IACbuwF,EAAQ,MACzC,wBCtCA,SAASC,EAAgBhuF,EAAS8nC,GAC9B,MAAM+lD,GAAc,EAAInjB,GAAOjO,sBAAqB,EAAI/1B,GAAQ0mD,gBAAgBptF,IAChF,OAAO,EAAI0mC,GAAQ6N,kBAAkBs5C,EAAa/lD,EACtD,CAjFAp9B,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA+hE,iBAA2B/hE,EAAmCgiE,yBAAAhiE,EAAAiiE,kBAAuB,EA2BrFjiE,EAAAiiE,aAbA,UAAsBtlD,WAAEA,EAAU1oC,KAAEA,IAChC,IAAI,EAAIumC,GAAQ2mD,WAAWltF,GACvB,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWxkD,GAC5B,MAAM,IAAIzqC,MAAM,gCAEpB,MAAM4B,GAAU,EAAI0mC,GAAQ0mD,gBAAgBjtF,GACtCowC,GAAU,EAAIm6B,GAAOjO,qBAAqBz8D,GAC1CgrB,GAAM,EAAI0/C,GAAO7N,QAAQtsB,EAAS1H,GAExC,OADmB,EAAInC,GAAQymD,YAAW,EAAIziB,GAAOzT,UAAUjsC,EAAIpN,GAAIoN,EAAIjT,EAAGiT,EAAI9jB,EAEtF,EAuBAglB,EAAAgiE,yBAZA,UAAkC/tF,KAAEA,EAAI2nC,UAAEA,IACtC,IAAI,EAAIpB,GAAQ2mD,WAAWltF,GACvB,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWvlD,GAC5B,MAAM,IAAI1pC,MAAM,+BAEpB,MAAM8rB,EAAY8jE,EAAgB7tF,EAAM2nC,GAClCsmD,GAAS,EAAI1jB,GAAOnS,iBAAiBruC,GAE3C,OADkB,EAAIwgD,GAAO1T,aAAao3B,EAE9C,EAqBAliE,EAAA+hE,iBAVA,UAA0B9tF,KAAEA,EAAI2nC,UAAEA,IAC9B,IAAI,EAAIpB,GAAQ2mD,WAAWltF,GACvB,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWvlD,GAC5B,MAAM,IAAI1pC,MAAM,+BAGpB,MAAO,KADW4vF,EAAgB7tF,EAAM2nC,GAClBljC,SAAS,QACnC,uBCtEA,SAAWqnB,EAAQC,GAIjB,SAASnkB,EAAQ2I,EAAKzI,GACpB,IAAKyI,EAAK,MAAM,IAAItS,MAAM6J,GAAO,mBAClC,CAID,SAASomF,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAASltE,UAAYgtE,EAAUhtE,UAC/B+sE,EAAK/sE,UAAY,IAAIktE,EACrBH,EAAK/sE,UAAUrd,YAAcoqF,CAC9B,CAID,SAASI,EAAIr7D,EAAQjyB,EAAMutF,GACzB,GAAID,EAAGE,KAAKv7D,GACV,OAAOA,EAGTv0B,KAAK+vF,SAAW,EAChB/vF,KAAK4lC,MAAQ,KACb5lC,KAAKtB,OAAS,EAGdsB,KAAKgwF,IAAM,KAEI,OAAXz7D,IACW,OAATjyB,GAA0B,OAATA,IACnButF,EAASvtF,EACTA,EAAO,IAGTtC,KAAKiwF,MAAM17D,GAAU,EAAGjyB,GAAQ,GAAIutF,GAAU,MAEjD,CAUD,IAAI3uC,EATkB,iBAAX/zB,EACTA,EAAOC,QAAUwiE,EAEjBxiE,EAAQwiE,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGM,SAAW,GAGd,IAEIhvC,EADoB,oBAAX3zB,aAAmD,IAAlBA,OAAO2zB,OACxC3zB,OAAO2zB,OAEPh0B,GAAkBg0B,MAG9B,CADC,MAAO5uC,GACR,CA+HD,SAAS69E,EAAepnF,EAAQ8nB,GAC9B,IAAIllB,EAAI5C,EAAOpK,WAAWkyB,GAE1B,OAAIllB,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,GAGHA,EAAI,GAAM,EAErB,CAED,SAAS0lD,EAActoD,EAAQqnF,EAAYv/D,GACzC,IAAI5X,EAAIk3E,EAAcpnF,EAAQ8nB,GAI9B,OAHIA,EAAQ,GAAKu/D,IACfn3E,GAAKk3E,EAAcpnF,EAAQ8nB,EAAQ,IAAM,GAEpC5X,CACR,CA6CD,SAASo3E,EAAWn/D,EAAK5pB,EAAO7E,EAAKwlD,GAGnC,IAFA,IAAIhvC,EAAI,EACJpS,EAAMpD,KAAKupB,IAAIkE,EAAIxyB,OAAQ+D,GACtBhE,EAAI6I,EAAO7I,EAAIoI,EAAKpI,IAAK,CAChC,IAAIkN,EAAIulB,EAAIvyB,WAAWF,GAAK,GAE5Bwa,GAAKgvC,EAIHhvC,GADEtN,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,CAER,CACD,OAAOsN,CACR,CApND22E,EAAGE,KAAO,SAAepnE,GACvB,OAAIA,aAAeknE,GAIJ,OAARlnE,GAA+B,iBAARA,GAC5BA,EAAItjB,YAAY8qF,WAAaN,EAAGM,UAAY9xF,MAAMC,QAAQqqB,EAAIkd,MACpE,EAEEgqD,EAAGlpC,IAAM,SAAc5T,EAAM/hB,GAC3B,OAAI+hB,EAAKw9C,IAAIv/D,GAAS,EAAU+hB,EACzB/hB,CACX,EAEE6+D,EAAG5iE,IAAM,SAAc8lB,EAAM/hB,GAC3B,OAAI+hB,EAAKw9C,IAAIv/D,GAAS,EAAU+hB,EACzB/hB,CACX,EAEE6+D,EAAGntE,UAAUwtE,MAAQ,SAAe17D,EAAQjyB,EAAMutF,GAChD,GAAsB,iBAAXt7D,EACT,OAAOv0B,KAAKuwF,YAAYh8D,EAAQjyB,EAAMutF,GAGxC,GAAsB,iBAAXt7D,EACT,OAAOv0B,KAAKwwF,WAAWj8D,EAAQjyB,EAAMutF,GAG1B,QAATvtF,IACFA,EAAO,IAET2G,EAAO3G,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIgF,EAAQ,EACM,OAFlBitB,EAASA,EAAOzuB,WAAW80B,QAAQ,OAAQ,KAEhC,KACTtzB,IACAtH,KAAK+vF,SAAW,GAGdzoF,EAAQitB,EAAO71B,SACJ,KAAT4D,EACFtC,KAAKywF,UAAUl8D,EAAQjtB,EAAOuoF,IAE9B7vF,KAAK0wF,WAAWn8D,EAAQjyB,EAAMgF,GACf,OAAXuoF,GACF7vF,KAAKwwF,WAAWxwF,KAAK+4D,UAAWz2D,EAAMutF,IAIhD,EAEED,EAAGntE,UAAU8tE,YAAc,SAAsBh8D,EAAQjyB,EAAMutF,GACzDt7D,EAAS,IACXv0B,KAAK+vF,SAAW,EAChBx7D,GAAUA,GAERA,EAAS,UACXv0B,KAAK4lC,MAAQ,CAAW,SAATrR,GACfv0B,KAAKtB,OAAS,GACL61B,EAAS,kBAClBv0B,KAAK4lC,MAAQ,CACF,SAATrR,EACCA,EAAS,SAAa,UAEzBv0B,KAAKtB,OAAS,IAEduK,EAAOsrB,EAAS,kBAChBv0B,KAAK4lC,MAAQ,CACF,SAATrR,EACCA,EAAS,SAAa,SACvB,GAEFv0B,KAAKtB,OAAS,GAGD,OAAXmxF,GAGJ7vF,KAAKwwF,WAAWxwF,KAAK+4D,UAAWz2D,EAAMutF,EAC1C,EAEED,EAAGntE,UAAU+tE,WAAa,SAAqBj8D,EAAQjyB,EAAMutF,GAG3D,GADA5mF,EAAgC,iBAAlBsrB,EAAO71B,QACjB61B,EAAO71B,QAAU,EAGnB,OAFAsB,KAAK4lC,MAAQ,CAAE,GACf5lC,KAAKtB,OAAS,EACPsB,KAGTA,KAAKtB,OAAS+E,KAAKm4B,KAAKrH,EAAO71B,OAAS,GACxCsB,KAAK4lC,MAAQ,IAAIxnC,MAAM4B,KAAKtB,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAC/BuB,KAAK4lC,MAAMnnC,GAAK,EAGlB,IAAIygB,EAAG2Q,EACHg8D,EAAM,EACV,GAAe,OAAXgE,EACF,IAAKpxF,EAAI81B,EAAO71B,OAAS,EAAGwgB,EAAI,EAAGzgB,GAAK,EAAGA,GAAK,EAE9CuB,KAAK4lC,MAAM1mB,KADX2Q,EAAI0E,EAAO91B,GAAM81B,EAAO91B,EAAI,IAAM,EAAM81B,EAAO91B,EAAI,IAAM,KAClCotF,EAAO,SAC9B7rF,KAAK4lC,MAAM1mB,EAAI,GAAM2Q,IAAO,GAAKg8D,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP3sE,UAGC,GAAe,OAAX2wE,EACT,IAAKpxF,EAAI,EAAGygB,EAAI,EAAGzgB,EAAI81B,EAAO71B,OAAQD,GAAK,EAEzCuB,KAAK4lC,MAAM1mB,KADX2Q,EAAI0E,EAAO91B,GAAM81B,EAAO91B,EAAI,IAAM,EAAM81B,EAAO91B,EAAI,IAAM,KAClCotF,EAAO,SAC9B7rF,KAAK4lC,MAAM1mB,EAAI,GAAM2Q,IAAO,GAAKg8D,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP3sE,KAIN,OAAOlf,KAAK2wF,OAChB,EAwBEf,EAAGntE,UAAUguE,UAAY,SAAoBl8D,EAAQjtB,EAAOuoF,GAE1D7vF,KAAKtB,OAAS+E,KAAKm4B,MAAMrH,EAAO71B,OAAS4I,GAAS,GAClDtH,KAAK4lC,MAAQ,IAAIxnC,MAAM4B,KAAKtB,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAC/BuB,KAAK4lC,MAAMnnC,GAAK,EAIlB,IAGIoxB,EAHAg8D,EAAM,EACN3sE,EAAI,EAGR,GAAe,OAAX2wE,EACF,IAAKpxF,EAAI81B,EAAO71B,OAAS,EAAGD,GAAK6I,EAAO7I,GAAK,EAC3CoxB,EAAIwhC,EAAa98B,EAAQjtB,EAAO7I,IAAMotF,EACtC7rF,KAAK4lC,MAAM1mB,IAAU,SAAJ2Q,EACbg8D,GAAO,IACTA,GAAO,GAEP7rF,KAAK4lC,MADL1mB,GAAK,IACY2Q,IAAM,IAEvBg8D,GAAO,OAKX,IAAKptF,GADa81B,EAAO71B,OAAS4I,GACX,GAAM,EAAIA,EAAQ,EAAIA,EAAO7I,EAAI81B,EAAO71B,OAAQD,GAAK,EAC1EoxB,EAAIwhC,EAAa98B,EAAQjtB,EAAO7I,IAAMotF,EACtC7rF,KAAK4lC,MAAM1mB,IAAU,SAAJ2Q,EACbg8D,GAAO,IACTA,GAAO,GAEP7rF,KAAK4lC,MADL1mB,GAAK,IACY2Q,IAAM,IAEvBg8D,GAAO,EAKb7rF,KAAK2wF,OACT,EA0BEf,EAAGntE,UAAUiuE,WAAa,SAAqBn8D,EAAQjyB,EAAMgF,GAE3DtH,KAAK4lC,MAAQ,CAAE,GACf5lC,KAAKtB,OAAS,EAGd,IAAK,IAAIkyF,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWvuF,EAClEsuF,IAEFA,IACAC,EAAWA,EAAUvuF,EAAQ,EAO7B,IALA,IAAIwuF,EAAQv8D,EAAO71B,OAAS4I,EACxB8jC,EAAM0lD,EAAQF,EACdnuF,EAAMgB,KAAKupB,IAAI8jE,EAAOA,EAAQ1lD,GAAO9jC,EAErC4tB,EAAO,EACFz2B,EAAI6I,EAAO7I,EAAIgE,EAAKhE,GAAKmyF,EAChC17D,EAAOm7D,EAAU97D,EAAQ91B,EAAGA,EAAImyF,EAAStuF,GAEzCtC,KAAK+wF,MAAMF,GACP7wF,KAAK4lC,MAAM,GAAK1Q,EAAO,SACzBl1B,KAAK4lC,MAAM,IAAM1Q,EAEjBl1B,KAAKgxF,OAAO97D,GAIhB,GAAY,IAARkW,EAAW,CACb,IAAI0V,EAAM,EAGV,IAFA5rB,EAAOm7D,EAAU97D,EAAQ91B,EAAG81B,EAAO71B,OAAQ4D,GAEtC7D,EAAI,EAAGA,EAAI2sC,EAAK3sC,IACnBqiD,GAAOx+C,EAGTtC,KAAK+wF,MAAMjwC,GACP9gD,KAAK4lC,MAAM,GAAK1Q,EAAO,SACzBl1B,KAAK4lC,MAAM,IAAM1Q,EAEjBl1B,KAAKgxF,OAAO97D,EAEf,CAEDl1B,KAAK2wF,OACT,EAEEf,EAAGntE,UAAU7L,KAAO,SAAeq6E,GACjCA,EAAKrrD,MAAQ,IAAIxnC,MAAM4B,KAAKtB,QAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAC/BwyF,EAAKrrD,MAAMnnC,GAAKuB,KAAK4lC,MAAMnnC,GAE7BwyF,EAAKvyF,OAASsB,KAAKtB,OACnBuyF,EAAKlB,SAAW/vF,KAAK+vF,SACrBkB,EAAKjB,IAAMhwF,KAAKgwF,GACpB,EAEEJ,EAAGntE,UAAU9L,MAAQ,WACnB,IAAIsC,EAAI,IAAI22E,EAAG,MAEf,OADA5vF,KAAK4W,KAAKqC,GACHA,CACX,EAEE22E,EAAGntE,UAAUyuE,QAAU,SAAkBvuC,GACvC,KAAO3iD,KAAKtB,OAASikD,GACnB3iD,KAAK4lC,MAAM5lC,KAAKtB,UAAY,EAE9B,OAAOsB,IACX,EAGE4vF,EAAGntE,UAAUkuE,MAAQ,WACnB,KAAO3wF,KAAKtB,OAAS,GAAqC,IAAhCsB,KAAK4lC,MAAM5lC,KAAKtB,OAAS,IACjDsB,KAAKtB,SAEP,OAAOsB,KAAKmxF,WAChB,EAEEvB,EAAGntE,UAAU0uE,UAAY,WAKvB,OAHoB,IAAhBnxF,KAAKtB,QAAkC,IAAlBsB,KAAK4lC,MAAM,KAClC5lC,KAAK+vF,SAAW,GAEX/vF,IACX,EAEE4vF,EAAGntE,UAAUgkC,QAAU,WACrB,OAAQzmD,KAAKgwF,IAAM,UAAY,SAAWhwF,KAAK8F,SAAS,IAAM,GAClE,EAgCE,IAAIsrB,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEggE,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAYzkE,EAAMnE,EAAKjO,GAC9BA,EAAIs1E,SAAWrnE,EAAIqnE,SAAWljE,EAAKkjE,SACnC,IAAIlpF,EAAOgmB,EAAKnuB,OAASgqB,EAAIhqB,OAAU,EACvC+b,EAAI/b,OAASmI,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI2E,EAAoB,EAAhBqhB,EAAK+Y,MAAM,GACf7mC,EAAmB,EAAf2pB,EAAIkd,MAAM,GACd3sB,EAAIzN,EAAIzM,EAGRopB,EAASlP,EAAI,SAAa,EAC9BwB,EAAImrB,MAAM,GAFG,SAAJ3sB,EAIT,IAAK,IAAIzK,EAAI,EAAGA,EAAI3H,EAAK2H,IAAK,CAM5B,IAHA,IAAI+iF,EAASppE,IAAU,GACnBqpE,EAAgB,SAARrpE,EACRspE,EAAOhuF,KAAKupB,IAAIxe,EAAGka,EAAIhqB,OAAS,GAC3BwgB,EAAIzb,KAAKijD,IAAI,EAAGl4C,EAAIqe,EAAKnuB,OAAS,GAAIwgB,GAAKuyE,EAAMvyE,IAKxDqyE,IADAt4E,GAFAzN,EAAoB,EAAhBqhB,EAAK+Y,MADAp3B,EAAI0Q,EAAK,KAElBngB,EAAmB,EAAf2pB,EAAIkd,MAAM1mB,IACFsyE,GACG,SAAa,EAC5BA,EAAY,SAAJv4E,EAEVwB,EAAImrB,MAAMp3B,GAAa,EAARgjF,EACfrpE,EAAiB,EAATopE,CACT,CAOD,OANc,IAAVppE,EACF1N,EAAImrB,MAAMp3B,GAAa,EAAR2Z,EAEf1N,EAAI/b,SAGC+b,EAAIk2E,OACZ,CA1lBDf,EAAGntE,UAAU3c,SAAW,SAAmBxD,EAAM4sB,GAI/C,IAAIzU,EACJ,GAHAyU,EAAoB,EAAVA,GAAe,EAGZ,MAJb5sB,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCmY,EAAM,GAGN,IAFA,IAAIoxE,EAAM,EACN1jE,EAAQ,EACH1pB,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAAK,CACpC,IAAIoxB,EAAI7vB,KAAK4lC,MAAMnnC,GACfy2B,GAA+B,UAArBrF,GAAKg8D,EAAO1jE,IAAmBriB,SAAS,IAGpD2U,EADY,IADd0N,EAAS0H,IAAO,GAAKg8D,EAAQ,WACVptF,IAAMuB,KAAKtB,OAAS,EAC/B0yB,EAAM,EAAI8D,EAAKx2B,QAAUw2B,EAAOza,EAEhCya,EAAOza,GAEfoxE,GAAO,IACI,KACTA,GAAO,GACPptF,IAEH,CAID,IAHc,IAAV0pB,IACF1N,EAAM0N,EAAMriB,SAAS,IAAM2U,GAEtBA,EAAI/b,OAASwwB,GAAY,GAC9BzU,EAAM,IAAMA,EAKd,OAHsB,IAAlBza,KAAK+vF,WACPt1E,EAAM,IAAMA,GAEPA,CACR,CAED,GAAInY,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAIovF,EAAYN,EAAW9uF,GAEvBqvF,EAAYN,EAAW/uF,GAC3BmY,EAAM,GACN,IAAI9O,EAAI3L,KAAK2W,QAEb,IADAhL,EAAEokF,SAAW,GACLpkF,EAAEtG,UAAU,CAClB,IAAI4T,EAAItN,EAAEimF,KAAKD,GAAW7rF,SAASxD,GAMjCmY,GALF9O,EAAIA,EAAEkmF,MAAMF,IAELtsF,SAGC4T,EAAIwB,EAFJ2W,EAAMsgE,EAAYz4E,EAAEva,QAAUua,EAAIwB,CAI3C,CAID,IAHIza,KAAKqF,WACPoV,EAAM,IAAMA,GAEPA,EAAI/b,OAASwwB,GAAY,GAC9BzU,EAAM,IAAMA,EAKd,OAHsB,IAAlBza,KAAK+vF,WACPt1E,EAAM,IAAMA,GAEPA,CACR,CAEDxR,GAAO,EAAO,kCAClB,EAEE2mF,EAAGntE,UAAUnd,SAAW,WACtB,IAAI0hD,EAAMhnD,KAAK4lC,MAAM,GASrB,OARoB,IAAhB5lC,KAAKtB,OACPsoD,GAAuB,SAAhBhnD,KAAK4lC,MAAM,GACO,IAAhB5lC,KAAKtB,QAAkC,IAAlBsB,KAAK4lC,MAAM,GAEzCohB,GAAO,iBAAoC,SAAhBhnD,KAAK4lC,MAAM,GAC7B5lC,KAAKtB,OAAS,GACvBuK,GAAO,EAAO,8CAEU,IAAlBjJ,KAAK+vF,UAAmB/oC,EAAMA,CAC1C,EAEE4oC,EAAGntE,UAAUk8B,OAAS,WACpB,OAAO3+C,KAAK8F,SAAS,GACzB,EAEE8pF,EAAGntE,UAAU01C,SAAW,SAAmB03B,EAAQnxF,GAEjD,OADAuK,OAAyB,IAAXi4C,GACPlhD,KAAK8xF,YAAY5wC,EAAQ2uC,EAAQnxF,EAC5C,EAEEkxF,EAAGntE,UAAUs2C,QAAU,SAAkB82B,EAAQnxF,GAC/C,OAAOsB,KAAK8xF,YAAY1zF,MAAOyxF,EAAQnxF,EAC3C,EAEEkxF,EAAGntE,UAAUqvE,YAAc,SAAsBpP,EAAWmN,EAAQnxF,GAClE,IAAIuI,EAAajH,KAAKiH,aAClB8qF,EAAYrzF,GAAU+E,KAAKijD,IAAI,EAAGz/C,GACtCgC,EAAOhC,GAAc8qF,EAAW,yCAChC9oF,EAAO8oF,EAAY,EAAG,+BAEtB/xF,KAAK2wF,QACL,IAGI5xF,EAAGN,EAHHipD,EAA0B,OAAXmoC,EACfj5D,EAAM,IAAI8rD,EAAUqP,GAGpB/yE,EAAIhf,KAAK2W,QACb,GAAK+wC,EAYE,CACL,IAAKjpD,EAAI,GAAIugB,EAAE3Z,SAAU5G,IACvBM,EAAIigB,EAAEgzE,MAAM,KACZhzE,EAAEizE,OAAO,GAETr7D,EAAIn4B,GAAKM,EAGX,KAAON,EAAIszF,EAAWtzF,IACpBm4B,EAAIn4B,GAAK,CAEZ,KAvBkB,CAEjB,IAAKA,EAAI,EAAGA,EAAIszF,EAAY9qF,EAAYxI,IACtCm4B,EAAIn4B,GAAK,EAGX,IAAKA,EAAI,GAAIugB,EAAE3Z,SAAU5G,IACvBM,EAAIigB,EAAEgzE,MAAM,KACZhzE,EAAEizE,OAAO,GAETr7D,EAAIm7D,EAAYtzF,EAAI,GAAKM,CAEjC,CAaI,OAAO63B,CACX,EAGIg5D,EAAGntE,UAAUyvE,WADXzuF,KAAK0uF,MACmB,SAAqBtiE,GAC7C,OAAO,GAAKpsB,KAAK0uF,MAAMtiE,EAC7B,EAE8B,SAAqBA,GAC7C,IAAI1xB,EAAI0xB,EACJ5W,EAAI,EAiBR,OAhBI9a,GAAK,OACP8a,GAAK,GACL9a,KAAO,IAELA,GAAK,KACP8a,GAAK,EACL9a,KAAO,GAELA,GAAK,IACP8a,GAAK,EACL9a,KAAO,GAELA,GAAK,IACP8a,GAAK,EACL9a,KAAO,GAEF8a,EAAI9a,CACjB,EAGEyxF,EAAGntE,UAAU2vE,UAAY,SAAoBviE,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI1xB,EAAI0xB,EACJ5W,EAAI,EAoBR,OAnBqB,IAAZ,KAAJ9a,KACH8a,GAAK,GACL9a,KAAO,IAEU,IAAV,IAAJA,KACH8a,GAAK,EACL9a,KAAO,GAES,IAAT,GAAJA,KACH8a,GAAK,EACL9a,KAAO,GAES,IAAT,EAAJA,KACH8a,GAAK,EACL9a,KAAO,GAES,IAAT,EAAJA,IACH8a,IAEKA,CACX,EAGE22E,EAAGntE,UAAUynD,UAAY,WACvB,IACI3pE,EAAKP,KAAKkyF,WADNlyF,KAAK4lC,MAAM5lC,KAAKtB,OAAS,IAEjC,OAA2B,IAAnBsB,KAAKtB,OAAS,GAAU6B,CACpC,EAgBEqvF,EAAGntE,UAAU4vE,SAAW,WACtB,GAAIryF,KAAKqF,SAAU,OAAO,EAG1B,IADA,IAAI4T,EAAI,EACCxa,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAAK,CACpC,IAAIM,EAAIiB,KAAKoyF,UAAUpyF,KAAK4lC,MAAMnnC,IAElC,GADAwa,GAAKla,EACK,KAANA,EAAU,KACf,CACD,OAAOka,CACX,EAEE22E,EAAGntE,UAAUxb,WAAa,WACxB,OAAOxD,KAAKm4B,KAAK57B,KAAKkqE,YAAc,EACxC,EAEE0lB,EAAGntE,UAAU6vE,OAAS,SAAiBC,GACrC,OAAsB,IAAlBvyF,KAAK+vF,SACA/vF,KAAKmvC,MAAMqjD,MAAMD,GAAOE,MAAM,GAEhCzyF,KAAK2W,OAChB,EAEEi5E,EAAGntE,UAAUiwE,SAAW,SAAmBH,GACzC,OAAIvyF,KAAK2yF,MAAMJ,EAAQ,GACdvyF,KAAK4yF,KAAKL,GAAOE,MAAM,GAAGI,OAE5B7yF,KAAK2W,OAChB,EAEEi5E,EAAGntE,UAAUqwE,MAAQ,WACnB,OAAyB,IAAlB9yF,KAAK+vF,QAChB,EAGEH,EAAGntE,UAAUy3B,IAAM,WACjB,OAAOl6C,KAAK2W,QAAQk8E,MACxB,EAEEjD,EAAGntE,UAAUowE,KAAO,WAKlB,OAJK7yF,KAAKqF,WACRrF,KAAK+vF,UAAY,GAGZ/vF,IACX,EAGE4vF,EAAGntE,UAAUswE,KAAO,SAAerqE,GACjC,KAAO1oB,KAAKtB,OAASgqB,EAAIhqB,QACvBsB,KAAK4lC,MAAM5lC,KAAKtB,UAAY,EAG9B,IAAK,IAAID,EAAI,EAAGA,EAAIiqB,EAAIhqB,OAAQD,IAC9BuB,KAAK4lC,MAAMnnC,GAAKuB,KAAK4lC,MAAMnnC,GAAKiqB,EAAIkd,MAAMnnC,GAG5C,OAAOuB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUuwE,IAAM,SAActqE,GAE/B,OADAzf,EAA0C,IAAlCjJ,KAAK+vF,SAAWrnE,EAAIqnE,WACrB/vF,KAAK+yF,KAAKrqE,EACrB,EAGEknE,EAAGntE,UAAUwwE,GAAK,SAAavqE,GAC7B,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQq8E,IAAItqE,GAC/CA,EAAI/R,QAAQq8E,IAAIhzF,KAC3B,EAEE4vF,EAAGntE,UAAUywE,IAAM,SAAcxqE,GAC/B,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQo8E,KAAKrqE,GAChDA,EAAI/R,QAAQo8E,KAAK/yF,KAC5B,EAGE4vF,EAAGntE,UAAU0wE,MAAQ,SAAgBzqE,GAEnC,IAAI3pB,EAEFA,EADEiB,KAAKtB,OAASgqB,EAAIhqB,OAChBgqB,EAEA1oB,KAGN,IAAK,IAAIvB,EAAI,EAAGA,EAAIM,EAAEL,OAAQD,IAC5BuB,KAAK4lC,MAAMnnC,GAAKuB,KAAK4lC,MAAMnnC,GAAKiqB,EAAIkd,MAAMnnC,GAK5C,OAFAuB,KAAKtB,OAASK,EAAEL,OAETsB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAU2wE,KAAO,SAAe1qE,GAEjC,OADAzf,EAA0C,IAAlCjJ,KAAK+vF,SAAWrnE,EAAIqnE,WACrB/vF,KAAKmzF,MAAMzqE,EACtB,EAGEknE,EAAGntE,UAAU4wE,IAAM,SAAc3qE,GAC/B,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQy8E,KAAK1qE,GAChDA,EAAI/R,QAAQy8E,KAAKpzF,KAC5B,EAEE4vF,EAAGntE,UAAU6wE,KAAO,SAAe5qE,GACjC,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQw8E,MAAMzqE,GACjDA,EAAI/R,QAAQw8E,MAAMnzF,KAC7B,EAGE4vF,EAAGntE,UAAU8wE,MAAQ,SAAgB7qE,GAEnC,IAAIld,EACAzM,EACAiB,KAAKtB,OAASgqB,EAAIhqB,QACpB8M,EAAIxL,KACJjB,EAAI2pB,IAEJld,EAAIkd,EACJ3pB,EAAIiB,MAGN,IAAK,IAAIvB,EAAI,EAAGA,EAAIM,EAAEL,OAAQD,IAC5BuB,KAAK4lC,MAAMnnC,GAAK+M,EAAEo6B,MAAMnnC,GAAKM,EAAE6mC,MAAMnnC,GAGvC,GAAIuB,OAASwL,EACX,KAAO/M,EAAI+M,EAAE9M,OAAQD,IACnBuB,KAAK4lC,MAAMnnC,GAAK+M,EAAEo6B,MAAMnnC,GAM5B,OAFAuB,KAAKtB,OAAS8M,EAAE9M,OAETsB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAU+wE,KAAO,SAAe9qE,GAEjC,OADAzf,EAA0C,IAAlCjJ,KAAK+vF,SAAWrnE,EAAIqnE,WACrB/vF,KAAKuzF,MAAM7qE,EACtB,EAGEknE,EAAGntE,UAAUgxE,IAAM,SAAc/qE,GAC/B,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQ68E,KAAK9qE,GAChDA,EAAI/R,QAAQ68E,KAAKxzF,KAC5B,EAEE4vF,EAAGntE,UAAUixE,KAAO,SAAehrE,GACjC,OAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQ48E,MAAM7qE,GACjDA,EAAI/R,QAAQ48E,MAAMvzF,KAC7B,EAGE4vF,EAAGntE,UAAU+vE,MAAQ,SAAgBD,GACnCtpF,EAAwB,iBAAVspF,GAAsBA,GAAS,GAE7C,IAAIoB,EAAsC,EAAxBlwF,KAAKm4B,KAAK22D,EAAQ,IAChCzqD,EAAWyqD,EAAQ,GAGvBvyF,KAAKkxF,QAAQyC,GAET7rD,EAAW,GACb6rD,IAIF,IAAK,IAAIl1F,EAAI,EAAGA,EAAIk1F,EAAal1F,IAC/BuB,KAAK4lC,MAAMnnC,GAAsB,UAAhBuB,KAAK4lC,MAAMnnC,GAS9B,OALIqpC,EAAW,IACb9nC,KAAK4lC,MAAMnnC,IAAMuB,KAAK4lC,MAAMnnC,GAAM,UAAc,GAAKqpC,GAIhD9nC,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUmwE,KAAO,SAAeL,GACjC,OAAOvyF,KAAK2W,QAAQ67E,MAAMD,EAC9B,EAGE3C,EAAGntE,UAAUmxE,KAAO,SAAeh0B,EAAKhuD,GACtC3I,EAAsB,iBAAR22D,GAAoBA,GAAO,GAEzC,IAAIisB,EAAOjsB,EAAM,GAAM,EACnBi0B,EAAOj0B,EAAM,GAUjB,OARA5/D,KAAKkxF,QAAQrF,EAAM,GAGjB7rF,KAAK4lC,MAAMimD,GADTj6E,EACgB5R,KAAK4lC,MAAMimD,GAAQ,GAAKgI,EAExB7zF,KAAK4lC,MAAMimD,KAAS,GAAKgI,GAGtC7zF,KAAK2wF,OAChB,EAGEf,EAAGntE,UAAUqxE,KAAO,SAAeprE,GACjC,IAAIzP,EAkBAzN,EAAGzM,EAfP,GAAsB,IAAlBiB,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,SAI7B,OAHA/vF,KAAK+vF,SAAW,EAChB92E,EAAIjZ,KAAK+zF,KAAKrrE,GACd1oB,KAAK+vF,UAAY,EACV/vF,KAAKmxF,YAGP,GAAsB,IAAlBnxF,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,SAIpC,OAHArnE,EAAIqnE,SAAW,EACf92E,EAAIjZ,KAAK+zF,KAAKrrE,GACdA,EAAIqnE,SAAW,EACR92E,EAAEk4E,YAKPnxF,KAAKtB,OAASgqB,EAAIhqB,QACpB8M,EAAIxL,KACJjB,EAAI2pB,IAEJld,EAAIkd,EACJ3pB,EAAIiB,MAIN,IADA,IAAImoB,EAAQ,EACH1pB,EAAI,EAAGA,EAAIM,EAAEL,OAAQD,IAE5BuB,KAAK4lC,MAAMnnC,GAAS,UADpBwa,GAAkB,EAAbzN,EAAEo6B,MAAMnnC,KAAwB,EAAbM,EAAE6mC,MAAMnnC,IAAU0pB,GAE1CA,EAAQlP,IAAM,GAEhB,KAAiB,IAAVkP,GAAe1pB,EAAI+M,EAAE9M,OAAQD,IAElCuB,KAAK4lC,MAAMnnC,GAAS,UADpBwa,GAAkB,EAAbzN,EAAEo6B,MAAMnnC,IAAU0pB,GAEvBA,EAAQlP,IAAM,GAIhB,GADAjZ,KAAKtB,OAAS8M,EAAE9M,OACF,IAAVypB,EACFnoB,KAAK4lC,MAAM5lC,KAAKtB,QAAUypB,EAC1BnoB,KAAKtB,cAEA,GAAI8M,IAAMxL,KACf,KAAOvB,EAAI+M,EAAE9M,OAAQD,IACnBuB,KAAK4lC,MAAMnnC,GAAK+M,EAAEo6B,MAAMnnC,GAI5B,OAAOuB,IACX,EAGE4vF,EAAGntE,UAAU6E,IAAM,SAAcoB,GAC/B,IAAIkO,EACJ,OAAqB,IAAjBlO,EAAIqnE,UAAoC,IAAlB/vF,KAAK+vF,UAC7BrnE,EAAIqnE,SAAW,EACfn5D,EAAM52B,KAAKirD,IAAIviC,GACfA,EAAIqnE,UAAY,EACTn5D,GACmB,IAAjBlO,EAAIqnE,UAAoC,IAAlB/vF,KAAK+vF,UACpC/vF,KAAK+vF,SAAW,EAChBn5D,EAAMlO,EAAIuiC,IAAIjrD,MACdA,KAAK+vF,SAAW,EACTn5D,GAGL52B,KAAKtB,OAASgqB,EAAIhqB,OAAesB,KAAK2W,QAAQm9E,KAAKprE,GAEhDA,EAAI/R,QAAQm9E,KAAK9zF,KAC5B,EAGE4vF,EAAGntE,UAAUsxE,KAAO,SAAerrE,GAEjC,GAAqB,IAAjBA,EAAIqnE,SAAgB,CACtBrnE,EAAIqnE,SAAW,EACf,IAAI92E,EAAIjZ,KAAK8zF,KAAKprE,GAElB,OADAA,EAAIqnE,SAAW,EACR92E,EAAEk4E,WAGf,CAAW,GAAsB,IAAlBnxF,KAAK+vF,SAId,OAHA/vF,KAAK+vF,SAAW,EAChB/vF,KAAK8zF,KAAKprE,GACV1oB,KAAK+vF,SAAW,EACT/vF,KAAKmxF,YAId,IAWI3lF,EAAGzM,EAXHuxF,EAAMtwF,KAAKswF,IAAI5nE,GAGnB,GAAY,IAAR4nE,EAIF,OAHAtwF,KAAK+vF,SAAW,EAChB/vF,KAAKtB,OAAS,EACdsB,KAAK4lC,MAAM,GAAK,EACT5lC,KAKLswF,EAAM,GACR9kF,EAAIxL,KACJjB,EAAI2pB,IAEJld,EAAIkd,EACJ3pB,EAAIiB,MAIN,IADA,IAAImoB,EAAQ,EACH1pB,EAAI,EAAGA,EAAIM,EAAEL,OAAQD,IAE5B0pB,GADAlP,GAAkB,EAAbzN,EAAEo6B,MAAMnnC,KAAwB,EAAbM,EAAE6mC,MAAMnnC,IAAU0pB,IAC7B,GACbnoB,KAAK4lC,MAAMnnC,GAAS,SAAJwa,EAElB,KAAiB,IAAVkP,GAAe1pB,EAAI+M,EAAE9M,OAAQD,IAElC0pB,GADAlP,GAAkB,EAAbzN,EAAEo6B,MAAMnnC,IAAU0pB,IACV,GACbnoB,KAAK4lC,MAAMnnC,GAAS,SAAJwa,EAIlB,GAAc,IAAVkP,GAAe1pB,EAAI+M,EAAE9M,QAAU8M,IAAMxL,KACvC,KAAOvB,EAAI+M,EAAE9M,OAAQD,IACnBuB,KAAK4lC,MAAMnnC,GAAK+M,EAAEo6B,MAAMnnC,GAU5B,OANAuB,KAAKtB,OAAS+E,KAAKijD,IAAI1mD,KAAKtB,OAAQD,GAEhC+M,IAAMxL,OACRA,KAAK+vF,SAAW,GAGX/vF,KAAK2wF,OAChB,EAGEf,EAAGntE,UAAUwoC,IAAM,SAAcviC,GAC/B,OAAO1oB,KAAK2W,QAAQo9E,KAAKrrE,EAC7B,EA8CE,IAAIsrE,EAAc,SAAsBnnE,EAAMnE,EAAKjO,GACjD,IAIIna,EACAyC,EACAxC,EANAiL,EAAIqhB,EAAK+Y,MACT7mC,EAAI2pB,EAAIkd,MACRjrB,EAAIF,EAAImrB,MACRj6B,EAAI,EAIJsoF,EAAY,EAAPzoF,EAAE,GACPqb,EAAW,KAALotE,EACN5tE,EAAM4tE,IAAO,GACbx/C,EAAY,EAAPjpC,EAAE,GACPsb,EAAW,KAAL2tB,EACNnuB,EAAMmuB,IAAO,GACbC,EAAY,EAAPlpC,EAAE,GACPub,EAAW,KAAL2tB,EACNnuB,EAAMmuB,IAAO,GACbw/C,EAAY,EAAP1oF,EAAE,GACPwb,EAAW,KAALktE,EACN1tE,EAAM0tE,IAAO,GACbC,EAAY,EAAP3oF,EAAE,GACPyb,EAAW,KAALktE,EACN1tE,EAAM0tE,IAAO,GACbC,EAAY,EAAP5oF,EAAE,GACP0b,EAAW,KAALktE,EACN1tE,EAAM0tE,IAAO,GACbC,EAAY,EAAP7oF,EAAE,GACP2b,EAAW,KAALktE,EACN1tE,EAAM0tE,IAAO,GACbC,EAAY,EAAP9oF,EAAE,GACP4b,EAAW,KAALktE,EACN1tE,EAAM0tE,IAAO,GACbC,EAAY,EAAP/oF,EAAE,GACPgpF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlpF,EAAE,GACPmpF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb1zE,EAAY,EAAPjiB,EAAE,GACP81F,EAAW,KAAL7zE,EACN8zE,EAAM9zE,IAAO,GACbC,EAAY,EAAPliB,EAAE,GACP2mB,EAAW,KAALzE,EACNmE,EAAMnE,IAAO,GACbC,EAAY,EAAPniB,EAAE,GACP4mB,EAAW,KAALzE,EACNmE,EAAMnE,IAAO,GACbC,EAAY,EAAPpiB,EAAE,GACPg2F,EAAW,KAAL5zE,EACN6zE,EAAM7zE,IAAO,GACbC,EAAY,EAAPriB,EAAE,GACP6mB,EAAW,KAALxE,EACNkE,GAAMlE,IAAO,GACbC,GAAY,EAAPtiB,EAAE,GACP8mB,GAAW,KAALxE,GACNkE,GAAMlE,KAAO,GACbC,GAAY,EAAPviB,EAAE,GACP+mB,GAAW,KAALxE,GACNkE,GAAMlE,KAAO,GACbC,GAAY,EAAPxiB,EAAE,GACPgnB,GAAW,KAALxE,GACNkE,GAAMlE,KAAO,GACbC,GAAY,EAAPziB,EAAE,GACPk2F,GAAW,KAALzzE,GACN0zE,GAAM1zE,KAAO,GACbC,GAAY,EAAP1iB,EAAE,GACPo2F,GAAW,KAAL1zE,GACN2zE,GAAM3zE,KAAO,GAEjBhH,EAAIs1E,SAAWljE,EAAKkjE,SAAWrnE,EAAIqnE,SACnCt1E,EAAI/b,OAAS,GAMb,IAAI22F,IAAQ1pF,GAJZrL,EAAKmD,KAAK6xF,KAAKzuE,EAAKguE,IAIE,KAAa,MAFnC9xF,GADAA,EAAMU,KAAK6xF,KAAKzuE,EAAKiuE,IACRrxF,KAAK6xF,KAAKjvE,EAAKwuE,GAAQ,KAEU,IAAO,EACrDlpF,IAFApL,EAAKkD,KAAK6xF,KAAKjvE,EAAKyuE,KAEP/xF,IAAQ,IAAO,IAAMsyF,KAAO,IAAO,EAChDA,IAAM,SAEN/0F,EAAKmD,KAAK6xF,KAAKxuE,EAAK+tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKxuE,EAAKguE,IACRrxF,KAAK6xF,KAAKhvE,EAAKuuE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAKhvE,EAAKwuE,GAKpB,IAAIS,IAAQ5pF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKnB,GAAQ,GAIZ,KAAa,MAFnC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKzB,GAAQ,GACvB3hB,KAAK6xF,KAAKjvE,EAAKX,GAAQ,KAEU,IAAO,EACrD/Z,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKjB,GAAQ,IAErBriB,IAAQ,IAAO,IAAMwyF,KAAO,IAAO,EAChDA,IAAM,SAENj1F,EAAKmD,KAAK6xF,KAAKvuE,EAAK8tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKvuE,EAAK+tE,IACRrxF,KAAK6xF,KAAK/uE,EAAKsuE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK/uE,EAAKuuE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKpB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAK1B,GAAQ,GACvB3hB,KAAK6xF,KAAKhvE,EAAKZ,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKlB,GAAQ,EAKlC,IAAIowE,IAAQ7pF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKlB,GAAQ,GAIZ,KAAa,MAFnC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKxB,GAAQ,GACvB5hB,KAAK6xF,KAAKjvE,EAAKV,GAAQ,KAEU,IAAO,EACrDha,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKhB,GAAQ,IAErBtiB,IAAQ,IAAO,IAAMyyF,KAAO,IAAO,EAChDA,IAAM,SAENl1F,EAAKmD,KAAK6xF,KAAKtuE,EAAK6tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKtuE,EAAK8tE,IACRrxF,KAAK6xF,KAAK9uE,EAAKquE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK9uE,EAAKsuE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKrB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAK3B,GAAQ,GACvB3hB,KAAK6xF,KAAK/uE,EAAKb,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKnB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKnB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKzB,GAAQ,GACvB5hB,KAAK6xF,KAAKhvE,EAAKX,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKjB,GAAQ,EAKlC,IAAIowE,IAAQ9pF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKkuE,GAAQ,GAIZ,KAAa,MAFnChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKmuE,GAAQ,GACvBvxF,KAAK6xF,KAAKjvE,EAAK0uE,GAAQ,KAEU,IAAO,EACrDppF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAK2uE,GAAQ,IAErBjyF,IAAQ,IAAO,IAAM0yF,KAAO,IAAO,EAChDA,IAAM,SAENn1F,EAAKmD,KAAK6xF,KAAKruE,EAAK4tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKruE,EAAK6tE,IACRrxF,KAAK6xF,KAAK7uE,EAAKouE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK7uE,EAAKquE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKtB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAK5B,GAAQ,GACvB3hB,KAAK6xF,KAAK9uE,EAAKd,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKpB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKpB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAK1B,GAAQ,GACvB5hB,KAAK6xF,KAAK/uE,EAAKZ,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKlB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKiuE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKkuE,GAAQ,GACvBvxF,KAAK6xF,KAAKhvE,EAAKyuE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAK0uE,GAAQ,EAKlC,IAAIU,IAAQ/pF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKjB,GAAQ,GAIZ,KAAa,MAFnC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKvB,IAAQ,GACvB7hB,KAAK6xF,KAAKjvE,EAAKT,GAAQ,KAEU,IAAO,EACrDja,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKf,IAAQ,IAErBviB,IAAQ,IAAO,IAAM2yF,KAAO,IAAO,EAChDA,IAAM,SAENp1F,EAAKmD,KAAK6xF,KAAKpuE,EAAK2tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKpuE,EAAK4tE,IACRrxF,KAAK6xF,KAAK5uE,EAAKmuE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK5uE,EAAKouE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKvB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAK7B,GAAQ,GACvB3hB,KAAK6xF,KAAK7uE,EAAKf,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKrB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKrB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAK3B,GAAQ,GACvB5hB,KAAK6xF,KAAK9uE,EAAKb,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKnB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKguE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKiuE,GAAQ,GACvBvxF,KAAK6xF,KAAK/uE,EAAKwuE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKyuE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKlB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKxB,IAAQ,GACvB7hB,KAAK6xF,KAAKhvE,EAAKV,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKhB,IAAQ,EAKlC,IAAIqwE,IAAQhqF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKhB,IAAQ,GAIZ,KAAa,MAFnC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKtB,IAAQ,GACvB9hB,KAAK6xF,KAAKjvE,EAAKR,IAAQ,KAEU,IAAO,EACrDla,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKd,IAAQ,IAErBxiB,IAAQ,IAAO,IAAM4yF,KAAO,IAAO,EAChDA,IAAM,SAENr1F,EAAKmD,KAAK6xF,KAAKnuE,EAAK0tE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKnuE,EAAK2tE,IACRrxF,KAAK6xF,KAAK3uE,EAAKkuE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK3uE,EAAKmuE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKxB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK9B,GAAQ,GACvB3hB,KAAK6xF,KAAK5uE,EAAKhB,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKtB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKtB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAK5B,GAAQ,GACvB5hB,KAAK6xF,KAAK7uE,EAAKd,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKpB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAK+tE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKguE,GAAQ,GACvBvxF,KAAK6xF,KAAK9uE,EAAKuuE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKwuE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKnB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKzB,IAAQ,GACvB7hB,KAAK6xF,KAAK/uE,EAAKX,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKjB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKjB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKvB,IAAQ,GACvB9hB,KAAK6xF,KAAKhvE,EAAKT,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKf,IAAQ,EAKlC,IAAIqwE,IAAQjqF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKf,IAAQ,GAIZ,KAAa,MAFnC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKrB,IAAQ,GACvB/hB,KAAK6xF,KAAKjvE,EAAKP,IAAQ,KAEU,IAAO,EACrDna,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKb,IAAQ,IAErBziB,IAAQ,IAAO,IAAM6yF,KAAO,IAAO,EAChDA,IAAM,SAENt1F,EAAKmD,KAAK6xF,KAAKluE,EAAKytE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKluE,EAAK0tE,IACRrxF,KAAK6xF,KAAK1uE,EAAKiuE,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAK1uE,EAAKkuE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKzB,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK/B,GAAQ,GACvB3hB,KAAK6xF,KAAK3uE,EAAKjB,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKvB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKvB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK7B,GAAQ,GACvB5hB,KAAK6xF,KAAK5uE,EAAKf,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKrB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAK8tE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAK+tE,GAAQ,GACvBvxF,KAAK6xF,KAAK7uE,EAAKsuE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKuuE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKpB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAK1B,IAAQ,GACvB7hB,KAAK6xF,KAAK9uE,EAAKZ,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKlB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKlB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKxB,IAAQ,GACvB9hB,KAAK6xF,KAAK/uE,EAAKV,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKhB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKhB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKtB,IAAQ,GACvB/hB,KAAK6xF,KAAKhvE,EAAKR,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKd,IAAQ,EAKlC,IAAIqwE,IAAQlqF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKd,IAAQ,GAIZ,KAAa,MAFnChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKpB,IAAQ,GACvBhiB,KAAK6xF,KAAKjvE,EAAKN,IAAQ,KAEU,IAAO,EACrDpa,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAKZ,IAAQ,IAErB1iB,IAAQ,IAAO,IAAM8yF,KAAO,IAAO,EAChDA,IAAM,SAENv1F,EAAKmD,KAAK6xF,KAAKd,EAAKK,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKd,EAAKM,IACRrxF,KAAK6xF,KAAKb,EAAKI,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAKb,EAAKK,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAK1B,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAKhC,GAAQ,GACvB3hB,KAAK6xF,KAAK1uE,EAAKlB,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKxB,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKxB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK9B,GAAQ,GACvB5hB,KAAK6xF,KAAK3uE,EAAKhB,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKtB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAK6tE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK8tE,GAAQ,GACvBvxF,KAAK6xF,KAAK5uE,EAAKquE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKsuE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKrB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAK3B,IAAQ,GACvB7hB,KAAK6xF,KAAK7uE,EAAKb,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKnB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKnB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKzB,IAAQ,GACvB9hB,KAAK6xF,KAAK9uE,EAAKX,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKjB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKjB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKvB,IAAQ,GACvB/hB,KAAK6xF,KAAK/uE,EAAKT,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKf,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKf,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKrB,IAAQ,GACvBhiB,KAAK6xF,KAAKhvE,EAAKP,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAKb,IAAQ,EAKlC,IAAIqwE,IAAQnqF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKouE,IAAQ,GAIZ,KAAa,MAFnClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKquE,IAAQ,GACvBzxF,KAAK6xF,KAAKjvE,EAAK4uE,IAAQ,KAEU,IAAO,EACrDtpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAK6uE,IAAQ,IAErBnyF,IAAQ,IAAO,IAAM+yF,KAAO,IAAO,EAChDA,IAAM,SAENx1F,EAAKmD,KAAK6xF,KAAKX,EAAKE,GAEpB9xF,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKG,IACRrxF,KAAK6xF,KAAKV,EAAKC,GAAQ,EACpCt0F,EAAKkD,KAAK6xF,KAAKV,EAAKE,GACpBx0F,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAK9uE,GAAQ,EAElC3iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKpvE,GAAQ,GACvB3hB,KAAK6xF,KAAKb,EAAK/uE,GAAQ,EACpCnlB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKrvE,GAAQ,EAClC9kB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAKzB,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK/B,GAAQ,GACvB5hB,KAAK6xF,KAAK1uE,EAAKjB,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKvB,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAK4tE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK6tE,GAAQ,GACvBvxF,KAAK6xF,KAAK3uE,EAAKouE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKquE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKtB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK5B,IAAQ,GACvB7hB,KAAK6xF,KAAK5uE,EAAKd,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKpB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKpB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAK1B,IAAQ,GACvB9hB,KAAK6xF,KAAK7uE,EAAKZ,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKlB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKlB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKxB,IAAQ,GACvB/hB,KAAK6xF,KAAK9uE,EAAKV,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKhB,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKhB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKtB,IAAQ,GACvBhiB,KAAK6xF,KAAK/uE,EAAKR,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAKd,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKmuE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKouE,IAAQ,GACvBzxF,KAAK6xF,KAAKhvE,EAAK2uE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAK4uE,IAAQ,EAKlC,IAAIa,IAAQpqF,GAJZrL,EAAMA,EAAKmD,KAAK6xF,KAAKzuE,EAAKsuE,IAAQ,GAIZ,KAAa,MAFnCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKzuE,EAAKuuE,IAAQ,GACvB3xF,KAAK6xF,KAAKjvE,EAAK8uE,IAAQ,KAEU,IAAO,EACrDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKjvE,EAAK+uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMgzF,KAAO,IAAO,EAChDA,IAAM,SAENz1F,EAAKmD,KAAK6xF,KAAKX,EAAKjvE,GAEpB3iB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKvvE,IACR3hB,KAAK6xF,KAAKV,EAAKlvE,GAAQ,EACpCnlB,EAAKkD,KAAK6xF,KAAKV,EAAKxvE,GACpB9kB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAK7uE,GAAQ,EAElC5iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKnvE,GAAQ,GACvB5hB,KAAK6xF,KAAKb,EAAK9uE,GAAQ,EACpCplB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKpvE,GAAQ,EAClC/kB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAK2tE,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK4tE,GAAQ,GACvBvxF,KAAK6xF,KAAK1uE,EAAKmuE,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKouE,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKvB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK7B,IAAQ,GACvB7hB,KAAK6xF,KAAK3uE,EAAKf,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKrB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKrB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK3B,IAAQ,GACvB9hB,KAAK6xF,KAAK5uE,EAAKb,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKnB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKnB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAKzB,IAAQ,GACvB/hB,KAAK6xF,KAAK7uE,EAAKX,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKjB,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKjB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKvB,IAAQ,GACvBhiB,KAAK6xF,KAAK9uE,EAAKT,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAKf,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKkuE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKmuE,IAAQ,GACvBzxF,KAAK6xF,KAAK/uE,EAAK0uE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAK2uE,IAAQ,EAKlC,IAAIc,IAASrqF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKxuE,EAAKquE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKxuE,EAAKsuE,IAAQ,GACvB3xF,KAAK6xF,KAAKhvE,EAAK6uE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKhvE,EAAK8uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMizF,KAAQ,IAAO,EACjDA,IAAO,SAEP11F,EAAKmD,KAAK6xF,KAAKX,EAAKhvE,GAEpB5iB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKtvE,IACR5hB,KAAK6xF,KAAKV,EAAKjvE,GAAQ,EACpCplB,EAAKkD,KAAK6xF,KAAKV,EAAKvvE,GACpB/kB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAKO,GAAQ,EAElChyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKQ,GAAQ,GACvBvxF,KAAK6xF,KAAKb,EAAKM,GAAQ,EACpCx0F,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKO,GAAQ,EAClC10F,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAKxB,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK9B,IAAQ,GACvB7hB,KAAK6xF,KAAK1uE,EAAKhB,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKtB,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKtB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK5B,IAAQ,GACvB9hB,KAAK6xF,KAAK3uE,EAAKd,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKpB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKpB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAK1B,IAAQ,GACvB/hB,KAAK6xF,KAAK5uE,EAAKZ,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKlB,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKlB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAKxB,IAAQ,GACvBhiB,KAAK6xF,KAAK7uE,EAAKV,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKhB,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKiuE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKkuE,IAAQ,GACvBzxF,KAAK6xF,KAAK9uE,EAAKyuE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAK0uE,IAAQ,EAKlC,IAAIe,IAAStqF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKvuE,EAAKouE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKvuE,EAAKquE,IAAQ,GACvB3xF,KAAK6xF,KAAK/uE,EAAK4uE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK/uE,EAAK6uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMkzF,KAAQ,IAAO,EACjDA,IAAO,SAEP31F,EAAKmD,KAAK6xF,KAAKX,EAAKI,GAEpBhyF,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKK,IACRvxF,KAAK6xF,KAAKV,EAAKG,GAAQ,EACpCx0F,EAAKkD,KAAK6xF,KAAKV,EAAKI,GACpB10F,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAK5uE,GAAQ,EAElC7iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKlvE,IAAQ,GACvB7hB,KAAK6xF,KAAKb,EAAK7uE,GAAQ,EACpCrlB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKnvE,IAAQ,EAClChlB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAKvB,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK7B,IAAQ,GACvB9hB,KAAK6xF,KAAK1uE,EAAKf,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKrB,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKrB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK3B,IAAQ,GACvB/hB,KAAK6xF,KAAK3uE,EAAKb,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKnB,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKnB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAKzB,IAAQ,GACvBhiB,KAAK6xF,KAAK5uE,EAAKX,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKjB,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKguE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAKiuE,IAAQ,GACvBzxF,KAAK6xF,KAAK7uE,EAAKwuE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAKyuE,IAAQ,EAKlC,IAAIgB,IAASvqF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKtuE,EAAKmuE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKtuE,EAAKouE,IAAQ,GACvB3xF,KAAK6xF,KAAK9uE,EAAK2uE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK9uE,EAAK4uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMmzF,KAAQ,IAAO,EACjDA,IAAO,SAEP51F,EAAKmD,KAAK6xF,KAAKX,EAAK/uE,GAEpB7iB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKrvE,KACR7hB,KAAK6xF,KAAKV,EAAKhvE,GAAQ,EACpCrlB,EAAKkD,KAAK6xF,KAAKV,EAAKtvE,IACpBhlB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAK3uE,IAAQ,EAElC9iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKjvE,IAAQ,GACvB9hB,KAAK6xF,KAAKb,EAAK5uE,IAAQ,EACpCtlB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKlvE,IAAQ,EAClCjlB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAKtB,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK5B,IAAQ,GACvB/hB,KAAK6xF,KAAK1uE,EAAKd,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKpB,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKpB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK1B,IAAQ,GACvBhiB,KAAK6xF,KAAK3uE,EAAKZ,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKlB,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAK+tE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAKguE,IAAQ,GACvBzxF,KAAK6xF,KAAK5uE,EAAKuuE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAKwuE,IAAQ,EAKlC,IAAIiB,IAASxqF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKruE,EAAKkuE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKruE,EAAKmuE,IAAQ,GACvB3xF,KAAK6xF,KAAK7uE,EAAK0uE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK7uE,EAAK2uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMozF,KAAQ,IAAO,EACjDA,IAAO,SAEP71F,EAAKmD,KAAK6xF,KAAKX,EAAK9uE,IAEpB9iB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKpvE,KACR9hB,KAAK6xF,KAAKV,EAAK/uE,IAAQ,EACpCtlB,EAAKkD,KAAK6xF,KAAKV,EAAKrvE,IACpBjlB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAK1uE,IAAQ,EAElC/iB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKhvE,IAAQ,GACvB/hB,KAAK6xF,KAAKb,EAAK3uE,IAAQ,EACpCvlB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKjvE,IAAQ,EAClCllB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAKrB,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK3B,IAAQ,GACvBhiB,KAAK6xF,KAAK1uE,EAAKb,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKnB,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAK8tE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAK+tE,IAAQ,GACvBzxF,KAAK6xF,KAAK3uE,EAAKsuE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKuuE,IAAQ,EAKlC,IAAIkB,IAASzqF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKpuE,EAAKiuE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKpuE,EAAKkuE,IAAQ,GACvB3xF,KAAK6xF,KAAK5uE,EAAKyuE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK5uE,EAAK0uE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMqzF,KAAQ,IAAO,EACjDA,IAAO,SAEP91F,EAAKmD,KAAK6xF,KAAKX,EAAK7uE,IAEpB/iB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKnvE,KACR/hB,KAAK6xF,KAAKV,EAAK9uE,IAAQ,EACpCvlB,EAAKkD,KAAK6xF,KAAKV,EAAKpvE,IACpBllB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAKzuE,IAAQ,EAElChjB,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAK/uE,IAAQ,GACvBhiB,KAAK6xF,KAAKb,EAAK1uE,IAAQ,EACpCxlB,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKhvE,IAAQ,EAClCnlB,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAK6tE,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAK8tE,IAAQ,GACvBzxF,KAAK6xF,KAAK1uE,EAAKquE,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKsuE,IAAQ,EAKlC,IAAImB,IAAS1qF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKnuE,EAAKguE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKnuE,EAAKiuE,IAAQ,GACvB3xF,KAAK6xF,KAAK3uE,EAAKwuE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK3uE,EAAKyuE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMszF,KAAQ,IAAO,EACjDA,IAAO,SAEP/1F,EAAKmD,KAAK6xF,KAAKX,EAAK5uE,IAEpBhjB,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKlvE,KACRhiB,KAAK6xF,KAAKV,EAAK7uE,IAAQ,EACpCxlB,EAAKkD,KAAK6xF,KAAKV,EAAKnvE,IACpBnlB,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAKS,IAAQ,EAElClyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKU,IAAQ,GACvBzxF,KAAK6xF,KAAKb,EAAKQ,IAAQ,EACpC10F,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKS,IAAQ,EAKlC,IAAIoB,IAAS3qF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKluE,EAAK+tE,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKluE,EAAKguE,IAAQ,GACvB3xF,KAAK6xF,KAAK1uE,EAAKuuE,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAK1uE,EAAKwuE,IAAQ,IAErBryF,IAAQ,IAAO,IAAMuzF,KAAQ,IAAO,EACjDA,IAAO,SAEPh2F,EAAKmD,KAAK6xF,KAAKX,EAAKM,IAEpBlyF,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKO,KACRzxF,KAAK6xF,KAAKV,EAAKK,IAAQ,EACpC10F,EAAKkD,KAAK6xF,KAAKV,EAAKM,IAKpB,IAAIqB,IAAS5qF,GAJbrL,EAAMA,EAAKmD,KAAK6xF,KAAKd,EAAKW,IAAQ,GAIX,KAAa,MAFpCpyF,GADAA,EAAOA,EAAMU,KAAK6xF,KAAKd,EAAKY,IAAQ,GACvB3xF,KAAK6xF,KAAKb,EAAKU,IAAQ,KAEW,IAAO,EACtDxpF,IAFApL,EAAMA,EAAKkD,KAAK6xF,KAAKb,EAAKW,IAAQ,IAErBryF,IAAQ,IAAO,IAAMwzF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAAS7qF,GAJbrL,EAAKmD,KAAK6xF,KAAKX,EAAKQ,KAIG,KAAa,MAFpCpyF,GADAA,EAAMU,KAAK6xF,KAAKX,EAAKS,KACR3xF,KAAK6xF,KAAKV,EAAKO,IAAQ,KAEW,IAAO,EA0BtD,OAzBAxpF,IAFApL,EAAKkD,KAAK6xF,KAAKV,EAAKQ,MAEPryF,IAAQ,IAAO,IAAMyzF,KAAQ,IAAO,EACjDA,IAAO,SACP77E,EAAE,GAAK06E,GACP16E,EAAE,GAAK46E,GACP56E,EAAE,GAAK66E,GACP76E,EAAE,GAAK86E,GACP96E,EAAE,GAAK+6E,GACP/6E,EAAE,GAAKg7E,GACPh7E,EAAE,GAAKi7E,GACPj7E,EAAE,GAAKk7E,GACPl7E,EAAE,GAAKm7E,GACPn7E,EAAE,GAAKo7E,GACPp7E,EAAE,IAAMq7E,GACRr7E,EAAE,IAAMs7E,GACRt7E,EAAE,IAAMu7E,GACRv7E,EAAE,IAAMw7E,GACRx7E,EAAE,IAAMy7E,GACRz7E,EAAE,IAAM07E,GACR17E,EAAE,IAAM27E,GACR37E,EAAE,IAAM47E,GACR57E,EAAE,IAAM67E,GACE,IAAN7qF,IACFgP,EAAE,IAAMhP,EACR8O,EAAI/b,UAEC+b,CACX,EAgDE,SAASg8E,EAAY5pE,EAAMnE,EAAKjO,GAE9B,OADW,IAAIi8E,GACHC,KAAK9pE,EAAMnE,EAAKjO,EAC7B,CAqBD,SAASi8E,EAAM38E,EAAGK,GAChBpa,KAAK+Z,EAAIA,EACT/Z,KAAKoa,EAAIA,CACV,CAxEI3W,KAAK6xF,OACRtB,EAAc1C,GAiDhB1B,EAAGntE,UAAUm0E,MAAQ,SAAgBluE,EAAKjO,GACxC,IAAImc,EACA/vB,EAAM7G,KAAKtB,OAASgqB,EAAIhqB,OAW5B,OATEk4B,EADkB,KAAhB52B,KAAKtB,QAAgC,KAAfgqB,EAAIhqB,OACtBs1F,EAAYh0F,KAAM0oB,EAAKjO,GACpB5T,EAAM,GACTyqF,EAAWtxF,KAAM0oB,EAAKjO,GACnB5T,EAAM,KArDnB,SAAmBgmB,EAAMnE,EAAKjO,GAC5BA,EAAIs1E,SAAWrnE,EAAIqnE,SAAWljE,EAAKkjE,SACnCt1E,EAAI/b,OAASmuB,EAAKnuB,OAASgqB,EAAIhqB,OAI/B,IAFA,IAAIypB,EAAQ,EACR0uE,EAAU,EACLroF,EAAI,EAAGA,EAAIiM,EAAI/b,OAAS,EAAG8P,IAAK,CAGvC,IAAI+iF,EAASsF,EACbA,EAAU,EAGV,IAFA,IAAIrF,EAAgB,SAARrpE,EACRspE,EAAOhuF,KAAKupB,IAAIxe,EAAGka,EAAIhqB,OAAS,GAC3BwgB,EAAIzb,KAAKijD,IAAI,EAAGl4C,EAAIqe,EAAKnuB,OAAS,GAAIwgB,GAAKuyE,EAAMvyE,IAAK,CAC7D,IAGIjG,GAFoB,EAAhB4T,EAAK+Y,MADLp3B,EAAI0Q,KAEW,EAAfwJ,EAAIkd,MAAM1mB,IAGd5e,EAAS,SAAJ2Y,EAGTu4E,EAAa,UADblxF,EAAMA,EAAKkxF,EAAS,GAIpBqF,IAFAtF,GAHAA,EAAUA,GAAWt4E,EAAI,SAAa,GAAM,IAGxB3Y,IAAO,IAAO,KAEZ,GACtBixF,GAAU,QACX,CACD92E,EAAImrB,MAAMp3B,GAAKgjF,EACfrpE,EAAQopE,EACRA,EAASsF,CACV,CAOD,OANc,IAAV1uE,EACF1N,EAAImrB,MAAMp3B,GAAK2Z,EAEf1N,EAAI/b,SAGC+b,EAAIk2E,OACZ,CAeSmG,CAAS92F,KAAM0oB,EAAKjO,GAEpBg8E,EAAWz2F,KAAM0oB,EAAKjO,GAGvBmc,CACX,EAUE8/D,EAAKj0E,UAAUs0E,QAAU,SAAkBC,GAGzC,IAFA,IAAI74F,EAAI,IAAIC,MAAM44F,GACd/8E,EAAI21E,EAAGntE,UAAUyvE,WAAW8E,GAAK,EAC5Bv4F,EAAI,EAAGA,EAAIu4F,EAAGv4F,IACrBN,EAAEM,GAAKuB,KAAKi3F,OAAOx4F,EAAGwb,EAAG+8E,GAG3B,OAAO74F,CACX,EAGEu4F,EAAKj0E,UAAUw0E,OAAS,SAAiBl9E,EAAGE,EAAG+8E,GAC7C,GAAU,IAANj9E,GAAWA,IAAMi9E,EAAI,EAAG,OAAOj9E,EAGnC,IADA,IAAIm9E,EAAK,EACAz4F,EAAI,EAAGA,EAAIwb,EAAGxb,IACrBy4F,IAAW,EAAJn9E,IAAWE,EAAIxb,EAAI,EAC1Bsb,IAAM,EAGR,OAAOm9E,CACX,EAIER,EAAKj0E,UAAU00E,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAIv4F,EAAI,EAAGA,EAAIu4F,EAAGv4F,IACrB84F,EAAK94F,GAAK44F,EAAID,EAAI34F,IAClB+4F,EAAK/4F,GAAK64F,EAAIF,EAAI34F,GAExB,EAEEi4F,EAAKj0E,UAAUg1E,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtEp3F,KAAKm3F,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI5uF,EAAI,EAAGA,EAAI4uF,EAAG5uF,IAAM,EAM3B,IALA,IAAI6R,EAAI7R,GAAK,EAETsvF,EAAQj0F,KAAKk0F,IAAI,EAAIl0F,KAAK0wD,GAAKl6C,GAC/B29E,EAAQn0F,KAAKo0F,IAAI,EAAIp0F,KAAK0wD,GAAKl6C,GAE1B7a,EAAI,EAAGA,EAAI43F,EAAG53F,GAAK6a,EAI1B,IAHA,IAAI69E,EAASJ,EACTK,EAASH,EAEJ14E,EAAI,EAAGA,EAAI9W,EAAG8W,IAAK,CAC1B,IAAI+8D,EAAKsb,EAAKn4F,EAAI8f,GACd84E,EAAKR,EAAKp4F,EAAI8f,GAEd+4E,EAAKV,EAAKn4F,EAAI8f,EAAI9W,GAClB8vF,EAAKV,EAAKp4F,EAAI8f,EAAI9W,GAElB6mD,EAAK6oC,EAASG,EAAKF,EAASG,EAEhCA,EAAKJ,EAASI,EAAKH,EAASE,EAG5BV,EAAKn4F,EAAI8f,GAAK+8D,GAFdgc,EAAKhpC,GAGLuoC,EAAKp4F,EAAI8f,GAAK84E,EAAKE,EAEnBX,EAAKn4F,EAAI8f,EAAI9W,GAAK6zE,EAAKgc,EACvBT,EAAKp4F,EAAI8f,EAAI9W,GAAK4vF,EAAKE,EAGnBh5E,IAAMjF,IACRg1C,EAAKyoC,EAAQI,EAASF,EAAQG,EAE9BA,EAASL,EAAQK,EAASH,EAAQE,EAClCA,EAAS7oC,EAEZ,CAGT,EAEEynC,EAAKj0E,UAAU01E,YAAc,SAAsB9xF,EAAGgP,GACpD,IAAI2hF,EAAqB,EAAjBvzF,KAAKijD,IAAIrxC,EAAGhP,GAChB+xF,EAAU,EAAJpB,EACNv4F,EAAI,EACR,IAAKu4F,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/Bv4F,IAGF,OAAO,GAAKA,EAAI,EAAI25F,CACxB,EAEE1B,EAAKj0E,UAAU41E,UAAY,SAAoBhB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIv4F,EAAI,EAAGA,EAAIu4F,EAAI,EAAGv4F,IAAK,CAC9B,IAAIN,EAAIk5F,EAAI54F,GAEZ44F,EAAI54F,GAAK44F,EAAIL,EAAIv4F,EAAI,GACrB44F,EAAIL,EAAIv4F,EAAI,GAAKN,EAEjBA,EAAIm5F,EAAI74F,GAER64F,EAAI74F,IAAM64F,EAAIN,EAAIv4F,EAAI,GACtB64F,EAAIN,EAAIv4F,EAAI,IAAMN,CACnB,CACL,EAEEu4F,EAAKj0E,UAAU61E,aAAe,SAAuBC,EAAIvB,GAEvD,IADA,IAAI7uE,EAAQ,EACH1pB,EAAI,EAAGA,EAAIu4F,EAAI,EAAGv4F,IAAK,CAC9B,IAAIoxB,EAAoC,KAAhCpsB,KAAK4vD,MAAMklC,EAAG,EAAI95F,EAAI,GAAKu4F,GACjCvzF,KAAK4vD,MAAMklC,EAAG,EAAI95F,GAAKu4F,GACvB7uE,EAEFowE,EAAG95F,GAAS,SAAJoxB,EAGN1H,EADE0H,EAAI,SACE,EAEAA,EAAI,SAAY,CAE3B,CAED,OAAO0oE,CACX,EAEE7B,EAAKj0E,UAAU+1E,WAAa,SAAqBD,EAAI1xF,EAAKwwF,EAAKL,GAE7D,IADA,IAAI7uE,EAAQ,EACH1pB,EAAI,EAAGA,EAAIoI,EAAKpI,IAGvB44F,EAAI,EAAI54F,GAAa,MAFrB0pB,GAAyB,EAARowE,EAAG95F,IAGpB44F,EAAI,EAAI54F,EAAI,GAAa,MADI0pB,KAAkB,IACdA,KAAkB,GAIrD,IAAK1pB,EAAI,EAAIoI,EAAKpI,EAAIu4F,IAAKv4F,EACzB44F,EAAI54F,GAAK,EAGXwK,EAAiB,IAAVkf,GACPlf,EAA6B,KAAb,KAARkf,GACZ,EAEEuuE,EAAKj0E,UAAUg2E,KAAO,SAAezB,GAEnC,IADA,IAAI0B,EAAK,IAAIt6F,MAAM44F,GACVv4F,EAAI,EAAGA,EAAIu4F,EAAGv4F,IACrBi6F,EAAGj6F,GAAK,EAGV,OAAOi6F,CACX,EAEEhC,EAAKj0E,UAAUk0E,KAAO,SAAe58E,EAAGK,EAAGK,GACzC,IAAIu8E,EAAI,EAAIh3F,KAAKm4F,YAAYp+E,EAAErb,OAAQ0b,EAAE1b,QAErC04F,EAAMp3F,KAAK+2F,QAAQC,GAEnBv/C,EAAIz3C,KAAKy4F,KAAKzB,GAEdK,EAAM,IAAIj5F,MAAM44F,GAChB2B,EAAO,IAAIv6F,MAAM44F,GACjB4B,EAAO,IAAIx6F,MAAM44F,GAEjB6B,EAAO,IAAIz6F,MAAM44F,GACjB8B,EAAQ,IAAI16F,MAAM44F,GAClB+B,EAAQ,IAAI36F,MAAM44F,GAElBgC,EAAOv+E,EAAImrB,MACfozD,EAAKt6F,OAASs4F,EAEdh3F,KAAKw4F,WAAWz+E,EAAE6rB,MAAO7rB,EAAErb,OAAQ24F,EAAKL,GACxCh3F,KAAKw4F,WAAWp+E,EAAEwrB,MAAOxrB,EAAE1b,OAAQm6F,EAAM7B,GAEzCh3F,KAAKy3F,UAAUJ,EAAK5/C,EAAGkhD,EAAMC,EAAM5B,EAAGI,GACtCp3F,KAAKy3F,UAAUoB,EAAMphD,EAAGqhD,EAAOC,EAAO/B,EAAGI,GAEzC,IAAK,IAAI34F,EAAI,EAAGA,EAAIu4F,EAAGv4F,IAAK,CAC1B,IAAIwwD,EAAK0pC,EAAKl6F,GAAKq6F,EAAMr6F,GAAKm6F,EAAKn6F,GAAKs6F,EAAMt6F,GAC9Cm6F,EAAKn6F,GAAKk6F,EAAKl6F,GAAKs6F,EAAMt6F,GAAKm6F,EAAKn6F,GAAKq6F,EAAMr6F,GAC/Ck6F,EAAKl6F,GAAKwwD,CACX,CASD,OAPAjvD,KAAKq4F,UAAUM,EAAMC,EAAM5B,GAC3Bh3F,KAAKy3F,UAAUkB,EAAMC,EAAMI,EAAMvhD,EAAGu/C,EAAGI,GACvCp3F,KAAKq4F,UAAUW,EAAMvhD,EAAGu/C,GACxBh3F,KAAKs4F,aAAaU,EAAMhC,GAExBv8E,EAAIs1E,SAAWh2E,EAAEg2E,SAAW31E,EAAE21E,SAC9Bt1E,EAAI/b,OAASqb,EAAErb,OAAS0b,EAAE1b,OACnB+b,EAAIk2E,OACf,EAGEf,EAAGntE,UAAUwlC,IAAM,SAAcv/B,GAC/B,IAAIjO,EAAM,IAAIm1E,EAAG,MAEjB,OADAn1E,EAAImrB,MAAQ,IAAIxnC,MAAM4B,KAAKtB,OAASgqB,EAAIhqB,QACjCsB,KAAK42F,MAAMluE,EAAKjO,EAC3B,EAGEm1E,EAAGntE,UAAUw2E,KAAO,SAAevwE,GACjC,IAAIjO,EAAM,IAAIm1E,EAAG,MAEjB,OADAn1E,EAAImrB,MAAQ,IAAIxnC,MAAM4B,KAAKtB,OAASgqB,EAAIhqB,QACjC+3F,EAAWz2F,KAAM0oB,EAAKjO,EACjC,EAGEm1E,EAAGntE,UAAU6yE,KAAO,SAAe5sE,GACjC,OAAO1oB,KAAK2W,QAAQigF,MAAMluE,EAAK1oB,KACnC,EAEE4vF,EAAGntE,UAAUsuE,MAAQ,SAAgBroE,GACnCzf,EAAsB,iBAARyf,GACdzf,EAAOyf,EAAM,UAIb,IADA,IAAIP,EAAQ,EACH1pB,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAAK,CACpC,IAAIoxB,GAAqB,EAAhB7vB,KAAK4lC,MAAMnnC,IAAUiqB,EAC1BpoB,GAAU,SAAJuvB,IAA0B,SAAR1H,GAC5BA,IAAU,GACVA,GAAU0H,EAAI,SAAa,EAE3B1H,GAAS7nB,IAAO,GAChBN,KAAK4lC,MAAMnnC,GAAU,SAAL6B,CACjB,CAOD,OALc,IAAV6nB,IACFnoB,KAAK4lC,MAAMnnC,GAAK0pB,EAChBnoB,KAAKtB,UAGAsB,IACX,EAEE4vF,EAAGntE,UAAUy2E,KAAO,SAAexwE,GACjC,OAAO1oB,KAAK2W,QAAQo6E,MAAMroE,EAC9B,EAGEknE,EAAGntE,UAAU02E,IAAM,WACjB,OAAOn5F,KAAKioD,IAAIjoD,KACpB,EAGE4vF,EAAGntE,UAAU22E,KAAO,WAClB,OAAOp5F,KAAKs1F,KAAKt1F,KAAK2W,QAC1B,EAGEi5E,EAAGntE,UAAUq+B,IAAM,SAAcp4B,GAC/B,IAAImH,EAxxCN,SAAqBnH,GAGnB,IAFA,IAAImH,EAAI,IAAIzxB,MAAMsqB,EAAIwhD,aAEbtK,EAAM,EAAGA,EAAM/vC,EAAEnxB,OAAQkhE,IAAO,CACvC,IACIi0B,EAAOj0B,EAAM,GAEjB/vC,EAAE+vC,IAAQl3C,EAAIkd,MAHHg6B,EAAM,GAAM,GAGK,GAAKi0B,KAAWA,CAC7C,CAED,OAAOhkE,CACR,CA6wCSwpE,CAAW3wE,GACnB,GAAiB,IAAbmH,EAAEnxB,OAAc,OAAO,IAAIkxF,EAAG,GAIlC,IADA,IAAIh5D,EAAM52B,KACDvB,EAAI,EAAGA,EAAIoxB,EAAEnxB,QACP,IAATmxB,EAAEpxB,GADsBA,IAAKm4B,EAAMA,EAAIuiE,OAI7C,KAAM16F,EAAIoxB,EAAEnxB,OACV,IAAK,IAAIsgB,EAAI4X,EAAIuiE,MAAO16F,EAAIoxB,EAAEnxB,OAAQD,IAAKugB,EAAIA,EAAEm6E,MAClC,IAATtpE,EAAEpxB,KAENm4B,EAAMA,EAAIqxB,IAAIjpC,IAIlB,OAAO4X,CACX,EAGEg5D,EAAGntE,UAAU62E,OAAS,SAAiBrqE,GACrChmB,EAAuB,iBAATgmB,GAAqBA,GAAQ,GAC3C,IAGIxwB,EAHAwa,EAAIgW,EAAO,GACX7mB,GAAK6mB,EAAOhW,GAAK,GACjBsgF,EAAa,WAAe,GAAKtgF,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIkP,EAAQ,EAEZ,IAAK1pB,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAAK,CAChC,IAAI+6F,EAAWx5F,KAAK4lC,MAAMnnC,GAAK86F,EAE/Bv5F,KAAK4lC,MAAMnnC,IADe,EAAhBuB,KAAK4lC,MAAMnnC,IAAU+6F,GAAavgF,EACxBkP,EACpBA,EAAQqxE,IAAc,GAAKvgF,CAC5B,CAEGkP,IACFnoB,KAAK4lC,MAAMnnC,GAAK0pB,EAChBnoB,KAAKtB,SAER,CAED,GAAU,IAAN0J,EAAS,CACX,IAAK3J,EAAIuB,KAAKtB,OAAS,EAAGD,GAAK,EAAGA,IAChCuB,KAAK4lC,MAAMnnC,EAAI2J,GAAKpI,KAAK4lC,MAAMnnC,GAGjC,IAAKA,EAAI,EAAGA,EAAI2J,EAAG3J,IACjBuB,KAAK4lC,MAAMnnC,GAAK,EAGlBuB,KAAKtB,QAAU0J,CAChB,CAED,OAAOpI,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUg3E,MAAQ,SAAgBxqE,GAGnC,OADAhmB,EAAyB,IAAlBjJ,KAAK+vF,UACL/vF,KAAKs5F,OAAOrqE,EACvB,EAKE2gE,EAAGntE,UAAUwvE,OAAS,SAAiBhjE,EAAMyqE,EAAMC,GAEjD,IAAI3/E,EADJ/Q,EAAuB,iBAATgmB,GAAqBA,GAAQ,GAGzCjV,EADE0/E,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIzgF,EAAIgW,EAAO,GACX7mB,EAAI3E,KAAKupB,KAAKiC,EAAOhW,GAAK,GAAIjZ,KAAKtB,QACnCkmB,EAAO,SAAc,WAAc3L,GAAMA,EACzC2gF,EAAcD,EAMlB,GAJA3/E,GAAK5R,EACL4R,EAAIvW,KAAKijD,IAAI,EAAG1sC,GAGZ4/E,EAAa,CACf,IAAK,IAAIn7F,EAAI,EAAGA,EAAI2J,EAAG3J,IACrBm7F,EAAYh0D,MAAMnnC,GAAKuB,KAAK4lC,MAAMnnC,GAEpCm7F,EAAYl7F,OAAS0J,CACtB,CAED,GAAU,IAANA,QAEG,GAAIpI,KAAKtB,OAAS0J,EAEvB,IADApI,KAAKtB,QAAU0J,EACV3J,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAC3BuB,KAAK4lC,MAAMnnC,GAAKuB,KAAK4lC,MAAMnnC,EAAI2J,QAGjCpI,KAAK4lC,MAAM,GAAK,EAChB5lC,KAAKtB,OAAS,EAGhB,IAAIypB,EAAQ,EACZ,IAAK1pB,EAAIuB,KAAKtB,OAAS,EAAGD,GAAK,IAAgB,IAAV0pB,GAAe1pB,GAAKub,GAAIvb,IAAK,CAChE,IAAIy2B,EAAuB,EAAhBl1B,KAAK4lC,MAAMnnC,GACtBuB,KAAK4lC,MAAMnnC,GAAM0pB,GAAU,GAAKlP,EAAOic,IAASjc,EAChDkP,EAAQ+M,EAAOtQ,CAChB,CAYD,OATIg1E,GAAyB,IAAVzxE,IACjByxE,EAAYh0D,MAAMg0D,EAAYl7F,UAAYypB,GAGxB,IAAhBnoB,KAAKtB,SACPsB,KAAK4lC,MAAM,GAAK,EAChB5lC,KAAKtB,OAAS,GAGTsB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUo3E,MAAQ,SAAgB5qE,EAAMyqE,EAAMC,GAG/C,OADA1wF,EAAyB,IAAlBjJ,KAAK+vF,UACL/vF,KAAKiyF,OAAOhjE,EAAMyqE,EAAMC,EACnC,EAGE/J,EAAGntE,UAAUq3E,KAAO,SAAe7qE,GACjC,OAAOjvB,KAAK2W,QAAQ8iF,MAAMxqE,EAC9B,EAEE2gE,EAAGntE,UAAUs3E,MAAQ,SAAgB9qE,GACnC,OAAOjvB,KAAK2W,QAAQ2iF,OAAOrqE,EAC/B,EAGE2gE,EAAGntE,UAAUu3E,KAAO,SAAe/qE,GACjC,OAAOjvB,KAAK2W,QAAQkjF,MAAM5qE,EAC9B,EAEE2gE,EAAGntE,UAAUw3E,MAAQ,SAAgBhrE,GACnC,OAAOjvB,KAAK2W,QAAQs7E,OAAOhjE,EAC/B,EAGE2gE,EAAGntE,UAAUkwE,MAAQ,SAAgB/yB,GACnC32D,EAAsB,iBAAR22D,GAAoBA,GAAO,GACzC,IAAI3mD,EAAI2mD,EAAM,GACVx3D,GAAKw3D,EAAM3mD,GAAK,GAIpB,QAAIjZ,KAAKtB,QAAU0J,KAGXpI,KAAK4lC,MAAMx9B,GANX,GAAK6Q,GASjB,EAGE22E,EAAGntE,UAAUy3E,OAAS,SAAiBjrE,GACrChmB,EAAuB,iBAATgmB,GAAqBA,GAAQ,GAC3C,IAAIhW,EAAIgW,EAAO,GACX7mB,GAAK6mB,EAAOhW,GAAK,GAIrB,OAFAhQ,EAAyB,IAAlBjJ,KAAK+vF,SAAgB,2CAExB/vF,KAAKtB,QAAU0J,EACVpI,MAGC,IAANiZ,GACF7Q,IAEFpI,KAAKtB,OAAS+E,KAAKupB,IAAI5kB,EAAGpI,KAAKtB,QAErB,IAANua,IAEFjZ,KAAK4lC,MAAM5lC,KAAKtB,OAAS,IADd,SAAc,WAAcua,GAAMA,GAIxCjZ,KAAK2wF,QAChB,EAGEf,EAAGntE,UAAU03E,MAAQ,SAAgBlrE,GACnC,OAAOjvB,KAAK2W,QAAQujF,OAAOjrE,EAC/B,EAGE2gE,EAAGntE,UAAUgwE,MAAQ,SAAgB/pE,GAGnC,OAFAzf,EAAsB,iBAARyf,GACdzf,EAAOyf,EAAM,UACTA,EAAM,EAAU1oB,KAAKo6F,OAAO1xE,GAGV,IAAlB1oB,KAAK+vF,SACa,IAAhB/vF,KAAKtB,SAAiC,EAAhBsB,KAAK4lC,MAAM,IAAUld,GAC7C1oB,KAAK4lC,MAAM,GAAKld,GAAuB,EAAhB1oB,KAAK4lC,MAAM,IAClC5lC,KAAK+vF,SAAW,EACT/vF,OAGTA,KAAK+vF,SAAW,EAChB/vF,KAAKo6F,MAAM1xE,GACX1oB,KAAK+vF,SAAW,EACT/vF,MAIFA,KAAKgxF,OAAOtoE,EACvB,EAEEknE,EAAGntE,UAAUuuE,OAAS,SAAiBtoE,GACrC1oB,KAAK4lC,MAAM,IAAMld,EAGjB,IAAK,IAAIjqB,EAAI,EAAGA,EAAIuB,KAAKtB,QAAUsB,KAAK4lC,MAAMnnC,IAAM,SAAWA,IAC7DuB,KAAK4lC,MAAMnnC,IAAM,SACbA,IAAMuB,KAAKtB,OAAS,EACtBsB,KAAK4lC,MAAMnnC,EAAI,GAAK,EAEpBuB,KAAK4lC,MAAMnnC,EAAI,KAKnB,OAFAuB,KAAKtB,OAAS+E,KAAKijD,IAAI1mD,KAAKtB,OAAQD,EAAI,GAEjCuB,IACX,EAGE4vF,EAAGntE,UAAU23E,MAAQ,SAAgB1xE,GAGnC,GAFAzf,EAAsB,iBAARyf,GACdzf,EAAOyf,EAAM,UACTA,EAAM,EAAG,OAAO1oB,KAAKyyF,OAAO/pE,GAEhC,GAAsB,IAAlB1oB,KAAK+vF,SAIP,OAHA/vF,KAAK+vF,SAAW,EAChB/vF,KAAKyyF,MAAM/pE,GACX1oB,KAAK+vF,SAAW,EACT/vF,KAKT,GAFAA,KAAK4lC,MAAM,IAAMld,EAEG,IAAhB1oB,KAAKtB,QAAgBsB,KAAK4lC,MAAM,GAAK,EACvC5lC,KAAK4lC,MAAM,IAAM5lC,KAAK4lC,MAAM,GAC5B5lC,KAAK+vF,SAAW,OAGhB,IAAK,IAAItxF,EAAI,EAAGA,EAAIuB,KAAKtB,QAAUsB,KAAK4lC,MAAMnnC,GAAK,EAAGA,IACpDuB,KAAK4lC,MAAMnnC,IAAM,SACjBuB,KAAK4lC,MAAMnnC,EAAI,IAAM,EAIzB,OAAOuB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAU43E,KAAO,SAAe3xE,GACjC,OAAO1oB,KAAK2W,QAAQ87E,MAAM/pE,EAC9B,EAEEknE,EAAGntE,UAAU63E,KAAO,SAAe5xE,GACjC,OAAO1oB,KAAK2W,QAAQyjF,MAAM1xE,EAC9B,EAEEknE,EAAGntE,UAAU83E,KAAO,WAGlB,OAFAv6F,KAAK+vF,SAAW,EAET/vF,IACX,EAEE4vF,EAAGntE,UAAU0sB,IAAM,WACjB,OAAOnvC,KAAK2W,QAAQ4jF,MACxB,EAEE3K,EAAGntE,UAAU+3E,aAAe,SAAuB9xE,EAAKu/B,EAAKloD,GAC3D,IACItB,EAIAoxB,EAFJ7vB,KAAKkxF,QAHKxoE,EAAIhqB,OAASqB,GAMvB,IAAIooB,EAAQ,EACZ,IAAK1pB,EAAI,EAAGA,EAAIiqB,EAAIhqB,OAAQD,IAAK,CAC/BoxB,GAA6B,EAAxB7vB,KAAK4lC,MAAMnnC,EAAIsB,IAAcooB,EAClC,IAAI4I,GAAwB,EAAfrI,EAAIkd,MAAMnnC,IAAUwpD,EAEjC9/B,IADA0H,GAAa,SAARkB,IACS,KAAQA,EAAQ,SAAa,GAC3C/wB,KAAK4lC,MAAMnnC,EAAIsB,GAAa,SAAJ8vB,CACzB,CACD,KAAOpxB,EAAIuB,KAAKtB,OAASqB,EAAOtB,IAE9B0pB,GADA0H,GAA6B,EAAxB7vB,KAAK4lC,MAAMnnC,EAAIsB,IAAcooB,IACrB,GACbnoB,KAAK4lC,MAAMnnC,EAAIsB,GAAa,SAAJ8vB,EAG1B,GAAc,IAAV1H,EAAa,OAAOnoB,KAAK2wF,QAK7B,IAFA1nF,GAAkB,IAAXkf,GACPA,EAAQ,EACH1pB,EAAI,EAAGA,EAAIuB,KAAKtB,OAAQD,IAE3B0pB,GADA0H,IAAsB,EAAhB7vB,KAAK4lC,MAAMnnC,IAAU0pB,IACd,GACbnoB,KAAK4lC,MAAMnnC,GAAS,SAAJoxB,EAIlB,OAFA7vB,KAAK+vF,SAAW,EAET/vF,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUg4E,SAAW,SAAmB/xE,EAAKgyE,GAC9C,IAAI36F,EAEAyL,EAAIxL,KAAK2W,QACT5X,EAAI2pB,EAGJiyE,EAA8B,EAAxB57F,EAAE6mC,MAAM7mC,EAAEL,OAAS,GAGf,IADdqB,EAAQ,GADMC,KAAKkyF,WAAWyI,MAG5B57F,EAAIA,EAAEg7F,MAAMh6F,GACZyL,EAAE8tF,OAAOv5F,GACT46F,EAA8B,EAAxB57F,EAAE6mC,MAAM7mC,EAAEL,OAAS,IAI3B,IACIsgB,EADA3J,EAAI7J,EAAE9M,OAASK,EAAEL,OAGrB,GAAa,QAATg8F,EAAgB,EAClB17E,EAAI,IAAI4wE,EAAG,OACTlxF,OAAS2W,EAAI,EACf2J,EAAE4mB,MAAQ,IAAIxnC,MAAM4gB,EAAEtgB,QACtB,IAAK,IAAID,EAAI,EAAGA,EAAIugB,EAAEtgB,OAAQD,IAC5BugB,EAAE4mB,MAAMnnC,GAAK,CAEhB,CAED,IAAIu/B,EAAOxyB,EAAEmL,QAAQ6jF,aAAaz7F,EAAG,EAAGsW,GAClB,IAAlB2oB,EAAK+xD,WACPvkF,EAAIwyB,EACAhf,IACFA,EAAE4mB,MAAMvwB,GAAK,IAIjB,IAAK,IAAI6J,EAAI7J,EAAI,EAAG6J,GAAK,EAAGA,IAAK,CAC/B,IAAI07E,EAAmC,UAAL,EAAxBpvF,EAAEo6B,MAAM7mC,EAAEL,OAASwgB,KACE,EAA5B1T,EAAEo6B,MAAM7mC,EAAEL,OAASwgB,EAAI,IAO1B,IAHA07E,EAAKn3F,KAAKupB,IAAK4tE,EAAKD,EAAO,EAAG,UAE9BnvF,EAAEgvF,aAAaz7F,EAAG67F,EAAI17E,GACA,IAAf1T,EAAEukF,UACP6K,IACApvF,EAAEukF,SAAW,EACbvkF,EAAEgvF,aAAaz7F,EAAG,EAAGmgB,GAChB1T,EAAEnG,WACLmG,EAAEukF,UAAY,GAGd/wE,IACFA,EAAE4mB,MAAM1mB,GAAK07E,EAEhB,CAWD,OAVI57E,GACFA,EAAE2xE,QAEJnlF,EAAEmlF,QAGW,QAAT+J,GAA4B,IAAV36F,GACpByL,EAAEymF,OAAOlyF,GAGJ,CACL86F,IAAK77E,GAAK,KACVosB,IAAK5/B,EAEX,EAMEokF,EAAGntE,UAAUq4E,OAAS,SAAiBpyE,EAAKgyE,EAAMK,GAGhD,OAFA9xF,GAAQyf,EAAIrjB,UAERrF,KAAKqF,SACA,CACLw1F,IAAK,IAAIjL,EAAG,GACZxkD,IAAK,IAAIwkD,EAAG,IAKM,IAAlB5vF,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,UAC7Bn5D,EAAM52B,KAAKk6C,MAAM4gD,OAAOpyE,EAAKgyE,GAEhB,QAATA,IACFG,EAAMjkE,EAAIikE,IAAI3gD,OAGH,QAATwgD,IACFtvD,EAAMxU,EAAIwU,IAAI8O,MACV6gD,GAA6B,IAAjB3vD,EAAI2kD,UAClB3kD,EAAI0oD,KAAKprE,IAIN,CACLmyE,IAAKA,EACLzvD,IAAKA,IAIa,IAAlBprC,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,UAC7Bn5D,EAAM52B,KAAK86F,OAAOpyE,EAAIwxB,MAAOwgD,GAEhB,QAATA,IACFG,EAAMjkE,EAAIikE,IAAI3gD,OAGT,CACL2gD,IAAKA,EACLzvD,IAAKxU,EAAIwU,MAI0B,IAAlCprC,KAAK+vF,SAAWrnE,EAAIqnE,WACvBn5D,EAAM52B,KAAKk6C,MAAM4gD,OAAOpyE,EAAIwxB,MAAOwgD,GAEtB,QAATA,IACFtvD,EAAMxU,EAAIwU,IAAI8O,MACV6gD,GAA6B,IAAjB3vD,EAAI2kD,UAClB3kD,EAAI2oD,KAAKrrE,IAIN,CACLmyE,IAAKjkE,EAAIikE,IACTzvD,IAAKA,IAOL1iB,EAAIhqB,OAASsB,KAAKtB,QAAUsB,KAAKswF,IAAI5nE,GAAO,EACvC,CACLmyE,IAAK,IAAIjL,EAAG,GACZxkD,IAAKprC,MAKU,IAAf0oB,EAAIhqB,OACO,QAATg8F,EACK,CACLG,IAAK76F,KAAKg7F,KAAKtyE,EAAIkd,MAAM,IACzBwF,IAAK,MAII,QAATsvD,EACK,CACLG,IAAK,KACLzvD,IAAK,IAAIwkD,EAAG5vF,KAAK4xF,KAAKlpE,EAAIkd,MAAM,MAI7B,CACLi1D,IAAK76F,KAAKg7F,KAAKtyE,EAAIkd,MAAM,IACzBwF,IAAK,IAAIwkD,EAAG5vF,KAAK4xF,KAAKlpE,EAAIkd,MAAM,MAI7B5lC,KAAKy6F,SAAS/xE,EAAKgyE,GAlF1B,IAAIG,EAAKzvD,EAAKxU,CAmFlB,EAGEg5D,EAAGntE,UAAUo4E,IAAM,SAAcnyE,GAC/B,OAAO1oB,KAAK86F,OAAOpyE,EAAK,OAAO,GAAOmyE,GAC1C,EAGEjL,EAAGntE,UAAU2oB,IAAM,SAAc1iB,GAC/B,OAAO1oB,KAAK86F,OAAOpyE,EAAK,OAAO,GAAO0iB,GAC1C,EAEEwkD,EAAGntE,UAAUw4E,KAAO,SAAevyE,GACjC,OAAO1oB,KAAK86F,OAAOpyE,EAAK,OAAO,GAAM0iB,GACzC,EAGEwkD,EAAGntE,UAAUy4E,SAAW,SAAmBxyE,GACzC,IAAIyyE,EAAKn7F,KAAK86F,OAAOpyE,GAGrB,GAAIyyE,EAAG/vD,IAAI/lC,SAAU,OAAO81F,EAAGN,IAE/B,IAAIzvD,EAA0B,IAApB+vD,EAAGN,IAAI9K,SAAiBoL,EAAG/vD,IAAI2oD,KAAKrrE,GAAOyyE,EAAG/vD,IAEpDgwD,EAAO1yE,EAAIuxE,MAAM,GACjB/1E,EAAKwE,EAAIspE,MAAM,GACf1B,EAAMllD,EAAIklD,IAAI8K,GAGlB,OAAI9K,EAAM,GAAY,IAAPpsE,GAAoB,IAARosE,EAAkB6K,EAAGN,IAGrB,IAApBM,EAAGN,IAAI9K,SAAiBoL,EAAGN,IAAIT,MAAM,GAAKe,EAAGN,IAAIpI,MAAM,EAClE,EAEE7C,EAAGntE,UAAUmvE,KAAO,SAAelpE,GACjCzf,EAAOyf,GAAO,UAId,IAHA,IAAItpB,GAAK,GAAK,IAAMspB,EAEhBka,EAAM,EACDnkC,EAAIuB,KAAKtB,OAAS,EAAGD,GAAK,EAAGA,IACpCmkC,GAAOxjC,EAAIwjC,GAAuB,EAAhB5iC,KAAK4lC,MAAMnnC,KAAWiqB,EAG1C,OAAOka,CACX,EAGEgtD,EAAGntE,UAAUovE,MAAQ,SAAgBnpE,GACnCzf,EAAOyf,GAAO,UAGd,IADA,IAAIP,EAAQ,EACH1pB,EAAIuB,KAAKtB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACzC,IAAIoxB,GAAqB,EAAhB7vB,KAAK4lC,MAAMnnC,IAAkB,SAAR0pB,EAC9BnoB,KAAK4lC,MAAMnnC,GAAMoxB,EAAInH,EAAO,EAC5BP,EAAQ0H,EAAInH,CACb,CAED,OAAO1oB,KAAK2wF,OAChB,EAEEf,EAAGntE,UAAUu4E,KAAO,SAAetyE,GACjC,OAAO1oB,KAAK2W,QAAQk7E,MAAMnpE,EAC9B,EAEEknE,EAAGntE,UAAU44E,KAAO,SAAej8F,GACjC6J,EAAsB,IAAf7J,EAAE2wF,UACT9mF,GAAQ7J,EAAEiG,UAEV,IAAI0U,EAAI/Z,KACJoa,EAAIhb,EAAEuX,QAGRoD,EADiB,IAAfA,EAAEg2E,SACAh2E,EAAEkhF,KAAK77F,GAEP2a,EAAEpD,QAaR,IATA,IAAI2I,EAAI,IAAIswE,EAAG,GACXxvD,EAAI,IAAIwvD,EAAG,GAGX/qF,EAAI,IAAI+qF,EAAG,GACXn2E,EAAI,IAAIm2E,EAAG,GAEX/qE,EAAI,EAED9K,EAAEuhF,UAAYlhF,EAAEkhF,UACrBvhF,EAAEk4E,OAAO,GACT73E,EAAE63E,OAAO,KACPptE,EAMJ,IAHA,IAAI02E,EAAKnhF,EAAEzD,QACP6kF,EAAKzhF,EAAEpD,SAEHoD,EAAE1U,UAAU,CAClB,IAAK,IAAI5G,EAAI,EAAGg9F,EAAK,EAAyB,IAArB1hF,EAAE6rB,MAAM,GAAK61D,IAAah9F,EAAI,KAAMA,EAAGg9F,IAAO,GACvE,GAAIh9F,EAAI,EAEN,IADAsb,EAAEk4E,OAAOxzF,GACFA,KAAM,IACP6gB,EAAEo8E,SAAWt7D,EAAEs7D,WACjBp8E,EAAEw0E,KAAKyH,GACPn7D,EAAE2zD,KAAKyH,IAGTl8E,EAAE2yE,OAAO,GACT7xD,EAAE6xD,OAAO,GAIb,IAAK,IAAI/yE,EAAI,EAAGy8E,EAAK,EAAyB,IAArBvhF,EAAEwrB,MAAM,GAAK+1D,IAAaz8E,EAAI,KAAMA,EAAGy8E,IAAO,GACvE,GAAIz8E,EAAI,EAEN,IADA9E,EAAE63E,OAAO/yE,GACFA,KAAM,IACPra,EAAE62F,SAAWjiF,EAAEiiF,WACjB72F,EAAEivF,KAAKyH,GACP9hF,EAAEs6E,KAAKyH,IAGT32F,EAAEotF,OAAO,GACTx4E,EAAEw4E,OAAO,GAITl4E,EAAEu2E,IAAIl2E,IAAM,GACdL,EAAEg6E,KAAK35E,GACPkF,EAAEy0E,KAAKlvF,GACPu7B,EAAE2zD,KAAKt6E,KAEPW,EAAE25E,KAAKh6E,GACPlV,EAAEkvF,KAAKz0E,GACP7F,EAAEs6E,KAAK3zD,GAEV,CAED,MAAO,CACL50B,EAAG3G,EACH9F,EAAG0a,EACH2qB,IAAKhqB,EAAEk/E,OAAOz0E,GAEpB,EAKE+qE,EAAGntE,UAAUm5E,OAAS,SAAiBx8F,GACrC6J,EAAsB,IAAf7J,EAAE2wF,UACT9mF,GAAQ7J,EAAEiG,UAEV,IAAImG,EAAIxL,KACJjB,EAAIK,EAAEuX,QAGRnL,EADiB,IAAfA,EAAEukF,SACAvkF,EAAEyvF,KAAK77F,GAEPoM,EAAEmL,QAQR,IALA,IAuCIigB,EAvCA/a,EAAK,IAAI+zE,EAAG,GACZ9zE,EAAK,IAAI8zE,EAAG,GAEZj+C,EAAQ5yC,EAAE4X,QAEPnL,EAAEqwF,KAAK,GAAK,GAAK98F,EAAE88F,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIp9F,EAAI,EAAGg9F,EAAK,EAAyB,IAArBjwF,EAAEo6B,MAAM,GAAK61D,IAAah9F,EAAI,KAAMA,EAAGg9F,IAAO,GACvE,GAAIh9F,EAAI,EAEN,IADA+M,EAAEymF,OAAOxzF,GACFA,KAAM,GACPod,EAAG6/E,SACL7/E,EAAGi4E,KAAKniD,GAGV91B,EAAGo2E,OAAO,GAId,IAAK,IAAI/yE,EAAI,EAAGy8E,EAAK,EAAyB,IAArB58F,EAAE6mC,MAAM,GAAK+1D,IAAaz8E,EAAI,KAAMA,EAAGy8E,IAAO,GACvE,GAAIz8E,EAAI,EAEN,IADAngB,EAAEkzF,OAAO/yE,GACFA,KAAM,GACPpD,EAAG4/E,SACL5/E,EAAGg4E,KAAKniD,GAGV71B,EAAGm2E,OAAO,GAIVzmF,EAAE8kF,IAAIvxF,IAAM,GACdyM,EAAEuoF,KAAKh1F,GACP8c,EAAGk4E,KAAKj4E,KAER/c,EAAEg1F,KAAKvoF,GACPsQ,EAAGi4E,KAAKl4E,GAEX,CAaD,OATE+a,EADgB,IAAdprB,EAAEqwF,KAAK,GACHhgF,EAEAC,GAGA+/E,KAAK,GAAK,GAChBjlE,EAAIk9D,KAAK10F,GAGJw3B,CACX,EAEEg5D,EAAGntE,UAAU2hB,IAAM,SAAc1b,GAC/B,GAAI1oB,KAAKqF,SAAU,OAAOqjB,EAAIymB,MAC9B,GAAIzmB,EAAIrjB,SAAU,OAAOrF,KAAKmvC,MAE9B,IAAI3jC,EAAIxL,KAAK2W,QACT5X,EAAI2pB,EAAI/R,QACZnL,EAAEukF,SAAW,EACbhxF,EAAEgxF,SAAW,EAGb,IAAK,IAAIhwF,EAAQ,EAAGyL,EAAE8vF,UAAYv8F,EAAEu8F,SAAUv7F,IAC5CyL,EAAEymF,OAAO,GACTlzF,EAAEkzF,OAAO,GAGX,OAAG,CACD,KAAOzmF,EAAE8vF,UACP9vF,EAAEymF,OAAO,GAEX,KAAOlzF,EAAEu8F,UACPv8F,EAAEkzF,OAAO,GAGX,IAAIh5E,EAAIzN,EAAE8kF,IAAIvxF,GACd,GAAIka,EAAI,EAAG,CAET,IAAI9a,EAAIqN,EACRA,EAAIzM,EACJA,EAAIZ,CACZ,MAAa,GAAU,IAAN8a,GAAyB,IAAdla,EAAE88F,KAAK,GAC3B,MAGFrwF,EAAEuoF,KAAKh1F,EACR,CAED,OAAOA,EAAEu6F,OAAOv5F,EACpB,EAGE6vF,EAAGntE,UAAUq5E,KAAO,SAAepzE,GACjC,OAAO1oB,KAAKq7F,KAAK3yE,GAAKld,EAAEyvF,KAAKvyE,EACjC,EAEEknE,EAAGntE,UAAU64E,OAAS,WACpB,OAA+B,IAAP,EAAhBt7F,KAAK4lC,MAAM,GACvB,EAEEgqD,EAAGntE,UAAUi5E,MAAQ,WACnB,OAA+B,IAAP,EAAhB17F,KAAK4lC,MAAM,GACvB,EAGEgqD,EAAGntE,UAAUuvE,MAAQ,SAAgBtpE,GACnC,OAAO1oB,KAAK4lC,MAAM,GAAKld,CAC3B,EAGEknE,EAAGntE,UAAUs5E,MAAQ,SAAgBn8B,GACnC32D,EAAsB,iBAAR22D,GACd,IAAI3mD,EAAI2mD,EAAM,GACVx3D,GAAKw3D,EAAM3mD,GAAK,GAChB+F,EAAI,GAAK/F,EAGb,GAAIjZ,KAAKtB,QAAU0J,EAGjB,OAFApI,KAAKkxF,QAAQ9oF,EAAI,GACjBpI,KAAK4lC,MAAMx9B,IAAM4W,EACVhf,KAKT,IADA,IAAImoB,EAAQnJ,EACHvgB,EAAI2J,EAAa,IAAV+f,GAAe1pB,EAAIuB,KAAKtB,OAAQD,IAAK,CACnD,IAAIoxB,EAAoB,EAAhB7vB,KAAK4lC,MAAMnnC,GAEnB0pB,GADA0H,GAAK1H,KACS,GAEdnoB,KAAK4lC,MAAMnnC,GADXoxB,GAAK,QAEN,CAKD,OAJc,IAAV1H,IACFnoB,KAAK4lC,MAAMnnC,GAAK0pB,EAChBnoB,KAAKtB,UAEAsB,IACX,EAEE4vF,EAAGntE,UAAUpd,OAAS,WACpB,OAAuB,IAAhBrF,KAAKtB,QAAkC,IAAlBsB,KAAK4lC,MAAM,EAC3C,EAEEgqD,EAAGntE,UAAUo5E,KAAO,SAAenzE,GACjC,IAOIkO,EAPAm5D,EAAWrnE,EAAM,EAErB,GAAsB,IAAlB1oB,KAAK+vF,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB/vF,KAAK+vF,UAAkBA,EAAU,OAAO,EAK5C,GAHA/vF,KAAK2wF,QAGD3wF,KAAKtB,OAAS,EAChBk4B,EAAM,MACD,CACDm5D,IACFrnE,GAAOA,GAGTzf,EAAOyf,GAAO,SAAW,qBAEzB,IAAImH,EAAoB,EAAhB7vB,KAAK4lC,MAAM,GACnBhP,EAAM/G,IAAMnH,EAAM,EAAImH,EAAInH,GAAO,EAAI,CACtC,CACD,OAAsB,IAAlB1oB,KAAK+vF,SAA8B,GAANn5D,EAC1BA,CACX,EAMEg5D,EAAGntE,UAAU6tE,IAAM,SAAc5nE,GAC/B,GAAsB,IAAlB1oB,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,SAAgB,OAAQ,EACvD,GAAsB,IAAlB/vF,KAAK+vF,UAAmC,IAAjBrnE,EAAIqnE,SAAgB,OAAO,EAEtD,IAAIn5D,EAAM52B,KAAKg8F,KAAKtzE,GACpB,OAAsB,IAAlB1oB,KAAK+vF,SAA8B,GAANn5D,EAC1BA,CACX,EAGEg5D,EAAGntE,UAAUu5E,KAAO,SAAetzE,GAEjC,GAAI1oB,KAAKtB,OAASgqB,EAAIhqB,OAAQ,OAAO,EACrC,GAAIsB,KAAKtB,OAASgqB,EAAIhqB,OAAQ,OAAQ,EAGtC,IADA,IAAIk4B,EAAM,EACDn4B,EAAIuB,KAAKtB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACzC,IAAI+M,EAAoB,EAAhBxL,KAAK4lC,MAAMnnC,GACfM,EAAmB,EAAf2pB,EAAIkd,MAAMnnC,GAElB,GAAI+M,IAAMzM,EAAV,CACIyM,EAAIzM,EACN63B,GAAO,EACEprB,EAAIzM,IACb63B,EAAM,GAER,KANsB,CAOvB,CACD,OAAOA,CACX,EAEEg5D,EAAGntE,UAAUw5E,IAAM,SAAcvzE,GAC/B,OAA0B,IAAnB1oB,KAAK67F,KAAKnzE,EACrB,EAEEknE,EAAGntE,UAAUy5E,GAAK,SAAaxzE,GAC7B,OAAyB,IAAlB1oB,KAAKswF,IAAI5nE,EACpB,EAEEknE,EAAGntE,UAAU05E,KAAO,SAAezzE,GACjC,OAAO1oB,KAAK67F,KAAKnzE,IAAQ,CAC7B,EAEEknE,EAAGntE,UAAU25E,IAAM,SAAc1zE,GAC/B,OAAO1oB,KAAKswF,IAAI5nE,IAAQ,CAC5B,EAEEknE,EAAGntE,UAAU45E,IAAM,SAAc3zE,GAC/B,OAA2B,IAApB1oB,KAAK67F,KAAKnzE,EACrB,EAEEknE,EAAGntE,UAAU65E,GAAK,SAAa5zE,GAC7B,OAA0B,IAAnB1oB,KAAKswF,IAAI5nE,EACpB,EAEEknE,EAAGntE,UAAU85E,KAAO,SAAe7zE,GACjC,OAAO1oB,KAAK67F,KAAKnzE,IAAQ,CAC7B,EAEEknE,EAAGntE,UAAU+5E,IAAM,SAAc9zE,GAC/B,OAAO1oB,KAAKswF,IAAI5nE,IAAQ,CAC5B,EAEEknE,EAAGntE,UAAUg6E,IAAM,SAAc/zE,GAC/B,OAA0B,IAAnB1oB,KAAK67F,KAAKnzE,EACrB,EAEEknE,EAAGntE,UAAUi6E,GAAK,SAAah0E,GAC7B,OAAyB,IAAlB1oB,KAAKswF,IAAI5nE,EACpB,EAMEknE,EAAGI,IAAM,SAActnE,GACrB,OAAO,IAAIi0E,EAAIj0E,EACnB,EAEEknE,EAAGntE,UAAUm6E,MAAQ,SAAgB77B,GAGnC,OAFA93D,GAAQjJ,KAAKgwF,IAAK,yCAClB/mF,EAAyB,IAAlBjJ,KAAK+vF,SAAgB,iCACrBhvB,EAAI87B,UAAU78F,MAAM88F,UAAU/7B,EACzC,EAEE6uB,EAAGntE,UAAUs6E,QAAU,WAErB,OADA9zF,EAAOjJ,KAAKgwF,IAAK,wDACVhwF,KAAKgwF,IAAIgN,YAAYh9F,KAChC,EAEE4vF,EAAGntE,UAAUq6E,UAAY,SAAoB/7B,GAE3C,OADA/gE,KAAKgwF,IAAMjvB,EACJ/gE,IACX,EAEE4vF,EAAGntE,UAAUw6E,SAAW,SAAmBl8B,GAEzC,OADA93D,GAAQjJ,KAAKgwF,IAAK,yCACXhwF,KAAK88F,UAAU/7B,EAC1B,EAEE6uB,EAAGntE,UAAUy6E,OAAS,SAAiBx0E,GAErC,OADAzf,EAAOjJ,KAAKgwF,IAAK,sCACVhwF,KAAKgwF,IAAI1oE,IAAItnB,KAAM0oB,EAC9B,EAEEknE,EAAGntE,UAAU06E,QAAU,SAAkBz0E,GAEvC,OADAzf,EAAOjJ,KAAKgwF,IAAK,uCACVhwF,KAAKgwF,IAAI8D,KAAK9zF,KAAM0oB,EAC/B,EAEEknE,EAAGntE,UAAU26E,OAAS,SAAiB10E,GAErC,OADAzf,EAAOjJ,KAAKgwF,IAAK,sCACVhwF,KAAKgwF,IAAI/kC,IAAIjrD,KAAM0oB,EAC9B,EAEEknE,EAAGntE,UAAU46E,QAAU,SAAkB30E,GAEvC,OADAzf,EAAOjJ,KAAKgwF,IAAK,uCACVhwF,KAAKgwF,IAAI+D,KAAK/zF,KAAM0oB,EAC/B,EAEEknE,EAAGntE,UAAU66E,OAAS,SAAiB50E,GAErC,OADAzf,EAAOjJ,KAAKgwF,IAAK,sCACVhwF,KAAKgwF,IAAIuN,IAAIv9F,KAAM0oB,EAC9B,EAEEknE,EAAGntE,UAAU+6E,OAAS,SAAiB90E,GAGrC,OAFAzf,EAAOjJ,KAAKgwF,IAAK,sCACjBhwF,KAAKgwF,IAAIyN,SAASz9F,KAAM0oB,GACjB1oB,KAAKgwF,IAAI/nC,IAAIjoD,KAAM0oB,EAC9B,EAEEknE,EAAGntE,UAAUi7E,QAAU,SAAkBh1E,GAGvC,OAFAzf,EAAOjJ,KAAKgwF,IAAK,sCACjBhwF,KAAKgwF,IAAIyN,SAASz9F,KAAM0oB,GACjB1oB,KAAKgwF,IAAIsF,KAAKt1F,KAAM0oB,EAC/B,EAEEknE,EAAGntE,UAAUk7E,OAAS,WAGpB,OAFA10F,EAAOjJ,KAAKgwF,IAAK,sCACjBhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAImJ,IAAIn5F,KACxB,EAEE4vF,EAAGntE,UAAUo7E,QAAU,WAGrB,OAFA50F,EAAOjJ,KAAKgwF,IAAK,uCACjBhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAIoJ,KAAKp5F,KACzB,EAGE4vF,EAAGntE,UAAUq7E,QAAU,WAGrB,OAFA70F,EAAOjJ,KAAKgwF,IAAK,uCACjBhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAI+N,KAAK/9F,KACzB,EAEE4vF,EAAGntE,UAAUu7E,QAAU,WAGrB,OAFA/0F,EAAOjJ,KAAKgwF,IAAK,uCACjBhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAI8L,KAAK97F,KACzB,EAGE4vF,EAAGntE,UAAUw7E,OAAS,WAGpB,OAFAh1F,EAAOjJ,KAAKgwF,IAAK,sCACjBhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAI91C,IAAIl6C,KACxB,EAEE4vF,EAAGntE,UAAUy7E,OAAS,SAAiBx1E,GAGrC,OAFAzf,EAAOjJ,KAAKgwF,MAAQtnE,EAAIsnE,IAAK,qBAC7BhwF,KAAKgwF,IAAI4N,SAAS59F,MACXA,KAAKgwF,IAAIlvC,IAAI9gD,KAAM0oB,EAC9B,EAGE,IAAIy1E,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQxxF,EAAM5N,GAErBY,KAAKgN,KAAOA,EACZhN,KAAKZ,EAAI,IAAIwwF,EAAGxwF,EAAG,IACnBY,KAAKqG,EAAIrG,KAAKZ,EAAE8qE,YAChBlqE,KAAKwO,EAAI,IAAIohF,EAAG,GAAG0J,OAAOt5F,KAAKqG,GAAG0tF,KAAK/zF,KAAKZ,GAE5CY,KAAK+rB,IAAM/rB,KAAKy+F,MACjB,CAgDD,SAASC,IACPF,EAAO3vE,KACL7uB,KACA,OACA,0EACH,CA8DD,SAAS2+F,IACPH,EAAO3vE,KACL7uB,KACA,OACA,iEACH,CAGD,SAAS4+F,IACPJ,EAAO3vE,KACL7uB,KACA,OACA,wDACH,CAGD,SAAS6+F,IAEPL,EAAO3vE,KACL7uB,KACA,QACA,sEACH,CA6CD,SAAS28F,EAAKtnF,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIypF,EAAQlP,EAAGmP,OAAO1pF,GACtBrV,KAAKqV,EAAIypF,EAAM1/F,EACfY,KAAK8+F,MAAQA,CACnB,MACM71F,EAAOoM,EAAE4mF,IAAI,GAAI,kCACjBj8F,KAAKqV,EAAIA,EACTrV,KAAK8+F,MAAQ,IAEhB,CAgOD,SAASE,EAAM3pF,GACbsnF,EAAI9tE,KAAK7uB,KAAMqV,GAEfrV,KAAKD,MAAQC,KAAKqV,EAAE60D,YAChBlqE,KAAKD,MAAQ,IAAO,IACtBC,KAAKD,OAAS,GAAMC,KAAKD,MAAQ,IAGnCC,KAAKiZ,EAAI,IAAI22E,EAAG,GAAG0J,OAAOt5F,KAAKD,OAC/BC,KAAKkkB,GAAKlkB,KAAKi/F,KAAKj/F,KAAKiZ,EAAEkgF,OAC3Bn5F,KAAKoyC,KAAOpyC,KAAKiZ,EAAE2iF,OAAO57F,KAAKqV,GAE/BrV,KAAKk/F,KAAOl/F,KAAKoyC,KAAK6V,IAAIjoD,KAAKiZ,GAAGmhF,MAAM,GAAGS,IAAI76F,KAAKqV,GACpDrV,KAAKk/F,KAAOl/F,KAAKk/F,KAAKjE,KAAKj7F,KAAKiZ,GAChCjZ,KAAKk/F,KAAOl/F,KAAKiZ,EAAEgyC,IAAIjrD,KAAKk/F,KAC7B,CA7aDV,EAAO/7E,UAAUg8E,KAAO,WACtB,IAAI1yE,EAAM,IAAI6jE,EAAG,MAEjB,OADA7jE,EAAI6Z,MAAQ,IAAIxnC,MAAMqF,KAAKm4B,KAAK57B,KAAKqG,EAAI,KAClC0lB,CACX,EAEEyyE,EAAO/7E,UAAU08E,QAAU,SAAkBz2E,GAG3C,IACI02E,EADAnmF,EAAIyP,EAGR,GACE1oB,KAAKzB,MAAM0a,EAAGjZ,KAAK+rB,KAGnBqzE,GADAnmF,GADAA,EAAIjZ,KAAKq/F,MAAMpmF,IACT66E,KAAK9zF,KAAK+rB,MACPm+C,kBACFk1B,EAAOp/F,KAAKqG,GAErB,IAAIiqF,EAAM8O,EAAOp/F,KAAKqG,GAAK,EAAI4S,EAAE+iF,KAAKh8F,KAAKZ,GAgB3C,OAfY,IAARkxF,GACFr3E,EAAE2sB,MAAM,GAAK,EACb3sB,EAAEva,OAAS,GACF4xF,EAAM,EACfr3E,EAAE86E,KAAK/zF,KAAKZ,QAEIC,IAAZ4Z,EAAE03E,MAEJ13E,EAAE03E,QAGF13E,EAAEqmF,SAICrmF,CACX,EAEEulF,EAAO/7E,UAAUlkB,MAAQ,SAAgB4S,EAAOsJ,GAC9CtJ,EAAM8gF,OAAOjyF,KAAKqG,EAAG,EAAGoU,EAC5B,EAEE+jF,EAAO/7E,UAAU48E,MAAQ,SAAgB32E,GACvC,OAAOA,EAAI4sE,KAAKt1F,KAAKwO,EACzB,EAQE+gF,EAASmP,EAAMF,GAEfE,EAAKj8E,UAAUlkB,MAAQ,SAAgB4S,EAAOqE,GAK5C,IAHA,IAAIoP,EAAO,QAEP8R,EAASjzB,KAAKupB,IAAI7b,EAAMzS,OAAQ,GAC3BD,EAAI,EAAGA,EAAIi4B,EAAQj4B,IAC1B+W,EAAOowB,MAAMnnC,GAAK0S,EAAMy0B,MAAMnnC,GAIhC,GAFA+W,EAAO9W,OAASg4B,EAEZvlB,EAAMzS,QAAU,EAGlB,OAFAyS,EAAMy0B,MAAM,GAAK,OACjBz0B,EAAMzS,OAAS,GAKjB,IAAI8L,EAAO2G,EAAMy0B,MAAM,GAGvB,IAFApwB,EAAOowB,MAAMpwB,EAAO9W,UAAY8L,EAAOoa,EAElCnmB,EAAI,GAAIA,EAAI0S,EAAMzS,OAAQD,IAAK,CAClC,IAAI2N,EAAwB,EAAjB+E,EAAMy0B,MAAMnnC,GACvB0S,EAAMy0B,MAAMnnC,EAAI,KAAQ2N,EAAOwY,IAAS,EAAMpa,IAAS,GACvDA,EAAO4B,CACR,CAED+E,EAAMy0B,MAAMnnC,EAAI,IADhB+L,KAAU,GAGR2G,EAAMzS,QADK,IAAT8L,GAAc2G,EAAMzS,OAAS,GACf,GAEA,CAEtB,EAEEggG,EAAKj8E,UAAU48E,MAAQ,SAAgB32E,GAErCA,EAAIkd,MAAMld,EAAIhqB,QAAU,EACxBgqB,EAAIkd,MAAMld,EAAIhqB,OAAS,GAAK,EAC5BgqB,EAAIhqB,QAAU,EAId,IADA,IAAI4B,EAAK,EACA7B,EAAI,EAAGA,EAAIiqB,EAAIhqB,OAAQD,IAAK,CACnC,IAAIoxB,EAAmB,EAAfnH,EAAIkd,MAAMnnC,GAElBiqB,EAAIkd,MAAMnnC,GAAU,UADpB6B,GAAU,IAAJuvB,GAENvvB,EAAS,GAAJuvB,GAAavvB,EAAK,SAAa,EACrC,CASD,OANkC,IAA9BooB,EAAIkd,MAAMld,EAAIhqB,OAAS,KACzBgqB,EAAIhqB,SAC8B,IAA9BgqB,EAAIkd,MAAMld,EAAIhqB,OAAS,IACzBgqB,EAAIhqB,UAGDgqB,CACX,EAQE6mE,EAASoP,EAAMH,GAQfjP,EAASqP,EAAMJ,GASfjP,EAASsP,EAAQL,GAEjBK,EAAOp8E,UAAU48E,MAAQ,SAAgB32E,GAGvC,IADA,IAAIP,EAAQ,EACH1pB,EAAI,EAAGA,EAAIiqB,EAAIhqB,OAAQD,IAAK,CACnC,IAAI8B,EAA0B,IAAL,EAAfmoB,EAAIkd,MAAMnnC,IAAiB0pB,EACjC7nB,EAAU,SAALC,EACTA,KAAQ,GAERmoB,EAAIkd,MAAMnnC,GAAK6B,EACf6nB,EAAQ5nB,CACT,CAID,OAHc,IAAV4nB,IACFO,EAAIkd,MAAMld,EAAIhqB,UAAYypB,GAErBO,CACX,EAGEknE,EAAGmP,OAAS,SAAgB/xF,GAE1B,GAAImxF,EAAOnxF,GAAO,OAAOmxF,EAAOnxF,GAEhC,IAAI8xF,EACJ,GAAa,SAAT9xF,EACF8xF,EAAQ,IAAIJ,OACP,GAAa,SAAT1xF,EACT8xF,EAAQ,IAAIH,OACP,GAAa,SAAT3xF,EACT8xF,EAAQ,IAAIF,MACP,IAAa,WAAT5xF,EAGT,MAAM,IAAI1N,MAAM,iBAAmB0N,GAFnC8xF,EAAQ,IAAID,CAGb,CAGD,OAFAV,EAAOnxF,GAAQ8xF,EAERA,CACX,EAiBEnC,EAAIl6E,UAAUm7E,SAAW,SAAmBpyF,GAC1CvC,EAAsB,IAAfuC,EAAEukF,SAAgB,iCACzB9mF,EAAOuC,EAAEwkF,IAAK,kCAClB,EAEE2M,EAAIl6E,UAAUg7E,SAAW,SAAmBjyF,EAAGzM,GAC7CkK,EAAqC,IAA7BuC,EAAEukF,SAAWhxF,EAAEgxF,UAAiB,iCACxC9mF,EAAOuC,EAAEwkF,KAAOxkF,EAAEwkF,MAAQjxF,EAAEixF,IAC1B,kCACN,EAEE2M,EAAIl6E,UAAUw8E,KAAO,SAAezzF,GAClC,OAAIxL,KAAK8+F,MAAc9+F,KAAK8+F,MAAMK,QAAQ3zF,GAAGsxF,UAAU98F,MAChDwL,EAAEyvF,KAAKj7F,KAAKqV,GAAGynF,UAAU98F,KACpC,EAEE28F,EAAIl6E,UAAUy3B,IAAM,SAAc1uC,GAChC,OAAIA,EAAEnG,SACGmG,EAAEmL,QAGJ3W,KAAKqV,EAAE41C,IAAIz/C,GAAGsxF,UAAU98F,KACnC,EAEE28F,EAAIl6E,UAAU6E,IAAM,SAAc9b,EAAGzM,GACnCiB,KAAKy9F,SAASjyF,EAAGzM,GAEjB,IAAI63B,EAAMprB,EAAE8b,IAAIvoB,GAIhB,OAHI63B,EAAI05D,IAAItwF,KAAKqV,IAAM,GACrBuhB,EAAIm9D,KAAK/zF,KAAKqV,GAETuhB,EAAIkmE,UAAU98F,KACzB,EAEE28F,EAAIl6E,UAAUqxE,KAAO,SAAetoF,EAAGzM,GACrCiB,KAAKy9F,SAASjyF,EAAGzM,GAEjB,IAAI63B,EAAMprB,EAAEsoF,KAAK/0F,GAIjB,OAHI63B,EAAI05D,IAAItwF,KAAKqV,IAAM,GACrBuhB,EAAIm9D,KAAK/zF,KAAKqV,GAETuhB,CACX,EAEE+lE,EAAIl6E,UAAUwoC,IAAM,SAAcz/C,EAAGzM,GACnCiB,KAAKy9F,SAASjyF,EAAGzM,GAEjB,IAAI63B,EAAMprB,EAAEy/C,IAAIlsD,GAIhB,OAHI63B,EAAIilE,KAAK,GAAK,GAChBjlE,EAAIk9D,KAAK9zF,KAAKqV,GAETuhB,EAAIkmE,UAAU98F,KACzB,EAEE28F,EAAIl6E,UAAUsxE,KAAO,SAAevoF,EAAGzM,GACrCiB,KAAKy9F,SAASjyF,EAAGzM,GAEjB,IAAI63B,EAAMprB,EAAEuoF,KAAKh1F,GAIjB,OAHI63B,EAAIilE,KAAK,GAAK,GAChBjlE,EAAIk9D,KAAK9zF,KAAKqV,GAETuhB,CACX,EAEE+lE,EAAIl6E,UAAU86E,IAAM,SAAc/xF,EAAGkd,GAEnC,OADA1oB,KAAK49F,SAASpyF,GACPxL,KAAKi/F,KAAKzzF,EAAEuuF,MAAMrxE,GAC7B,EAEEi0E,EAAIl6E,UAAU6yE,KAAO,SAAe9pF,EAAGzM,GAErC,OADAiB,KAAKy9F,SAASjyF,EAAGzM,GACViB,KAAKi/F,KAAKzzF,EAAE8pF,KAAKv2F,GAC5B,EAEE49F,EAAIl6E,UAAUwlC,IAAM,SAAcz8C,EAAGzM,GAEnC,OADAiB,KAAKy9F,SAASjyF,EAAGzM,GACViB,KAAKi/F,KAAKzzF,EAAEy8C,IAAIlpD,GAC3B,EAEE49F,EAAIl6E,UAAU22E,KAAO,SAAe5tF,GAClC,OAAOxL,KAAKs1F,KAAK9pF,EAAGA,EAAEmL,QAC1B,EAEEgmF,EAAIl6E,UAAU02E,IAAM,SAAc3tF,GAChC,OAAOxL,KAAKioD,IAAIz8C,EAAGA,EACvB,EAEEmxF,EAAIl6E,UAAUs7E,KAAO,SAAevyF,GAClC,GAAIA,EAAEnG,SAAU,OAAOmG,EAAEmL,QAEzB,IAAI4oF,EAAOv/F,KAAKqV,EAAE28E,MAAM,GAIxB,GAHA/oF,EAAOs2F,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAIz+C,EAAM9gD,KAAKqV,EAAEiS,IAAI,IAAIsoE,EAAG,IAAIqC,OAAO,GACvC,OAAOjyF,KAAK8gD,IAAIt1C,EAAGs1C,EACpB,CAOD,IAFA,IAAI9hC,EAAIhf,KAAKqV,EAAEilF,KAAK,GAChBlyF,EAAI,GACA4W,EAAE3Z,UAA2B,IAAf2Z,EAAEgzE,MAAM,IAC5B5pF,IACA4W,EAAEizE,OAAO,GAEXhpF,GAAQ+V,EAAE3Z,UAEV,IAAIm6F,EAAM,IAAI5P,EAAG,GAAGgN,MAAM58F,MACtBy/F,EAAOD,EAAIvB,SAIXyB,EAAO1/F,KAAKqV,EAAEilF,KAAK,GAAGrI,OAAO,GAC7B90E,EAAInd,KAAKqV,EAAE60D,YAGf,IAFA/sD,EAAI,IAAIyyE,EAAG,EAAIzyE,EAAIA,GAAGy/E,MAAM58F,MAEW,IAAhCA,KAAK8gD,IAAI3jC,EAAGuiF,GAAMpP,IAAImP,IAC3BtiF,EAAEggF,QAAQsC,GAOZ,IAJA,IAAI9zF,EAAI3L,KAAK8gD,IAAI3jC,EAAG6B,GAChB/F,EAAIjZ,KAAK8gD,IAAIt1C,EAAGwT,EAAEq7E,KAAK,GAAGpI,OAAO,IACjC9zF,EAAI6B,KAAK8gD,IAAIt1C,EAAGwT,GAChB3J,EAAIjN,EACc,IAAfjK,EAAEmyF,IAAIkP,IAAY,CAEvB,IADA,IAAIzzE,EAAM5tB,EACDM,EAAI,EAAoB,IAAjBstB,EAAIukE,IAAIkP,GAAY/gG,IAClCstB,EAAMA,EAAI4xE,SAEZ10F,EAAOxK,EAAI4W,GACX,IAAItW,EAAIiB,KAAK8gD,IAAIn1C,EAAG,IAAIikF,EAAG,GAAG0J,OAAOjkF,EAAI5W,EAAI,IAE7Cwa,EAAIA,EAAEukF,OAAOz+F,GACb4M,EAAI5M,EAAE4+F,SACNx/F,EAAIA,EAAEq/F,OAAO7xF,GACb0J,EAAI5W,CACL,CAED,OAAOwa,CACX,EAEE0jF,EAAIl6E,UAAUq5E,KAAO,SAAetwF,GAClC,IAAIm0F,EAAMn0F,EAAEowF,OAAO57F,KAAKqV,GACxB,OAAqB,IAAjBsqF,EAAI5P,UACN4P,EAAI5P,SAAW,EACR/vF,KAAKi/F,KAAKU,GAAK1B,UAEfj+F,KAAKi/F,KAAKU,EAEvB,EAEEhD,EAAIl6E,UAAUq+B,IAAM,SAAct1C,EAAGkd,GACnC,GAAIA,EAAIrjB,SAAU,OAAO,IAAIuqF,EAAG,GAAGgN,MAAM58F,MACzC,GAAoB,IAAhB0oB,EAAImzE,KAAK,GAAU,OAAOrwF,EAAEmL,QAEhC,IACIipF,EAAM,IAAIxhG,MAAM,IACpBwhG,EAAI,GAAK,IAAIhQ,EAAG,GAAGgN,MAAM58F,MACzB4/F,EAAI,GAAKp0F,EACT,IAAK,IAAI/M,EAAI,EAAGA,EAAImhG,EAAIlhG,OAAQD,IAC9BmhG,EAAInhG,GAAKuB,KAAKioD,IAAI23C,EAAInhG,EAAI,GAAI+M,GAGhC,IAAIorB,EAAMgpE,EAAI,GACVC,EAAU,EACVC,EAAa,EACbx4F,EAAQohB,EAAIwhD,YAAc,GAK9B,IAJc,IAAV5iE,IACFA,EAAQ,IAGL7I,EAAIiqB,EAAIhqB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIy2B,EAAOxM,EAAIkd,MAAMnnC,GACZygB,EAAI5X,EAAQ,EAAG4X,GAAK,EAAGA,IAAK,CACnC,IAAI0gD,EAAO1qC,GAAQhW,EAAK,EACpB0X,IAAQgpE,EAAI,KACdhpE,EAAM52B,KAAKm5F,IAAIviE,IAGL,IAARgpC,GAAyB,IAAZigC,GAKjBA,IAAY,EACZA,GAAWjgC,GA9BE,KA+BbkgC,GACwC,IAANrhG,GAAiB,IAANygB,KAE7C0X,EAAM52B,KAAKioD,IAAIrxB,EAAKgpE,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYhB,CACDx4F,EAAQ,EACT,CAED,OAAOsvB,CACX,EAEE+lE,EAAIl6E,UAAUo6E,UAAY,SAAoBn0E,GAC5C,IAAIzP,EAAIyP,EAAIuyE,KAAKj7F,KAAKqV,GAEtB,OAAO4D,IAAMyP,EAAMzP,EAAEtC,QAAUsC,CACnC,EAEE0jF,EAAIl6E,UAAUu6E,YAAc,SAAsBt0E,GAChD,IAAIkO,EAAMlO,EAAI/R,QAEd,OADAigB,EAAIo5D,IAAM,KACHp5D,CACX,EAMEg5D,EAAGmQ,KAAO,SAAer3E,GACvB,OAAO,IAAIs2E,EAAKt2E,EACpB,EAkBE6mE,EAASyP,EAAMrC,GAEfqC,EAAKv8E,UAAUo6E,UAAY,SAAoBn0E,GAC7C,OAAO1oB,KAAKi/F,KAAKv2E,EAAIqxE,MAAM/5F,KAAKD,OACpC,EAEEi/F,EAAKv8E,UAAUu6E,YAAc,SAAsBt0E,GACjD,IAAIzP,EAAIjZ,KAAKi/F,KAAKv2E,EAAIu/B,IAAIjoD,KAAKoyC,OAE/B,OADAn5B,EAAE+2E,IAAM,KACD/2E,CACX,EAEE+lF,EAAKv8E,UAAU6yE,KAAO,SAAe9pF,EAAGzM,GACtC,GAAIyM,EAAEnG,UAAYtG,EAAEsG,SAGlB,OAFAmG,EAAEo6B,MAAM,GAAK,EACbp6B,EAAE9M,OAAS,EACJ8M,EAGT,IAAIrN,EAAIqN,EAAE8pF,KAAKv2F,GACX4M,EAAIxN,EAAEg8F,MAAMn6F,KAAKD,OAAOkoD,IAAIjoD,KAAKk/F,MAAMhF,OAAOl6F,KAAKD,OAAOkoD,IAAIjoD,KAAKqV,GACnEtB,EAAI5V,EAAE41F,KAAKpoF,GAAGsmF,OAAOjyF,KAAKD,OAC1B62B,EAAM7iB,EAQV,OANIA,EAAEu8E,IAAItwF,KAAKqV,IAAM,EACnBuhB,EAAM7iB,EAAEggF,KAAK/zF,KAAKqV,GACTtB,EAAE8nF,KAAK,GAAK,IACrBjlE,EAAM7iB,EAAE+/E,KAAK9zF,KAAKqV,IAGbuhB,EAAIkmE,UAAU98F,KACzB,EAEEg/F,EAAKv8E,UAAUwlC,IAAM,SAAcz8C,EAAGzM,GACpC,GAAIyM,EAAEnG,UAAYtG,EAAEsG,SAAU,OAAO,IAAIuqF,EAAG,GAAGkN,UAAU98F,MAEzD,IAAI7B,EAAIqN,EAAEy8C,IAAIlpD,GACV4M,EAAIxN,EAAEg8F,MAAMn6F,KAAKD,OAAOkoD,IAAIjoD,KAAKk/F,MAAMhF,OAAOl6F,KAAKD,OAAOkoD,IAAIjoD,KAAKqV,GACnEtB,EAAI5V,EAAE41F,KAAKpoF,GAAGsmF,OAAOjyF,KAAKD,OAC1B62B,EAAM7iB,EAOV,OANIA,EAAEu8E,IAAItwF,KAAKqV,IAAM,EACnBuhB,EAAM7iB,EAAEggF,KAAK/zF,KAAKqV,GACTtB,EAAE8nF,KAAK,GAAK,IACrBjlE,EAAM7iB,EAAE+/E,KAAK9zF,KAAKqV,IAGbuhB,EAAIkmE,UAAU98F,KACzB,EAEEg/F,EAAKv8E,UAAUq5E,KAAO,SAAetwF,GAGnC,OADUxL,KAAKi/F,KAAKzzF,EAAEowF,OAAO57F,KAAKqV,GAAG4yC,IAAIjoD,KAAKkkB,KACnC44E,UAAU98F,KACzB,CACC,CAr3GD,CAq3GoCmtB,EAAQntB,0BCh3G5C,IAAI+0D,EAAmB/0D,IAAQA,GAAK+0D,iBAAoB,SAAU3pB,GAC9D,OAAQA,GAAOA,EAAI4pB,WAAc5pB,EAAM,CAAEtO,QAAWsO,EACxD,EACAx/B,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA4yE,UAAoB5yE,EAAsB6yE,YAAA7yE,EAAA8yE,kBAAuB,EAGjE,MAAMC,EAAUprC,EAAgB7nC,IAgChC,SAAS7uB,EAAQqM,GACb,OAAOA,EAAK87B,YAAY,OAAS97B,EAAKhM,OAAS,CACnD,CAOA,SAAS0hG,EAAe11F,GACpB,MAAMqhB,EAAMrhB,EAAKswB,MAAM,mBACvB,OAAIjP,EACkB,KAAXA,EAAI,GAAY,UAAYrb,SAASqb,EAAI,GAAI,IAEjD,IACX,CAOA,SAASs0E,EAAW31F,GAChB,OAAOgG,SAAS,cAAc2sC,KAAK3yC,GAAM,GAAI,GACjD,CAOA,SAASu1F,EAAY52F,GACjB,MAAMqB,SAAcrB,EACpB,GAAa,WAATqB,EACA,OAAI,EAAIkhE,GAAOxZ,eAAe/oD,GACnB,IAAI82F,EAAQrjE,QAAY0xD,GAA6BnlF,GAAM,IAE/D,IAAI82F,EAAQrjE,QAAQzzB,EAAK,IAE/B,GAAa,WAATqB,EACL,OAAO,IAAIy1F,EAAQrjE,QAAQzzB,GAE1B,GAAIA,EAAI0vD,QAET,OAAO1vD,EAEX,MAAM,IAAI/J,MAAM,2BACpB,CAUA,SAASghG,EAAiB51F,EAAMxM,EAAOqiG,GAEnC,IAAI59C,EAAMj6B,EACV,GAAIrqB,EAAQqM,GAAO,CACf,MAAM81F,EAAU91F,EAAKkwB,QAAQ,WAAY,IACzC,IAAKv8B,EAAQmiG,GAAU,CACnB,MAAMC,EAAYL,EAAe11F,GACjC,GAAkB,YAAd+1F,GACc,IAAdA,GACAviG,EAAMQ,OAAS+hG,EACf,MAAM,IAAInhG,MAAM,+BAA+BmhG,IAEtD,CACD,MAAMC,EAAcxiG,EAAMmS,IAAI,SAAUyO,GACpC,OAAOwhF,EAAiBE,EAAS1hF,EAAG,IAChD,GACQ,OAAOoiC,OAAOzsC,OAAOisF,EACxB,CACI,GAAa,UAATh2F,EACL,OAAOxM,EAEN,GAAa,WAATwM,EACL,OAAOw2C,OAAOl2C,KAAK9M,EAAO,QAEzB,GAAa,SAATwM,EAAiB,CACtB61F,EAAUA,GAAW,EACrB,MAAMrxE,EAAU9wB,MAAMmiG,EAAU,GAAGj2F,KAAK,KACxC,OAAO42C,OAAOl2C,KAAK9M,EAAQ,GAAGgxB,KAAa,GAAGA,KAAY,MAC7D,CACI,GAAa,YAATxkB,EAAoB,CACzB,IAAIi2F,EAAW,GAIf,OAHIJ,IACAI,EAAWJ,EAAU,IAElB,EAAI30B,GAAOpT,gBAAe,EAAIoT,GAAOzT,UAAUj6D,GAAQyiG,EACjE,CACI,GAAIj2F,EAAK6qD,WAAW,SAAU,CAE/B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GACnB,MAAM,IAAIrjD,MAAM,2BAA2BqjD,KAK/C,MAHqB,iBAAVzkD,IACPA,GAAQ,EAAI0pC,GAAQ1E,WAAWhlC,KAE5B,EAAI0tE,GAAOrT,iBAAgB,EAAIqT,GAAOzT,UAAUj6D,GAAQykD,EAClE,CACI,GAAIj4C,EAAK6qD,WAAW,QAAS,CAE9B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAC/B,MAAM,IAAIrjD,MAAM,0BAA0BqjD,KAG9C,GADAj6B,EAAMu3E,EAAY/hG,GACdwqB,EAAIwhD,YAAcvnB,EAClB,MAAM,IAAIrjD,MAAM,gCAAgCqjD,QAAWj6B,EAAIwhD,eAGnE,OADAq2B,EAAUA,GAAW59C,EACdj6B,EAAIopE,YAAY5wC,OAAQ,KAAMq/C,EAAU,EAClD,CACI,GAAI71F,EAAK6qD,WAAW,OAAQ,CAE7B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAC/B,MAAM,IAAIrjD,MAAM,yBAAyBqjD,KAG7C,GADAj6B,EAAMu3E,EAAY/hG,GACdwqB,EAAIwhD,YAAcvnB,EAClB,MAAM,IAAIrjD,MAAM,+BAA+BqjD,QAAWj6B,EAAIwhD,eAGlE,OADAq2B,EAAUA,GAAW59C,EACdj6B,EAAI4pE,OAAO3vC,GAAMmvC,YAAY5wC,OAAQ,KAAMq/C,EAAU,EAC/D,CAED,MAAM,IAAIjhG,MAAM,gCAAgCoL,IACpD,CAOA,SAASk2F,EAAe5zF,GACpB,OAAIA,EAAKuoD,WAAW,QACT,SAASvoD,EAAK/K,MAAM,KAEb,QAAT+K,EACE,SAEFA,EAAKuoD,WAAW,SACd,UAAUvoD,EAAK/K,MAAM,KAEd,SAAT+K,EACE,UAEFA,EAAKuoD,WAAW,UACd,eAAevoD,EAAK/K,MAAM,KAEnB,UAAT+K,EACE,eAEFA,EAAKuoD,WAAW,WACd,gBAAgBvoD,EAAK/K,MAAM,KAEpB,WAAT+K,EACE,gBAEJA,CACX,CA+CA,SAAS6zF,EAAan2F,EAAMrB,GACxB,IAAIs5C,EAAMj6B,EAAKs+B,EAAKvoD,EACpB,GAAa,YAATiM,EACA,OAAOm2F,EAAa,UAAWZ,EAAY52F,IAE1C,GAAa,SAATqB,EACL,OAAOm2F,EAAa,QAASx3F,EAAM,EAAI,GAEtC,GAAa,WAATqB,EACL,OAAOm2F,EAAa,QAAS3/C,OAAOl2C,KAAK3B,EAAK,SAE7C,GAAIhL,EAAQqM,GAAO,CAGpB,QAA0B,IAAfrB,EAAI3K,OACX,MAAM,IAAIY,MAAM,iBAGpB,GADAqjD,EAAOy9C,EAAe11F,GACT,YAATi4C,GAA+B,IAATA,GAAct5C,EAAI3K,OAASikD,EACjD,MAAM,IAAIrjD,MAAM,+BAA+BqjD,KAOnD,IAAKlkD,KALLuoD,EAAM,GACNt8C,EAAOA,EAAKzI,MAAM,EAAGyI,EAAK87B,YAAY,MACnB,iBAARn9B,IACPA,EAAMgO,KAAKC,MAAMjO,IAEXA,EACFuC,OAAO6W,UAAUhV,eAAeohB,KAAKxlB,EAAK5K,IAC1CuoD,EAAIvmD,KAAKogG,EAAan2F,EAAMrB,EAAI5K,KAGxC,GAAa,YAATkkD,EAAoB,CACpB,MAAMjkD,EAASmiG,EAAa,UAAWx3F,EAAI3K,QAC3CsoD,EAAIh2B,QAAQtyB,EACf,CACD,OAAOwiD,OAAOzsC,OAAOuyC,EACxB,CACI,GAAa,UAATt8C,EAML,OALArB,EAAM63C,OAAOl2C,KAAK3B,GAClB29C,EAAM9F,OAAOzsC,OAAO,CAACosF,EAAa,UAAWx3F,EAAI3K,QAAS2K,IACtDA,EAAI3K,OAAS,IAAO,IACpBsoD,EAAM9F,OAAOzsC,OAAO,CAACuyC,GAAK,EAAI4kB,GAAOx6C,OAAO,GAAM/nB,EAAI3K,OAAS,OAE5DsoD,EAEN,GAAIt8C,EAAK6qD,WAAW,SAAU,CAE/B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GACnB,MAAM,IAAIrjD,MAAM,2BAA2BqjD,KAK/C,MAHmB,iBAARt5C,IACPA,GAAM,EAAIu+B,GAAQ1E,WAAW75B,KAE1B,EAAIuiE,GAAOrT,iBAAgB,EAAIqT,GAAOzT,UAAU9uD,GAAM,GAChE,CACI,GAAIqB,EAAK6qD,WAAW,QAAS,CAE9B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAC/B,MAAM,IAAIrjD,MAAM,0BAA0BqjD,KAG9C,GADAj6B,EAAMu3E,EAAY52F,GACdqf,EAAIwhD,YAAcvnB,EAClB,MAAM,IAAIrjD,MAAM,gCAAgCqjD,QAAWj6B,EAAIwhD,eAEnE,GAAIxhD,EAAM,EACN,MAAM,IAAIppB,MAAM,6BAEpB,OAAOopB,EAAIopE,YAAY5wC,OAAQ,KAAM,GACxC,CACI,GAAIx2C,EAAK6qD,WAAW,OAAQ,CAE7B,GADA5S,EAAO09C,EAAW31F,GACdi4C,EAAO,GAAKA,EAAO,GAAKA,EAAO,IAC/B,MAAM,IAAIrjD,MAAM,yBAAyBqjD,KAG7C,GADAj6B,EAAMu3E,EAAY52F,GACdqf,EAAIwhD,YAAcvnB,EAClB,MAAM,IAAIrjD,MAAM,+BAA+BqjD,QAAWj6B,EAAIwhD,eAElE,OAAOxhD,EAAI4pE,OAAO,KAAKR,YAAY5wC,OAAQ,KAAM,GACpD,CACI,GAAIx2C,EAAK6qD,WAAW,UAAW,CAGhC,GAFA5S,EAAOm+C,EAAap2F,GACpBge,EAAMu3E,EAAY52F,GACdqf,EAAM,EACN,MAAM,IAAIppB,MAAM,+BAEpB,OAAOuhG,EAAa,UAAWn4E,EAAIu/B,IAAI,IAAIk4C,EAAQrjE,QAAQ,GAAGgkB,IAAI,IAAIq/C,EAAQrjE,QAAQ6lB,EAAK,MAC9F,CACI,GAAIj4C,EAAK6qD,WAAW,SAErB,OADA5S,EAAOm+C,EAAap2F,GACbm2F,EAAa,SAAUZ,EAAY52F,GAAK4+C,IAAI,IAAIk4C,EAAQrjE,QAAQ,GAAGgkB,IAAI,IAAIq/C,EAAQrjE,QAAQ6lB,EAAK,OAE3G,MAAM,IAAIrjD,MAAM,gCAAgCoL,IACpD,CAKA,SAASq2F,EAAUr2F,GAEf,MAAiB,WAATA,GAA8B,UAATA,GAA6C,YAAzB01F,EAAe11F,EACpE,CAKA,SAASo2F,EAAap2F,GAClB,MAAMqhB,EAAM,oBAAoBsxB,KAAK3yC,GACrC,MAAO,CAACgG,SAASqb,EAAI,GAAI,IAAKrb,SAASqb,EAAI,GAAI,IACnD,CArUAqB,EAAA8yE,aAZA,SAAsBhkB,EAAO9tE,GACzB,GAAI8tE,EAAMx9E,SAAW0P,EAAO1P,OACxB,MAAM,IAAIY,MAAM,+CAEpB,MAAM0nD,EAAM,GACZ,IAAK,IAAIvoD,EAAI,EAAGA,EAAIy9E,EAAMx9E,OAAQD,IAAK,CACnC,MAAMiM,EAAOk2F,EAAe1kB,EAAMz9E,IAElCuoD,EAAIvmD,KAAK6/F,EAAiB51F,EADZ0D,EAAO3P,GACkB,MAC1C,CACD,OAAOyiD,OAAOzsC,OAAOuyC,EACzB,EAwDA55B,EAAA6yE,YAAsBA,EA0JtB7yE,EAAA4yE,UAnCA,SAAmB9jB,EAAO9tE,GACtB,MAAMoH,EAAS,GACTnU,EAAO,GACb,IAAI2/F,EAAa,EACjB9kB,EAAM94C,QAAQ,SAAU14B,GACpB,GAAIrM,EAAQqM,GAAO,CACf,MAAMi4C,EAAOy9C,EAAe11F,GAGxBs2F,GADS,YAATr+C,EACc,GAAKA,EAGL,EAErB,MAEGq+C,GAAc,EAE1B,GACI,IAAK,IAAIviG,EAAI,EAAGA,EAAIy9E,EAAMx9E,OAAQD,IAAK,CACnC,MAAMiM,EAAOk2F,EAAe1kB,EAAMz9E,IAE5BwiG,EAAMJ,EAAan2F,EADX0D,EAAO3P,IAGjBsiG,EAAUr2F,IACV8K,EAAO/U,KAAKogG,EAAa,UAAWG,IACpC3/F,EAAKZ,KAAKwgG,GACVD,GAAcC,EAAIviG,QAGlB8W,EAAO/U,KAAKwgG,EAEnB,CACD,OAAO//C,OAAOzsC,OAAOe,EAAOf,OAAOpT,GACvC,wBClOA,IAAI6/F,EAoCJ,SAASC,EAAgBrkD,EAASskD,GAC9B,IAAKx1F,OAAO+B,KAAKuzF,GAAsB/yF,SAAS2uC,GAC5C,MAAM,IAAIx9C,MAAM,qBAAqBw9C,MAEpC,GAAIskD,IAAoBA,EAAgBjzF,SAAS2uC,GAClD,MAAM,IAAIx9C,MAAM,sCAAsCw9C,6BAAmCskD,EAAgB92F,KAAK,QAEtH,CAWA,SAAS+2F,EAAYnlB,EAAOlvE,EAAMtC,EAAMxM,EAAO4+C,GAE3C,GADAqkD,EAAgBrkD,EAAS,CAACokD,EAAqBI,GAAIJ,EAAqBK,UACpDliG,IAAhB68E,EAAMxxE,GACN,MAAO,CACH,UACAoyC,IAAYokD,EAAqBK,IAAe,MAATrjG,EACjC,sEACA,EAAI0tE,GAAOpU,cAAa,EAAIwD,GAASlF,WAAW0rC,EAAW92F,EAAMxM,EAAOg+E,EAAOp/B,MAG7F,QAAcz9C,IAAVnB,EACA,MAAM,IAAIoB,MAAM,2BAA2B0N,aAAgBtC,KAE/D,GAAa,UAATA,EAWA,OATIxM,EADiB,iBAAVA,GACC,EAAI0pC,GAAQwmD,gBAAgBlwF,GAE3BswF,GAA0BtwF,GAE3BgjD,OAAOl2C,MADC9M,EAAMQ,OAAS,EAAI,IAAM,IACXR,EAAM+D,MAAM,GAAI,OAGtCi/C,OAAOl2C,KAAK9M,EAAO,QAExB,CAAC,WAAW,EAAI0tE,GAAOpU,cAAa,EAAIwD,GAASlF,WAAW53D,KAEvE,GAAa,WAATwM,EAOA,OALIxM,EADiB,iBAAVA,GACC,EAAI0pC,GAAQwmD,gBAAgBlwF,GAG5BgjD,OAAOl2C,KAAK9M,QAAqCA,EAAQ,GAAI,QAElE,CAAC,WAAW,EAAI0tE,GAAOpU,cAAa,EAAIwD,GAASlF,WAAW53D,KAEvE,GAAIwM,EAAK87B,YAAY,OAAS97B,EAAKhM,OAAS,EAAG,CAC3C,GAAIo+C,IAAYokD,EAAqBI,GACjC,MAAM,IAAIhiG,MAAM,4DAEpB,MAAMmiG,EAAa/2F,EAAKzI,MAAM,EAAGyI,EAAK87B,YAAY,MAC5Ck7D,EAAiBxjG,EAAMmS,IAAKyE,GAASusF,EAAYnlB,EAAOlvE,EAAMy0F,EAAY3sF,EAAMgoC,IACtF,MAAO,CACH,WACA,EAAI8uB,GAAOpU,cAAa,EAAIwD,GAASlF,YAAW,EAAI6rC,GAAuB3B,WAAW0B,EAAerxF,IAAI,EAAElS,KAAOA,GAAIujG,EAAerxF,IAAI,EAAC,CAAGyO,KAAOA,MAE3J,CACD,MAAO,CAACpU,EAAMxM,EAClB,CAUA,SAASsjG,EAAWI,EAAavgG,EAAM66E,EAAOp/B,GAC1CqkD,EAAgBrkD,EAAS,CAACokD,EAAqBI,GAAIJ,EAAqBK,KACxE,MAAMM,EAAe,CAAC,WAChBC,EAAgB,CAACC,EAASH,EAAa1lB,IAC7C,IAAK,MAAMtvE,KAASsvE,EAAM0lB,GAAc,CACpC,GAAI9kD,IAAYokD,EAAqBI,SAA2BjiG,IAArBgC,EAAKuL,EAAMI,MAClD,SAEJ,MAAOtC,EAAMxM,GAASmjG,EAAYnlB,EAAOtvE,EAAMI,KAAMJ,EAAMlC,KAAMrJ,EAAKuL,EAAMI,MAAO8vC,GACnF+kD,EAAaphG,KAAKiK,GAClBo3F,EAAcrhG,KAAKvC,EACtB,CACD,OAAO,EAAIyjG,GAAuB3B,WAAW6B,EAAcC,EAC/D,CAQA,SAASE,EAAWJ,EAAa1lB,GAC7B,IAAIr4E,EAAS,GACb,MAAMo+F,EAAeC,EAAqBN,EAAa1lB,GACvD+lB,EAAahyD,OAAO2xD,GACpB,MAAMO,EAAO,CAACP,KAAgBxjG,MAAM4M,KAAKi3F,GAAcvtF,QACvD,IAAK,MAAMhK,KAAQy3F,EAAM,CAErB,IADiBjmB,EAAMxxE,GAEnB,MAAM,IAAIpL,MAAM,iCAAiCoL,KAErD7G,GAAU,GAAG6G,KAAQwxE,EAAMxxE,GACtB2F,IAAI,EAAGrD,OAAMtC,KAAMvM,KAAQ,GAAGA,KAAK6O,KACnC1C,KAAK,OACb,CACD,OAAOzG,CACX,CASA,SAASq+F,EAAqBN,EAAa1lB,EAAOkmB,EAAU,IAAIv4B,KAE5D,IADC+3B,GAAeA,EAAY5mE,MAAM,SAC9BonE,EAAQtjB,IAAI8iB,SAAuCviG,IAAvB68E,EAAM0lB,GAClC,OAAOQ,EAEXA,EAAQ96E,IAAIs6E,GACZ,IAAK,MAAMh1F,KAASsvE,EAAM0lB,GACtBM,EAAqBt1F,EAAMlC,KAAMwxE,EAAOkmB,GAE5C,OAAOA,CACX,CAUA,SAASC,EAAWT,EAAavgG,EAAM66E,EAAOp/B,GAE1C,OADAqkD,EAAgBrkD,EAAS,CAACokD,EAAqBI,GAAIJ,EAAqBK,MACjE,EAAI31B,GAAOpU,cAAa,EAAIwD,GAASlF,WAAW0rC,EAAWI,EAAavgG,EAAM66E,EAAOp/B,IAChG,CAQA,SAASilD,EAASH,EAAa1lB,GAC3B,MAAMomB,EAAkBphD,OAAOl2C,KAAKg3F,EAAWJ,EAAa1lB,GAAQ,SACpE,OAAO,EAAItQ,GAAOpU,cAAa,EAAIwD,GAASlF,WAAWwsC,GAC3D,CAOA,SAASC,EAAalhG,GAClB,MAAMmhG,EAAgB,CAAA,EACtB,IAAK,MAAMzwF,KAAOqb,EAAQq1E,qBAAqBC,WACvCrhG,EAAK0Q,KACLywF,EAAczwF,GAAO1Q,EAAK0Q,IAMlC,MAHI,UAAWywF,IACXA,EAActmB,MAAQtwE,OAAOC,OAAO,CAAE82F,aAAc,IAAMH,EAActmB,QAErEsmB,CACX,CA4DA,SAASI,EAAoBC,GACzB,MAAMlwF,EAAQ,IAAIrT,MAAM,yCACxB,GAAyB,iBAAdujG,KACL,WAAYA,KACbA,EAAUnkG,OACX,MAAMiU,EAEV,MAAMtR,EAAOwhG,EAAUxyF,IAAI,SAAUiC,GACjC,MAAe,UAAXA,EAAE5H,KACK4H,EAAEpU,OAEN,EAAI0pC,GAAQ0mD,gBAAgBh8E,EAAEpU,MAC7C,GACUg+E,EAAQ2mB,EAAUxyF,IAAI,SAAUiC,GAClC,OAAOA,EAAE5H,IACjB,GACU6/B,EAASs4D,EAAUxyF,IAAI,SAAUiC,GACnC,IAAKA,EAAEtF,KACH,MAAM2F,EAEV,MAAO,GAAGL,EAAE5H,QAAQ4H,EAAEtF,MAC9B,GACI,OAAO,EAAI4+D,GAAOpU,cAAa,EAAIwD,GAASlF,YAAW,EAAI6rC,GAAuBzB,cAAc,CAAC,UAAW,WAAY,EACpH,EAAIllC,GAASlF,YAAW,EAAI6rC,GAAuBzB,cAAc,IAAI9hG,MAAMykG,EAAUnkG,QAAQ43B,KAAK,UAAWiU,KAC7G,EAAIywB,GAASlF,YAAW,EAAI6rC,GAAuBzB,cAAchkB,EAAO76E,OAEhF,CAxTAuK,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAA01E,sBAAgC11E,gBAAwBA,EAA6B21E,mBAAA31E,EAAA41E,eAAyB51E,uBAA+BA,EAA+B8zE,0BAAA,EAkB5K,SAAWA,GACPA,EAAyB,GAAI,KAC7BA,EAAyB,GAAI,KAC7BA,EAAyB,GAAI,IAChC,CAJD,CAIGA,EAAuB9zE,EAAQ8zE,uBAAyB9zE,EAA+B8zE,qBAAA,CAAE,IAC5F9zE,EAA+Bq1E,qBAAA,CAC3B/3F,KAAM,SACNg4F,WAAY,CACRxmB,MAAO,CACHxxE,KAAM,SACNu4F,qBAAsB,CAClBv4F,KAAM,QACNw4F,MAAO,CACHx4F,KAAM,SACNg4F,WAAY,CACR11F,KAAM,CAAEtC,KAAM,UACdA,KAAM,CAAEA,KAAM,WAElBy4F,SAAU,CAAC,OAAQ,WAI/BvB,YAAa,CAAEl3F,KAAM,UACrB04F,OAAQ,CAAE14F,KAAM,UAChBxJ,QAAS,CAAEwJ,KAAM,WAErBy4F,SAAU,CAAC,QAAS,cAAe,SAAU,YAiNjD/1E,EAAyB41E,eAAA,CACrBxB,aACAQ,aACAE,uBACAG,aACAN,WACAQ,eACAc,WAtBJ,SAAoBR,EAAW/lD,GAC3BqkD,EAAgBrkD,EAAS,CAACokD,EAAqBI,GAAIJ,EAAqBK,KACxE,MAAMiB,EAAgBD,EAAaM,GAC7B1lD,EAAQ,CAAC+D,OAAOl2C,KAAK,OAAQ,QAOnC,OANAmyC,EAAM18C,KAAK4hG,EAAW,eAAgBG,EAAcY,OAAQZ,EAActmB,MAAOp/B,IAC/C,iBAA9B0lD,EAAcZ,aACdzkD,EAAM18C,KAAK4hG,EAEXG,EAAcZ,YAAaY,EAActhG,QAASshG,EAActmB,MAAOp/B,KAEpE,EAAI8uB,GAAOpU,cAAa,EAAIwD,GAASlF,WAAW5U,OAAOzsC,OAAO0oC,IACzE,GA0BA/vB,EAAA21E,mBAJA,SAA4BF,GACxB,MAAMS,EAAaV,EAAoBC,GACvC,OAAO,EAAIj3B,GAAO1T,aAAaorC,EACnC,EAuEAl2E,EAAAm2E,cAdA,UAAuBx5D,WAAEA,EAAU1oC,KAAEA,EAAIy7C,QAAEA,IAEvC,GADAqkD,EAAgBrkD,IACZ,EAAIlV,GAAQ2mD,WAAWltF,GACvB,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWxkD,GAC5B,MAAM,IAAIzqC,MAAM,iCAEpB,MAAMyvF,EAAcjyC,IAAYokD,EAAqBsC,GAC/CZ,EAAoBvhG,GACpB+rB,EAAQ41E,eAAeK,WAAWhiG,EAAMy7C,GACxC5wB,GAAM,EAAI0/C,GAAO7N,QAAQgxB,EAAahlD,GAC5C,OAAO,EAAInC,GAAQymD,YAAW,EAAIziB,GAAOzT,UAAUjsC,EAAIpN,GAAIoN,EAAIjT,EAAGiT,EAAI9jB,EAC1E,EA4BAglB,EAAA01E,sBAfA,UAA+BzhG,KAAEA,EAAI2nC,UAAEA,EAAS8T,QAAEA,IAE9C,GADAqkD,EAAgBrkD,IACZ,EAAIlV,GAAQ2mD,WAAWltF,GACvB,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWvlD,GAC5B,MAAM,IAAI1pC,MAAM,+BAEpB,MAAMyvF,EAAcjyC,IAAYokD,EAAqBsC,GAC/CZ,EAAoBvhG,GACpB+rB,EAAQ41E,eAAeK,WAAWhiG,EAAMy7C,GACxC1xB,GAAY,EAAIwc,GAAQ6N,kBAAkBs5C,EAAa/lD,GACvDsmD,GAAS,EAAI1jB,GAAOnS,iBAAiBruC,GAC3C,OAAO,EAAIwgD,GAAO1T,aAAao3B,EACnC,uBCnXC,SAAS9hE,EAAM7e,GAEuBwe,EAAOC,QAASD,EAAAC,QAAiBze,KAC7D6e,EAAK1U,OAEZ0U,EAAK1U,KAAO,IAFM0U,EAAK1U,KAAK2qF,KAAO90F,IAKvC,CARA,CAQE3O,GAAM,WAGN,IAAIyjG,EAAO,CAAA,EAEX,SAASC,EAAet7F,GACtB,IAAM,uFAAuFvC,KAAKuC,GAChG,MAAM,IAAIkhB,UAAU,mBAEvB,CA2DD,OAzDAm6E,EAAKE,WAAa,SAASv7F,GACzB,GAAiB,iBAANA,EAAgB,MAAM,IAAIkhB,UAAU,mBAC/C,IAAI7qB,EAAGuV,EAAI4vF,SAASlxF,mBAAmBtK,IAAKrJ,EAAI,IAAIE,WAAW+U,EAAEtV,QACjE,IAAKD,EAAI,EAAGA,EAAIuV,EAAEtV,OAAQD,IAAKM,EAAEN,GAAKuV,EAAErV,WAAWF,GACnD,OAAOM,CACX,EAEE0kG,EAAKI,WAAa,SAAS5vF,GACzB,IAAIxV,EAAG2J,EAAI,GACX,IAAK3J,EAAI,EAAGA,EAAIwV,EAAIvV,OAAQD,IAAK2J,EAAE3H,KAAK+C,OAAOiiD,aAAaxxC,EAAIxV,KAChE,OAAOqlG,mBAAmBC,OAAO37F,EAAEkC,KAAK,KAC5C,EAEsB,oBAAT05F,UAGkB,IAAhB9iD,OAAOl2C,MAEhBy4F,EAAKQ,aAAe,SAAUhwF,GAC1B,OAAOitC,OAAOl2C,KAAKiJ,GAAKnO,SAAS,SAC3C,EAEM29F,EAAKS,aAAe,SAAU97F,GAE5B,OADAs7F,EAAet7F,GACR,IAAInJ,WAAWb,MAAMqkB,UAAUxgB,MAAM4sB,KAAKqyB,OAAOl2C,KAAK5C,EAAG,UAAW,GACnF,IAIMq7F,EAAKQ,aAAe,SAAUhwF,GAC5B,OAAO,IAAKitC,OAAOjtC,GAAMnO,SAAS,SAC1C,EAEM29F,EAAKS,aAAe,SAAS97F,GAE3B,OADAs7F,EAAet7F,GACR,IAAInJ,WAAWb,MAAMqkB,UAAUxgB,MAAM4sB,KAAK,IAAIqyB,OAAO94C,EAAG,UAAW,GAClF,IAMIq7F,EAAKQ,aAAe,SAAShwF,GAC3B,IAAIxV,EAAG2J,EAAI,GAAIvB,EAAMoN,EAAIvV,OACzB,IAAKD,EAAI,EAAGA,EAAIoI,EAAKpI,IAAK2J,EAAE3H,KAAK+C,OAAOiiD,aAAaxxC,EAAIxV,KACzD,OAAO0lG,KAAK/7F,EAAEkC,KAAK,IACzB,EAEIm5F,EAAKS,aAAe,SAAS97F,GAC3Bs7F,EAAet7F,GACf,IAAI3J,EAAGuV,EAAIgwF,KAAK57F,GAAIrJ,EAAI,IAAIE,WAAW+U,EAAEtV,QACzC,IAAKD,EAAI,EAAGA,EAAIuV,EAAEtV,OAAQD,IAAKM,EAAEN,GAAKuV,EAAErV,WAAWF,GACnD,OAAOM,CACb,GAIS0kG,CAET,yBC/EA,IAAIl1B,EAAmBvuE,IAAQA,GAAKuuE,kBAAqB3iE,OAAO2I,OAAM,SAAaoG,EAAGtF,EAAG7G,EAAGu/B,QAC7E1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3B,IAAIk/E,EAAO9hF,OAAO+hF,yBAAyBt4E,EAAG7G,GACzCk/E,KAAS,QAASA,GAAQr4E,EAAE2/C,WAAa04B,EAAKthC,UAAYshC,EAAKt2C,gBAClEs2C,EAAO,CAAEj3E,YAAY,EAAM3C,IAAK,WAAa,OAAOuB,EAAE7G,EAAG,IAE3D5C,OAAO4K,eAAemE,EAAGozB,EAAI2/C,EAChC,EAAA,SAAc/yE,EAAGtF,EAAG7G,EAAGu/B,QACT1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3BmM,EAAEozB,GAAM14B,EAAE7G,EACb,GACG41F,EAAsBpkG,IAAQA,GAAKokG,qBAAwBx4F,OAAO2I,OAAM,SAAaoG,EAAGmE,GACxFlT,OAAO4K,eAAemE,EAAG,UAAW,CAAElE,YAAY,EAAMvY,MAAO4gB,GAClE,EAAI,SAASnE,EAAGmE,GACbnE,EAAW,QAAImE,CACnB,GACIulF,EAAgBrkG,IAAQA,GAAKqkG,cAAiB,SAAUj5D,GACxD,GAAIA,GAAOA,EAAI4pB,WAAY,OAAO5pB,EAClC,IAAIvnC,EAAS,CAAA,EACb,GAAW,MAAPunC,EAAa,IAAK,IAAI58B,KAAK48B,EAAe,YAAN58B,GAAmB5C,OAAO6W,UAAUhV,eAAeohB,KAAKuc,EAAK58B,IAAI+/D,EAAgB1qE,EAAQunC,EAAK58B,GAEtI,OADA41F,EAAmBvgG,EAAQunC,GACpBvnC,CACX,EACA+H,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAAk3E,uBAAiCl3E,gBAAwBA,EAAkBm3E,QAAAn3E,EAAAo3E,cAAwBp3E,EAAkBq3E,aAAA,EACrH,MAAM3rF,EAAOurF,EAAan3E,IACpBw3E,EAAWL,EAAa51B,IAW9B,SAASg2B,GAAQr5E,UAAEA,EAAS/pB,KAAEA,EAAIy7C,QAAEA,IAChC,IAAI,EAAIlV,GAAQ2mD,WAAWnjE,GACvB,MAAM,IAAI9rB,MAAM,+BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWltF,GAC5B,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWzxC,GAC5B,MAAM,IAAIx9C,MAAM,6BAEpB,GACS,6BADDw9C,EAC6B,CAC7B,GAAoB,iBAATz7C,EACP,MAAM,IAAI/B,MAAM,0CAGpB,MAAMqlG,EAAmB7rF,EAAK+R,IAAIY,UAElC,IAAIm5E,EACJ,IACIA,EAAmBF,EAASR,aAAa94E,EAI5C,CAFD,MAAOsyB,GACH,MAAM,IAAIp+C,MAAM,iBACnB,CACD,MAAMulG,EAAsBH,EAASf,WAAWtiG,GAC1CspB,EAAQ7R,EAAK2R,YAAY3R,EAAK+R,IAAIE,aAElC+5E,EAAmBhsF,EAAK+R,IAAIg6E,EAAqBl6E,EAAOi6E,EAAkBD,EAAiBt5E,WASjG,MAPe,CACXyxB,QAAS,2BACTnyB,MAAO+5E,EAAST,aAAat5E,GAC7Bo6E,eAAgBL,EAAST,aAAaU,EAAiBv5E,WACvD45E,WAAYN,EAAST,aAAaa,GAIzC,CAEG,MAAM,IAAIxlG,MAAM,wCAE5B,CAyDA,SAASilG,GAAQU,cAAEA,EAAal7D,WAAEA,IAC9B,IAAI,EAAInC,GAAQ2mD,WAAW0W,GACvB,MAAM,IAAI3lG,MAAM,mCAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWxkD,GAC5B,MAAM,IAAIzqC,MAAM,gCAEpB,GACS,6BADD2lG,EAAcnoD,QACe,CAE7B,MAAMooD,EAA+BC,EAAep7D,GAC9Cq7D,EAA+BtsF,EAAK+R,IAAIY,QAAQC,cAAcw5E,GAA8B75E,UAE5FV,EAAQ+5E,EAASR,aAAae,EAAct6E,OAC5Cq6E,EAAaN,EAASR,aAAae,EAAcD,YACjDD,EAAiBL,EAASR,aAAae,EAAcF,gBAErDM,EAAmBvsF,EAAK+R,IAAID,KAAKo6E,EAAYr6E,EAAOo6E,EAAgBK,GAE1E,IAAI5vF,EACJ,IACIA,EAASkvF,EAASb,WAAWwB,EAIhC,CAFD,MAAO3nD,GACH,MAAM,IAAIp+C,MAAM,qBACnB,CACD,GAAIkW,EACA,OAAOA,EAEX,MAAM,IAAIlW,MAAM,qBACnB,CAEG,MAAM,IAAIA,MAAM,yCAE5B,CAuCA,SAAS6lG,EAAeG,GACpB,MAAMC,EAAYrkD,OAAOl2C,KAAKs6F,EAAQ,OAAOx/F,SAAS,UACtD,OAAO4+F,EAASR,aAAaqB,EACjC,CApIAn4E,EAAAq3E,QAAkBA,EA+ClBr3E,EAAAo3E,cAlCA,UAAuBp5E,UAAEA,EAAS/pB,KAAEA,EAAIy7C,QAAEA,IACtC,IAAI,EAAIlV,GAAQ2mD,WAAWnjE,GACvB,MAAM,IAAI9rB,MAAM,+BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWltF,GAC5B,MAAM,IAAI/B,MAAM,0BAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWzxC,GAC5B,MAAM,IAAIx9C,MAAM,6BAIpB,GAAoB,iBAAT+B,GAAqB,WAAYA,EAGxC,MAAM,IAAI/B,MAAM,uEAGpB,MAAMkmG,EAAkB,CACpBnkG,OACA6tB,QAAS,IAIPu2E,EADavkD,OAAOj6C,WAAWoQ,KAAKK,UAAU8tF,GAAkB,SAbvC,KAe/B,IAAIE,EAAY,EAOhB,OALID,EAAS,IACTC,EAlB2B,KAkBUD,EAjBhB,IAmBzBD,EAAgBt2E,QAAU,IAAIhiB,OAAOw4F,GAE9BjB,EAAQ,CAAEr5E,YAAW/pB,KADNgW,KAAKK,UAAU8tF,GACY1oD,WACrD,EA6CA1vB,EAAAm3E,QAAkBA,EAmBlBn3E,EAAAu4E,cAVA,UAAuBV,cAAEA,EAAal7D,WAAEA,IACpC,IAAI,EAAInC,GAAQ2mD,WAAW0W,GACvB,MAAM,IAAI3lG,MAAM,mCAEf,IAAI,EAAIsoC,GAAQ2mD,WAAWxkD,GAC5B,MAAM,IAAIzqC,MAAM,gCAGpB,OADwB+X,KAAKC,MAAMitF,EAAQ,CAAEU,gBAAel7D,gBACrC1oC,IAC3B,EAaA+rB,EAAAk3E,uBALA,SAAgCv6D,GAC5B,MAAM67D,EAAuBT,EAAep7D,GACtC87D,EAAsB/sF,EAAK+R,IAAIY,QAAQC,cAAck6E,GAAsBx6E,UACjF,OAAOs5E,EAAST,aAAa4B,EACjC,wBCzMA,IAAIt3B,EAAmBvuE,IAAQA,GAAKuuE,kBAAqB3iE,OAAO2I,OAAM,SAAaoG,EAAGtF,EAAG7G,EAAGu/B,QAC7E1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3B,IAAIk/E,EAAO9hF,OAAO+hF,yBAAyBt4E,EAAG7G,GACzCk/E,KAAS,QAASA,GAAQr4E,EAAE2/C,WAAa04B,EAAKthC,UAAYshC,EAAKt2C,gBAClEs2C,EAAO,CAAEj3E,YAAY,EAAM3C,IAAK,WAAa,OAAOuB,EAAE7G,EAAG,IAE3D5C,OAAO4K,eAAemE,EAAGozB,EAAI2/C,EAChC,EAAA,SAAc/yE,EAAGtF,EAAG7G,EAAGu/B,QACT1uC,IAAP0uC,IAAkBA,EAAKv/B,GAC3BmM,EAAEozB,GAAM14B,EAAE7G,EACb,GACGggE,EAAgBxuE,IAAQA,GAAKwuE,cAAiB,SAASn5D,EAAG+X,GAC1D,IAAK,IAAIhuB,KAAKiW,EAAa,YAANjW,GAAoBwM,OAAO6W,UAAUhV,eAAeohB,KAAKzB,EAAShuB,IAAImvE,EAAgBnhD,EAAS/X,EAAGjW,EAC3H,EACAwM,OAAO4K,eAAc4W,EAAU,aAAc,CAAElvB,OAAO,IACtDkvB,EAAoB8V,UAAA9V,EAAAihE,eAAoB,EACxC7f,EAAathD,GAA4BE,GACzCohD,EAAaC,GAA8BrhD,GAC3CohD,EAAaE,GAAyBthD,GAEtCxhB,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO8zB,GAAQymD,SAAU,IAC5GziF,OAAO4K,eAAe4W,EAAS,YAAa,CAAE3W,YAAY,EAAM3C,IAAK,WAAc,OAAO8zB,GAAQ1E,SAAU,OdyB5G,SAAYqpD,GAIRA,EAAAA,EAAA,gBAAA,GAAA,kBAIAA,EAAAA,EAAA,kBAAA,IAAA,oBAIAA,EAAAA,EAAA,kBAAA,IAAA,mBACH,CAbD,CAAYA,KAAAA,GAaX,CAAA,IAID,SAAYC,GAIRA,EAAAA,EAAA,QAAA,GAAA,UAIAA,EAAAA,EAAA,QAAA,IAAA,UAIAA,EAAAA,EAAA,OAAA,IAAA,QACH,CAbD,CAAYA,KAAAA,GAaX,CAAA,IAcYsZ,MAAAA,GAAgB,IAZ7B,gBACI1gG,cACI0S,MAAM,+BAAgC,CAClC,CAAEvW,GAAI,EAAGyL,KAAM,QAASM,KAAM,SAAUwB,EAAG,GAC3C,CAAEvN,GAAI,EAAGyL,KAAM,WAAYM,KAAM,OAAQwB,EAAG,IAAM,CAAC,yBAA0B09E,KAC7E,CAAEjrF,GAAI,EAAGyL,KAAM,aAAcM,KAAM,OAAQwB,EAAG,IAAM,CAAC,2BAA4By9E,MAEzF,GekEQwZ,IAAAA,GAyBAC,IAzBZ,SAAYD,GAIRA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,cAAA,GAAA,gBAIAA,EAAAA,EAAA,YAAA,GAAA,cAIAA,EAAAA,EAAA,eAAA,GAAA,iBAIAA,EAAAA,EAAA,eAAA,GAAA,gBACH,CArBD,CAAYA,KAAAA,GAqBX,CAAA,IAID,SAAYC,GAIRA,EAAAA,EAAA,oBAAA,GAAA,sBAIAA,EAAAA,EAAA,gBAAA,GAAA,kBAIAA,EAAAA,EAAA,mBAAA,GAAA,qBAMAA,EAAAA,EAAA,iBAAA,GAAA,kBACH,CAnBD,CAAYA,KAAAA,GAmBX,CAAA,IAgBM,SAAyB,IAdhC,gBACI5gG,cACI0S,MAAM,sCAAuC,CACzC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,UAAWwB,EAAG,IAAMg3F,IACjD,CAAEvkG,GAAI,EAAGyL,KAAM,SAAUM,KAAM,OAAQwB,EAAG,IAAM,CAAC,oCAAqCi3F,KACtF,CAAExkG,GAAI,EAAGyL,KAAM,aAAcM,KAAM,SAAUwB,EAAG,IAChD,CAAEvN,GAAI,EAAGyL,KAAM,uBAAwBM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMm3F,IAClG,CAAE1kG,GAAI,EAAGyL,KAAM,qBAAsBM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMo3F,KAExG,GAkB2BD,GAAG,IAXlC,gBACI7gG,cACI0S,MAAM,wCAAyC,CAC3C,CAAEvW,GAAI,EAAGyL,KAAM,QAASM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMuJ,IACnF,CAAE9W,GAAI,EAAGyL,KAAM,kBAAmBM,KAAM,SAAUwB,EAAG,IAE7D,GAoBSo3F,GAAmB,IAbhC,gBACI9gG,cACI0S,MAAM,sCAAuC,CACzC,CAAEvW,GAAI,EAAGyL,KAAM,kBAAmBM,KAAM,SAAUwB,EAAG,GACrD,CAAEvN,GAAI,EAAGyL,KAAM,YAAaM,KAAM,SAAUJ,OAAQ,EAA2B4B,EAAG,IAClF,CAAEvN,GAAI,EAAGyL,KAAM,MAAOM,KAAM,SAAUJ,OAAQ,EAA2B4B,EAAG,GAC5E,CAAEvN,GAAI,EAAGyL,KAAM,QAASM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMq3F,KAE3F,GAiBSA,GAAe,IAV5B,cAAgClwF,EAC5B7Q,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUJ,OAAQ,EAA2B4B,EAAG,IAEvF,GAsB+B,IAfnC,cAAuCmH,EACnC7Q,cACI0S,MAAM,yCAA0C,CAC5C,CAAEvW,GAAI,EAAGyL,KAAM,WAAYM,KAAM,SAAUwB,EAAG,IAC9C,CAAEvN,GAAI,EAAGyL,KAAM,WAAYM,KAAM,SAAUwB,EAAG,GAC9C,CAAEvN,GAAI,EAAGyL,KAAM,QAASM,KAAM,SAAUwB,EAAG,IAC3C,CAAEvN,GAAI,EAAGyL,KAAM,KAAMM,KAAM,SAAUwB,EAAG,IACxC,CAAEvN,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,GAC5C,CAAEvN,GAAI,EAAGyL,KAAM,OAAQM,KAAM,UAAWwB,EAAG,IAAMg3F,KAEzD,SAmBqBM,GAAG,IAZ5B,cAAgCnwF,EAC5B7Q,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,YAAaM,KAAM,SAAUwB,EAAG,IAC/C,CAAEvN,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,IAC7C,CAAEvN,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,OAAQwB,EAAG,IAAM,CAAC,iCAAkCk3F,MAEjG,GCnRG,MAAMK,WAAiB/mG,MAC1B8F,YAAYlE,EAAS0vB,EAAO,UAAW01E,GACnCxuF,MAAM5W,GACNlB,KAAKgN,KAAO,WAEZpB,OAAO41C,eAAexhD,gBAAiByiB,WACvCziB,KAAK4wB,KAAOA,EACZ5wB,KAAKsmG,KAAOA,QAAmCA,EAAO,EACzD,CACDxgG,WACI,MAAMmU,EAAI,CAACja,KAAKgN,KAAO,KAAOhN,KAAKkB,SAC/BlB,KAAK4wB,OACL3W,EAAExZ,KAAK,IACPwZ,EAAExZ,KAAK,SAAWT,KAAK4wB,OAEvB5wB,KAAKumG,aAAevmG,KAAKkwB,YACzBjW,EAAExZ,KAAK,WAAaT,KAAKumG,YAAc,IAAMvmG,KAAKkwB,YAEtD,IAAI7a,EAAIzJ,OAAO2F,QAAQvR,KAAKsmG,MAC5B,GAAIjxF,EAAE3W,OAAQ,CACVub,EAAExZ,KAAK,IACPwZ,EAAExZ,KAAK,SACP,IAAK,IAAK+N,EAAGsQ,KAAMzJ,EACf4E,EAAExZ,KAAK,KAAK+N,MAAMsQ,IAEzB,CACD,OAAO7E,EAAE3P,KAAK,KACjB,ECmBL,SAASsM,GAAKpL,EAAGg7F,GACb,IAAKh7F,EACD,OACJ,IAAIG,EAAI66F,EACR,IAAK,IAAKh4F,EAAGsQ,KAAMlT,OAAO2F,QAAQ/F,GAE1BG,EAAE6C,GADFsQ,aAAagf,KACN,IAAIA,KAAKhf,EAAE2nF,WACbroG,MAAMC,QAAQygB,GACZA,EAAErK,SAEFqK,CAEnB,CC7DO,IAAI4nF,GCkBAC,GC4FAC,IF7GX,SAAWF,GACPA,EAAcA,EAAuB,QAAI,GAAK,UAC9CA,EAAcA,EAAwB,SAAI,GAAK,WAC/CA,EAAcA,EAAwB,SAAI,GAAK,UAClD,CAJD,CAIGA,KAAkBA,GAAgB,CAAE,IAShC,MAAMG,GAaTzhG,YAAY0hG,GAAmC,GAC3C9mG,KAAK+mG,OAASL,GAAcM,QAC5BhnG,KAAKinG,SAAW,IAAIhb,QAAQ,CAACC,EAASC,KAClCnsF,KAAKknG,SAAWhb,EAChBlsF,KAAKmnG,QAAUhb,CAAM,GAErB2a,GACA9mG,KAAKinG,SAASha,MAAMx1C,MAE3B,CAIG9gB,YACA,OAAO32B,KAAK+mG,MACf,CAIGK,cACA,OAAOpnG,KAAKinG,QACf,CAID/a,QAAQhuF,GACJ,GAAI8B,KAAK22B,QAAU+vE,GAAcM,QAC7B,MAAM,IAAI1nG,MAAM,kBAAkBonG,GAAc1mG,KAAK22B,OAAOpqB,iBAChEvM,KAAKknG,SAAShpG,GACd8B,KAAK+mG,OAASL,GAAcW,QAC/B,CAIDlb,OAAOmb,GACH,GAAItnG,KAAK22B,QAAU+vE,GAAcM,QAC7B,MAAM,IAAI1nG,MAAM,iBAAiBonG,GAAc1mG,KAAK22B,OAAOpqB,iBAC/DvM,KAAKmnG,QAAQG,GACbtnG,KAAK+mG,OAASL,GAAca,QAC/B,CAIDC,eAAe51F,GACP5R,KAAK+mG,SAAWL,GAAcM,SAC9BhnG,KAAKksF,QAAQt6E,EACpB,CAID61F,cAAcH,GACNtnG,KAAK+mG,SAAWL,GAAcM,SAC9BhnG,KAAKmsF,OAAOmb,EACnB,EG3EE,MAAMI,GACTtiG,cACIpF,KAAK2nG,KAAO,CACRC,IAAK,GACLz+F,IAAK,GACLu0C,IAAK,GACL4yC,IAAK,IAETtwF,KAAK6nG,SAAU,CAClB,CAEDC,OAAOlb,GACH,OAAO5sF,KAAK+nG,OAAOnb,EAAU5sF,KAAK2nG,KAAKC,IAC1C,CACDI,UAAUpb,GACN,OAAO5sF,KAAK+nG,OAAOnb,EAAU5sF,KAAK2nG,KAAKx+F,IAC1C,CACD8+F,QAAQrb,GACJ,OAAO5sF,KAAK+nG,OAAOnb,EAAU5sF,KAAK2nG,KAAKjqD,IAC1C,CACDwqD,WAAWtb,GACP,OAAO5sF,KAAK+nG,OAAOnb,EAAU5sF,KAAK2nG,KAAKrX,IAC1C,CACDyX,OAAOnb,EAAUlrF,GAEb,OADAA,EAAKjB,KAAKmsF,GACH,KACH,IAAInuF,EAAIiD,EAAKd,QAAQgsF,GACjBnuF,GAAK,GACLiD,EAAKyrF,OAAO1uF,EAAG,EAAE,CAE5B,CAED0pG,WACI,IAAK,IAAIluF,KAAKrO,OAAOwC,OAAOpO,KAAK2nG,MAC7B1tF,EAAEkzE,OAAO,EAAGlzE,EAAEvb,OACrB,CAKG0pG,aACA,OAAwB,IAAjBpoG,KAAK6nG,OACf,CAMDQ,WAAWnnG,EAASyR,EAAO21F,GACvBr/F,GAAQ/H,EAAU,EAAI,IAAMyR,EAAQ,EAAI,IAAM21F,EAAW,EAAI,IAAM,EAAG,+BAClEpnG,GACAlB,KAAKuoG,cAAcrnG,GACnByR,GACA3S,KAAKwoG,YAAY71F,GACjB21F,GACAtoG,KAAKyoG,gBACZ,CAMDF,cAAcrnG,GACV+H,GAAQjJ,KAAKooG,OAAQ,oBACrBpoG,KAAK0oG,OAAO,CAAExqG,MAAOgD,EAASmiC,MAAM,IACpCrjC,KAAK2nG,KAAKx+F,IAAIi6B,QAAQnpB,GAAKA,EAAE/Y,IAC7BlB,KAAK2nG,KAAKC,IAAIxkE,QAAQnpB,GAAKA,EAAE/Y,OAAS7B,GAAW,GACpD,CAMDmpG,YAAY71F,GACR1J,GAAQjJ,KAAKooG,OAAQ,oBACrBpoG,KAAK6nG,QAAUl1F,EACf3S,KAAK0oG,OAAO/1F,GACZ3S,KAAK2nG,KAAKjqD,IAAIta,QAAQnpB,GAAKA,EAAEtH,IAC7B3S,KAAK2nG,KAAKC,IAAIxkE,QAAQnpB,GAAKA,OAAE5a,EAAWsT,GAAO,IAC/C3S,KAAKmoG,UACR,CAMDM,iBACIx/F,GAAQjJ,KAAKooG,OAAQ,oBACrBpoG,KAAK6nG,SAAU,EACf7nG,KAAK0oG,OAAO,CAAExqG,MAAO,KAAMmlC,MAAM,IACjCrjC,KAAK2nG,KAAKrX,IAAIltD,QAAQnpB,GAAKA,KAC3Bja,KAAK2nG,KAAKC,IAAIxkE,QAAQnpB,GAAKA,OAAE5a,OAAWA,GAAW,IACnDW,KAAKmoG,UACR,CAcD,CAACrnG,OAAO6nG,iBAcJ,OAZK3oG,KAAK4oG,WACN5oG,KAAK4oG,SAAW,CAAE5pF,EAAG,MAMJ,IAAjBhf,KAAK6nG,QACL7nG,KAAK0oG,OAAO,CAAExqG,MAAO,KAAMmlC,MAAM,KACX,IAAjBrjC,KAAK6nG,SACV7nG,KAAK0oG,OAAO1oG,KAAK6nG,SAEd,CACHz7F,KAAM,KACF,IAAIuqB,EAAQ32B,KAAK4oG,SACjB3/F,EAAO0tB,EAAO,aAGd1tB,GAAQ0tB,EAAMv3B,EAAG,4BAGjB,IAAI4pD,EAAQryB,EAAM3X,EAAEjf,QACpB,OAAIipD,EACQ,UAAWA,EAASijC,QAAQC,QAAQljC,GAASijC,QAAQE,OAAOnjC,IAGxEryB,EAAMv3B,EAAI,IAAIynG,GACPlwE,EAAMv3B,EAAEgoG,QAAO,EAGjC,CAGDsB,OAAO7kG,GACH,IAAI8yB,EAAQ32B,KAAK4oG,SACjB,GAAKjyE,EAGL,GAAIA,EAAMv3B,EAAG,CAET,MAAMA,EAAIu3B,EAAMv3B,EAChB6J,EAAO7J,EAAEu3B,OAAS+vE,GAAcM,QAAS,4BAExC,UAAWnjG,EAAUzE,EAAE8sF,QAAQroF,GAAUzE,EAAE+sF,OAAOtoF,UAE5C8yB,EAAMv3B,CAChB,MAIGu3B,EAAM3X,EAAEve,KAAKoD,EAEpB,ECzJE,MAAMglG,GACTzjG,YAAY8P,EAAQ4zF,EAAgBC,EAASC,EAASC,EAAUC,EAAQC,GACpEnpG,KAAKkV,OAASA,EACdlV,KAAK8oG,eAAiBA,EACtB9oG,KAAK+oG,QAAUA,EACf/oG,KAAKgpG,QAAUA,EACfhpG,KAAKipG,SAAWA,EAChBjpG,KAAKkpG,OAASA,EACdlpG,KAAKmpG,SAAWA,CACnB,CAKDnc,KAAKoc,EAAaC,GACd,OAAOrpG,KAAKspG,kBAAkBtc,KAAK9uF,GAASkrG,EAAcnd,QAAQC,QAAQkd,EAAYlrG,IAAUA,EAAOopG,GAAU+B,EAAapd,QAAQC,QAAQmd,EAAW/B,IAAWrb,QAAQE,OAAOmb,GACtL,CACDgC,kBACI,OA/B8CC,EA+B7BvpG,KA/BqDwpG,EA+B/B,YACnC,IAAKR,EAASC,EAAUC,EAAQC,SAAkBld,QAAQpqF,IAAI,CAAC7B,KAAKgpG,QAAShpG,KAAKipG,SAAUjpG,KAAKkpG,OAAQlpG,KAAKmpG,WAC9G,MAAO,CACHj0F,OAAQlV,KAAKkV,OACb4zF,eAAgB9oG,KAAK8oG,eACrBC,QAAS/oG,KAAK+oG,QACdC,UACAC,WACAC,SACAC,WAEhB,EAxCW,KAFgEp+D,OA+BpC,KA7BjBA,EAAIkhD,UAAU,SAAUC,EAASC,GAC/C,SAASsd,EAAUvrG,GAAS,IAAMwrG,EAAKF,EAAUp9F,KAAKlO,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC3F,SAASq3F,EAASzrG,GAAS,IAAMwrG,EAAKF,EAAiB,MAAEtrG,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC9F,SAASo3F,EAAK7lG,GAJlB,IAAe3F,EAIa2F,EAAOw/B,KAAO6oD,EAAQroF,EAAO3F,QAJ1CA,EAIyD2F,EAAO3F,MAJhDA,aAAiB6sC,EAAI7sC,EAAQ,IAAI6sC,EAAE,SAAUmhD,GAAWA,EAAQhuF,EAAO,IAIhB8uF,KAAKyc,EAAWE,EAAY,CAC9GD,GAAMF,EAAYA,EAAU7kE,MAAM4kE,EAAuB,KAAKn9F,OACtE,GAP4C,IAAUm9F,EAAqBx+D,EAAGy+D,CA2CzE,EC9BE,MAAMI,GACTxkG,YAAY8P,EAAQ4zF,EAAgBC,EAASC,EAASC,EAAUC,EAAQC,GACpEnpG,KAAKkV,OAASA,EACdlV,KAAK8oG,eAAiBA,EACtB9oG,KAAK+oG,QAAUA,EACf/oG,KAAKgpG,QAAUA,EACfhpG,KAAK6pG,UAAYZ,EACjBjpG,KAAKkpG,OAASA,EACdlpG,KAAKmpG,SAAWA,CACnB,CAODnc,KAAKoc,EAAaC,GACd,OAAOrpG,KAAKspG,kBAAkBtc,KAAK9uF,GAASkrG,EAAcnd,QAAQC,QAAQkd,EAAYlrG,IAAUA,EAAOopG,GAAU+B,EAAapd,QAAQC,QAAQmd,EAAW/B,IAAWrb,QAAQE,OAAOmb,GACtL,CACDgC,kBACI,OAjC8CC,EAiC7BvpG,KAjCqDwpG,EAiC/B,YACnC,IAAKR,EAASE,EAAQC,SAAkBld,QAAQpqF,IAAI,CAAC7B,KAAKgpG,QAAShpG,KAAKkpG,OAAQlpG,KAAKmpG,WACrF,MAAO,CACHj0F,OAAQlV,KAAKkV,OACb4zF,eAAgB9oG,KAAK8oG,eACrBC,QAAS/oG,KAAK+oG,QACdC,UACAE,SACAC,WAEhB,EAzCW,KAFgEp+D,OAiCpC,KA/BjBA,EAAIkhD,UAAU,SAAUC,EAASC,GAC/C,SAASsd,EAAUvrG,GAAS,IAAMwrG,EAAKF,EAAUp9F,KAAKlO,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC3F,SAASq3F,EAASzrG,GAAS,IAAMwrG,EAAKF,EAAiB,MAAEtrG,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC9F,SAASo3F,EAAK7lG,GAJlB,IAAe3F,EAIa2F,EAAOw/B,KAAO6oD,EAAQroF,EAAO3F,QAJ1CA,EAIyD2F,EAAO3F,MAJhDA,aAAiB6sC,EAAI7sC,EAAQ,IAAI6sC,EAAE,SAAUmhD,GAAWA,EAAQhuF,EAAO,IAIhB8uF,KAAKyc,EAAWE,EAAY,CAC9GD,GAAMF,EAAYA,EAAU7kE,MAAM4kE,EAAuB,KAAKn9F,OACtE,GAP4C,IAAUm9F,EAAqBx+D,EAAGy+D,CA4CzE,ECtCE,SAASM,GAAex8F,EAAMy8F,EAAW70F,EAAQ9D,EAASD,GAC7D,IAAI1F,EAAIC,EAAImB,EAAIC,EAChB,GAAY,SAARQ,EAAiB,CACjB,IAAI08F,EAAO,CAACC,EAAKvvF,EAAKtN,IAAQ28F,EAAUG,MAAMD,EAAKvvF,EAAKtN,GACxD,IAAK,MAAM+8F,KAAyC,QAA/B1+F,EAAK2F,EAAQg5F,oBAAiC,IAAP3+F,EAAgBA,EAAK,IAAI3J,OAAOrD,GAAKA,EAAE4rG,gBAAgB1nE,UAAW,CAC1H,MAAMv2B,EAAO49F,EACbA,EAAO,CAACC,EAAKvvF,EAAKtN,IAAQ+8F,EAAKE,eAAej+F,EAAM69F,EAAKvvF,EAAKtN,EACjE,CACD,OAAO48F,EAAK90F,EAAQ/D,EAAOC,EAC9B,CACD,GAAY,mBAAR9D,EAA2B,CAC3B,IAAI08F,EAAO,CAACC,EAAKvvF,EAAKtN,IAAQ28F,EAAUO,gBAAgBL,EAAKvvF,EAAKtN,GAClE,IAAK,MAAM+8F,KAAyC,QAA/Bz+F,EAAK0F,EAAQg5F,oBAAiC,IAAP1+F,EAAgBA,EAAK,IAAI5J,OAAOrD,GAAKA,EAAE8rG,0BAA0B5nE,UAAW,CACpI,MAAMv2B,EAAO49F,EACbA,EAAO,CAACC,EAAKvvF,EAAKtN,IAAQ+8F,EAAKI,yBAAyBn+F,EAAM69F,EAAKvvF,EAAKtN,EAC3E,CACD,OAAO48F,EAAK90F,EAAQ/D,EAAOC,EAC9B,CACD,GAAY,mBAAR9D,EAA2B,CAC3B,IAAI08F,EAAO,CAACC,EAAK78F,IAAQ28F,EAAUS,gBAAgBP,EAAK78F,GACxD,IAAK,MAAM+8F,KAAyC,QAA/Bt9F,EAAKuE,EAAQg5F,oBAAiC,IAAPv9F,EAAgBA,EAAK,IAAI/K,OAAOrD,GAAKA,EAAEgsG,0BAA0B9nE,UAAW,CACpI,MAAMv2B,EAAO49F,EACbA,EAAO,CAACC,EAAK78F,IAAQ+8F,EAAKM,yBAAyBr+F,EAAM69F,EAAK78F,EACjE,CACD,OAAO48F,EAAK90F,EAAQ9D,EACvB,CACD,GAAY,UAAR9D,EAAkB,CAClB,IAAI08F,EAAO,CAACC,EAAK78F,IAAQ28F,EAAUW,OAAOT,EAAK78F,GAC/C,IAAK,MAAM+8F,KAAyC,QAA/Br9F,EAAKsE,EAAQg5F,oBAAiC,IAAPt9F,EAAgBA,EAAK,IAAIhL,OAAOrD,GAAKA,EAAEksG,iBAAiBhoE,UAAW,CAC3H,MAAMv2B,EAAO49F,EACbA,EAAO,CAACC,EAAK78F,IAAQ+8F,EAAKQ,gBAAgBv+F,EAAM69F,EAAK78F,EACxD,CACD,OAAO48F,EAAK90F,EAAQ9D,EACvB,EnK5BE,SAAqBlT,EAAOiL,GAC/B,MAAM,IAAI7J,MAA6C,sBAAwBpB,EACnF,CmK2BI0sG,CAAYt9F,EAChB,CJ1BO,SAASu9F,GAA2B7B,EAAS8B,EAAQC,EAASzE,EAAM0E,GAEvE,GAAI1E,EACA,IAAK,IAAK93F,EAAGsQ,KAAMlT,OAAO2F,QAAQ+0F,GAC9B,GAAgB,iBAALxnF,EACPkqF,EAAQiC,OAAOz8F,EAAGsQ,QAElB,IAAK,IAAIrgB,KAAKqgB,EACVkqF,EAAQiC,OAAOz8F,EAAG/P,GAclC,GAVAuqG,EAAQ5+F,IAAI,eAA2B,SAAX0gG,EAAoB,4BAA8B,8BAChE,QAAVA,GAIA9B,EAAQ5+F,IAAI,SAAU,6BAE1B4+F,EAAQ5+F,IAAI,aAAc,KACtB4gG,GACAhC,EAAQ5+F,IAAI,eAAgB4gG,GACT,iBAAZD,EAAsB,CAC7B,GAAIA,GAAW,EAEX,MAAM,IAAI1E,GAAS,WAAW0E,gBAAuBpE,GAAeA,GAAeuE,oBAEvFlC,EAAQ5+F,IAAI,eAAgB,GAAG2gG,KAClC,MACI,GAAIA,EAAS,CACd,MAAMI,EAAWJ,EAAQtE,UACnB1oE,EAAMD,KAAKC,MACjB,GAAIotE,GAAYptE,EAEZ,MAAM,IAAIsoE,GAAS,YAAY0E,aAAoBpE,GAAeA,GAAeuE,oBAErFlC,EAAQ5+F,IAAI,eAAmB+gG,EAAWptE,EAAd,IAC/B,CACD,OAAOirE,CACX,CACO,SAASoC,GAAyBlqG,EAAS4pG,GAC9C,IAAInwC,EAAO,IAAI17D,WAAW,EAAIiC,EAAQxC,QACtCi8D,EAAK,GAAKisC,GAAayE,KAEvB,IAAK,IAAIC,EAASpqG,EAAQxC,OAAQD,EAAI,EAAGA,EAAI,EAAGA,IAC5Ck8D,EAAKl8D,GAAM6sG,EAAS,IACpBA,KAAY,EAGhB,OADA3wC,EAAKvwD,IAAIlJ,EAAS,GACA,WAAX4pG,EAAsBnwC,EAAOn7D,EAAam7D,EACrD,CACO,SAAS4wC,GAA0BC,EAAwBC,EAAYC,GAC1E,GAAyB,IAArBriF,UAAU3qB,OAAc,CACxB,IAKIitG,EALAC,EAAgBJ,EAMpB,IACIG,EAAeC,EAAclhG,IAEnB,CAAd,MAAOe,GAAO,CACd,OAAQkgG,GACJ,IAAK,QACL,IAAK,SACL,IAAK,iBAED,MAAM,IAAItF,GAAS,uBAAuBuF,EAAclhG,OAAQi8F,GAAeA,GAAekF,UAEtG,OAAON,GAA0BO,GAAmBF,EAAc5C,SAAU4C,EAAc1C,OAAQ0C,EAAcG,WACnH,CACD,IAAI/C,EAAUwC,EAAwBQ,EAASP,GAAc,KAAOA,EAAa,IAAKQ,EAAeC,GAAclD,IAAWmD,EAAYC,GAAgBC,GAAYrD,GAKtK,YAJoB3pG,IAAf8sG,GAA4BA,IAAexF,GAAe2F,IAAQN,IACnEG,EAAaI,GAAiBd,GAC9BW,EAAeV,GAEZ,CAACS,EAAYC,EAAcH,EACtC,CASO,SAASO,GAA2BnrG,GACvC,IAAI2nG,EAoJR,SAAsByD,GAClB,IAAIzD,EAAU,CAAA,EACd,IAAK,IAAIz+F,KAAS/G,OAAOiiD,aAAa9gB,MAAMnhC,OAAQipG,GAAa7mG,OAAOrH,MAAM,QAAS,CACnF,GAAa,IAATgM,EACA,SACJ,IAAKwH,KAAQH,GAAOrH,EAAMhM,MAAM,KAChC,MAAML,EAAQ0T,EAAItH,KAAK,KAAK1E,OAC5BmM,EAAMA,EAAInM,OACV,IAAI0M,EAAI02F,EAAQj3F,GACA,iBAALO,EACP02F,EAAQj3F,GAAO,CAACO,EAAGpU,GACdE,MAAMC,QAAQiU,GACnBA,EAAE7R,KAAKvC,GAEP8qG,EAAQj3F,GAAO7T,CACtB,CACD,OAAO8qG,CACX,CArKkB0D,CAAarrG,IAAQuvB,EAAM+7E,GAAUN,GAAYrD,GAAU1C,EAAO4F,GAAclD,GAC9F,MAAO,CAACp4E,QAAmCA,EAAO+1E,GAAe2F,GAAIK,EAAQrG,EACjF,CAkBO,SAASsG,GAAwBp7C,EAAQq7C,EAAaC,GACzD,OA5HkDvD,EA4HjCvpG,KA5HyDwpG,EA4HnC,YACnC,IAAIuD,EAAcC,EAAc,GAAIC,EAAY,IAAIhuG,WAAW,GAAI6rG,EAuE3E,SAAqB+B,GAOjB,OAAQA,GACJ,IAAK,4BACL,IAAK,kCACD,MAAO,OACX,IAAK,uBACL,IAAK,6BACD,MAAO,SACX,UAAKxtG,EACL,KAAK,KACD,MAAM,IAAIgnG,GAAS,gCAAiCM,GAAeA,GAAeuG,WACtF,QACI,MAAM,IAAI7G,GAAS,qCAAuCwG,EAAalG,GAAeA,GAAeuG,WAEjH,CA3FoFC,CAAYN,GAGxF,GAAIO,GAAiB57C,GAAS,CAC1B,IAAI67C,EAAuB77C,EAAO87C,YAClCP,EAAe,CACX3gG,KAAM,IAAMihG,EAAqBn8F,OAExC,MAEG67F,EAAev7C,EAAO1wD,OAAO6nG,iBAEjC,OAAa,CACT,IAAI9kG,QAAekpG,EAAa3gG,OAChC,QAAqB/M,IAAjBwE,EAAO3F,MAAqB,CAC5B,GAAe,SAAX4sG,EAAmB,CAGnB,IAAK,IAAIrsG,EAAI,EAAGA,EAAIoF,EAAO3F,MAAMQ,OAAQD,IACrCuuG,GAAexpG,OAAOiiD,aAAa5hD,EAAO3F,MAAMO,IAGpD,IAAI8uG,EAAUP,EAAYtuG,OAASsuG,EAAYtuG,OAAS,EACxD,GAAgB,IAAZ6uG,EACA,SAEJN,EAAY13E,GAAY03E,EAAWruG,EAAaouG,EAAY56F,UAAU,EAAGm7F,KACzEP,EAAcA,EAAY56F,UAAUm7F,EACvC,MAEGN,EAAY13E,GAAY03E,EAAWppG,EAAO3F,OAG9C,KAAO+uG,EAAUvuG,QAAU,GAAKuuG,EAAU,KAAOrG,GAAayE,MAAM,CAChE,IAAIC,EAAS,EACb,IAAK,IAAI7sG,EAAI,EAAGA,EAAI,EAAGA,IACnB6sG,GAAUA,GAAU,GAAK2B,EAAUxuG,GACvC,KAAIwuG,EAAUvuG,OAAS,GAAK4sG,GAMxB,MAJAwB,EAAQlG,GAAayE,KAAM4B,EAAU1tG,SAAS,EAAG,EAAI+rG,IACrD2B,EAAYA,EAAU1tG,SAAS,EAAI+rG,EAI1C,CACJ,CAED,GAAIznG,EAAOw/B,KAAM,CACb,GAAyB,IAArB4pE,EAAUvuG,OACV,MACJ,GAAIuuG,EAAU,KAAOrG,GAAa4G,SAAWP,EAAUvuG,OAAS,EAC5D,MAAM,IAAI2nG,GAAS,gBAAiBM,GAAeA,GAAe8G,YACtEX,EAAQlG,GAAa4G,QAASP,EAAU1tG,SAAS,IACjD,KACH,CACJ,CACT,EAnLW,KAFgEwrC,OA4HxC,KA1HbA,EAAIkhD,UAAU,SAAUC,EAASC,GAC/C,SAASsd,EAAUvrG,GAAS,IAAMwrG,EAAKF,EAAUp9F,KAAKlO,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC3F,SAASq3F,EAASzrG,GAAS,IAAMwrG,EAAKF,EAAiB,MAAEtrG,IAAW,MAAOoU,GAAK65E,EAAO75E,GAAO,CAC9F,SAASo3F,EAAK7lG,GAJlB,IAAe3F,EAIa2F,EAAOw/B,KAAO6oD,EAAQroF,EAAO3F,QAJ1CA,EAIyD2F,EAAO3F,MAJhDA,aAAiB6sC,EAAI7sC,EAAQ,IAAI6sC,EAAE,SAAUmhD,GAAWA,EAAQhuF,EAAO,IAIhB8uF,KAAKyc,EAAWE,EAAY,CAC9GD,GAAMF,EAAYA,EAAU7kE,MAAM4kE,EAAuB,KAAKn9F,OACtE,GAP4C,IAAUm9F,EAAqBx+D,EAAGy+D,CAsL9E,EDnKA,SAAW7C,GAIPA,EAAeA,EAAmB,GAAI,GAAK,KAI3CA,EAAeA,EAA0B,UAAI,GAAK,YAOlDA,EAAeA,EAAwB,QAAI,GAAK,UAOhDA,EAAeA,EAAiC,iBAAI,GAAK,mBAQzDA,EAAeA,EAAkC,kBAAI,GAAK,oBAI1DA,EAAeA,EAA0B,UAAI,GAAK,YAKlDA,EAAeA,EAA+B,eAAI,GAAK,iBAQvDA,EAAeA,EAAkC,kBAAI,GAAK,oBAK1DA,EAAeA,EAAgC,gBAAI,IAAM,kBAKzDA,EAAeA,EAAmC,mBAAI,GAAK,qBAqB3DA,EAAeA,EAAoC,oBAAI,GAAK,sBAQ5DA,EAAeA,EAAwB,QAAI,IAAM,UAgBjDA,EAAeA,EAA6B,aAAI,IAAM,eAItDA,EAAeA,EAA8B,cAAI,IAAM,gBAKvDA,EAAeA,EAAyB,SAAI,IAAM,WAQlDA,EAAeA,EAA4B,YAAI,IAAM,cAIrDA,EAAeA,EAA0B,UAAI,IAAM,WACtD,CA5HD,CA4HGA,KAAmBA,GAAiB,CAAA,IChCvC,SAAWC,GACPA,EAAaA,EAAmB,KAAI,GAAK,OACzCA,EAAaA,EAAsB,QAAI,KAAO,SACjD,CAHD,CAGGA,KAAiBA,GAAe,CAAE,IAsErC,MAAMwG,GAAoBhlG,GACO,mBAAfA,EAAEklG,UAGpB,SAAS/3E,GAAY/pB,EAAGzM,GACpB,IAAIsH,EAAI,IAAIpH,WAAWuM,EAAE9M,OAASK,EAAEL,QAGpC,OAFA2H,EAAE+D,IAAIoB,GACNnF,EAAE+D,IAAIrL,EAAGyM,EAAE9M,QACJ2H,CACX,CAyBA,SAASgmG,GAAYrD,GACjB,IAAIp4E,EAAM1vB,EACNmU,EAAI2zF,EAAQ,gBAChB,QAAU3pG,IAANgW,EAAiB,CACjB,GAAIjX,MAAMC,QAAQgX,GACd,MAAO,CAACsxF,GAAeuG,SAAU,4BACrChsG,EAAUmU,CACb,CACD,IAAIjN,EAAI4gG,EAAQ,eAChB,QAAU3pG,IAAN+I,EAAiB,CACjB,GAAIhK,MAAMC,QAAQ+J,GACd,MAAO,CAACu+F,GAAeuG,SAAU,2BAErC,GADAt8E,EAAOlgB,SAAStI,EAAG,SACU/I,IAAzBsnG,GAAe/1E,GACf,MAAO,CAAC+1E,GAAeuG,SAAU,0BACxC,CACD,MAAO,CAACt8E,EAAM1vB,EAClB,CAEA,SAASgrG,GAAclD,GACnB,IAAI1C,EAAO,CAAA,EACX,IAAK,IAAK93F,EAAGsQ,KAAMlT,OAAO2F,QAAQy3F,GAC9B,OAAQx6F,GACJ,IAAK,eACL,IAAK,cACL,IAAK,eACD,MACJ,QACI83F,EAAK93F,GAAKsQ,EAEtB,OAAOwnF,CACX,CAqBA,SAASwF,GAAmB4B,GACxB,IAAI1E,EAAU,CAAA,EAUd,OATA0E,EAAatqE,QAAQ,CAACllC,EAAO6T,KACzB,IAAIO,EAAI02F,EAAQj3F,GACA,iBAALO,EACP02F,EAAQj3F,GAAO,CAACO,EAAGpU,GACdE,MAAMC,QAAQiU,GACnBA,EAAE7R,KAAKvC,GAEP8qG,EAAQj3F,GAAO7T,CAAK,GAErB8qG,CACX,CAEA,SAASuD,GAAiBd,GACtB,OAAQA,GACJ,KAAK,IACD,OAAO9E,GAAe2F,GAC1B,KAAK,IACD,OAAO3F,GAAegH,iBAC1B,KAAK,IACD,OAAOhH,GAAeiH,gBAC1B,KAAK,IACD,OAAOjH,GAAekH,kBAC1B,KAAK,IACD,OAAOlH,GAAemH,UAC1B,KAAK,IACD,OAAOnH,GAAeoH,QAC1B,KAAK,IACD,OAAOpH,GAAeqH,oBAC1B,KAAK,IACD,OAAOrH,GAAesH,mBAC1B,KAAK,IACD,OAAOtH,GAAeuH,UAC1B,KAAK,IAQL,QACI,OAAOvH,GAAekF,QAP1B,KAAK,IACD,OAAOlF,GAAewH,cAC1B,KAAK,IACD,OAAOxH,GAAeyH,YAC1B,KAAK,IACD,OAAOzH,GAAeuE,kBAIlC,CKjTO,MAAMmD,GACTjpG,YAAYkpG,GACRtuG,KAAKsuG,eAAiBA,CACzB,CACDC,aAAan9F,GACT,OROD,SAAyB6sB,EAAU7sB,GACtC,IAAKA,EACD,OAAO6sB,EACX,IAAItjB,EAAI,CAAA,EACR/D,GAAKqnB,EAAUtjB,GACf/D,GAAKxF,EAASuJ,GACd,IAAK,IAAI5I,KAAOnG,OAAO+B,KAAKyD,GAAU,CAClC,IAAIQ,EAAMR,EAAQW,GAClB,OAAQA,GACJ,IAAK,cACD4I,EAAE6zF,YAAcjjG,EAAiB0yB,EAASuwE,YAAa7zF,EAAE6zF,aACzD,MACJ,IAAK,gBACD7zF,EAAE8zF,ehKeoB1vG,EgKfuC4b,EAAE8zF,chKgBpE7iG,OAAOC,OAAOD,OAAOC,OAAO,CAAA,EgKhBcoyB,EAASwwE,ehKgBf1vG,IgKf/B,MACJ,IAAK,OACD4b,EAAE2rF,KAAO,GACT1vF,GAAKqnB,EAASqoE,KAAM3rF,EAAE2rF,MACtB1vF,GAAKxF,EAAQk1F,KAAM3rF,EAAE2rF,MACrB,MACJ,IAAK,eACD3rF,EAAEyvF,aAAensE,EAASmsE,aAAensE,EAASmsE,aAAa31F,OAAO7C,GAAOA,EAAI6C,SAG5F,ChKIE,IAA+B1V,EgKHlC,OAAO4b,CACX,CQjCe+zF,CAAgB1uG,KAAKsuG,eAAgBl9F,EAC/C,CAiBDu9F,QAAQz5F,EAAQ9D,GACZ,IAAI9O,EAAO8O,EAAQw9F,QAGnB,OAFItsG,EAAKokC,SAAS,OACdpkC,EAAOA,EAAK8P,UAAU,EAAG9P,EAAK5D,OAAS,IACpC,GAAG4D,KAAQ4S,EAAO25F,QAAQ5tG,YAAYiU,EAAOlI,MACvD,CACDw9F,gBAAgBt1F,GACZ,MAAM5C,EAAI,IAAI+zF,GAAS,gDAAiDM,GAAeA,GAAewH,gBAGtG,MAFA77F,EAAE4d,WAAahb,EAAOlI,KACtBsF,EAAEi0F,YAAcrxF,EAAO25F,QAAQ5tG,SACzBqR,CACT,CACDo4F,OAAOx1F,GACH,MAAM5C,EAAI,IAAI+zF,GAAS,gDAAiDM,GAAeA,GAAewH,gBAGtG,MAFA77F,EAAE4d,WAAahb,EAAOlI,KACtBsF,EAAEi0F,YAAcrxF,EAAO25F,QAAQ5tG,SACzBqR,CACT,CACDg4F,gBAAgBp1F,EAAQ/D,EAAOC,GAC3B,IAAI3F,EAAIC,EAAImB,EAAIC,EAChB,IAAgWgiG,EAAyCC,EAArY3hG,EAAMgE,EAAS05F,EAA+B,QAArBr/F,EAAK2B,EAAI09F,cAA2B,IAAPr/F,EAAgBA,EAAK,OAAQujG,EAAqC,QAAxBtjG,EAAK0B,EAAI4hG,iBAA8B,IAAPtjG,EAAgBA,EAAK,CAAA,EAAIujG,EAAMjvG,KAAK2uG,QAAQz5F,EAAQ9H,GAAM8hG,EAAah6F,EAAO2E,EAAElC,SAASxG,EAAO/D,EAAIqhG,eAAgBU,EAAY,IAAItI,GAAYuI,EAAiB,IAAI1H,GAA6B2H,GAAoB,EAAmBC,EAAY,IAAIzI,GAA0B0I,EAAa,IAAI1I,GAgExa,OA/DA1iG,WAAWqrG,MAAMP,EAAKrjG,OAAOC,OAAOD,OAAOC,OAAO,GAAImjG,GAAY,CAAE95F,OAAQ,OAAQ8zF,QAAS6B,GAA2B,IAAI1mG,WAAWsrG,QAAW3E,EAAQ19F,EAAI29F,QAAS39F,EAAIk5F,MAAO3rC,KAAMywC,GAAyB8D,EAAYpE,GAAS4E,OAAiC,QAAxB7iG,EAAKuE,EAAQmvD,aAA0B,IAAP1zD,EAAgBA,EAAK,QAE/RmgF,KAAK4e,IACN,IAAKh7E,EAAM+7E,EAAQrG,GAAQiF,GAA0BK,GAErD,GADAuD,EAAUjjB,QAAQoa,GACN,MAAR11E,GAAgBA,IAAS+1E,GAAe2F,GACxC,MAAM,IAAIjG,GAASsG,QAAuCA,EAAShG,GAAe/1E,GAAO+1E,GAAe/1E,GAAO01E,GAMnH,OALY,MAAR11E,IACAk+E,EAAc,CACVl+E,KAAM+1E,GAAe/1E,GACrB+7E,OAAQA,QAAuCA,EAAShG,GAAe/1E,KAExEg7E,CAAa,GAEnB5e,KAAK4e,IACN,IAAKA,EAAcjxC,KACf,MAAM,IAAI0rC,GAAS,wBAAyBM,GAAeA,GAAeuG,WAC9E,OAAON,GAAwBhB,EAAcjxC,KAAMixC,EAAc5C,QAAQl1F,IAAI,gBAAiB,CAACpJ,EAAMrJ,KACjG,OAAQqJ,GACJ,KAAKk8F,GAAayE,KACd+D,EAAe7G,cAAcrzF,EAAOy6F,EAAE34F,WAAW3V,EAAM+L,EAAIqhG,gBAC3DY,GAAoB,EACpB,MACJ,KAAKzI,GAAa4G,QACd,IAAI58E,EAAM+7E,GACT/7E,EAAM+7E,EAAQoC,GAAgBvC,GAA2BnrG,GAC1DytG,EAAc,CACVl+E,KAAM+1E,GAAe/1E,GACrB+7E,OAAQA,QAAuCA,EAAShG,GAAe/1E,IAGlF,EACH,GAEDo8D,KAAK,KACN,IAAK+hB,IAAiBM,EAClB,MAAM,IAAIhJ,GAAS,mBAAoBM,GAAeA,GAAe8G,YAEzE,IAAKqB,EACD,MAAM,IAAIzI,GAAS,iBAAkBM,GAAeA,GAAeuG,WACvE,GAAyB,OAArB4B,EAAYl+E,KACZ,MAAM,IAAIy1E,GAASyI,EAAYnC,OAAQmC,EAAYl+E,KAAMm+E,GAC7DK,EAAe3G,iBACf6G,EAAUpjB,QAAQ4iB,GAClBS,EAAWrjB,QAAQ6iB,GAAgB,CAAA,EAAG,GAErC9hB,MAAMqa,IACP,IAAI30F,EAEAA,EADA20F,aAAkBjB,GACViB,EACHA,aAAkBhoG,OAAyB,eAAhBgoG,EAAOt6F,KAE/B,IAAIq5F,GAASiB,EAAOpmG,QAASylG,GAAeA,GAAeuH,YAG3D,IAAI7H,GAASiB,aAAkBhoG,MAAQgoG,EAAOpmG,QAAU,GAAKomG,EAAQX,GAAeA,GAAeuG,WAC/Gv6F,EAAMud,WAAahb,EAAOlI,KAC1B2F,EAAM4zF,YAAcrxF,EAAO25F,QAAQ5tG,SACnCkuG,EAAU1H,cAAc90F,GACxBy8F,EAAe5G,YAAY71F,GAC3B28F,EAAU7H,cAAc90F,GACxB48F,EAAW9H,cAAc90F,EAAM,GAE5B,IAAIi3F,GAAoB10F,EAA4B,QAAnBpI,EAAKM,EAAIk5F,YAAyB,IAAPx5F,EAAgBA,EAAK,GAAIqE,EAAOg+F,EAAU/H,QAASgI,EAAgBE,EAAUlI,QAASmI,EAAWnI,QACvK,CACD8C,MAAMh1F,EAAQ/D,EAAOC,GACjB,IAAI3F,EAAIC,EAAImB,EAAIC,EAChB,IAAoR8iG,EAA2Cd,EAAyCC,EAApW3hG,EAAMgE,EAAS05F,EAA+B,QAArBr/F,EAAK2B,EAAI09F,cAA2B,IAAPr/F,EAAgBA,EAAK,OAAQujG,EAAqC,QAAxBtjG,EAAK0B,EAAI4hG,iBAA8B,IAAPtjG,EAAgBA,EAAK,GAAIujG,EAAMjvG,KAAK2uG,QAAQz5F,EAAQ9H,GAAM8hG,EAAah6F,EAAO2E,EAAElC,SAASxG,EAAO/D,EAAIqhG,eAAgBU,EAAY,IAAItI,GAA0BgJ,EAAa,IAAIhJ,GAAyByI,EAAY,IAAIzI,GAA0B0I,EAAa,IAAI1I,GAqEvY,OApEA1iG,WAAWqrG,MAAMP,EAAKrjG,OAAOC,OAAOD,OAAOC,OAAO,GAAImjG,GAAY,CAAE95F,OAAQ,OAAQ8zF,QAAS6B,GAA2B,IAAI1mG,WAAWsrG,QAAW3E,EAAQ19F,EAAI29F,QAAS39F,EAAIk5F,MAAO3rC,KAAMywC,GAAyB8D,EAAYpE,GAAS4E,OAAiC,QAAxB7iG,EAAKuE,EAAQmvD,aAA0B,IAAP1zD,EAAgBA,EAAK,QAE/RmgF,KAAK4e,IACN,IAAKh7E,EAAM+7E,EAAQrG,GAAQiF,GAA0BK,GAErD,GADAuD,EAAUjjB,QAAQoa,GACN,MAAR11E,GAAgBA,IAAS+1E,GAAe2F,GACxC,MAAM,IAAIjG,GAASsG,QAAuCA,EAAShG,GAAe/1E,GAAO+1E,GAAe/1E,GAAO01E,GAMnH,OALY,MAAR11E,IACAk+E,EAAc,CACVl+E,KAAM+1E,GAAe/1E,GACrB+7E,OAAQA,QAAuCA,EAAShG,GAAe/1E,KAExEg7E,CAAa,GAEnB5e,KAAK4e,IACN,IAAKA,EAAcjxC,KACf,MAAM,IAAI0rC,GAAS,wBAAyBM,GAAeA,GAAeuG,WAC9E,OAAON,GAAwBhB,EAAcjxC,KAAMixC,EAAc5C,QAAQl1F,IAAI,gBAAiB,CAACpJ,EAAMrJ,KACjG,OAAQqJ,GACJ,KAAKk8F,GAAayE,KACd,GAAIuE,EACA,MAAM,IAAIvJ,GAAS,kCAAmCM,GAAeA,GAAe8G,YACxFmC,EAAe16F,EAAOy6F,EAAE34F,WAAW3V,EAAM+L,EAAIqhG,eAC7C,MACJ,KAAK7H,GAAa4G,QACd,IAAI58E,EAAM+7E,GACT/7E,EAAM+7E,EAAQoC,GAAgBvC,GAA2BnrG,GAC1DytG,EAAc,CACVl+E,KAAM+1E,GAAe/1E,GACrB+7E,OAAQA,QAAuCA,EAAShG,GAAe/1E,IAGlF,EACH,GAEDo8D,KAAK,KACN,IAAK+hB,GAAgBa,EACjB,MAAM,IAAIvJ,GAAS,mBAAoBM,GAAeA,GAAe8G,YAEzE,IAAKqB,EACD,MAAM,IAAIzI,GAAS,iBAAkBM,GAAeA,GAAeuG,WACvE,IAAK0C,GAAqC,OAArBd,EAAYl+E,KAC7B,MAAM,IAAIy1E,GAAS,wBAAyBM,GAAeA,GAAe8G,YAC9E,IAAKmC,EACD,MAAM,IAAIvJ,GAASyI,EAAYnC,OAAQmC,EAAYl+E,KAAMm+E,GAE7D,GADAc,EAAW3jB,QAAQ0jB,GACM,OAArBd,EAAYl+E,KACZ,MAAM,IAAIy1E,GAASyI,EAAYnC,OAAQmC,EAAYl+E,KAAMm+E,GAC7DO,EAAUpjB,QAAQ4iB,GAClBS,EAAWrjB,QAAQ6iB,GAAgB,CAAA,EAAG,GAErC9hB,MAAMqa,IACP,IAAI30F,EAEAA,EADA20F,aAAkBjB,GACViB,EACHA,aAAkBhoG,OAAyB,eAAhBgoG,EAAOt6F,KAE/B,IAAIq5F,GAASiB,EAAOpmG,QAASylG,GAAeA,GAAeuH,YAG3D,IAAI7H,GAASiB,aAAkBhoG,MAAQgoG,EAAOpmG,QAAU,GAAKomG,EAAQX,GAAeA,GAAeuG,WAC/Gv6F,EAAMud,WAAahb,EAAOlI,KAC1B2F,EAAM4zF,YAAcrxF,EAAO25F,QAAQ5tG,SACnCkuG,EAAU1H,cAAc90F,GACxBk9F,EAAWpI,cAAc90F,GACzB28F,EAAU7H,cAAc90F,GACxB48F,EAAW9H,cAAc90F,EAAM,GAE5B,IAAIk2F,GAAU3zF,EAA4B,QAAnBpI,EAAKM,EAAIk5F,YAAyB,IAAPx5F,EAAgBA,EAAK,CAAA,EAAIqE,EAAOg+F,EAAU/H,QAASyI,EAAWzI,QAASkI,EAAUlI,QAASmI,EAAWnI,QACjK,MCjHJ0I,GAIWC,OAvBZ,SAAYD,GAMRA,EAAAA,EAAA,WAAA,GAAA,aAMAA,EAAAA,EAAA,SAAA,GAAA,WAMAA,EAAAA,EAAA,QAAA,GAAA,SACH,CAnBD,CAAYA,KAAAA,GAmBX,CAAA,IAID,SAAYC,GAMRA,EAAAA,EAAA,SAAA,GAAA,WAMAA,EAAAA,EAAA,QAAA,GAAA,SACH,CAbD,CAAYA,KAAAA,GAaX,CAAA,IAiFD,SAAYC,GAIRA,EAAAA,EAAA,MAAA,GAAA,QAIAA,EAAAA,EAAA,SAAA,GAAA,WAIAA,EAAAA,EAAA,MAAA,GAAA,OACH,CAbD,CAAYA,KAAAA,GAaX,WAgBsBC,GAAG,IAd1B,cAAqDh6F,EACjD7Q,cACI0S,MAAM,6BAA8B,CAChC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,GAC5C,CAAEvN,GAAI,EAAGyL,KAAM,aAAcM,KAAM,SAAUwB,EAAG,IAChD,CAAEvN,GAAI,EAAGyL,KAAM,WAAYM,KAAM,SAAUwB,EAAG,IAC9C,CAAEvN,GAAI,EAAGyL,KAAM,WAAYM,KAAM,SAAUwB,EAAG,GAC9C,CAAEvN,GAAI,EAAGyL,KAAM,MAAOM,KAAM,SAAUwB,EAAG,IAEjD,MAoByB,IAb7B,cAA2DmH,EACvD7Q,cACI0S,MAAM,gCAAiC,CACnC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,IAC5C,CAAEvN,GAAI,EAAGyL,KAAM,SAAUM,KAAM,OAAQwB,EAAG,IAAM,CAAC,oDAAqDghG,KACtG,CAAEvuG,GAAI,EAAGyL,KAAM,KAAMM,KAAM,SAAUwB,EAAG,IACxC,CAAEvN,GAAI,EAAGyL,KAAM,MAAOM,KAAM,SAAUwB,EAAG,IAEjD,GAmBSohG,GAAe,IAZ5B,cAAgCj6F,EAC5B7Q,cACI0S,MAAM,+BAAgC,CAClC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,OAAQwB,EAAG,IAAM,CAAC,4BAA6BkhG,KAC5E,CAAEzuG,GAAI,EAAGyL,KAAM,iBAAkBM,KAAM,UAAWD,MAAO,QAASyB,EAAG,IAAMqhG,IAC3E,CAAE5uG,GAAI,EAAGyL,KAAM,cAAeM,KAAM,UAAWD,MAAO,QAASyB,EAAG,IAAMmhG,KAEhF,GAiB4BG,GAAG,IAVnC,gBACIhrG,cACI0S,MAAM,sCAAuC,CACzC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,KAEpD,GAeyBuhG,GAAG,IARhC,cAAoCp6F,EAChC7Q,cACI0S,MAAM,mCAAoC,GAC9C,GAkBSw4F,GAAc,IAX3B,cAAuDr6F,EACnD7Q,cACI0S,MAAM,8BAA+B,CACjC,CAAEvW,GAAI,EAAGyL,KAAM,UAAWM,KAAM,UAAWD,MAAO,SAAUyB,EAAG,IAAMshG,IACrE,CAAE7uG,GAAI,EAAGyL,KAAM,UAAWM,KAAM,UAAWD,MAAO,SAAUyB,EAAG,IAAMuhG,KAE7E,GAkBsBE,GAAG,IAX7B,cAAiCt6F,EAC7B7Q,cACI0S,MAAM,gCAAiC,CACnC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,OAAQJ,OAAQ,EAAyB4B,EAAG,IAAM,CAAC,4BAA6BkhG,KAC/G,CAAEzuG,GAAI,EAAGyL,KAAM,UAAWM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMwhG,KAE7F,GCzKSE,GAAmB,IAbhC,cAAiEv6F,EAC7D7Q,cACI0S,MAAM,qCAAsC,CACxC,CAAEvW,GAAI,EAAGyL,KAAM,KAAMM,KAAM,SAAUwB,EAAG,GACxC,CAAEvN,GAAI,EAAGyL,KAAM,aAAcM,KAAM,SAAUwB,EAAG,GAChD,CAAEvN,GAAI,EAAGyL,KAAM,cAAeM,KAAM,SAAUwB,EAAG,GACjD,CAAEvN,GAAI,EAAGyL,KAAM,OAAQM,KAAM,UAAWwB,EAAG,IAAMg3F,KAEzD,GAkBS2K,GAAqB,IAXlC,cAAsCx6F,EAClC7Q,cACI0S,MAAM,uCAAwC,CAC1C,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,GAC5C,CAAEvN,GAAI,EAAGyL,KAAM,aAAcM,KAAM,SAAUwB,EAAG,IAExD,GClCJ,IAaC4hG,GDyC2B,IAb5B,cAAyDz6F,EACrD7Q,cACI0S,MAAM,iCAAkC,CACpC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,UAAWwB,EAAG,IAAMg3F,IACjD,CAAEvkG,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,IAC7C,CAAEvN,GAAI,EAAGyL,KAAM,mBAAoBM,KAAM,SAAUwB,EAAG,IACtD,CAAEvN,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,OAAQwB,EAAG,IAAM,CAAC,iCAAkCk3F,MAEjG,GCjDJ,SAAY0K,GAIRA,EAAAA,EAAA,gBAAA,GAAA,kBAIAA,EAAAA,EAAA,aAAA,GAAA,eAIAA,EAAAA,EAAA,YAAA,GAAA,aACH,CAbD,CAAYA,KAAAA,GAaX,CAAA,IAkBM,MAAUC,GAAG,IAhBpB,cAAyC16F,EACrC7Q,cACI0S,MAAM,sBAAuB,CACzB,CAAEvW,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,GAC7C,CAAEvN,GAAI,EAAGyL,KAAM,WAAYM,KAAM,SAAUwB,EAAG,GAC9C,CAAEvN,GAAI,EAAGyL,KAAM,YAAaM,KAAM,OAAQwB,EAAG,IAAM,CAAC,0BAA2B4hG,KAC/E,CAAEnvG,GAAI,EAAGyL,KAAM,OAAQM,KAAM,SAAUwB,EAAG,GAC1C,CAAEvN,GAAI,EAAGyL,KAAM,QAASM,KAAM,SAAUwB,EAAG,IAC3C,CAAEvN,GAAI,EAAGyL,KAAM,QAASM,KAAM,SAAUwB,EAAG,IAC3C,CAAEvN,GAAI,EAAGyL,KAAM,KAAMM,KAAM,SAAUwB,EAAG,KAEhD,GAiB4B,IAVhC,cAAiEmH,EAC7D7Q,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,SAAUwB,EAAG,IAE1D,GCuNG,MAAmB8hG,GAAG,IAhB7B,cAAiC36F,EAC7B7Q,cACI0S,MAAM,+BAAgC,CAClC,CAAEvW,GAAI,EAAGyL,KAAM,uBAAwBM,KAAM,SAAUwB,EAAG,GAC1D,CAAEvN,GAAI,EAAGyL,KAAM,yBAA0BM,KAAM,SAAUwB,EAAG,GAC5D,CAAEvN,GAAI,EAAGyL,KAAM,uBAAwBM,KAAM,SAAUwB,EAAG,GAC1D,CAAEvN,GAAI,EAAGyL,KAAM,sBAAuBM,KAAM,SAAUwB,EAAG,GACzD,CAAEvN,GAAI,EAAGyL,KAAM,uBAAwBM,KAAM,SAAUwB,EAAG,GAC1D,CAAEvN,GAAI,EAAGyL,KAAM,sBAAuBM,KAAM,SAAUwB,EAAG,GACzD,CAAEvN,GAAI,EAAGyL,KAAM,yBAA0BM,KAAM,SAAUwB,EAAG,IAEpE,GAkBqB+hG,GAAG,IAX5B,cAAyD56F,EACrD7Q,cACI0S,MAAM,8BAA+B,CACjC,CAAEvW,GAAI,EAAGyL,KAAM,SAAUM,KAAM,SAAUwB,EAAG,GAC5C,CAAEvN,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,IAE3D,GAiBSgiG,GAAmB,IAVhC,gBACI1rG,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,iBAAkBM,KAAM,UAAWwB,EAAG,IAAM+hG,KAEnE,MAiB6B,IAVjC,gBACIzrG,cACI0S,MAAM,mCAAoC,CACtC,CAAEvW,GAAI,EAAGyL,KAAM,QAASM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAM6hG,KAE3F,MAiB6B,IAVjC,cAAmE16F,EAC/D7Q,cACI0S,MAAM,mCAAoC,CACtC,CAAEvW,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,IAE3D,GAiB0BiiG,GAAG,IAVjC,cAAmE96F,EAC/D7Q,cACI0S,MAAM,mCAAoC,CACtC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,SAAUwB,EAAG,KAElD,MAiB8B,IAVlC,cAAqEmH,EACjE7Q,cACI0S,MAAM,oCAAqC,CACvC,CAAEvW,GAAI,EAAGyL,KAAM,UAAWM,KAAM,UAAWwB,EAAG,IAAM+I,IAE5D,MAiBiC,IAVrC,cAAyC5B,EACrC7Q,cACI0S,MAAM,uCAAwC,CAC1C,CAAEvW,GAAI,EAAGyL,KAAM,qBAAsBM,KAAM,UAAWwB,EAAG,IAAMkiG,KAEvE,GAmB2BC,GAAG,IAZlC,cAAsCh7F,EAClC7Q,cACI0S,MAAM,oCAAqC,CACvC,CAAEvW,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,IAC7C,CAAEvN,GAAI,EAAGyL,KAAM,YAAaM,KAAM,SAAUwB,EAAG,IAC/C,CAAEvN,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,OAAQwB,EAAG,IAAM,CAAC,iCAAkCk3F,MAEjG,MAoB+B,IAbnC,cAAuE/vF,EACnE7Q,cACI0S,MAAM,qCAAsC,CACxC,CAAEvW,GAAI,EAAGyL,KAAM,qBAAsBM,KAAM,UAAWwB,EAAG,IAAM0hG,IAC/D,CAAEjvG,GAAI,EAAGyL,KAAM,yBAA0BM,KAAM,SAAUwB,EAAG,GAC5D,CAAEvN,GAAI,EAAGyL,KAAM,kBAAmBM,KAAM,SAAUwB,EAAG,GACrD,CAAEvN,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,IAE3D,GAoB4BoiG,GAAG,IAbnC,cAAuEj7F,EACnE7Q,cACI0S,MAAM,qCAAsC,CACxC,CAAEvW,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,IAC7C,CAAEvN,GAAI,EAAGyL,KAAM,YAAaM,KAAM,SAAUwB,EAAG,IAC/C,CAAEvN,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,GACnD,CAAEvN,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,OAAQwB,EAAG,IAAM,CAAC,iCAAkCk3F,MAEjG,GAkBSmL,GAAuB,IAXpC,cAAyEl7F,EACrE7Q,cACI0S,MAAM,sCAAuC,CACzC,CAAEvW,GAAI,EAAGyL,KAAM,qBAAsBM,KAAM,UAAWwB,EAAG,IAAM0hG,IAC/D,CAAEjvG,GAAI,EAAGyL,KAAM,OAAQM,KAAM,SAAUwB,EAAG,KAElD,MAkBkC,IAXtC,cAA0CmH,EACtC7Q,cACI0S,MAAM,wCAAyC,CAC3C,CAAEvW,GAAI,EAAGyL,KAAM,iBAAkBM,KAAM,SAAUwB,EAAG,GACpD,CAAEvN,GAAI,EAAGyL,KAAM,eAAgBM,KAAM,UAAWwB,EAAG,IAAM0hG,KAEjE,GAiByBY,GAAG,IAVhC,cAAiEn7F,EAC7D7Q,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,SAAUwB,EAAG,KAElD,GAiBSuiG,GAAoB,IAVjC,cAAmEp7F,EAC/D7Q,cACI0S,MAAM,mCAAoC,CACtC,CAAEvW,GAAI,EAAGyL,KAAM,OAAQM,KAAM,SAAUwB,EAAG,KAElD,GAkB4BwiG,GAAG,IAXnC,cAAuEr7F,EACnE7Q,cACI0S,MAAM,qCAAsC,CACxC,CAAEvW,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,GACnD,CAAEvN,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,IAErD,GAiB6ByiG,GAAG,IAVpC,cAAwCt7F,EACpC7Q,cACI0S,MAAM,sCAAuC,CACzC,CAAEvW,GAAI,EAAGyL,KAAM,KAAMM,KAAM,UAAWwB,EAAG,IAAMqJ,KAEvD,GAmBSq5F,GAAkB,IAZ/B,gBACIpsG,cACI0S,MAAM,iCAAkC,CACpC,CAAEvW,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,GACnD,CAAEvN,GAAI,EAAGyL,KAAM,UAAWM,KAAM,SAAUwB,EAAG,GAC7C,CAAEvN,GAAI,EAAGyL,KAAM,QAASM,KAAM,UAAWwB,EAAG,IAAM0J,KAE1D,GAkB2Bi5F,GAAG,IAXlC,cAAqEx7F,EACjE7Q,cACI0S,MAAM,oCAAqC,CACvC,CAAEvW,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,GACnD,CAAEvN,GAAI,EAAGyL,KAAM,KAAMM,KAAM,SAAUwB,EAAG,IAEhD,GAiB4B4iG,GAAG,IAVnC,gBACItsG,cACI0S,MAAM,qCAAsC,CACxC,CAAEvW,GAAI,EAAGyL,KAAM,WAAYM,KAAM,UAAWwB,EAAG,IAAMwJ,KAE7D,MAiB4B,IAVhC,gBACIlT,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,YAAaM,KAAM,UAAWJ,OAAQ,EAAyB4B,EAAG,IAAMwJ,KAE/F,GAeiCq5F,GAAG,IARxC,cAAiF17F,EAC7E7Q,cACI0S,MAAM,0CAA2C,GACrD,MAkB4B,IAXhC,cAAoC7B,EAChC7Q,cACI0S,MAAM,kCAAmC,CACrC,CAAEvW,GAAI,EAAGyL,KAAM,gBAAiBM,KAAM,SAAUwB,EAAG,GACnD,CAAEvN,GAAI,EAAGyL,KAAM,MAAOM,KAAM,UAAWwB,EAAG,IAAMyhG,KAExD,GASoBqB,GAAG,ICxmBpB,MACHxsG,YAAYnE,EAAUuuB,EAASpe,GAC3BpR,KAAKiB,SAAWA,EAChBjB,KAAKwvB,QAAUA,EAAQnf,IAAI5R,GCA5B,SAA6ByW,EAAQ25F,GACxC,IAAIpjG,EAAIC,EAAImB,EACZ,IAAIwI,EAAIH,EASR,OARAG,EAAEw5F,QAAUA,EACZx5F,EAAEtI,UAAmC,QAAtBtB,EAAK4J,EAAEtI,iBAA8B,IAAPtB,EAAgBA,EAAKO,EAAeqJ,EAAErI,MAEnFqI,EAAEi1F,kBAAoBj1F,EAAEi1F,gBAExBj1F,EAAEm1F,kBAAoBn1F,EAAEm1F,gBACxBn1F,EAAEjE,QAA+B,QAApB1F,EAAK2J,EAAEjE,eAA4B,IAAP1F,EAAgBA,EAAK,CAAA,EAC9D2J,EAAEw8F,YAAuC,QAAxBhlG,EAAKwI,EAAEw8F,mBAAgC,IAAPhlG,EAAgBA,OAAKxN,EAC/DgW,CACX,CDZwCy8F,CAAoBrzG,EAAGuB,OACvDA,KAAKoR,QAAUA,QAAyCA,EAAU,EACrE,GDmmBsC,6BAA8B,CACrE,CAAEpE,KAAM,YAAaoE,QAAS,CAAE,EAAEyI,EAAGi3F,GAAkBnB,EAAGoC,IAC1D,CAAE/kG,KAAM,mBAAoBoE,QAAS,CAAA,EAAIyI,EAAGo3F,GAAoBtB,EAAGqC,IACnE,CAAEhlG,KAAM,oBAAqBoE,QAAS,CAAA,EAAIyI,EAAGq3F,GAAqBvB,EAAGwB,IACrE,CAAEnkG,KAAM,aAAcoE,QAAS,CAAA,EAAIyI,EAAGk3F,GAAmBpB,EAAGsC,IAC5D,CAAEjlG,KAAM,iBAAkBoE,QAAS,CAAA,EAAIyI,EAAGq4F,GAAuBvC,EAAGwC,IACpE,CAAEnlG,KAAM,YAAaoE,QAAS,CAAA,EAAIyI,EAAGu3F,GAAkBzB,EAAG0B,IAC1D,CAAErkG,KAAM,eAAgBoE,QAAS,CAAA,EAAIyI,EAAGy3F,GAAqB3B,EAAG4B,IAChE,CAAEvkG,KAAM,WAAYoE,QAAS,CAAA,EAAIyI,EAAG23F,GAAiB7B,EAAGyC,IACxD,CAAEplG,KAAM,cAAeoE,QAAS,CAAA,EAAIyI,EAAG43F,GAAoB9B,EAAG+B,IAC9D,CAAE1kG,KAAM,oBAAqBoE,QAAS,CAAA,EAAIyI,EAAG83F,GAA0BhC,EAAGiB,IAC1E,CAAE5jG,KAAM,YAAas9F,iBAAiB,EAAMl5F,QAAS,GAAIyI,EAAGw4F,GAAkB1C,EAAGO,MG5gBxEoC,MAAAA,GAITltG,YAA6BmtG,GAAwBvyG,KAAxBuyG,gBAAA,EAAAvyG,KAH7BiB,SAAW2wG,GAAY3wG,SAAQjB,KAC/BwvB,QAAUoiF,GAAYpiF,QACtBpe,KAAAA,QAAUwgG,GAAYxgG,QACOpR,KAAUuyG,WAAVA,CAC7B,CAMAC,UAAUrhG,EAAyBC,GAC/B,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAO04F,GAAoD,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EACtG,CAMAshG,iBAAiBthG,EAA2BC,GACxC,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAqB04F,GAA0C,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC1G,CAMAuhG,kBAAkBvhG,EAA4BC,GAC1C,MAAY8D,EAAGlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAqB04F,GAA4C,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC5G,CAMAwhG,WAAWxhG,EAA0BC,GACjC,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAO04F,GAAsD,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EACxG,CAIAyhG,eAAezhG,EAA8BC,GACzC,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAO04F,GAA8D,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAChH,CAMA0hG,UAAU1hG,EAAyBC,GAC/B,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,UAA2D,QAASpR,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EACtG,CAMA2hG,aAAa3hG,EAA4BC,GACrC,MAAY8D,EAAGlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAqB04F,GAA4C,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC5G,CAMA4hG,SAAS5hG,EAAwBC,GAC7B,MAAY8D,EAAGlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAqB04F,GAAoC,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EACpG,CAMA6hG,YAAY7hG,EAA2BC,GACnC,MAAY8D,EAAGlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAO04F,GAAwD,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC1G,CAMA8hG,kBAAkB9hG,EAAiCC,GAC/C,MAAM8D,EAASlV,KAAKwvB,QAAQ,GAAIpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACnE,OAAO04F,GAAwD,QAAS9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC1G,CAMA+hG,UAAU/hG,EAAyBC,GAC/B,QAAepR,KAAKwvB,QAAQ,IAAKpiB,EAAMpN,KAAKuyG,WAAWhE,aAAan9F,GACpE,OAAO04F,GAA+C,kBAAmB9pG,KAAKuyG,WAAYr9F,EAAQ9H,EAAK+D,EAC3G,2BCtMH,SAASic,GAGR,IAWI+lF,EAXAC,EAAY,YACZC,EAAUD,WAAqBlyD,QAAWA,OAC1CoyD,EAAcF,WAAqBn0G,YAAeA,WAClDs0G,EAAeH,WAAqBlvG,aAAgBA,YACpDwB,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BrH,EAAUD,MAAMC,SA6RpB,SAAkBuT,GAChB,QAASA,GAAO,kBAAoBhG,OAAO6W,UAAU3c,SAAS+oB,KAAKjd,EACpE,EA9RG4hG,EAAQ,WAgBZ,SAASC,EAAQzmG,EAAM0mG,EAAWC,GAChC,IAAIC,EAAOF,EAAY,EAAI,EACvBG,EAAOH,EAAY,EAAI,EACvBI,EAAOJ,EAAY,EAAI,EACvBK,EAAOL,EAAY,EAAI,EACvBM,EAAON,EAAY,EAAI,EACvBO,EAAOP,EAAY,EAAI,EACvBQ,EAAeR,EAAYS,EAAiBC,EAC5CC,EAAeX,EAAYY,EAAiBC,EAC5C1uD,EAAQ2uD,EAAM/xF,UACdgyF,EAAS,KAAOznG,EAChB0nG,EAAW,IAAMD,EAyBrB,OAtBA5uD,EAAM9+C,YAAS,EACf8+C,EAAM17C,OAAS,EACf07C,EAAM6uD,IAAY,EAGlB7uD,EAAMvgD,SAAWA,EACjBugD,EAAM//C,SA8GN,SAAkBy+B,GAChB,IAAIx9B,EAAS/G,KAAK+G,OACdoD,EAASnK,KAAKmK,OACdnH,EAAO2xG,EAAU5tG,EAAQoD,EAASypG,GAClCp8E,EAAMm9E,EAAU5tG,EAAQoD,EAAS0pG,GACjC3iF,EAAM,GACNjmB,GAAQ0oG,GAAoB,WAAP3wG,EAMzB,IALIiI,IACFjI,GAAQA,EACRw0B,EAAMg8E,EAAQh8E,GAEhB+M,EAAQA,GAAS,KACP,CACR,IAAI6G,EAAOpoC,EAAOuhC,EAASivE,EAAQh8E,EAInC,GAHAx0B,EAAOS,KAAKC,MAAMV,EAAOuhC,GACzB/M,EAAM/zB,KAAKC,MAAM0nC,EAAM7G,GACvBrT,GAAOka,EAAM7G,GAAOz+B,SAASy+B,GAASrT,GACjCluB,IAASw0B,EAAK,KACpB,CAID,OAHIvsB,IACFimB,EAAM,IAAMA,GAEPA,CACR,EApID20B,EAAMlH,OAASr5C,EACfugD,EAAMkT,QAAUA,EAGZs6C,IAAQxtD,EAAMsS,SAAWA,GAGzBm7C,IAAYztD,EAAM+uD,cAAgBA,GAGtCJ,EAAMC,GAcN,SAAiB11G,GACf,SAAUA,IAAKA,EAAE21G,GAClB,EAbDtnF,EAAQpgB,GAAQwnG,EAETA,EAGP,SAASA,EAAMztG,EAAQoD,EAAQjM,EAAO22G,GACpC,OAAM70G,gBAAgBw0G,EAUxB,SAAclrB,EAAMviF,EAAQoD,EAAQjM,EAAO22G,GAOzC,GANIvB,GAAcC,IACZxsG,aAAkBwsG,IAAaxsG,EAAS,IAAIusG,EAAWvsG,IACvD7I,aAAiBq1G,IAAar1G,EAAQ,IAAIo1G,EAAWp1G,KAItD6I,GAAWoD,GAAWjM,GAAUi1G,EAArC,CAOA,IAAK2B,EAAc/tG,EAAQoD,GAAS,CAClC,IAAI4qG,EAAW5B,GAAW/0G,MAC1By2G,EAAS1qG,EACTjM,EAAQ6I,EACRoD,EAAS,EACTpD,EAAUosG,IAAYE,EAAUA,EAAOjyD,MAAM,GAAK,IAAI2zD,EAAS,EAChE,CAEDzrB,EAAKviF,OAASA,EACduiF,EAAKn/E,OAASA,GAAU,EAGpBipG,WAAqBl1G,IAGrB,iBAAoBA,EAgB1B,SAAoB6I,EAAQoD,EAAQ+mB,EAAK2jF,GACvC,IAAI30G,EAAM,EACN2G,EAAMqqB,EAAIxyB,OACVsE,EAAO,EACPw0B,EAAM,EACK,MAAXtG,EAAI,IAAYhxB,IAEpB,IADA,IAAI+K,EAAO/K,EACJA,EAAM2G,GAAK,CAChB,IAAIo8B,EAAMvyB,SAASwgB,EAAIhxB,KAAQ20G,GAC/B,KAAM5xE,GAAO,GAAI,MACjBzL,EAAMA,EAAMq9E,EAAS5xE,EACrBjgC,EAAOA,EAAO6xG,EAASpxG,KAAKC,MAAM8zB,EAAMg8E,GACxCh8E,GAAOg8E,CACR,CACGvoG,IACFjI,GAAQA,EACJw0B,EACFA,EAAMg8E,EAAQh8E,EAEdx0B,KAGJgyG,EAAWjuG,EAAQoD,EAASypG,EAAM5wG,GAClCgyG,EAAWjuG,EAAQoD,EAAS0pG,EAAMr8E,EACnC,CAvCGqqB,CAAW96C,EAAQoD,EAAQjM,EAAO22G,GAAU,IACnCC,EAAc52G,EAAO22G,GAC9BI,EAAUluG,EAAQoD,EAAQjM,EAAO22G,GACxB,iBAAoBA,GAC7BG,EAAWjuG,EAAQoD,EAASypG,EAAM11G,GAClC82G,EAAWjuG,EAAQoD,EAAS0pG,EAAMgB,IACzB32G,EAAQ,EACjBg2G,EAAantG,EAAQoD,EAAQjM,GACpBA,EAAQ,EACjBm2G,EAAattG,EAAQoD,EAAQjM,GAE7B+2G,EAAUluG,EAAQoD,EAAQzE,EAAM,GA9BjC,MAFC4jF,EAAKviF,OAASmuG,EAASxvG,EAAM,EAkChC,CApDQsT,CAAKhZ,KAAM+G,EAAQoD,EAAQjM,EAAO22G,GADJ,IAAIL,EAAMztG,EAAQoD,EAAQjM,EAAO22G,EAEvE,CA+ED,SAASvvG,IACP,IAAIyB,EAAS/G,KAAK+G,OACdoD,EAASnK,KAAKmK,OACdnH,EAAO2xG,EAAU5tG,EAAQoD,EAASypG,GAClCp8E,EAAMm9E,EAAU5tG,EAAQoD,EAAS0pG,GAErC,OADKF,IAAU3wG,GAAQ,GAChBA,EAAQA,EAAOwwG,EAAQh8E,EAAOA,CACtC,CA2BD,SAASw9E,EAAWjuG,EAAQoD,EAAQjM,GAClC6I,EAAOoD,EAAS8pG,GAAgB,IAAR/1G,EAExB6I,EAAOoD,EAAS6pG,GAAgB,KADhC91G,IAAiB,GAGjB6I,EAAOoD,EAAS4pG,GAAgB,KADhC71G,IAAiB,GAGjB6I,EAAOoD,EAAS2pG,GAAgB,KADhC51G,IAAiB,EAElB,CAED,SAASy2G,EAAU5tG,EAAQoD,GACzB,OArLQ,SAqLApD,EAAOoD,EAAS2pG,IACrB/sG,EAAOoD,EAAS4pG,IAAS,KACzBhtG,EAAOoD,EAAS6pG,IAAS,GAC1BjtG,EAAOoD,EAAS8pG,EACnB,CACF,CAED,SAASl7C,EAAQn3D,GACf,IAAImF,EAAS/G,KAAK+G,OACdoD,EAASnK,KAAKmK,OAGlB,OAFAgpG,EAAU,MAEE,IAARvxG,GAAiBvD,EAAQ0I,GACD,IAAlBA,EAAOrI,OAAgBqI,EAASA,EAAO9E,MAAMkI,EAAQA,EAAS,GAGjE+qG,EAASnuG,EAAQoD,EACzB,CAED,SAASguD,EAASv2D,GAChB,IAAImF,EAAS/G,KAAK+G,OACdoD,EAASnK,KAAKmK,OAGlB,OAFAgpG,EAAUE,GAEE,IAARzxG,GAAiByxG,EAAOhxD,SAASt7C,GACT,IAAlBA,EAAOrI,OAAgBqI,EAASA,EAAO9E,MAAMkI,EAAQA,EAAS,GAKjEkpG,EAAOroG,KAAK4pG,EAAc/lF,KAAK7uB,KAAM4B,GAC7C,CAED,SAASgzG,EAAchzG,GACrB,IAAImF,EAAS/G,KAAK+G,OACdoD,EAASnK,KAAKmK,OACdgrG,EAASpuG,EAAOA,OAIpB,GAHAosG,EAAUG,GAGE,IAAR1xG,IAAkBmF,EAAOoD,QAAWgrG,aAAkB5B,EACxD,OAA8B,IAAtB4B,EAAOluG,WAAoBkuG,EAASA,EAAOlzG,MAAMkI,EAAQA,EAAS,GAG5E,IAAI8mF,EAAO,IAAIqiB,EAAW,GAE1B,OADA2B,EAAUhkB,EAAM,EAAGlqF,EAAQoD,GACpB8mF,EAAKlqF,MACb,CAED,SAAS+tG,EAAc/tG,EAAQoD,GAC7B,IAAItD,EAAME,GAAUA,EAAOrI,OAE3B,OADAyL,GAAU,EACHtD,GAAQsD,EAAS,GAAKtD,GAAS,iBAAoBE,EAAOoD,EAClE,CAED,SAAS8qG,EAAUG,EAASC,EAASC,EAAQC,GAC3CF,GAAW,EACXE,GAAU,EACV,IAAK,IAAI92G,EAAI,EAAGA,EAAI,EAAGA,IACrB22G,EAAQC,KAAgC,IAAnBC,EAAOC,IAE/B,CAED,SAASL,EAASnuG,EAAQoD,GACxB,OAAO/L,MAAMqkB,UAAUxgB,MAAM4sB,KAAK9nB,EAAQoD,EAAQA,EAAS,EAC5D,CAED,SAASgqG,EAAeptG,EAAQoD,EAAQjM,GAEtC,IADA,IAAIgC,EAAMiK,EAAS,EACZjK,EAAMiK,GACXpD,IAAS7G,GAAe,IAARhC,EAChBA,GAAS,GAEZ,CAED,SAASo2G,EAAevtG,EAAQoD,EAAQjM,GACtC,IAAIgC,EAAMiK,EAAS,EAEnB,IADAjM,IACOgC,EAAMiK,GACXpD,IAAS7G,GAAmB,KAAThC,EAAgB,IACnCA,GAAS,GAEZ,CAED,SAASk2G,EAAertG,EAAQoD,EAAQjM,GAEtC,IADA,IAAIuE,EAAM0H,EAAS,EACZA,EAAS1H,GACdsE,EAAOoD,KAAoB,IAARjM,EACnBA,GAAS,GAEZ,CAED,SAASq2G,EAAextG,EAAQoD,EAAQjM,GACtC,IAAIuE,EAAM0H,EAAS,EAEnB,IADAjM,IACOiM,EAAS1H,GACdsE,EAAOoD,KAAwB,KAATjM,EAAgB,IACtCA,GAAS,GAEZ,CAhRUu1G,EAAQ,YAAY,GAAM,GAC3BA,EAAQ,WAAW,GAAM,GACxBA,EAAQ,YAAY,GAAO,GAC5BA,EAAQ,WAAW,GAAO,EAoRtC,CAzSC,CAyS4D,iBAArBrmF,EAAQooF,SAAwBpoF,EAAWptB,IAAQ,CAAE,cCxRzFoF,YAAY/D,QADZA,UAAI,EAEA,MAAqBo0G,EAAGp0G,EAAK3C,OAC7B,GAPa,IAOT+2G,EACA,UAAen2G,MAAA,2CACgCm2G,EAAe,KAGlEz1G,KAAKqB,KAAOA,CAChB,CAKAoE,YAAY+mB,GACR,WAAekpF,GAAClpF,EACpB,CAEAmpF,SACI,OAAYx5E,GAACn8B,KAAKqB,KACtB,WAKA+D,YAAYkqF,EAAgB3kE,GAAa3qB,KADzCu7D,UAAI,EAEA,MAAiBq6C,EAAG/6E,GAAQy0D,GACdumB,EAAG,IAAYC,GAAAA,SAACnrF,GAC9B,IAAOoB,EAAG,IAAc9sB,WAAC82G,IACzBhqF,EAAI3hB,IAAIyrG,EAAS98C,UAAW,GAC5BhtC,EAAI3hB,IAAIwrG,EAAa,GACrB51G,KAAKu7D,KAAO,KAAO3+B,GAAKC,SAAS9Q,GAAK9pB,MAAM,EAAG,GACnD,CAEA+zG,aACI,OAAWh2G,KAACu7D,IAChB,QClBwB06C,GAOxB7wG,YAAY6pG,EAAanvD,GAAc9/C,KAN9Bk2G,YAAM,EAAAl2G,KACN8/C,YACAq2D,EAAAA,KAAAA,oBAKL,EAAA,MAQMpM,EAAY,IAAIsE,GARW,CAC7BO,QAASK,EAGT7E,aAAc,GAEd9D,KAAM,KAGVtmG,KAAKk2G,OAAS,IAAqB5D,GAACvI,GACpC/pG,KAAK8/C,OAASA,EAEV9/C,KAAKm2G,eADgB,aAArBr2D,EAAOH,SAKf,CAKMy2D,aAAaC,EAAsBC,OACjC,MAAAC,EAAAv2G,KAAJ,OAAIu2G,EAAKJ,eACsBlqB,QAAAC,QAAAqqB,EAAKC,sBAC5BH,EACAC,IACHtpB,KAAA,SAHKypB,GAIN,MAAsBC,EAAqB,CACvC/7C,KAAMyrC,GAAazuF,SAAS8+F,IAC/B,uBAC0BF,EAAKL,OAAOrD,UAAU6D,IAAiB1pB,KAAA,SAAAvjD,GAAA,IAA5Dw/D,SAAEA,GACRx/D,EAAA,OAAWisE,IAAAA,GAAKzM,EAASz8E,KAAK,EACjC,GAC8By/D,QAAAC,QAAAqqB,EAAKI,sBAC5BN,EACAC,IACHtpB,KAAA,SAHKypB,GAIN,MAAMC,EAAqC,CACvC/7C,KAAMyrC,GAAazuF,SAAS8+F,IAC/B,OAAAxqB,QAAAC,QAC0BqqB,EAAKL,OAAOrD,UAAU6D,IAA3C1pB,KAAA,SAAA4pB,GAAA,IAAA3N,SAAEA,KACR,OAAO,IAAQyM,GAACzM,EAASz8E,KAAK,EAAA,EAErC,CAAA,MAAAla,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAEaqkG,sBACVN,EACAC,OAEwB,OAAArqB,QAAAC,QAAAlsF,KAAK8/C,OAAO70C,KAAKorG,IAASrpB,KAAA,SAA5ChkD,GAMN,MALmC,CAC/BnE,QAASwxE,EACTrtE,UAAWA,EACXstE,YAAaA,EAEE,EACtB,CAAA,MAAAhkG,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAEakkG,sBACVH,EACAC,GAAwB,IAAA,MAAAO,EAkBA72G,KAflBkB,EAAU,CACZg7E,MAAO,CACHymB,aAAc,GACdmU,QAAS,CACL,CAAE9pG,KAAM,UAAWtC,KAAM,SACzB,CAAEsC,KAAM,cAAetC,KAAM,YAGrC04F,OAAQ,CAAE,EACVxB,YAAa,UACb1gG,QAAS,CACL2jC,QAAS,KAZG3J,GAAMm7E,GAalBC,YAAaA,EAAYxwG,aAEhC,OACuBmmF,QAAAC,QAAA2qB,EAAK/2D,OAAO70C,KAAK/J,IAAQ8rF,KAAA,SAA3ChkD,GAEN,MAAe+tE,EAAG1/F,KAAKK,UAAUxW,GAOjC,MALmC,CAC/B2jC,SAFc,IAAI76B,aAAcW,OAAOosG,GAGvC/tE,UAAWA,EACXstE,YAAatQ,GAAYgR,iBAEV,EACtB,CAAA,MAAA1kG,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAMK2kG,cAAW,YAeTj3G,KAdJ,IAAIqxC,EAEAA,EADkB,oBAAX9jB,QAEH,IAAIuQ,MAAO2oE,UAEX,WACAhjG,KAAKC,MAAsB,IAAhBD,KAAKq5E,UAEXvvD,OAAOX,OAAOG,gBAAgB,IAAI9tB,WAAW,KAE1D,QAAoC,CAChCoyC,OAAQA,EAAOvrC,WACfoxG,UAAWzzG,KAAKC,MAAMo6B,KAAKC,MAAQ,MAEvC,OAAIo5E,EAAKhB,eACiBlqB,QAAAC,QAAAirB,EAAKC,iBAAiBvyE,IAAQmoD,KAAA,SAA9C+b,GAAO,OAAA9c,QAAAC,QACcirB,EAAKjB,OAAOzD,iBAAiB1J,IAAlD/b,KAAA,SAAAqqB,GAAA,IAAApO,SAAEA,GAAUoO,EAClB,OAAOpO,CAAQ,KAEOhd,QAAAC,QAAAirB,EAAKG,iBAAiBzyE,IAAQmoD,KAAA,SAA9C+b,GAAO,OAAA9c,QAAAC,QACcirB,EAAKjB,OAAOzD,iBAAiB1J,yBAAlDE,SAAEA,GAAUsO,EAClB,OAAetO,CAAA,EAAA,EAEtB,CAAA,MAAA32F,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAEaglG,iBAAiBzyE,GAA2B,IAAA,MAAA2yE,EAE9Bx3G,KADLy3G,EAAGhH,GAAmB94F,SAASktB,GAAQ,OAClConD,QAAAC,QAAAsrB,EAAK13D,OAAO70C,KAAKwsG,IAAczqB,KAAA,SAAjDhkD,GAMN,MAL2C,CACvCnE,QAAS4yE,EACTzuE,UAAWA,EACXstE,YAAatQ,GAAY0R,oBAER,EAGXN,CAFb,MAEaA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,iBAAiBvyE,GAA2B,IAAA,MAAA8yE,EAoB9B33G,KAjBXkB,EAAG,CACZg7E,MAAO,CACHymB,aAAc,GACdmU,QAAS,CACL,CAAE9pG,KAAM,UAAWtC,KAAM,SACzB,CAAEsC,KAAM,cAAetC,KAAM,YAGrC04F,OAAQ,GACRxB,YAAa,UACb1gG,QAAS,CACL2jC,QAAS,KAZE3J,GADGu1E,GAAmB94F,SAASktB,IAc1CyxE,YAAatQ,GAAY0R,oBAAoB5xG,aAG/CixG,EAAY1/F,KAAKK,UAAUxW,MACf,IAAe8I,aAAGW,OAAOosG,GAAU,OAC7B9qB,QAAAC,QAAAyrB,EAAK73D,OAAO70C,KAAK/J,kBAAnC8nC,GAMN,MAL2C,CACvCnE,QAAS+yE,EACT5uE,UAAWA,EACXstE,YAAatQ,GAAYgR,iBAER,EACxB,CAAA,MAAA1kG,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAEaulG,sBACVC,EACAC,GAA6B,IAAA,MAAAC,EAGLh4G,KADlBy3G,EAAgBjH,GAAiB74F,SAASktB,SAAQ,OAAAonD,QAAAC,QAChC8rB,EAAKl4D,OAAO70C,KAAKwsG,IAAnCzuE,KAAAA,SAAAA,GAON,MAN4C,CACxCnE,QAAS4yE,EACTzuE,UAAWA,EACXstE,YAAatQ,GAAY0R,oBACzBO,YAAaH,EAEI,EACxB,CAAA,MAAAxlG,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAEa4lG,sBACVJ,EACAjzE,GAAyB,IAAA,MAAAszE,EAqBDn4G,OAjBR,CACZk8E,MAAO,CACHymB,aAAc,GACdmU,QAAS,CACL,CAAE9pG,KAAM,UAAWtC,KAAM,SACzB,CAAEsC,KAAM,cAAetC,KAAM,YAGrC04F,OAAQ,CAAE,EACVxB,YAAa,UACb1gG,QAAS,CACL2jC,QAAS,KAZE3J,GADGs1E,GAAiB74F,SAASktB,IAcxCyxE,YAAatQ,GAAY0R,oBAAoB5xG,aAGtCixG,EAAG1/F,KAAKK,UAAUxW,GAC3B02G,GAAY,IAAI5tG,aAAcW,OAAOosG,GAAU,OAC7B9qB,QAAAC,QAAAisB,EAAKr4D,OAAO70C,KAAK/J,kBAAnC8nC,GAON,MAN4C,CACxCnE,QAAS+yE,EACT5uE,UAAWA,EACXstE,YAAatQ,GAAYgR,iBACzBiB,YAAaH,EAEI,EAOnBM,CANL,MAMKA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,aAAaN,EAAeC,GAA6B,IAAA,MAAAM,EAEvDr4G,KAKuB,SAAAs4G,IAAA,OAAArsB,QAAAC,QAAAmsB,EAAKnC,OAAOxD,kBAAkB6F,IAAavrB,KAAA,SAAAwrB,GAAA,IAAhEvP,SAAEA,GACRuP,EAAA,OAAevP,CAAA,EAAA,CAPf,IAAIsP,EAAY,MACZE,EAAAJ,EAAKlC,eAAclqB,QAAAC,QACEmsB,EAAKH,sBAAsBJ,EAAOC,IAAY/qB,KAAA,SAAA0rB,GAAnEH,EAAYG,CAAuD,GAE9CzsB,QAAAC,QAAAmsB,EAAKH,sBAAsBJ,EAAOC,IAAY/qB,KAAA,SAAA2rB,GAAnEJ,EAAmEI,CAAA,GAAA,OAAA1sB,QAAAC,QAAAusB,GAAAA,EAAAzrB,KAAAyrB,EAAAzrB,KAAAsrB,GAAAA,IAI1E,CAAA,MAAAhmG,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,CAMKqgG,WAAWp3C,GAAgB,IAG5B,uBAC0Bv7D,KAAKk2G,OAAOvD,WAHM,CACzCp3C,UAEEyxB,KAAA,SAAA4rB,GAAA,IAAA3P,SAAEA,GACR2P,EAAA,QAAe,EAGbC,CAFL,MAEKA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,eAC0C,OACjB5sB,QAAAC,QAAAlsF,KAAKk2G,OAAOjD,kBADG,CAAE,IACqBjmB,KAAA,SAAA8rB,GAAA,IAA3D7P,SAAEA,GACR6P,EAAA,QAAe,EAGbC,CAFL,MAEKA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,YAAYh+C,EAAiB+8C,OAI9B,OAC0B7rB,QAAAC,QAAAlsF,KAAKk2G,OAAOpD,aAJF,CACjCkG,aAAclB,EACd/8C,aAEwDiyB,KAAA,SAAAisB,GAAA,IAAtDhQ,SAAEA,GACRgQ,EAAA,QAAe,EAGnBC,CAFC,MAEDA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,WAEI,OAAO,UAAWzS,SACtB,CAEMsM,SAAS+E,EAAev8C,EAAc49C,GAAsB,IAK7D,OAC0BltB,QAAAC,QAAAlsF,KAAKk2G,OAAOnD,SALN,CAC7BiG,aAAclB,EACd/8C,QAASQ,EACT49C,WAEoDnsB,KAAA,SAAAosB,GAAA,IAAlDnQ,SAAEA,GACRmQ,EAAA,OAAenQ,CAAA,EAGb+J,CAFL,MAEKA,GAAAA,OAAAA,QAAAA,OAAAA,EAAAA,CAAAA,CAAAA,YAAY8E,EAAeuB,GAAU,IAItC,OAC0BptB,QAAAC,QAAAlsF,KAAKk2G,OAAOoD,WAJH,CAChCN,aAAclB,EACduB,QAEsDrsB,KAAA,SAAAusB,GAAA,IAApDtQ,SAAEA,GACRsQ,EAAA,OAAetQ,CAAA,EAEtB,CADI,MACJ32F,GAAA,OAAA25E,QAAAE,OAAA75E,EAAA,CAAA,wBC7TA,IAAUkb,EAAMgsF,EAANhsF,EASTxtB,GATew5G,EAST,WAIJ,IAAIC,EAAO,aACPC,EAAgB,YAChBC,SAAepsF,SAAWmsF,UAA0BnsF,OAAOqsF,YAAcF,GACzE,kBAAkB7zG,KAAK0nB,OAAOqsF,UAAU5O,WAGxC6O,EAAa,CACb,QACA,QACA,OACA,OACA,SAIJ,SAASC,EAAWlrF,EAAKsB,GACrB,IAAIhb,EAAS0Z,EAAIsB,GACjB,GAA2B,mBAAhBhb,EAAOygD,KACd,OAAOzgD,EAAOygD,KAAK/mC,GAEnB,IACI,OAAOyhD,SAAS5tD,UAAUkzC,KAAK9mC,KAAK3Z,EAAQ0Z,EAM/C,CALC,MAAOtc,GAEL,OAAO,WACH,OAAO+9D,SAAS5tD,UAAUkiB,MAAMA,MAAMzvB,EAAQ,CAAC0Z,EAAKvF,WACxE,CACa,CAER,CAGD,SAAS0wF,IACD/zD,QAAQjF,MACJiF,QAAQjF,IAAIpc,MACZqhB,QAAQjF,IAAIpc,MAAMqhB,QAAS38B,WAG3BgnD,SAAS5tD,UAAUkiB,MAAMA,MAAMqhB,QAAQjF,IAAK,CAACiF,QAAS38B,aAG1D28B,QAAQg0D,OAAOh0D,QAAQg0D,OAC9B,CAID,SAASC,EAAW/pF,GAKhB,MAJmB,UAAfA,IACAA,EAAa,cAGN81B,UAAY0zD,IAEG,UAAfxpF,GAA0BypF,EAC1BI,OACwB16G,IAAxB2mD,QAAQ91B,GACR4pF,EAAW9zD,QAAS91B,QACJ7wB,IAAhB2mD,QAAQjF,IACR+4D,EAAW9zD,QAAS,OAEpByzD,EAEd,CAID,SAASS,EAAsB7tC,EAAO8tC,GAElC,IAAK,IAAI17G,EAAI,EAAGA,EAAIo7G,EAAWn7G,OAAQD,IAAK,CACxC,IAAIyxB,EAAa2pF,EAAWp7G,GAC5BuB,KAAKkwB,GAAezxB,EAAI4tE,EACpBotC,EACAz5G,KAAKo6G,cAAclqF,EAAYm8C,EAAO8tC,EAC7C,CAGDn6G,KAAK+gD,IAAM/gD,KAAKq6G,KACnB,CAID,SAASC,EAAgCpqF,EAAYm8C,EAAO8tC,GACxD,OAAO,kBACQn0D,UAAY0zD,IACnBQ,EAAsBrrF,KAAK7uB,KAAMqsE,EAAO8tC,GACxCn6G,KAAKkwB,GAAYyU,MAAM3kC,KAAMqpB,WAE7C,CACK,CAID,SAASkxF,EAAqBrqF,EAAYm8C,EAAO8tC,GAE7C,OAAOF,EAAW/pF,IACXoqF,EAAgC31E,MAAM3kC,KAAMqpB,UACtD,CAED,SAASmxF,EAAOxtG,EAAMytG,EAAchH,GAClC,IACIiH,EADA7tF,EAAO7sB,KAEXy6G,EAA+B,MAAhBA,EAAuB,OAASA,EAE/C,IAAIE,EAAa,WAyBjB,SAASC,IACL,IAAIC,EAEJ,UAAWttF,SAAWmsF,GAAkBiB,EAAxC,CAEA,IACIE,EAActtF,OAAOkyB,aAAak7D,EACnB,CAAjB,MAAOG,GAAU,CAGnB,UAAWD,IAAgBnB,EACvB,IACI,IAAIqB,EAASxtF,OAAOytF,SAASD,OACzBE,EAAWF,EAAOn6G,QAClB8R,mBAAmBioG,GAAc,MACnB,IAAdM,IACAJ,EAAc,WAAWx9D,KAAK09D,EAAO94G,MAAMg5G,IAAW,GAE3C,CAAjB,MAAOH,GAAU,CAQvB,YAJiCz7G,IAA7BwtB,EAAKo/C,OAAO4uC,KACZA,OAAcx7G,GAGXw7G,CAvBoD,CAwB9D,CAnDmB,iBAAT7tG,EACT2tG,GAAc,IAAM3tG,EACK,iBAATA,IAChB2tG,OAAat7G,GAwEfwtB,EAAK7f,KAAOA,EAEZ6f,EAAKo/C,OAAS,CAAEivC,MAAS,EAAGC,MAAS,EAAGC,KAAQ,EAAGC,KAAQ,EACvDC,MAAS,EAAGC,OAAU,GAE1B1uF,EAAKutF,cAAgB3G,GAAW8G,EAEhC1tF,EAAK2uF,SAAW,WACZ,OAAOd,CACjB,EAEM7tF,EAAK4uF,SAAW,SAAUpvC,EAAOqvC,GAI7B,GAHqB,iBAAVrvC,QAA2DhtE,IAArCwtB,EAAKo/C,OAAOI,EAAM//D,iBAC/C+/D,EAAQx/C,EAAKo/C,OAAOI,EAAM//D,kBAET,iBAAV+/D,GAAsBA,GAAS,GAAKA,GAASx/C,EAAKo/C,OAAOsvC,QAUhE,KAAM,6CAA+ClvC,EAJrD,GALAquC,EAAeruC,GACC,IAAZqvC,GAtFZ,SAAgCC,GAC5B,IAAIC,GAAa/B,EAAW8B,IAAa,UAAUrvG,cAEnD,UAAWihB,SAAWmsF,GAAkBiB,EAAxC,CAGA,IAEI,YADAptF,OAAOkyB,aAAak7D,GAAciB,EAEnB,CAAjB,MAAOd,GAAU,CAGnB,IACIvtF,OAAOytF,SAASD,OACdroG,mBAAmBioG,GAAc,IAAMiB,EAAY,GACtC,CAAjB,MAAOd,GAAU,CAZwC,CAa9D,CAuEWe,CAAuBxvC,GAE3B6tC,EAAsBrrF,KAAKhC,EAAMw/C,EAAOr/D,UAC7Bg5C,UAAY0zD,GAAiBrtC,EAAQx/C,EAAKo/C,OAAOsvC,OACxD,MAAO,kCAKzB,EAEM1uF,EAAKivF,gBAAkB,SAAUzvC,GAC7BouC,EAAepuC,EACVuuC,KACD/tF,EAAK4uF,SAASpvC,GAAO,EAEnC,EAEMx/C,EAAKkvF,WAAa,WACdlvF,EAAK4uF,SAAShB,GAAc,GA3DhC,WACI,UAAWltF,SAAWmsF,GAAkBiB,EAAxC,CAGA,IAEI,YADAptF,OAAOkyB,aAAau8D,WAAWrB,EAEhB,CAAjB,MAAOG,GAAU,CAGnB,IACIvtF,OAAOytF,SAASD,OACdroG,mBAAmBioG,GAAc,0CACpB,CAAjB,MAAOG,GAAU,CAZwC,CAa9D,CA8CGmB,EACV,EAEMpvF,EAAKqvF,UAAY,SAASR,GACtB7uF,EAAK4uF,SAAS5uF,EAAKo/C,OAAOivC,MAAOQ,EAC3C,EAEM7uF,EAAKsvF,WAAa,SAAST,GACvB7uF,EAAK4uF,SAAS5uF,EAAKo/C,OAAOsvC,OAAQG,EAC5C,EAGM,IAAIU,EAAexB,IACC,MAAhBwB,IACAA,EAAe3B,GAEnB5tF,EAAK4uF,SAASW,GAAc,EAC7B,CAQD,IAAIC,EAAgB,IAAI7B,EAEpB8B,EAAiB,CAAA,EACrBD,EAAcE,UAAY,SAAmBvvG,GACzC,GAAqB,iBAATA,GAAqC,iBAATA,GAA+B,KAATA,EAC5D,MAAM,IAAIsc,UAAU,kDAGtB,IAAIkzF,EAASF,EAAetvG,GAK5B,OAJKwvG,IACHA,EAASF,EAAetvG,GAAQ,IAAIwtG,EAClCxtG,EAAMqvG,EAAcb,WAAYa,EAAcjC,gBAE3CoC,CACf,EAGI,IAAIC,SAAelvF,SAAWmsF,EAAiBnsF,OAAOwzB,SAAM1hD,EAiB5D,OAhBAg9G,EAAcK,WAAa,WAMvB,cALWnvF,SAAWmsF,GACfnsF,OAAOwzB,MAAQs7D,IAClB9uF,OAAOwzB,IAAM07D,GAGVJ,CACf,EAEIA,EAAcM,WAAa,WACvB,OAAOL,CACf,EAGID,EAAuB,QAAIA,EAEpBA,CACX,EA9R6ClvF,EAAOC,QAC5CD,EAAAC,QAAiBosF,IAEjBhsF,EAAKuzB,IAAMy4D,MCbnB,MACMoD,GAAiB,WACjBC,IAAkB,WAClBC,GAAiBr5G,KAAKq9C,IAAI,EAAG,IAAM,EACnCi8D,IAAkBt5G,KAAKq9C,IAAI,EAAG,IAC9Bk8D,GAAav5G,KAAKq9C,IAAI,EAAG,IACzBm8D,IAAcx5G,KAAKq9C,IAAI,EAAG,IAgB1Bo8D,GAAgB,GAQhBC,GAAWvxG,OAAOk/B,OAAO,CAC3BjiC,OAAQ,EACRE,OAAQ,EACRq0G,OAAQ,EACR5rF,MAAO,EACP6rF,QAAS,EACTh+G,UAAW,EACXi+G,SAAU,EACVj1G,KAAM,EACNk1G,KAAM,EACNC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZ98G,OAAQ,GACR+8G,oBAAqB,GACrBC,IAAK,GACLC,UAAW,GACX/yG,KAAM,GACNgzG,QAAS,GACTC,QAAS,EACTC,OAAQ,MAGZ,MAAMC,WAAkB5+G,MAChB6+G,gBACA,OAAO,CACV,CACGnxG,WACA,MAAO,WACV,CACD5H,YAAYlE,GACR4W,MAAM5W,EACT,CACDuE,mBAAmBvH,GACf,OAAiB,MAATA,GACa,iBAAVA,GACP,cAAeA,IACK,IAApBA,EAAMigH,WACN,SAAUjgH,GACV,YAAaA,GACb,UAAWA,CAClB,EAEL,MAAMkgH,WAAyBF,GACvBlxG,WACA,MAAO,kBACV,CACD5H,cACI0S,MAAM,sEACT,EAEL,MAAMumG,WAAyBH,GACvBlxG,WACA,MAAO,kBACV,CACD5H,YAAYlE,GACR4W,MAAM5W,EACT,EAOL,MAIMo9G,GAAkB,CACpBC,kBAAkBC,GACd,GAAIt9D,OAAOmB,SAASm8D,GAChB,OAAOA,EAEX,GAAIt6G,YAAY6qB,OAAOyvF,GACnB,OAAOt9D,OAAOl2C,KAAKwzG,EAAgBz3G,OAAQy3G,EAAgBx3G,WAAYw3G,EAAgBv3G,YAE3F,MAAMw3G,EAAYD,IAAkB19G,OAAO49G,cAAgB9yG,OAAO6W,UAAU3c,SAAS+oB,KAAK2vF,GAC1F,GAAkB,gBAAdC,GACc,sBAAdA,GACc,yBAAdA,GACc,+BAAdA,EACA,OAAOv9D,OAAOl2C,KAAKwzG,GAEvB,MAAM,IAAIN,GAAU,6BAA6B16G,OAAOg7G,KAC3D,EACDG,SAASh8D,GACEzB,OAAOE,MAAMuB,GAExB3sC,OAAM,CAACxK,EAAGzM,IACCu/G,GAAgBC,kBAAkB/yG,GAAGwK,OAAOjX,GAEvD6/G,gBAAgBptF,GACL0vB,OAAOl2C,KAAKwmB,GAEvBqtF,WAAWp/G,GACAyhD,OAAOl2C,KAAKvL,EAAQ,UAE/Bg9B,SAAS11B,GACEu3G,GAAgBC,kBAAkBx3G,GAAQjB,SAAS,UAE9Dg5G,aAAav5D,GACFrE,OAAOl2C,KAAKu6C,EAAY,UAEnCw5D,WAAWh4G,GACAu3G,GAAgBC,kBAAkBx3G,GAAQjB,SAAS,UAE9DosC,QAAQ5gB,GACG4vB,OAAOl2C,KAAKsmB,EAAK,OAE5BqhB,MAAM5rC,GACKu3G,GAAgBC,kBAAkBx3G,GAAQjB,SAAS,OAE9Dk5G,SAASC,GACE/9D,OAAOl2C,KAAKi0G,EAAM,QAE7BC,OAAOn4G,GACIu3G,GAAgBC,kBAAkBx3G,GAAQjB,SAAS,QAE9Dq5G,eAAehuG,GACJ+vC,OAAOj6C,WAAWkK,EAAO,QAEpCiuG,eAAc,CAACr4G,EAAQ+L,EAAQ9L,IACpBs3G,GAAgBC,kBAAkBx3G,GAAQ8L,MAAMC,EAAQ9L,OAAY3H,EAAW,QAE1ForB,YAhEJ,SAA+BxjB,GAC3B,OAAOq3G,GAAgBM,gBAAgBxgH,MAAM4M,KAAK,CAAEtM,OAAQuI,GAAc,IAAMxD,KAAKC,MAAsB,IAAhBD,KAAKq5E,WACpG,GAqEA,SAASuiC,GAAmBp4G,GACxB,GAAIA,EAAa,EACb,MAAM,IAAIY,WAAW,kDAAkDZ,KAE3E,OAAOq4G,GAAaV,gBAAgBxgH,MAAM4M,KAAK,CAAEtM,OAAQuI,GAAc,IAAMxD,KAAKC,MAAsB,IAAhBD,KAAKq5E,WACjG,CACA,MAAMyiC,GAAiB,MACnB,MAAM3yF,OAAEA,GAAWzoB,WACnB,GAAc,MAAVyoB,GAAoD,mBAA3BA,EAAOG,gBAChC,OAAQ9lB,GACG2lB,EAAOG,gBAAgBuyF,GAAaX,SAAS13G,IAIxD,GAlBR,WACI,MAAM2yG,UAAEA,GAAcz1G,WACtB,MAA4B,iBAAdy1G,GAAgD,gBAAtBA,EAAU4F,OACtD,CAeYC,GAAiB,CACjB,MAAMz5D,QAAEA,GAAY7hD,WACpB6hD,GAAS8jC,OAAO,2IACnB,CACD,OAAOu1B,EAEd,EAdsB,GAejBK,GAAY,cACZJ,GAAe,CACjBf,kBAAkBoB,GACd,MAAMlB,EAAYkB,IAAsB7+G,OAAO49G,cAC3C9yG,OAAO6W,UAAU3c,SAAS+oB,KAAK8wF,GACnC,GAAkB,eAAdlB,EACA,OAAOkB,EAEX,GAAIz7G,YAAY6qB,OAAO4wF,GACnB,OAAO,IAAI1gH,WAAW0gH,EAAoB54G,OAAO9E,MAAM09G,EAAoB34G,WAAY24G,EAAoB34G,WAAa24G,EAAoB14G,aAEhJ,GAAkB,gBAAdw3G,GACc,sBAAdA,GACc,yBAAdA,GACc,+BAAdA,EACA,OAAO,IAAIx/G,WAAW0gH,GAE1B,MAAM,IAAIzB,GAAU,iCAAiC16G,OAAOm8G,KAC/D,EACDhB,SAASh8D,GACL,GAAoB,iBAATA,EACP,MAAM,IAAIr5B,UAAU,wDAAwD9lB,OAAOm/C,MAEvF,OAAO,IAAI1jD,WAAW0jD,EACzB,EACD3sC,OAAOxK,EAAGzM,GACN,GAAIyM,EAAEvE,aAAelI,EAAEkI,WACnB,OAAO,EAEX,IAAK,IAAIxI,EAAI,EAAGA,EAAI+M,EAAEvE,WAAYxI,IAC9B,GAAI+M,EAAE/M,KAAOM,EAAEN,GACX,OAAO,EAGf,OAAO,CACV,EACDmgH,gBAAgBptF,GACLvyB,WAAW+L,KAAKwmB,GAE3BqtF,WAAWp/G,GACAR,WAAW+L,KAAKg5F,KAAKvkG,GAASkM,GAAKA,EAAEhN,WAAW,IAE3D89B,SAASmjF,GACEzb,KAAKmb,GAAaP,WAAWa,IAExCd,aAAav5D,GACFtmD,WAAW+L,KAAKu6C,EAAY55C,GAAuB,IAAlBA,EAAEhN,WAAW,IAEzDogH,WAAWa,GACAxhH,MAAM4M,KAAKiT,YAAYjT,KAAK40G,GAAa7gH,GAAKyE,OAAOiiD,aAAa1mD,IAAIuL,KAAK,IAEtF4nC,QAAQ5gB,GACJ,MAAMuuF,EAAgBvuF,EAAI5yB,OAAS,GAAM,EAAI4yB,EAAMA,EAAIrvB,MAAM,EAAGqvB,EAAI5yB,OAAS,GACvEqI,EAAS,GACf,IAAK,IAAItI,EAAI,EAAGA,EAAIohH,EAAcnhH,OAAQD,GAAK,EAAG,CAC9C,MAAMqhH,EAAaD,EAAcphH,GAC3BshH,EAAcF,EAAcphH,EAAI,GACtC,IAAKihH,GAAU75G,KAAKi6G,GAChB,MAEJ,IAAKJ,GAAU75G,KAAKk6G,GAChB,MAEJ,MAAMC,EAAWr9G,OAAO+N,SAAS,GAAGovG,IAAaC,IAAe,IAChEh5G,EAAOtG,KAAKu/G,EACf,CACD,OAAO/gH,WAAW+L,KAAKjE,EAC1B,EACD4rC,MAAMitE,GACKxhH,MAAM4M,KAAK40G,EAAY3kF,GAAQA,EAAKn1B,SAAS,IAAIsvB,SAAS,EAAG,MAAM9qB,KAAK,IAEnF00G,SAASC,IACE,IAAIj1G,aAAcW,OAAOs0G,GAEpCC,OAAOU,GACI,IAAI14G,YAAY,OAAQ,CAAEC,OAAO,IAAS6B,OAAO42G,GAE5DT,eAAehuG,GACJmuG,GAAaN,SAAS7tG,GAAOlK,WAExCm4G,eAAer4G,EAAQ+L,EAAQ9L,GAC3B,MAAMhI,EAAQsgH,GAAaN,SAASlsG,GAEpC,OADA/L,EAAOqD,IAAIpL,EAAOgI,GACXhI,EAAMiI,UAChB,EACDwjB,YAAa80F,IAIXU,GADoC,mBAAX/+D,SAAyD,IAAhCA,OAAOz+B,WAAW0jC,UACtCm4D,GAAkBgB,GACtD,MAAMY,WAAqBj8G,SACvBwB,sBAAsB0L,GAClB,OAAO,IAAIlN,SAASkN,EAAMpK,OAAQoK,EAAMnK,WAAYmK,EAAMlK,WAC7D,EAGL,MAAMk5G,GAAmB,wHACnBC,GAAsBlvF,GAAuB,iBAARA,GAAoBivF,GAAiBt6G,KAAKqrB,GAC/EmvF,GAAyBnyB,IAC3B,IAAKkyB,GAAmBlyB,GACpB,MAAM,IAAIgwB,GAAU,yLAExB,MAAMoC,EAAqBpyB,EAAUtzD,QAAQ,KAAM,IACnD,OAAOqlF,GAAU/tE,QAAQouE,EAAmB,EAEhD,SAASC,GAAsBx5G,EAAQy5G,GAAgB,GACnD,OAAIA,EACO,CACHP,GAAUttE,MAAM5rC,EAAOxH,SAAS,EAAG,IACnC0gH,GAAUttE,MAAM5rC,EAAOxH,SAAS,EAAG,IACnC0gH,GAAUttE,MAAM5rC,EAAOxH,SAAS,EAAG,IACnC0gH,GAAUttE,MAAM5rC,EAAOxH,SAAS,EAAG,KACnC0gH,GAAUttE,MAAM5rC,EAAOxH,SAAS,GAAI,MACtC+K,KAAK,KAEJ21G,GAAUttE,MAAM5rC,EAC3B,CAEA,SAAS05G,GAAiBviH,GACtB,MAAO,CAAC,uBAAwB,8BAA8BiQ,SAASvC,OAAO6W,UAAU3c,SAAS+oB,KAAK3wB,GAC1G,CACA,SAASwiH,GAAaxiH,GAClB,MAAiD,wBAA1C0N,OAAO6W,UAAU3c,SAAS+oB,KAAK3wB,EAC1C,CACA,SAASyiH,GAAS3sG,GACd,MAA6C,oBAAtCpI,OAAO6W,UAAU3c,SAAS+oB,KAAK7a,EAC1C,CAIA,SAAS4sG,GAAO5sG,GACZ,MAA6C,kBAAtCpI,OAAO6W,UAAU3c,SAAS+oB,KAAK7a,EAC1C,CAEA,MAAM6sG,GACkC,IAA/B//G,OAAOC,IAAI,yBACZ,OA/TmB,CAgUtB,EAGL,MAAM+/G,WAAeD,GACbE,gBACA,MAAO,QACV,CACD37G,YAAY2B,EAAQy5F,GAEhB,GADA1oF,UACgB,MAAV/Q,GACkB,iBAAXA,GACR7C,YAAY6qB,OAAOhoB,IAClBA,aAAkB7C,aACnB9F,MAAMC,QAAQ0I,IACf,MAAM,IAAIm3G,GAAU,oFAExBl+G,KAAKghH,SAAWxgB,GAAWsgB,GAAOG,4BACpB,MAAVl6G,GACA/G,KAAK+G,OAASk5G,GAAUtB,SAASmC,GAAOI,aACxClhH,KAAK0rF,SAAW,IAIZ1rF,KAAK+G,OADa,iBAAXA,EACOk5G,GAAUnB,aAAa/3G,GAEhC3I,MAAMC,QAAQ0I,GACLk5G,GAAUrB,gBAAgB73G,GAG1Bk5G,GAAU1B,kBAAkBx3G,GAE9C/G,KAAK0rF,SAAW1rF,KAAK+G,OAAOE,WAEnC,CACDk6G,IAAIC,GACA,GAAyB,iBAAdA,GAA+C,IAArBA,EAAU1iH,OAC3C,MAAM,IAAIw/G,GAAU,wCAEnB,GAAyB,iBAAdkD,GAA+C,IAArBA,EAAU1iH,OAChD,MAAM,IAAIw/G,GAAU,qDACxB,IAAImD,EAUJ,GARIA,EADqB,iBAAdD,EACOA,EAAUziH,WAAW,GAET,iBAAdyiH,EACEA,EAGAA,EAAU,GAExBC,EAAc,GAAKA,EAAc,IACjC,MAAM,IAAInD,GAAU,4DAExB,GAAIl+G,KAAK+G,OAAOE,WAAajH,KAAK0rF,SAC9B1rF,KAAK+G,OAAO/G,KAAK0rF,YAAc21B,MAE9B,CACD,MAAMC,EAAWrB,GAAUtB,SAASmC,GAAOI,YAAclhH,KAAK+G,OAAOrI,QACrE4iH,EAASl3G,IAAIpK,KAAK+G,OAAQ,GAC1B/G,KAAK+G,OAASu6G,EACdthH,KAAK+G,OAAO/G,KAAK0rF,YAAc21B,CAClC,CACJ,CACDxuG,MAAM0uG,EAAUp3G,GAEZ,GAAInK,KAAK+G,OAAOE,YADhBkD,EAA2B,iBAAXA,EAAsBA,EAASnK,KAAK0rF,UACd61B,EAAS7iH,OAAQ,CACnD,MAAM4iH,EAAWrB,GAAUtB,SAAS3+G,KAAK+G,OAAOE,WAAas6G,EAAS7iH,QACtE4iH,EAASl3G,IAAIpK,KAAK+G,OAAQ,GAC1B/G,KAAK+G,OAASu6G,CACjB,CACD,GAAIp9G,YAAY6qB,OAAOwyF,GACnBvhH,KAAK+G,OAAOqD,IAAI61G,GAAU1B,kBAAkBgD,GAAWp3G,GACvDnK,KAAK0rF,SACDvhF,EAASo3G,EAASt6G,WAAajH,KAAK0rF,SAAWvhF,EAASo3G,EAAS7iH,OAASsB,KAAK0rF,cAElF,GAAwB,iBAAb61B,EAAuB,CACnC,MAAMviH,EAAQihH,GAAUnB,aAAayC,GACrCvhH,KAAK+G,OAAOqD,IAAIpL,EAAOmL,GACvBnK,KAAK0rF,SACDvhF,EAASo3G,EAAS7iH,OAASsB,KAAK0rF,SAAWvhF,EAASo3G,EAAS7iH,OAASsB,KAAK0rF,QAClF,CACJ,CACDx6E,KAAKw6E,EAAUhtF,GAEX,OAAOsB,KAAK+G,OAAO9E,MAAMypF,EAAUA,GADnChtF,EAASA,GAAUA,EAAS,EAAIA,EAASsB,KAAK0rF,UAEjD,CACDxtF,MAAMsjH,GAEF,OADAA,IAAUA,IACGxhH,KAAK+G,OAAOrI,SAAWsB,KAAK0rF,SAC9B1rF,KAAK+G,OAEZy6G,EACOxhH,KAAK+G,OAAO9E,MAAM,EAAGjC,KAAK0rF,UAE9Bu0B,GAAUlB,WAAW/+G,KAAK+G,OAAOxH,SAAS,EAAGS,KAAK0rF,UAC5D,CACDhtF,SACI,OAAOsB,KAAK0rF,QACf,CACD/sC,SACI,OAAOshE,GAAUxjF,SAASz8B,KAAK+G,OAClC,CACDjB,SAASigC,GACL,MAAiB,QAAbA,EACOk6E,GAAUttE,MAAM3yC,KAAK+G,QACf,WAAbg/B,EACOk6E,GAAUxjF,SAASz8B,KAAK+G,QAExBk5G,GAAUf,OAAOl/G,KAAK+G,OAEpC,CACD06G,eAAerwG,GACXA,EAAUA,GAAW,GACrB,MAAMswG,EAAezB,GAAUxjF,SAASz8B,KAAK+G,QACvCy5F,EAAU79F,OAAO3C,KAAKghH,UAAUl7G,SAAS,IAC/C,OAAIsL,EAAQuwG,OACD,CACHC,QAASF,EACTG,MAA0B,IAAnBrhB,EAAQ9hG,OAAe,IAAM8hG,EAAUA,GAG/C,CACHohB,QAAS,CACLniH,OAAQiiH,EACRlhB,QAA4B,IAAnBA,EAAQ9hG,OAAe,IAAM8hG,EAAUA,GAG3D,CACDshB,SACI,GAAI9hH,KAAKghH,WAAaF,GAAOiB,aACzB,OAAO,IAAIC,GAAKhiH,KAAK+G,OAAO9E,MAAM,EAAGjC,KAAK0rF,WAE9C,MAAM,IAAIwyB,GAAU,oBAAoBl+G,KAAKghH,4DAA4DF,GAAOiB,wCACnH,CACDt8G,wBAAwBw8G,EAAK7wG,GAEzB,IAAI/P,EACAqJ,EAiBJ,GAnBA0G,EAAUA,GAAW,GAGjB,YAAa6wG,EACT7wG,EAAQuwG,QAAiC,iBAAhBM,EAAIL,SAAwB,UAAWK,GAChEv3G,EAAOu3G,EAAIJ,MAAQnxG,SAASuxG,EAAIJ,MAAO,IAAM,EAC7CxgH,EAAO4+G,GAAUpB,WAAWoD,EAAIL,UAGL,iBAAhBK,EAAIL,UACXl3G,EAAOu3G,EAAIL,QAAQphB,QAAU9vF,SAASuxG,EAAIL,QAAQphB,QAAS,IAAM,EACjEn/F,EAAO4+G,GAAUpB,WAAWoD,EAAIL,QAAQniH,SAI3C,UAAWwiH,IAChBv3G,EAAO,EACPrJ,EAAOg/G,GAAsB4B,EAAIC,SAEhC7gH,EACD,MAAM,IAAI68G,GAAU,0CAA0C7mG,KAAKK,UAAUuqG,MAEjF,OAhc6B,IAgctBv3G,EAAwC,IAAIs3G,GAAK3gH,GAAQ,IAAIy/G,GAAOz/G,EAAMqJ,EACpF,CACD,CAAC5J,OAAOC,IAAI,iCACR,OAAOf,KAAKymD,SACf,CACDA,UACI,MAAO,2BAA2Bw5D,GAAUttE,MAAM3yC,KAAK+G,qBAAqB/G,KAAKghH,WACpF,EAELF,GAAOG,4BAA8B,EACrCH,GAAOI,YAAc,IACrBJ,GAAOqB,gBAAkB,EACzBrB,GAAOsB,iBAAmB,EAC1BtB,GAAOuB,mBAAqB,EAC5BvB,GAAOwB,iBAAmB,EAC1BxB,GAAOiB,aAAe,EACtBjB,GAAOyB,YAAc,EACrBzB,GAAO0B,kBAAoB,EAC3B1B,GAAO2B,eAAiB,EACxB3B,GAAO4B,qBAAuB,IAE9B,MAAMV,WAAalB,GACf17G,YAAY+L,GACR,IAAInS,EACA87B,EACJ,GAAa,MAAT3pB,EACAnS,EAAQgjH,GAAKniE,gBAEZ,GAAI1uC,aAAiB6wG,GACtBhjH,EAAQihH,GAAU1B,kBAAkB,IAAIt/G,WAAWkS,EAAMpK,SACzD+zB,EAAS3pB,EAAMwxG,UAEd,GAAIz+G,YAAY6qB,OAAO5d,IAZX,KAYqBA,EAAMlK,WACxCjI,EAAQihH,GAAU1B,kBAAkBptG,OAEnC,IAAqB,iBAAVA,EAIZ,MAAM,IAAI+sG,GAAU,kLAHpBl/G,EAAQqhH,GAAsBlvG,EAIjC,CACD2G,MAAM9Y,EAzeuB,GA0e7BgB,KAAK2iH,KAAO7nF,CACf,CACGu+E,SACA,OAAOr5G,KAAK+G,MACf,CACGsyG,OAAGn7G,GACH8B,KAAK+G,OAAS7I,EACV8jH,GAAKY,iBACL5iH,KAAK2iH,KAAOpC,GAAsBriH,GAEzC,CACD41E,YAAY0sC,GAAgB,GACxB,GAAIwB,GAAKY,gBAAkB5iH,KAAK2iH,KAC5B,OAAO3iH,KAAK2iH,KAEhB,MAAME,EAAgBtC,GAAsBvgH,KAAKq5G,GAAImH,GAIrD,OAHIwB,GAAKY,iBACL5iH,KAAK2iH,KAAOE,GAETA,CACV,CACD/8G,SAASigC,GACL,MAAiB,QAAbA,EACOk6E,GAAUttE,MAAM3yC,KAAKq5G,IACf,WAAbtzE,EACOk6E,GAAUxjF,SAASz8B,KAAKq5G,IAC5Br5G,KAAK8zE,aACf,CACDn1B,SACI,OAAO3+C,KAAK8zE,aACf,CACD99D,OAAO8sG,GACH,IAAKA,EACD,OAAO,EAEX,GAAIA,aAAmBd,GACnB,OAAO/B,GAAUjqG,OAAO8sG,EAAQzJ,GAAIr5G,KAAKq5G,IAE7C,IACI,OAAO4G,GAAUjqG,OAAO,IAAIgsG,GAAKc,GAASzJ,GAAIr5G,KAAKq5G,GAItD,CAFD,MACI,OAAO,CACV,CACJ,CACD1hG,WACI,OAAO,IAAImpG,GAAO9gH,KAAKq5G,GAAIyH,GAAOiB,aACrC,CACDt8G,kBACI,MAAMzG,EAAQihH,GAAUx1F,YAvEP,IA0EjB,OAFAzrB,EAAM,GAAiB,GAAXA,EAAM,GAAa,GAC/BA,EAAM,GAAiB,GAAXA,EAAM,GAAa,IACxBA,CACV,CACDyG,eAAe0L,GACX,QAAKA,IAGDA,aAAiB6wG,KAGA,iBAAV7wG,EACAivG,GAAmBjvG,KAE1BuvG,GAAavvG,IAtFA,KAuFTA,EAAMlK,YAGmB,KAAV,IAAXkK,EAAM,KAA6C,MAAV,IAAXA,EAAM,KAGnD,CACD1L,2BAA2ByoF,GACvB,MAAMnnF,EAASs5G,GAAsBnyB,GACrC,OAAO,IAAI8zB,GAAKj7G,EACnB,CACD,CAACjG,OAAOC,IAAI,iCACR,OAAOf,KAAKymD,SACf,CACDA,UACI,MAAO,aAAazmD,KAAK8zE,iBAC5B,EAGL,MAAMivC,WAAalC,GACXE,gBACA,MAAO,MACV,CACD37G,YAAYwrB,EAAMoyF,GACdlrG,QACA9X,KAAK4wB,KAAOA,EAAK9qB,WACjB9F,KAAKgjH,MAAQA,GAAS,IACzB,CACDrkE,SACI,OAAkB,MAAd3+C,KAAKgjH,MACE,CAAEpyF,KAAM5wB,KAAK4wB,KAAMoyF,MAAOhjH,KAAKgjH,OAEnC,CAAEpyF,KAAM5wB,KAAK4wB,KACvB,CACD6wF,iBACI,OAAIzhH,KAAKgjH,MACE,CAAEC,MAAOjjH,KAAK4wB,KAAMsyF,OAAQljH,KAAKgjH,OAErC,CAAEC,MAAOjjH,KAAK4wB,KACxB,CACDnrB,wBAAwBw8G,GACpB,OAAO,IAAIc,GAAKd,EAAIgB,MAAOhB,EAAIiB,OAClC,CACD,CAACpiH,OAAOC,IAAI,iCACR,OAAOf,KAAKymD,SACf,CACDA,UACI,MAAM08D,EAAWnjH,KAAK2+C,SACtB,MAAO,aAAan7C,OAAO2/G,EAASvyF,SAA2B,MAAlBuyF,EAASH,MAAgB,KAAK3rG,KAAKK,UAAUyrG,EAASH,SAAW,KACjH,EAGL,SAASI,GAAYllH,GACjB,OAAiB,MAATA,GACa,iBAAVA,GACP,QAASA,GACI,MAAbA,EAAMmlH,KACN,SAAUnlH,GACY,iBAAfA,EAAMolH,SACV,QAASplH,IAAW,QAASA,GAA8B,iBAAdA,EAAMqlH,IAC9D,CACA,MAAMC,WAAc3C,GACZE,gBACA,MAAO,OACV,CACD37G,YAAYq+G,EAAYC,EAAKC,EAAI71G,GAC7BgK,QACA,MAAMqlC,EAAQsmE,EAAWllH,MAAM,KACV,IAAjB4+C,EAAMz+C,SACNilH,EAAKxmE,EAAMp9C,QACX0jH,EAAatmE,EAAMp9C,SAEvBC,KAAKyjH,WAAaA,EAClBzjH,KAAK0jH,IAAMA,EACX1jH,KAAK2jH,GAAKA,EACV3jH,KAAK8N,OAASA,GAAU,EAC3B,CACG81G,gBACA,OAAO5jH,KAAKyjH,UACf,CACGG,cAAU1lH,GACV8B,KAAKyjH,WAAavlH,CACrB,CACDygD,SACI,MAAMhkC,EAAI/O,OAAOC,OAAO,CACpBy3G,KAAMtjH,KAAKyjH,WACXJ,IAAKrjH,KAAK0jH,KACX1jH,KAAK8N,QAGR,OAFe,MAAX9N,KAAK2jH,KACLhpG,EAAE4oG,IAAMvjH,KAAK2jH,IACVhpG,CACV,CACD8mG,eAAerwG,GAEX,IAAIuJ,EAAI,CACJ2oG,KAAMtjH,KAAKyjH,WACXJ,IAAKrjH,KAAK0jH,KAEd,OALAtyG,EAAUA,GAAW,IAKTuwG,SAGR3hH,KAAK2jH,KACLhpG,EAAE4oG,IAAMvjH,KAAK2jH,IACjBhpG,EAAI/O,OAAOC,OAAO8O,EAAG3a,KAAK8N,SAJf6M,CAMd,CACDlV,wBAAwBw8G,GACpB,MAAMrrG,EAAOhL,OAAOC,OAAO,CAAE,EAAEo2G,GAI/B,cAHOrrG,EAAK0sG,YACL1sG,EAAKysG,WACLzsG,EAAK2sG,IACL,IAAIC,GAAMvB,EAAIqB,KAAMrB,EAAIoB,IAAKpB,EAAIsB,IAAK3sG,EAChD,CACD,CAAC9V,OAAOC,IAAI,iCACR,OAAOf,KAAKymD,SACf,CACDA,UACI,MAAMi9D,OAAmBrkH,IAAbW,KAAK0jH,UAA2CrkH,IAAtBW,KAAK0jH,IAAI59G,SAAyB9F,KAAK0jH,IAAM1jH,KAAK0jH,IAAI59G,WAC5F,MAAO,cAAc9F,KAAK4jH,6BAA6BpgH,OAAOkgH,OAAS1jH,KAAK2jH,GAAK,MAAM3jH,KAAK2jH,MAAQ,KACvG,EAGL,IAAIE,GACJ,IACIA,GAAO,IAAI3jD,YAAYS,SAAS,IAAIT,YAAYC,OAAO,IAAIlhE,WAAW,CAAC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MAAO,CAAA,GAAImuB,OAGhtC,CA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"}